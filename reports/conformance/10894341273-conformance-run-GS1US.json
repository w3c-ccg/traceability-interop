{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5b959bce-172f-491f-9090-49cc2836e142",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c08d147c-0d7f-4b45-9c68-151c132ad795",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c28805d6-86d0-4efd-a5af-e607ffb33237",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "057bac34-61a8-4f90-8a25-e4c5af5903a2"
                }
              }
            ]
          },
          {
            "id": "10429ccb-ddfe-4241-9dec-cc389d13b66f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ee160fc-168d-4fd5-9761-69aa0cdb9b2a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bd5942cc-364c-4067-b753-27ac7da10108"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "eccdd73d-4cd4-49d5-8d9e-a95d34d044f0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9b6fd442-c6a6-473d-ab2b-b550656b6380",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94585e1c-7ac9-4c41-9324-e18b17f28179",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a03d7f9a-e04f-4d39-b0bf-cf04bd43a09d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50784d09-300c-4cca-b3c0-2d45821ccaf6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a215e1e-8527-4f52-b9ed-e50193302c3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3c3e640-1677-4eba-aef6-a226bf1858f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "663c57af-2ba4-4e3e-b5ab-3b003143b374",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5c41a25-7b92-4d1c-9d67-aff746ee31cd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a24f2962-9b04-465e-bbef-cb1df9f01680",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9abc6215-029e-4e81-8aa3-8ecab4386258"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88f3d369-54ef-422b-817b-ab9a555ce902",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee63b58c-83c3-4657-9b3d-bc9766f74c4f"
            }
          }
        ]
      },
      {
        "id": "ae223da6-5872-4370-bd11-ccb19ed9f5ad",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "df9c92e5-beb7-43e4-9127-72d268aeba31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b691a2be-547a-43e0-bb9c-e940d4bae0b5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f70eed6-f669-4d3d-8e0f-63215f1b9700",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c2d741-5a9c-417c-8505-04c51a465d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f296a49-ed84-45d3-a2b3-eb88acb2dd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4942f0d-2b02-4c9b-bd34-26798577b00c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a5e036-11e9-44d3-bf06-fdcaca20cb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ab3d8de-7cd9-4536-968b-6ad616b1cf9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a44f8b5-d347-4d83-b09c-20e982cca254",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1724e03-04a1-4063-afa5-244655dfd295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d380d3ab-b53b-4aa0-b005-7cad37cbef44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fe609104-88c9-4f1b-be75-889cb4398217",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a77933ae-d7ba-4341-b9e5-eea3a899865f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7d835e-05b2-4a40-a9a5-a5d5e78a8a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cd053a3-6317-4ff2-87b7-048f63d59b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa4aa40-64c5-4605-9099-ad46a5b2d88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d720c0-6f76-4cb7-930c-6f506967dd87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "20a2f2cc-c197-44fe-b13a-9785a8f9b6b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60825f96-8f39-46ab-b73b-d942efa13eac",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fb82c19-851f-4260-88ee-52d4a8cb1b36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "423254fc-4884-4137-8b23-b1f9dd0690bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18a79d92-dd38-403d-be47-d82be0199422",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c87400d9-f34c-40c0-ad5d-063a263a9eab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f28987a6-6610-45ee-af75-654d6fdc9893",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd4d6149-8384-4690-a8ce-b2acb3a82a62"
            }
          }
        ]
      },
      {
        "id": "a649b4ad-0fb0-494d-b805-0830756e1c9f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e4e06c22-f645-4bd7-bf80-40db08cc2f77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bdca26b4-6fb8-40f3-8cd7-4178f89db3ed",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "01f86316-4a47-4c58-9f0c-78147eb68649",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf78928-a798-4061-b02d-1f0b0f047687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9baccd5d-6e55-47d0-9a36-e0da2d49ea02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483d794a-37d9-4e5c-9841-a9a63ac6619c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da18e5e3-dd42-4856-91be-cb4048401e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5f274f-14e9-42c9-9f83-fb6387d19b47",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96168626-1911-49a7-bbf8-6eecd69674eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f044245-5a32-4738-b030-65e0b312b688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359dd33f-158d-49c0-9fac-fd715c80a688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6af1a079-e006-413b-a053-376f3b851c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ee59aa-1d5a-47eb-8710-900ca67e49df",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2595faee-30b4-4569-bd47-eb922c20b981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb48309-593f-4f58-b62d-c4bf1e02f359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2e46db-f5df-4b86-92f5-0e4c2421ed8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ab4845f-154f-4e67-b00b-abcf0eb02553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a41e80-2c1c-455c-860e-44d5f7754f73",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8bc981-734d-4c99-9e61-ca7aa2a56ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c597788e-7ebb-4a68-ae59-e6d1b1ce32b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6b837c-5516-43b6-a3ae-bddc42fb6028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78480728-8554-497a-ae7e-460319211210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1573f410-5277-4815-9256-c0364432a273",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d764b2bb-e2c9-41a2-8e66-358b043ff2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e44a61d-2218-4fc2-b830-f427dfc60cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac545cbe-e343-486a-ae68-1ade92e99bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bd54bf7-9ea5-43b7-9fec-ad528b95689f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8770ca06-79ab-4be5-ae22-b14ff9c0f8d8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90baf451-4620-408f-8287-8fcd2fa74533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8fa8d5-3a3f-4ddd-bbf9-15284e111eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01697c8e-23ba-44ef-aba4-4ee59fb4bf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b38c137-4ede-4147-bac4-9716ce04758f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c863ca0-a3ac-4cf2-9685-2efa6bc1f3f6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b448b4e7-ed3a-4c23-a6a2-8308005b4539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf6e52a-9b3a-42ca-97d1-a44acc3d53cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe9a546-2052-4871-af06-3a3880db3633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3e055a1-5abd-49cf-b74c-a7e81edb3710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520ef9e8-9e07-4d5a-9aae-dd928ad15474",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d570da80-43ad-4cba-bd4e-947509e63244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df663b3b-98f4-4caf-a029-0888a92a89dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb678ac-60e9-44ef-a1f3-c5f74d92ea02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4f1cd77-9dae-4e99-8f10-df7af85036e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5891bf-b633-49eb-a710-7f1e84402717",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3853e59f-ad81-4d47-ad19-ecf10face336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe195491-1da4-47c6-81bd-9fc67e1c6451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df714169-986b-4f83-9a14-6d93be30bcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19960845-1515-45c0-963a-5a265544ea6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b911e8df-b98b-4a17-9fef-0e1899a1f0b4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b37697-0342-4e71-bac1-a8332b196585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4990b9c9-31ec-4392-842c-b48dc21d20c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493eb07f-782e-4cf7-8877-1beb5c218c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa2a54c3-602a-4a7a-a31a-fe0c4e2bd3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5362eb6-c723-4ab9-b6e5-ae5b385bdfa4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee858ec2-9e07-4dce-98f4-e1f3d8f3bc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "112482cb-7809-4de3-8647-8a9dafddcdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae9c081-8a5d-4d12-a1c3-481de26d3818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b07ccae-bc26-4522-952f-ca303f172ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8be4128-9bd9-47a5-b302-a9f9db86dbd2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c92444-06ec-4637-8daf-db8190ef6324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d984ce-ef23-4834-a530-c3daffa3836c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ef15ed-9121-4367-9bf1-25c6fbf580aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19aec405-6534-4248-acbb-b63e1b9ee929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c213b5-49cc-4cf8-9f54-62c432dce6fb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70be97c3-fefd-4389-aeeb-498d725d311f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546519ea-1e5c-40e7-985e-94b0e4a3f0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f09af1-56d2-40e2-aba5-fe89a9cd5a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0cb88de-fe9b-4440-bee3-5865c2fd422b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5a8ea7-d26b-4065-8563-08c325f9a996",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62093db-9186-45be-ae74-64d0fc42d623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90251560-2676-469e-8d37-4afb26e7f6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53806add-b2fc-433c-80fc-8b10902e5a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5ade1c6-eb82-490a-9e3a-6fb815750c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d9d4a8-c50c-4a2c-9451-59e1e8f90e06",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f70d18b-491f-4d86-84c1-b9f34933997a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817bc14d-3f83-499b-a1d9-1e491e5f7192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf27904e-71a9-4a25-8c04-207566997c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1421426-d8eb-4b3e-8038-7cfdcf59d342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0658f88f-3759-49a3-a570-aff93804ec88",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3a416f-9b27-4b1d-8f25-f6a7cb89ceff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21bce84-3fae-4042-aca7-0c76c6e4d4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921d5e67-8d9d-4fac-bf60-b0e40bb59677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63845768-750b-4b9f-8a29-b1902f7f9280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa2ba0d-eb4f-4488-b4ba-9e54b3a5d353",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bca5229-336f-4e71-a32c-f6c21c366c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d534a05e-2752-4e39-a00f-f3fdd54a1af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300dfceb-6fa0-444d-8b2f-eb70a7585034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63519e9c-6919-4469-9844-9ebc3d70a8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623a74ff-117f-4e27-a9ea-a6dc98425290",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fbdbfb-d915-412c-ac38-84e619ae3888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de0a9d3-c553-488d-a422-60b34723fa3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66761ef-197c-43a6-b1e8-374725edd889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "16dbf637-f5c6-4a4f-997e-23d0bbe744b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd4da34-c128-4e1e-9941-8d64516df076",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb22797-c915-42a6-85c7-0a76c0a89f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8bdabc-589c-4709-9314-cc533e745b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af6f105-6924-459f-8800-30a9c707d512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95fa4b30-3fa2-423f-ae98-691ee2d534b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d47d48-85e1-40e8-8b68-924ed020b9ce",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e95a4b-49d1-4282-852d-9304e2244b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2f856c-9842-4e53-9f62-a32ca2fba646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4093dfd3-46cd-41bf-8531-9ea1db0e90e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a30de48-bf8c-47e3-bb11-a279ea51dbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cd8c2d-78ea-455f-a9cb-9ba134bc94f8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b917ba-1020-4f4f-8743-2eb847097499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a37f8a-6aa4-4894-a89d-31254ecc16c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0828ad-ae2d-4f60-94d0-cee099cc74c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d13dc168-29cf-4afd-9727-d9cc68ff3925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b946afe0-7786-4868-8ee3-7f802a178f41",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a235c73-821b-4a57-bba5-e45e59a6ca50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae054026-94e0-4bad-87e8-591c636b492f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789a62dc-0e4d-4c6e-b371-ed853d3edee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c75be1c-3059-4892-832e-c3d59358151f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccaa469-935b-414c-a3a1-1cfe1b5770e5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793a8b6a-43c2-46e6-bcaf-ced1caecad5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12de281d-c183-40c2-add8-e49391ef20d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cb6f90-36bc-4b5e-a741-b2743bc170a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "053b8de7-130d-4b09-a153-4e6f88e738c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eba5c8-8634-4474-8e59-1f2213ede182",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a07d97-77ec-43e1-83bc-c91b42e1d9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd923a6e-8740-4361-8729-5f63ac390d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a509c569-73f8-4e32-830c-9f06f0a6b2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "18977fd5-6b08-47a3-b64b-e243586b7373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d187bd-f843-43e1-985d-28095a4f497f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8094766-2820-4fa9-997b-0b98f90a3cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddad569e-1ce1-48e4-97d8-04a463225d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d98d377-995b-4bb0-82c8-cd169cce989e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5fdc85-5acb-4049-9b7d-72b3e12f566e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea5cb73-ac7d-4740-810e-5fe8769b6c85",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15fdf3f-94c8-4390-a228-01d2c200c9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b953db6-d51e-4884-bec3-b6b13818cf0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430efffe-b4ce-4bd1-9368-63e5af598b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "868443f6-10d8-49f4-b4fa-b2405523784d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549af070-7235-4a46-975d-40a4d59a3fb7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411d9675-7595-4a42-9f97-cf8661505c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca19c52d-1589-4f8a-88b7-197e8a7bb8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88fc1cc-e882-4b28-b7e0-cf558846c42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d529ee-0016-4ac3-9efa-72a2065dffc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45ecf35-ca4d-47f0-9e44-57d65459353d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479d5be6-e6d5-4c5d-98ce-a415d034c8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3548c3be-4cbc-4d1a-9613-dfedfbf73df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8278ed29-d0b2-4f86-9211-937770541507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdeae4cf-15f1-47c5-8675-5098974e2928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45e8ccf-0b4f-4bba-a2b2-141336593c6d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cfb06d-8657-48f2-9267-0d83b434712a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d680d31-b206-4024-8fcd-669dd2327e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbac73f-cd0b-4a87-a5a9-1695117d58d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af1c4d6d-c412-41d2-971d-a6153cdcadfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e02ce0-f708-4b6d-9051-0f697a3f23b0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b78d808-eb07-4171-aac9-43a2217cd8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c771b43-8c8d-4d4a-8e5b-adb3a5685014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b55a43-f6f3-4549-9e19-18c374a882f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "74789b6b-bd04-46c6-b644-56c2b4203e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6f91d4-da4a-4f11-adfd-65e8d27f4684",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05db152f-75fd-4041-bcb0-c5676a243697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0c72b5-188d-4645-a79a-8e7fa7d26367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeb73b2-2e01-4695-b5e8-105c25b836e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc409a6-3e7e-4542-842c-b514a00e07d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1860561-1427-4acb-865f-c7c907e8a8fc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc928e2-9041-4f78-97fd-8b0a179bbdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4d041a-6a5b-4b13-80bf-0791e4f33a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882c2d50-388b-41f7-bf55-66ed366709c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd0c540-e105-41a7-8a13-ea2c46b757a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada5faa1-2add-43f0-a1fb-87139b1a8bfd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3052c88b-b1e2-4fb1-9f55-82e607789c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabb9b49-21d9-4422-b9e7-8be559a9d9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c681c5e-d5b5-4b66-910f-1c54a91d3060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf318a7f-11d3-465b-8021-c90c117af56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72a9122-351e-44f8-a823-5877d6d57aff",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0f9f28-b9a7-4d63-bbd4-0fbb566fe374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2427fc69-5264-4825-bc0f-c66766475d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0153f5af-b485-445e-839b-62f2ce2a42b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0583bb65-e79d-4288-9445-0f610690f39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8783674e-3e79-46df-bd2d-9afbeab12b08",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36ba273-e40a-4061-8e5a-607229e9643f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d23976-b6f5-4170-bde6-67a831f2e155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcd63e7-a2ae-4cf6-a9cd-cc7d80bdb33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "147f5159-756d-48ce-bd9b-55f9d1d460aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5ee5bd-28de-42f2-b727-a8d075dad28d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f76fe35-fdf4-442f-92ec-7d4f08055570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf6d8d10-57d8-45bd-9afe-56e06c317810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80130da-59f4-4a3b-9bc4-1afbd2d1bbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76c9b89c-9c53-4c6b-b0fb-fcf7b67a4df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e2953e-26c2-4bf3-b075-608224728249",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29939f6c-c712-48d7-bd49-b6fdf8318538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546c0290-c02e-4d85-a6a3-3e274b1795f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3aa15da-e48c-4981-9190-5927ce813d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "494b6560-beb5-41f8-b459-2e565fe7d105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87acddf4-6ac2-4a70-8835-bbc574b50d0a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e7e9e5-e0a9-4094-9e19-c4cf1e646640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81626a15-f539-46fa-981f-3180a45bfe74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c238cbe7-b7fe-49ba-8385-31151de29b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c7f89b-c3cb-45ff-aab5-3cbdec2d99ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328d741f-0e52-405b-a616-06d6419f41b4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab48f07-455f-48a2-96ac-5196c7455ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca31e23-88f8-4fb0-b355-d555b28ad14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e24e5bf-bb82-4866-bbd4-ca8b34751d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "23eb1c4f-a504-4175-9297-1067b9070bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca9dfa9-f65c-4a9f-aa61-1794801bd28c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0ab640-ef8e-4f5f-8511-cf0aea045ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f27c3a3-a399-4d3f-9da6-4eabe555a5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c422e819-badf-4792-a13e-1617355b60b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd21efe-71a1-4515-b714-68552035a0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2874805-342f-4b86-a21d-ae3e7914ca29",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc724144-6e73-429e-b04e-fb189ff8b232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3e14b1-add0-4932-9389-97d1231e2677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d962ce6-e92c-4409-9656-fde0d76211c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc7d910-5a4c-4bd2-85d9-955e439528de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4204222c-a483-465d-993b-f18e7feabb98",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253d23e4-0eb6-4675-a2c5-4fe6ca8ff2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41fb5bfa-1125-4210-b454-6ce311de8222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d01c8bf-52ba-4e8d-a6b4-7847d595a397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "828042ec-9abf-4aa8-afd2-5e04824ecfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823a6d6a-b79b-47f5-b5cb-90832eeab73d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796ee14c-06bc-4dc3-976e-abda2fddd924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4a7665-fc14-43c5-9e2c-ed87113eb386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360f4da3-4a74-4ed6-89d4-40dcf5acf16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fad7c7f3-c711-48a4-af01-9fc3742f7d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24269efd-2435-492f-bc10-c01a39232970",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c3cc14-8560-4705-9df4-fbdf654f237e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e01298f-7a4b-4b56-9216-4bca0af24e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97642487-1789-487c-ba88-80f0855c6b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "102240a4-9362-467d-9f1a-77a03ab55f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc227ff-5c28-43da-965d-cf593f47cd62",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6871086-3eb7-4d35-bb85-10c516746d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b849d78e-a7f7-476a-b357-3940f2317130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11dff624-3e8b-4804-83ac-c224997426cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "088224dd-0b8d-46d8-bdd7-8a3f3761f73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00635067-242e-46a3-8da9-ba90aaae5622",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddb450a-52af-4963-8ad2-8d9aeac7e01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c75c5bd-371d-47eb-a29d-0e10832d18da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b4d93c-9ad9-4ef5-9216-ce2da0f13509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a031f80-7c3d-4c96-88a9-47609454d383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a98a85-dc0d-422e-adb3-2337d09ecb61",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346c0e3e-e5d0-4b8d-9eab-bfd38b3f95c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc06bef-56f3-4b20-ad20-8acd5844306c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7b0b89-6fad-462e-b74a-8967619853ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31288013-bff8-40ce-be7d-7f16a239bd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2fdee6-926a-4063-93d0-f4835265e559",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf90d407-7258-482b-9f98-7d45910c1184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b43b83-29e8-40f2-994a-fc981775774d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f54f71-96f5-4564-850f-82e659fda48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "132c2bdf-a589-4048-b928-0298e9e12d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00736fef-5dd1-40a1-8c17-d755d140f032",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e25fae-45ec-4bb2-add4-35840cae7eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b5692f-de11-4ea7-8d09-8b1f615c26b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff8814f-2ef8-4656-a119-27dbd1592395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2d6f0c-9119-4d28-8470-2f0910656a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa9eb03-449e-4c36-bcb3-708b945b2970",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7ff466-4747-4f36-8986-63b26909881d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e63f30a-12fa-449c-84a8-2b2e5bdab42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f09d72-e3a6-4705-b334-f881e1ec540f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1eeccd8a-ce90-48f6-a6a1-910c541b7e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331ed0d1-5b68-4fc8-9946-72ff7e01c37b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd6f3a2-7d15-4fe2-b0d9-c285f5ad11c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0950f5ef-e91f-4ce4-abb2-6bcae64d92e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c491962-746a-41ef-aa34-87d6d71c1f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3619064d-6505-4234-a3a3-120bd01a6aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992e2ed7-eeba-4f31-b5c6-a63009d61996",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e1d7e5-83fe-47ad-9e05-cded033fdf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eecb8f9-144d-49cc-96ca-836f83451947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c13238-2bf6-453a-bf6f-512b9b0abb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a521017a-334d-47ae-aa68-ec9766977979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e996a9b9-75b6-493c-967b-1aedf39831d6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577d1160-9859-4967-bf3e-42d1f12ea019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878e0972-2ecf-408c-960e-4c62556fac80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486a7f2a-e868-4b10-ba48-17aeae32363d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d43d68ec-4ef0-4502-bb26-c24450592a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a280757-8053-46fe-baa0-61aadfd16c1d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21356c20-4c72-4dab-bd4c-73a0e55c633b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018f294c-83c9-4135-9a83-8a615252af68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb5538f-f024-495d-8598-57d4f334b5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2859db76-b4fa-4a5b-97c9-e9d533060b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd84c604-ee5d-47b7-9ad3-40f70a37a300",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19194787-c4c7-4822-88d8-014d4d5c6066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c2f307-e671-4eb8-b908-c49963eb1b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7925a52-7d24-4d87-82ed-5a303254aa57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24fbd23e-2a63-4bd6-83a5-836f8bba05a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569d0bda-22cd-4a07-bc9b-0d3744ac3e49",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7872dd3-2a59-404e-bd5f-2a7265ac8c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de82717-a18e-4577-8e36-7988aacbab47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bababae-f06c-4972-9a9a-7afc01922222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "184492b0-7ce4-49f2-90a4-de876f632664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a39f02-259a-47c6-83a6-6ca0df3d2320",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e95600-a973-4e9c-bf72-c404b8830835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237cc7bb-d8da-4533-b0ff-24d18152cb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3254a57d-ca9c-44ec-a056-39cb60375663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5cf77b-b13f-4537-af42-ab4403230cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17d3a2f-b079-470d-9459-b7e3c72e2a6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20955dc-4a40-41a1-a1a3-54b4ba4595c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29102bfe-515e-4d91-aa44-412c6113d59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0d3f48-f80c-4b37-af73-2ce283de4973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea97332-ee14-4400-b370-701d6c746c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dc1174-438e-412e-9332-cc304f6cdb5c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c5e140-4097-4358-9603-f3152618c85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65163f4-8cb5-4031-be01-9c3bd4007c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f75586e-e3a4-41ff-b899-ff40f87b86fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "836434d2-a9e6-4281-9f1e-a628018bf3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c176586-a498-4f4e-8365-2d0a20223a5e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d104be-62c5-430b-93c8-01ec8d103a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5694ff0-6ce2-4885-bbad-768229a1c99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e05b22-3b73-4337-abef-d427af7e53b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfcc5eea-a97e-4294-8936-028073d6369a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d36730-547c-4ce1-b656-a98f1250fa58",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cd239a-94d3-48c2-b4dd-4d8d21a20d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cf1ab6-dda0-4f52-b42b-baabe70ad347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07881545-5de5-4923-9252-81a1484db285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc999e9e-1db3-470c-9591-408abee9642c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80338803-d661-42f7-ac9e-186acc48fc07",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b87f17-56d4-4366-a97b-cd4d5ca10746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6b243f-22e0-4c94-aae3-ea3f139b8de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac0bae4-ea10-42a0-8932-1ccb8a1089e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1e9b63-5a4f-4ed2-ac51-5018e107ef51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08840c7d-a9cd-4905-bd22-b33e166b73a4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8248af-1721-4d4c-9dbe-4dbff105fe27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbb1c5b-dbf8-4e16-a1aa-16209d3ee6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f1693c-02be-4395-ba43-f05fed3aba70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b3e66a-4145-480d-9104-0a2c0101c63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf86837b-ecdf-4869-a8bd-e61bd5a3ebed",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694169aa-e16c-480e-a0b6-7c82ae3bba79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe58070-cafc-4377-97bf-f5be673857af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e463c54-b031-4d03-9bfe-0fef53f22dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81b8adfb-7f09-4e30-a4ee-d0abb43099c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168cf17a-0d1f-48b1-9c95-a9e06bdff9b4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892f8c99-c09f-487c-82d3-0fac2148e04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c210aeee-10fe-4c95-b777-74e8dc4955fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da69d140-2980-4e54-a999-9be56f69a588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb590215-69b6-428c-bd7b-998b08dcb1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c459ad3-87e5-42da-b270-3a2bf80dcbe5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0358a38b-5547-47c4-bd39-8019ddf64ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33902a3-8426-497b-80b6-45eb00dbca2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c707baf-b42b-4d07-97c0-90e15a91222f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf151215-1d50-4016-8f20-f34f66748e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a605de-0680-4da7-9319-2a81b85903ba",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53c79e6-79d4-44ef-a471-e9540fd1a5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9601b2c6-dd5d-451f-96db-6edff998a534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a7836a-446c-4820-b0f5-956208990da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "086fbb8b-3382-4de2-bc6a-5f91afbd44c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6adba25-c150-463b-a2dc-ad41bc71ce6b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09adbc71-ed67-4770-9a32-349aaf397cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1b1be7-6aa1-495e-b0f3-47441d6328b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3514b7e8-7d4d-4995-ab1d-b02b441b1ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d36b52-6e09-422a-a9b9-52f3ce914c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297ef23b-1885-4c7b-9c7d-d428f29173e3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1caaaf7-22f5-4cdb-b0c6-00933984d71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20c4453-22a0-427b-a182-88e689f72d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bd0017-d8db-49e7-9d20-38ed252ee5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "09f9ddcb-f8b3-4aaf-bc6e-87b5de8414a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a396af-26a8-4cd8-8c05-0ee2fead89de",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf3a412-8db1-4f37-bcdf-85b616818b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498915b9-5fb8-42f5-a5d3-9c6f2cfb53b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d57e3a-0779-47a0-b2ee-95c87e2c9633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7e555e-22aa-4aa6-a926-10165ee9c4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69f33c9-f3ce-4ea2-a303-303848bb1616",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fb0c29-5910-4054-9f33-5b8dedcdc1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba417b2-2fab-4b57-ac7f-aee03831acde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f128bc2-4c12-456c-b3e0-1cefb1c106ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5e0b28-deee-43af-9fdf-0aa103f98fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e235fcd-60a7-4c9b-b695-c81b263eef78",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99723ecb-32f7-449a-a220-daeff72502e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308e9a00-f515-4797-a03f-94f1b166c544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78159c24-63e8-4369-bf0f-927eb97b887b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe002ac-2b3c-4a67-bd3d-741e4a2b04d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c6d000-53d4-413c-a73b-28fbb37e467c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255f454d-33d0-4a2a-8f66-604edf94bbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c9fcf0-96df-4da7-9621-3e0c5dcdf66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1b9405-c1b4-46e5-86b4-b908b66e2dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3247cd42-8983-4a20-a5a6-1d79abe385fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8e50b9-3295-42c7-9dd1-ccb669798d8d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2950b5-1fcc-48ca-a4f4-e72e8ea246c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0c9d53-fa91-4e44-888b-a2a1e087007d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479cf830-4231-4d6d-8044-fc56accf0f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fba5d5c1-3dd0-418b-9075-aaa5f6bd61d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f031e2-36ac-438f-8afe-6bc1bd6e276d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f3030c-567e-4ea3-9484-81198ef6d32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c57da4-37f6-4d3f-a073-f994de19c908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb5027e-1f50-4f02-8563-70a745bb0c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42323b1b-d85d-447d-b278-685ae3d78cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1218f752-a788-4a91-a77b-d4b40794c1c2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a994f3-be2d-4622-ba33-95c557e5468b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234f3a55-014e-44c1-b9d9-e96bade155f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d177b34e-d295-48d2-a21f-daa11166739e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e63f23e-6d97-414a-9d78-970d9424df82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d8aef3-bed3-4b8c-af77-4febff453506",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6514d82-1b4d-4fc3-9eb4-71f66f53817d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a255b0-e00b-483f-b2ac-f1e6e6e1878a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a91922-05f4-4c23-b018-5e824ba81984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e110d214-9be2-4b82-af4f-1c87ff34e07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98592b98-4c80-43c0-ae0c-354c3908bdf4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae2919d-d3b2-465b-a6bd-fbf2cc27d176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afaf6293-0162-499a-9d5e-671a31bc9c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6392806-db45-4403-a853-560458e9f126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd43dbd8-ffb3-4130-8910-739bbaaa5063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e0a0ee-8751-4135-8b7b-494e36d20937",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b919822-8d1d-4fa2-a145-35aefe7d7211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d08650-8f1c-4008-b0cb-92094b2f0e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231261df-ffd4-4134-9169-e769c89774ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97ea5331-09bd-410c-a5ad-ffb66cb5a82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6cf083-b06a-4351-8d98-4fe2e0e3c2cb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfae35d4-63a2-4f83-8e19-c25f9b89b5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9f5cdb-8d7b-4499-a47c-15d8ee7e7695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dba7be9-ced6-46a7-883e-6e58a217f4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67dcba97-fdd7-44f2-81e1-71e479ae9d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938a056d-a17e-4c67-9550-48e85af99cda",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4a19f9-e6c3-4bf0-acf5-3fca50b85901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d97a11-f17a-42e0-b49a-7ab3276477bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e28cdc-13ff-4233-bfc4-288ce12e6a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e06b4f-b96d-4ae3-869e-63681d00bc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27185b08-a73d-4c6c-8424-93a09957e84c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ac9e54-d1b4-4b90-a303-7e4e6ce9ef3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a786ccd2-e496-40cb-8f86-1e0da261f18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b859e600-d325-475a-9c47-a3efd08fe01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eae9eba-c874-4232-83fd-bb7c4667070b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22108b90-0c4f-4de6-aa82-9f5b3e20cb0d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c580b3d8-56a1-4288-8d3f-39d7f48b78ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e390e7f-f3b4-4c99-8bf7-60ec256359e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4e6616-c797-4eb8-872f-0ae9974afcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c32d787-a775-44e7-9e28-0463345eee8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3573e2-0e02-49b3-94f8-6a57790c4341",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e61e0d-4fc6-49c7-9d92-25c7986f31d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c373ad98-c58d-481c-8048-31fe9fb53304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7565a0-4412-4696-9536-05dd868668ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b15b9e9b-6b6b-4b86-827d-bbe2e9a93b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce165cc-db00-469f-a0b7-8aaea072c714",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9820c7-3135-46cc-b433-e84e019144cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c273911a-7d8a-4ced-bb94-10b8500ae434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0511e2-f0ac-486a-83ec-a3fe3fbfe920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4e3fef-d7b0-46b9-8c7b-4b12c1bcde30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93e1c5d-2808-4bb1-b9e3-ecdf1295ae16",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c13304-a566-4086-8db9-a95037df1cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecbd3ff-f0a9-4bf1-a42f-4538169b9f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03967825-7df2-4d23-aa47-bac9bd772202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "abc320e2-e986-46d6-9459-6202c2d8e199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accfb619-832f-4f85-9375-2e1c7c1f620e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f67461b-8c0c-4a04-98d8-1a758d5b48bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a1be23-66db-4c02-830b-d8c47f46ddd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1767f82e-f76e-4883-b545-ac6d8e960576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "182f55f4-4219-41b4-8313-8ff15c36601d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fdcaef-a639-4e40-9cf1-8bdf7b366f31",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a4e17e-211e-4da4-a4de-0062d9ab5c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1440b03b-74ac-46f8-a54f-1c91cb10ef4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104e61c6-5b60-4d92-820c-7dcf6992079e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f97d58e-715e-42c9-b255-1c028df0e75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3f5dab-d0e0-496b-9469-024208ebf248",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbfcdeb-15a6-454a-bfc0-3ded432d38d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873e4749-642b-458d-a025-eb18555e47b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414a4332-3749-475a-838f-eeab9f1ee946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "10110173-81f2-4972-b0b8-e590281c3142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d418434d-e988-433c-8ea4-8caf9293f340",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114a260c-9fb1-43d6-bb14-1083cf014fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f23668-0015-4646-aa85-6c8cceae48f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401a36da-18dd-4675-8895-9957a6f8ffc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be4457d5-8ef4-4880-b418-82fc478d6441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b813bc1-d59e-4852-9fa0-9ba64692956e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b316c56-2af7-412c-9040-87645fae1feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a90475-e41d-469f-a00d-2c2a741dd9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dfd846-e959-45eb-afb3-bae21adec82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bdc368-0966-4df4-98ab-668a3c0114b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a11a5d-104c-4815-9f3d-ad75c5da9757",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f430efb3-e1d1-45f0-a803-9ed4a6f9c9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5ba5198c-a707-48aa-8fa1-0916d3c118ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68473bb4-5f45-4dae-98d1-897c28db6373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2500a00-ef4d-4f69-b83b-e433a8e15866"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37b7307b-c653-49a3-a252-e685a6d45685",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f81bfc9d-ddab-4b0b-9624-2bab5b16b4b6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3920c672-0f88-40d2-93a1-e854b2396775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d74cfca-516f-4ed9-b170-7aa3bace8b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cf8df3-a50c-4a0c-be81-aa84eede8fe2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "308a0ec1-fda8-481a-b767-dd953c3387e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cbc6ba6-b599-465d-8453-da1bdfa5d9d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "921ee9a9-dfe7-4c2c-af09-7cd37f5e4a05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7995c9a-bd99-4c05-85be-4ebe5caf7ac9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e64fd0ad-f745-4102-905a-c14562c66142"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10cbe572-b889-42af-ada9-4a5eb567357e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bec635e9-bf6c-4280-a41b-fb29ad65b432"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "301edb38-5197-4f93-b430-8fc59fd37ba0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f849d6b8-f64e-4400-8f53-95a9feda4c93"
                }
              }
            ]
          },
          {
            "id": "992a90c8-6aed-4948-83ed-0fbf816269ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cf96d277-c482-4a66-b615-9cf073ea7bab",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "878501e0-4a6d-421b-a757-d2f537494300",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f894f9f-36c6-44ce-928e-f8411c10f7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e5b5abea-9035-470a-9499-7ce0a0a8046f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50f8597-ced9-4e79-aa78-f6631bd32bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64a6b6c-a398-4a77-a0e4-6cd9b8c300d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77ec0b14-5c3c-43d3-816a-d3e918624798",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05e154be-0c20-44ea-b073-e6bcae1febb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec3ca531-64ec-42c1-9ee9-78fb5551e1b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca02290a-49bc-4e25-9aef-7d83b3318f72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "277d15c0-331c-45be-be07-4a8103ebf657"
                    }
                  }
                ]
              },
              {
                "id": "bf6c1480-5ef2-4750-896b-70f6730ff2c8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c57c37f-e7e3-4ad6-8cd1-7940a2e4f0ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25508d10-fab2-4abb-8598-af952102cb09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6b86238-8453-4ce5-8cf6-a273220c20a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9514416d-b33a-43e9-adea-08cfa7491e52"
                    }
                  }
                ]
              },
              {
                "id": "627036bd-690f-4ea1-8929-924041160664",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eda11204-8223-492e-8dea-5ac2dc4ad6c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aae7f196-30e9-41d8-b838-08e125ff67c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e277b37-137f-4830-bcb7-d836a4e3c033",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "524ca49f-0ecd-40a2-aa87-feae593dc8d1"
                    }
                  }
                ]
              },
              {
                "id": "45887044-5a0c-44d6-861e-bf003f01f70c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b11d93c-c8ea-467a-8fc4-fdcccb0e7b94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c83f0b49-70d3-4021-8047-323bc12443c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7ff1bad-f31b-4368-971a-0466db0b4927",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e1ce9d13-83c9-41c0-b339-dfb95644f1b2"
                    }
                  }
                ]
              },
              {
                "id": "41f4eb01-c182-43ac-a785-26f17540c8c7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bdca6ac-9145-4b98-8380-4875695355f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6458e68-7252-42cc-b218-c4c82c777f27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9fc78af-37da-443a-ba29-59e8cc25735d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a498508f-92d8-4196-8612-37dbbe485d0f"
                    }
                  }
                ]
              },
              {
                "id": "8494deaa-3104-4091-afd7-6256681fa952",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6854289-52e7-4368-891e-62a6570737cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f8985fd-2a71-4a44-a8fd-f4e79ea9e83b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbd75cbc-dea2-4acb-9703-7b5e0a909d1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d09be9c7-4057-4f15-bce7-be20f8d2b017"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9717e471-65ac-47aa-a91f-d1dc02506c8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab48a309-1060-4e1e-9123-c11bcead6f5e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e137c9ae-fdcd-474c-87ae-2950c574aaba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a30da943-03d3-4d29-b189-a6abc6d79fbc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b484a95-6337-42cf-afa7-67d49cdc2873",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "905f7006-21da-49e1-afee-b1ffc147ce1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9731309b-e901-408d-a0db-f4239aac263f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53fa7d3d-901d-4ff4-91d5-0e0e93832dd8"
            }
          }
        ]
      },
      {
        "id": "7216e3fc-b894-493e-8aa3-86e696334ebd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bb910c92-c38e-4cc4-9027-3b52a0c10525",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6a56511-8233-4c06-916d-880c635a32f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b21c3191-be76-4edc-bbee-36a6f5535545",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c41414-1c62-44d6-aef2-c7670af9bfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8957a124-9265-4a89-b359-4fea993e4f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd267adb-514a-43bf-a534-07f2830bb6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d70adcf9-0967-4442-a255-6c70c2a5f549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44664bf5-78f8-434c-a444-7cf4d1fcf1a2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0bf327-2935-4c7d-930d-d86090027ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f6cac5-389a-41a0-bbbc-8d38564699c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b676fd1c-91bf-4681-baac-6bee6c93f4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2faa628-ddb0-4ff2-b29b-0fc8ef1cd764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c0e24a-51f3-43ce-b088-3e23eadc0a13",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1833fe26-9f60-4519-bce4-a4934c2e56aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5491ff-d18f-4b30-a288-563654104af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1f73ce-5760-4a27-9993-b417a15f02fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ee14e7-bcaf-481d-95fc-5741cbc10ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58105d64-ce79-46b7-83e5-a673f85c8410",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9976f2b-af75-4b0b-b88a-ba6983832ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f543c2dc-e861-417e-bbd5-4ef07583a7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d27157-c439-4976-ace5-d132ee6ca911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d64f664c-ed9a-4c62-9f2c-4c64af99b8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4174c1c2-f71a-4874-ab1f-e4d4fe077154",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1497b63-9e9d-476e-b47e-6cb4e22eec13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36e3299-b6b6-4bad-a2b9-2b0cfdaf1880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0872bc-244b-4e17-8277-d6698d2144f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe40bb07-e559-4cf8-94a1-84cde8128508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f40049c-9c61-4d96-844c-5bc0c9ab654d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a92d21-ece8-4e99-8725-4240d1bc2cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebf4c70-bd3d-49f0-a0af-8369e4b7a768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc646e31-23dc-454d-898f-59eca2781259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fefec591-5861-494a-8e18-f95230a4a174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3c1f9b-0187-452a-8dca-6637d108ff18",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a021e873-4e52-4a64-95d8-f124fb4cfa28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce120f3-27f8-453d-9867-84516e533483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56444d24-d0f7-469d-947d-5edd4ecb23cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0714f9-18b9-45a5-89d9-7c508b6e9637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a6fe6d-f148-4397-9d41-cc3a1968861c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9950064-0931-45a1-bc5d-be3007ec9d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875a82a7-014b-41f7-a72d-391c666495b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d2144b-8956-4db3-9844-beb775bc0997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "186fbb6a-eec6-4bc9-8ec2-9cb18f19a7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dc061f-1987-40ef-a73c-56dce1a38899",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683a82d1-1fe3-43ea-8806-c74187cf6932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e9e0f0-0002-46d1-9a1c-6152a543465e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2f6f85-e99a-41fc-807a-9d7837bac7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5088e8-7e65-4547-97a5-2725a88930a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23fc094-e4d4-468a-aebf-063c39259643",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba06b5dd-b3af-47ff-a568-061f9d074f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6326fa-4088-4c4b-9837-bef57804b559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916efa26-09eb-420d-88e0-67aacf5d7486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3945026-1c68-42e1-897f-a7fcb6bb9c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e990ff62-964b-4819-b7c7-18be3b8d525d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ce4831-42da-4882-a0f5-dbd94a71fec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6d2a6c-08a0-4e37-943f-ba8508ce939b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90a8b9f-f5c0-413d-a183-7609cf4094b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "da393649-4cd1-4bc6-89bf-3ebf7a55740d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782776c4-09b7-4dd3-af66-e6e317d17db3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce88493-c7fc-47ed-9cfe-91f5e60b7251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13c68fa-4aff-4544-8568-6141e650039d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d13b40b-bb91-4c52-aac5-91aeb4300e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c4f6f6-eddb-4e1e-8f63-65d35682a16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e461881-550c-4d59-9925-4c7b468eed4a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d8c469-e700-487d-9997-2fdfedfb6757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec38411-ad1d-4d4d-8311-44ea7f9dbb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355f52ae-307f-4ac8-8db2-6c43b1adf7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf4d062-a5ce-4f96-bb0e-3c1dba0ec0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b6a28a-72fb-4194-98dd-7f0b040a128c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fdfb63-4a25-41b3-94aa-0881a6e87328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1bd669-8a95-4836-b210-68c906617f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c3f037-13de-4d3d-824d-fb4d89b53818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "28637ae0-d992-48c5-a2be-19967194dfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9486481d-672b-444c-9b4d-227edbe35261",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5902f19-7b31-4eff-8a6e-1214a4387b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbf1843-8cee-409c-bc1b-de6711db15a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3e68da-f782-4fa1-a629-bab22ce96092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2e7614-e1f7-4549-845a-2bc474b5c525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d754632-0d93-4391-9987-f3819d81f214",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145f91a1-0e70-429a-b47b-f5d1c936a01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09849913-63f0-4915-8bfe-230a909524d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd25b1f9-0d4f-4457-a146-b8dbb4137ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "42654a84-b37a-4312-885b-b204159f8408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6beba941-a461-429b-bd3a-7e3eff9aee2f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee075e4f-d3a5-4d39-baa1-3dce0d48e3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9917271-e832-47a6-8239-70817d240503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1733523f-032a-4e3b-b3b6-52895609715f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "464efef6-5e85-46f0-82c0-d49d58126780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e74def-13c2-4e01-b427-324c483bbc67",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0b3df3-23e0-42d9-acee-740d5db9ce8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5e2b53-fcda-42ac-9fe0-ffc8544c013c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2f974d-d274-4b04-a5ab-d87c5f8dc19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88cfb11-fa81-4b28-b6a4-45ea6911940b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8503639f-fcdc-4b6e-a75d-9281bf7b32fe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4117aee-eab9-45c9-a4b3-9142e443e355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4659e8c-bf24-4723-8fc5-e13d8311f063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3edb3c-c63d-4178-bddb-6a8836205af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed3f90d-017c-4794-a823-2979e6d8a3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e09762-598f-4a24-a982-3324151d2ea4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb5b124-dc3a-48a9-8d6e-6c50ace41bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a148368-367d-4771-8b44-b76b002c67c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d12062-4e58-4999-8a7b-dc1d53dbb669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "240589e0-1061-4db9-996f-d85d2ce6665a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a243d2c-7b9e-4f7c-9eec-585a43a7fcbc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4200c625-92bc-4117-91fb-bb7d3b2cbfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268db675-25a3-43b2-9cbd-fd1211f696b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267a55ce-1d7d-48e9-ac55-16408f9b52e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ceae9e-a652-4177-9524-6dd751248945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e08414-55e2-4389-bfd8-9080741daa39",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8cf267-0d5d-4d5e-bc67-ee5a2aa5fc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed43f4dc-f6bc-42ce-ad22-55f31ee1a7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46d4242-f442-46ab-b4cc-5d80677bebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4814267-c9cc-4728-9a5c-5bf1a5cffada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c26dce4-5dd8-4ecb-a9e8-52294d11e8e9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59125362-b000-43ae-9bbc-0079d15b6307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b79f3f-2e21-431c-9782-759f8fbaed4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87100b2c-10ec-4c1d-83b1-31dc95f74ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e6538e-65e5-4864-8df8-6a8c3246a7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795edc70-17f8-4390-8709-ea76eaa0e240",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6373cc9d-c97e-439b-974f-0fb56846f5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05192e0b-dd7e-4156-8e06-e1ee7f27cfad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9770e953-a1eb-4377-8eb1-fbcb1cd1e443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27342416-5375-4d9c-b839-cf571dc23710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4ce435-1782-4dd4-af9b-86325562cd13",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9818bc1e-7b8a-443a-8a65-25598ad43a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56d8723-5954-4e9d-8602-e231776540d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf35dee2-854c-4720-9cc9-fd19e2173d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4cdb52-13ed-43ff-b6c6-cbc37710972b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb81d2e-6310-4c13-bd78-32db4c98a507",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2997836-4387-4c93-8a63-fac8f5b16db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1fbff7-97aa-46db-be0b-6ba49712e970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f31817f-b74e-40d5-af08-4f016a8e3063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7275a1-e22a-412f-b947-4f8fec6a250b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb33506-2a5d-41b5-a5ab-f5dd3015ce73",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd87076-9466-4050-ad1b-2502c6d980b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e40477e-2607-45d7-8956-ffc1aa9268de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec065d6-08b3-47be-ae6b-f305676b7526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e51116a2-391d-4bd3-a916-e252e02a2469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7327ee-a1ed-49d0-b181-7d535fb350ce",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930b3bd4-c68d-4b31-bd0d-a43571901cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80596a45-e934-4231-9606-83c04a691a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e295dcbe-4ea6-45b8-9b11-20d9ec7cbe01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "604005bd-66d9-4399-88f6-e0dd872b80d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fd0960-25a9-45ab-8f97-825c5299b4f6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae14953-b826-4176-bb9d-c45e536ab135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18216f00-f0a3-4c60-b572-6e7e9f1adef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc45a9f-7248-46dc-a17b-fa170279c662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbfd4f4-f167-4c4b-8a3e-501c6b7baf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fe39fe-f892-4d3b-b2a4-ce4b51486efb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb78f80-fb3b-4113-b688-884de8c1da37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a879ee6-3d12-46df-8e72-8a28d8341b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d979224-e511-412e-888a-5d3e9ad61944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0583e50-8fca-485a-bcec-d6e53ac1180a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b4d4b7-bcb9-4d8c-a1a9-746741aba578",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6093c0d0-d731-4064-960b-9aeca9d2443d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab068cc6-068f-4b26-b4a3-a2b805a21934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd61e7a-1403-420f-9824-b4bf59c97cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f864d2a6-8258-45a8-8b30-da751438afe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c440633-66a3-4054-ba33-5e986120f5eb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ab1be7-99f7-4183-9b5e-6cb35a256932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a6ed91-3873-4a3c-8ae2-c7b463124291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19df21f7-d5fe-454e-81a4-0801973581e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bda896b-4e93-43c2-a5cb-631c7d018261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef23732-b532-485e-a07e-5f8e86b019c5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c9d1d3-845d-4fd8-9a55-8b537d4b29b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affe9af7-4942-40df-919d-a88dd239207a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e3a8d4-3be2-485e-84a5-3fabb86eabed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e373a2e3-9d32-486d-8b45-36ed08a34758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce538d6-4b08-4c12-9320-84d996c6088f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3d587a-0294-4247-b9a5-38a7cc4ef914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce4e887-2580-4648-b956-0d6e25b0813b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c3bb01-21e9-4209-969a-807cb678f406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67592e3-c425-48ba-856f-7c2fe55f205b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc4d287-3ba0-4223-9fae-b5ace7b913cb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e31a67c-38b7-467b-9112-639ad4fa6b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5494ef7-956d-438c-b61b-46bb0f624574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baa7905-9095-4901-a7e0-4c92abb00fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb266d7-b4b4-42f8-a14a-339e04155892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7604767-eb5c-486c-8258-8d792e77589b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138d1543-f3f7-49af-859c-40344e23441c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6148af8e-7158-4758-858f-1f9687e706d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8988310a-0644-43b7-92d7-8ac479c859b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de61b0bb-c56a-4aae-a146-a14a20325253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635132c6-3536-48a0-a017-62b14d8552ca",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdb4031-bdb9-4510-adf5-dedcde2ef4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cfb7984-fec9-4e62-9180-8f69eba4096d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6a3056-c24a-405c-a6c7-ebccd098ed74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3352de5f-e008-4678-bd42-c56a7b407744"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "165f8b1f-f73a-404e-a65b-a60804189c47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e49cad14-1561-4da3-a665-cda98d32fe6a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fac7d68-d936-4a99-b0f2-74376124ef91",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9ece1d62-9ba3-4dee-a1cc-2551a1738d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9b1eec-f3f8-4cf6-9b35-556a34988aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f83c2e4c-49f2-464b-ba62-3ae840d9011f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52a943fa-573a-4eab-92e6-65ce099f5d97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82dad3d5-1525-4b22-ac31-0bb5fc206465"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33ee947f-c9a6-4619-b9d9-463b618241b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4f4be99-a2b7-4203-83a0-98af339dbc45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b8e292f-fcd6-439b-9bdf-7df358821774",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "653d1fef-7e7e-427f-986e-1d66d78f7b65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60d6a1d9-4093-4346-bc1b-f46c96a7a343",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95e23b36-2f8a-4955-b238-e13fa87f7e54"
            }
          }
        ]
      },
      {
        "id": "c096898e-fe4a-4dd8-8a84-d6f3b1ff84e7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6a1e8b4b-1805-4406-a0a9-86711712a4a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64e46c8c-2c2e-4154-a64d-a0f7172a5bdf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5033108-f663-4c5e-825f-aff3a5b3fc97",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7217da12-275b-4553-be4e-a627fd79a581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd1b120-3ad5-4138-8d39-a50c6461a687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6ab203-81f0-4d9a-805d-0d9ddbe531af",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17865f37-1cef-449f-8083-12cecf395377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c409b39f-f559-4740-a47b-77d45d461181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5a2464-b510-404d-a2a7-01bc31795495",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b80241a-ff57-4873-a058-dd74140ac8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a470b1-a4f8-4fd2-8b94-4ebbb85e86ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9527e4f-bf53-4fa4-9453-d5ac9477f394",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49c4de7-dddc-4613-a63d-3c6acb552ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a105edb9-83d9-4d86-baa8-d7c87405d211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4081460-f446-4b92-a2d3-06f84a9b1eda",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3397e5-c236-4bb7-9638-06758247b2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03337660-7a69-46e4-bd43-f1f26f348eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c863c842-3333-4434-aba4-1d54905cdf05",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c181e1-c7fe-42e7-9847-66fedd2d9cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d8e065-9ede-4e85-a743-4b6f01986037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270b82f7-b3e5-4f7c-bc5e-70222eff551f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612bfb9c-2076-402e-a7ad-f42a6bdedd54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c5e82c-c55e-4305-af71-9c8db112bc8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbca12c-95c2-4235-a045-8c39de34b896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ab0afb-3289-47c3-bf70-197a6ce0d8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8539bed3-de6b-4a60-b3c2-4294381a3631",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ca93c3-8812-4e4e-b9ef-a8b383c62e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "802b9834-12e8-4329-bb14-1441eaed1116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce58537-f41c-46f6-b92d-651f1ffa50ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8716ff6-5c7a-46f1-9698-878982a100ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7570077-58b3-434e-b73c-35ff4bcdef63",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a5f91d-f78d-4d3e-98ab-7eee0718a104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2713ff14-04ff-413e-ba59-5631061cb83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37b589b-b467-4e31-8a02-9870db2ebbed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7bde35-5359-480c-aa9e-9eb26b234ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2567681a-4a9e-4e49-acff-6f56d16b7acc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff652d96-b8e0-4eef-bad0-57b1486f886e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b51711-be72-40a2-9515-95a88d43729b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90f484f-e1c0-4204-a03c-2dc79d150b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89796639-4293-457a-bdc3-8ecab274e7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87e7ba8-f10c-4f71-ad38-2ec8c03842c6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d57448f-2541-4b66-8aef-4b92233e191a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c076dc31-e14a-4978-b5b7-7231dc655da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781a2354-4a8d-478c-b36c-fa9e913fbb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51479bf-dca4-44ac-a9c7-7cdfb88b143c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c2b5ea-cda8-4ec6-9342-0ad96c479950",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d79a9a2-39b6-46bb-a4ca-b7f459fe9594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabb7946-7dc1-40c5-a23e-406e0ea2664f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ddc50f-2384-4ae0-ae00-e597a8b46fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834333eb-b086-4b33-900a-196bcf6669c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46ce063-e65f-4fd8-966e-374d99ef17e5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed566621-f24e-4409-9b86-78b6ca632346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32d4b630-2dc5-4609-9be2-0b355658facd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d41659-0a86-4c96-aabe-7703fdee2673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fe939a-e5bd-421c-aebf-208e56c9c8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5478f134-f0b6-4345-9836-eb5739ad0ba8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22fa72c-b55f-4163-8662-b7b95596d26f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "902e3ef9-12d4-4b37-80bd-3f5c9b139786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb21d2c-e667-4b5a-87a6-8a98e4a5309f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3e9905-f4eb-4c44-9b5f-9e72748ab71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e84d0f-8569-401c-87b7-ade3a8b3c5cf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9537c934-5b87-4014-8a7b-fe196c97e01a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b931dce5-0786-44f6-a4d6-eba12ff847ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004c323a-cbe1-4b95-86f7-162714ff7345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c217cf9-ce0a-4191-b144-2e45574bcf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9549136e-7441-49ea-88c9-2d415966c23f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73eb64a6-879a-4bbf-b034-947c76516fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b60e5e8b-0c04-458a-9a32-8cb16feab20d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae902ece-fd57-4c97-a633-9bb3f7b24624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ac7e00-de62-4966-801e-ecc5f5138da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212afbb3-f37f-4efc-8b73-35a253c04a8c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08d1c41-e399-4a58-b451-feb8d2bf957d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cbc5c5-f8f4-4262-a41e-5615b543edca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766206e8-be7e-4722-bf5c-429ac6d2d7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7dd5f90-0b04-4f7c-9704-5560d395b983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155319aa-30f2-4594-80dd-a7cd9f198a8c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58a45fb-bc4a-4c46-b2b6-3777d4ef93cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ba7e96-61a2-4f85-9aab-37d99f3cb995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba70796-6789-4cdd-a2b8-6316abaab5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac87d734-6dfd-4b25-aa31-a1472577100e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2615c50f-f865-47ec-a291-b67b6f257017",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbd9bbf-010f-47eb-9409-13fec3415af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40590bb7-4258-47b5-b27b-7ae0534ed888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742081b6-a3fe-450f-9a49-f630cc52eede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b40466-6750-4448-9ef0-36f7f3cfe22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b17ac9-2573-43dd-ac20-746d74b6f37a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42344a91-c7c1-4685-ba56-104f8423ba1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9297bc0-1f2a-4a53-bd87-c0041f966271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae3c877-f7b9-4196-aa4a-cda6d6bb616e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcee8f2b-9319-4c72-afba-f39698630dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97aad14-e3dd-493f-b45e-a51b26be5077",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1825d166-c583-4e4d-987f-875a2ddaa34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320f9a1d-e56b-4100-8fac-a4f9d2e3cd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5909ef-8b56-4ad3-a23a-3348e18b2404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97216d8-e632-4915-82c2-b01d10029073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db29ceac-78f9-46cf-9703-9d373e2c6a81",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da2255b-0b95-4740-aae9-02a1d82e8396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903c2bae-28a8-4ba7-afc3-a8a012a14c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798982a8-f459-49f6-987d-71eb0bfc5045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ce2c8c-e02e-4086-8684-70bf51eca283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d9bc28-696d-491a-9554-f0d2687de976",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab7e88f-390e-405a-aa7d-227778b02bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a236a9c-09cd-4b03-ae2c-a6e7ba7622ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba01268-b215-4fd3-9073-866bc14c11b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0afd3d-5000-45d4-9bb2-0b37a12853cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cff20e-f29c-471a-94b8-fddd36504a4d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150b30a7-33a4-4d8c-be73-a19012989c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1e918a4-e9c2-4380-862d-06c938779749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5623075-a6ff-40a4-9078-88241707f233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689f8330-2407-4915-bae4-3e2e964a2a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98228f8a-2f1f-4b06-a8d1-9637a87a0f03",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407b08a9-a9e4-41c8-baa0-6babf5d21216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1130e5e4-7cbd-42e0-a8bc-8011627777a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c8c6b6-3d53-4c05-a828-f86c0755f9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacf744c-183d-411b-8daf-b43c63a06e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dcdda2-5ecc-4224-84e5-b1b7479a6df8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d44ae3-4c7a-4f39-b4f0-0a1a82a0723f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "920a6bff-65e5-4636-b261-3b824a871cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2c58bc-d8d8-484a-b66c-171e06a5f44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8abfee-1a24-454c-9827-3de186effc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0dd933-7016-4bdb-bdc4-0bd4fe167b2e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fe0a3b-266e-4508-a7c4-784d26285763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1257caf2-fe8b-4c4c-b17e-be622c7d48b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702272cf-bd66-432c-b984-3963409dec98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca61635-1742-4f90-b7d5-7b310ec02164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d97003b-7936-4de0-a345-ff9241453e17",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d243c4b-570e-48f0-8e0a-74c4732eafe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8186bd-4dc7-4e89-ab95-8ebed7d7a989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497fadb8-9330-4e58-87cb-ba46cd272283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d74bf3-8dc2-4a7b-a536-8124010337c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790f1874-47b4-4ef4-a564-5df07eae55a2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751569b8-2e26-4e54-87e0-716c794b3179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97879e54-af57-4f3d-8222-36fde45817e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3205fc0c-32fe-42d6-81fa-42ab14e7d555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eac0a06-b48c-421a-a654-48e328cabc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bcae19-9b75-436e-a75a-5db8fd5ac63a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4b6261-3614-42f5-8984-277dd968fde3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd7f113c-1205-415f-87fc-b1e67b30c921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fe9bee-147d-49f2-a58b-e4fd3de3f656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387aa870-3cc3-420e-8eec-f029c750fe67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24e00d5-f31f-40e7-ad49-0d64d8c1cc55",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734d02e2-166a-4431-a0a3-0c11be025881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa32d42-497c-46e3-894e-92397d9dd4c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7ef96b-f4bf-4d54-b402-71ac3619c34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf2679d-104b-4dbf-8857-c20d6b46587c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abf8b9f-5726-4704-8e3a-74b9aef8a3a5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3029c4f0-8b7a-4f51-8645-94ca07b7806e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ba8fb0-a7e6-4a14-9a86-d38e6aa42f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb8da3a-bcc9-49a0-99fa-c06d629e0a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e67457-1e31-4979-9877-9f403596468f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49d0e4d-72d7-41b6-a344-a89c86a0b7e4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a94f566-313b-46c8-9b36-709b0fe9c337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01b79b14-8897-4c2a-82e0-d856b51c5151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af36b77-6b64-4db3-a6e6-688fc4a0b183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093f8987-fb9f-415c-ab84-8b683e346d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd43f738-ad01-4a4b-ad8a-990ab7d14ddf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78517aac-785d-4230-a05b-00b213603c42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c99d3d6-7f27-400f-9fd0-d4a96ccc9d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3440e673-020c-4de3-8a05-09ec9beff642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57881f8f-5e44-48a7-a939-338181ef44e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abce45a1-079d-46a7-a09d-217376a9fe9b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5399ce-9339-4478-a4b5-2fcd186f8ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3156f35-808d-45d6-b022-05c3114e9de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f399a5ce-1c65-4955-80e4-da43a3a1e565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea492d2-bc13-41be-b98e-c2be1b2d99f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef24655f-ed6e-4cb5-a7ba-bb9e40addbef",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2884773b-6b6a-45ef-a953-2e3a2523aebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22601aa7-e7b1-4883-8e65-aa9003289976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a4c5b4-04dd-4938-b03d-498146ffb32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2e2c81-bd88-4087-8c0f-f7030f33acfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e9b4f1-5f82-481d-9a4e-ca154826d79d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c69ff7d-5f41-4827-be88-05e057265290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba990820-7c24-4f1e-afef-700cf1e82ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97d98ec-389f-4b70-b8ec-1b320c368273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25901619-d94e-4a1c-a87b-e3325ead0061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e7b765-6900-45e6-8e22-286d4d96bab1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb01b0f-ff0e-4ace-8d72-b4f435f09f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7012d8-ec90-41d8-9e68-6a99d1e8506c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96a27e0-3db6-43cb-8ac8-b99a8fb8f2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76dc3616-8ee5-4bf0-8dbf-4c7de636e63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72db2f9-a039-4c16-9c3a-0c541ed4dec8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b19e9e7-f43c-4296-b703-a4f1e0321e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a3f37a-c87e-47dd-985b-96fa52d52b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea54fd1f-3878-4ad0-9eab-b5cfe7c56292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041bb56e-c530-4588-91d9-83018507d203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0528d521-7656-45f8-8aa8-6eafc20490b0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3254f6f7-67ef-43b4-89a8-823d68513e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d831b1b-cb9e-4971-a19a-f44a8e59a6f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8208e6e8-bf53-437d-bae6-76981f17590d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb782903-843f-4cb7-a28a-31721490073a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7475262c-27b0-41d5-b001-3a56682c6927",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43aaeec7-855b-4f92-82b2-348d9dd7c1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbae05a-04f5-4e69-b64e-941039ee8156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e761a0d-82ed-46b0-a6da-96b0ecb48ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c38ad1-0332-484e-914c-7f0938416b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e78859-d1f2-41f9-a5d0-6c0284203364",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045a6037-789f-40f1-9ce5-c38eda729a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea2cad5-d405-42fc-9f9f-80a0756f088b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b09f8b4-ff0a-4bd9-a4dd-617a3823071e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18117771-6aad-4273-a502-68a8e6a25c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6a7a07-a4d9-4289-b1c0-cc6754c3f084",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767ae1c6-788c-4ede-8373-62af18a4ce38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216161d1-164e-458d-9a85-482a5538a051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e66fe4-4fae-45d4-b675-d41ca56a3318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665fa349-446d-4b6f-a63c-5fb4a3675040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a512822c-aaaa-4755-a8d9-def39a7c19fc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f18d47-2b1c-44b9-adf1-b8deedfd6b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fff494-fb40-4789-8bb3-4cd172e052fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b45e6f5-6f31-4465-8586-d673170cc17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b31e18-fd84-4c31-87cf-5c72a876646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8a8cf6-aef6-4297-aeea-dba123de091b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd59b2e2-0f38-4e52-86d4-d7ae46b4ee0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69c5626-42ef-40d0-b3aa-3cb5b7efef0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2deaeee4-8e5b-454f-8621-b0c91151d6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ef5e9d-2a10-4e13-a39d-4dad22ff430a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9e8211-2227-48fd-a083-7f2d0438251a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e06f6c-858f-45df-9745-df307b63a51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a599909a-2ca4-4a4f-8afe-3da7957f1460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50907a42-8a5b-4057-a473-a72513a8a6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fb7ae7-b3d0-466a-9300-68849045a98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34685e96-46d8-48c5-938f-8c5558ffef8b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315b4fac-d9db-46a2-a1f9-3a2aef66efe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de686d2e-2857-4524-8ad1-46ac9c3c41de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5adbf1-c26b-4be9-87e0-d45d5a9943c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340d9c6a-7d46-4401-ab8c-a02e75bddd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a68296-fcc0-43d3-a9db-0267e48d2c47",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d019fd3-ddd8-4a8e-81a4-ddb312dc2c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96abf7c5-6725-44c5-a3ff-9390f56d991f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978b6342-7f5d-4582-97e0-6a92d77a26f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3f245c-5fd6-43ee-969a-67f8e1381f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0a91f3-a3df-479d-963d-22fc5cb0ea2e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "203536cb-3df2-44bb-a17b-78389bf7ce36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2220ad74-5d32-4119-af0c-cdfdbc6b057c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8908a130-3642-40f7-add4-b97b5bc0c038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881438cc-3de1-48b7-b36d-e26c8558c90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676df7e5-c947-4a34-8635-20c348f6a960",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d798c40c-d728-45da-b0c0-e1156829d1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ecef1d5-d8cd-491d-9c6d-cb50b7c84823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2f983b-e220-4f2b-b1a9-04f76cde0880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1b8e1d-3ecc-4dd9-82c2-f0508428b891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3629eec4-f27f-41b0-8e68-f1fe0c7aa37c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e881b68-12b4-4ada-8e05-fb69477e57ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f62021f-5595-493b-a8b1-81fc43787671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14be91e5-fe76-4e8d-a23c-243b17a3f53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b5b1bb-5792-4cff-94f5-89f3424afa9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd876e6d-cc79-4dc4-8613-afcc4b315dd3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0304a12-53d9-416e-8361-b8a7bd206ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f181f9d-e0ad-48cd-8a5d-945e5eb5b98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19e2264-0435-4157-b46e-9483b462200f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172b9643-4467-4665-9ab6-adb582dda433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f85206-1adb-4d32-ae9f-42547ff97ba9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7976c7-fbbc-432d-91f8-1d9447ea0b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdbb1a3-f7aa-40f5-8e62-608a130ed2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3a7cce-4ea1-40dd-959a-e320234641bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfccb643-3d7c-4994-a2ce-db46c92ba44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39d782f-a8b7-4a43-b3f8-c368ca8d603f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8082e187-d22b-4c74-b64b-87bf4f8ef2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2859df7-7a45-49b8-98ba-a8c3ca9fd695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142dce62-5cc2-4168-aed4-e01c00060de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7d590f-0831-4cba-887d-28ebc5b1fad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1a4bad-65c6-4ed4-ae1c-539e80236b65",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474b0092-db5f-4a3c-af7e-94686f223385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd7e8ad-217b-4af6-980b-6ee875f9a69d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6fbbca-bbb7-4af5-9ae3-f40332d759a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0b264b-c0ee-4a48-a127-d9b8855f419c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bab0e5-0d3e-4b2f-88f6-52a2870bc69a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e266a95c-2006-4232-82ed-a2de695a9eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf1b082-adec-4b09-807e-d4e767e05ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6d20a1-3dfa-4dcc-bc2b-09682e475fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fc486f-4315-4ad2-8d23-73bfffcee571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df2d466-c995-4439-9e40-02e5f87162a4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011946e4-432e-427e-9fe0-da20610defa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9059a2-853b-4cd2-a33f-cc0dfba23547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fa9d8e-fafd-4186-84a2-99e858610e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05c6027-a406-4a79-b7e6-061b8a61e511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc2baf1-dd8f-4506-ab28-a1dc4bda7445",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68489382-7e79-432e-a208-e64cc2e2cd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239d3434-f3a5-48db-a844-03848c240877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf53e87-de61-4a91-8ab5-8493cff9155a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412330ca-fda4-48ab-b4d0-c30aca612a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d87fa6-401b-43c0-b90b-4431ef108c7e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85910488-f6b5-4615-a726-c89d3f0ddb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f494c4e4-f83f-4d93-a6ca-cb357eea3f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bcec5d-4714-4993-baae-9fac9cb5d4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f00c50-f336-4d56-8769-2f94085bd1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5172ec78-5d88-427b-b74e-5b7c8f37f892",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1ad683-28a5-40e4-a4a7-9204fc6938e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb68766c-b224-443d-b224-a31312888298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f51cbfc-c045-4879-a7f2-b56e24f6aaf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7b26de-fd68-4b9d-a6d5-bc67bbfe1d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0a1381-51f9-4c24-b54e-0f978fabb339",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f506faba-887b-4a21-bbf5-7c34a95bdf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4f2512-866c-4364-8d03-276b7342edcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55be6c92-6cf8-49c3-b16b-af8a5bdcc2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978f45d7-f12b-44cd-803f-c54b72fdda43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7948899f-e70d-47c5-a304-f0432b375ded",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f89b04-157a-45d2-8af0-5021504409c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444e1fbb-84cd-44b2-bd64-91bc62552b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec565b7-98d8-4c0b-9580-49cb0c5fff1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8413bc-db69-45eb-b520-d585e370cea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedc63d2-35d0-469e-9a4e-d77fa4193dd0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6071875f-a76d-4a05-a021-1a9fc0379a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a890e42e-4598-4162-a185-732a86b40cef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dcb405-9c6f-44e2-b3c9-0b60f9bf4af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15fbd9c-74b1-415e-939c-3e4cdcb6204f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1de88bd-b350-408e-8ddb-6c4b7ace074c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6caa09b-64f1-46f7-843a-b4b8ad8cfe16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cbf37a7-8808-4785-95ed-e9be64f1e9d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387fe172-df83-4c0a-9476-8db935b3f2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3b32c6-a671-4f51-98fe-119c126b2fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27421e3e-0039-4e3f-bfda-34b2cd47e1b9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa31cc84-fc46-4984-8baa-bd2fcbcdad7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52e614c8-178d-4280-90f6-8b5908376f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4977d7-a4dc-4acc-bcfe-21acab0886de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ddf9d2-00e3-4e72-a540-50ce60df25b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af7bea1-1406-4553-a5c2-e0778948c028",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12df22f1-2f90-4df9-bac7-ca46f5f2295d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f79df4f-baa3-4ce2-a885-52e755b1d3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8199af-369b-4295-a97e-4fd3d4aa88df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064b85a0-a389-406c-8325-a3180a951c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd41c63-8ff3-4498-9b58-892fa492d395",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a32de8-f9de-43a4-a59a-7c4edf2bff7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d1c2b2-b0e2-48b0-bb27-008be6926474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71da1c7-db17-441b-b599-622a88d818d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd77a40-8556-439a-95dd-6c117240028c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3d8d44-994a-42ab-9f27-d519f983e8fd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142a2635-9f8a-441b-affd-2bd2545109a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e3a011d-92d6-4820-b1ff-d2b4d6c14883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9073524c-b953-453e-b0d7-f4dd689d439f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52067e00-72d9-483d-994a-dff57bfc0595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ff9104-f7c2-404a-b0e4-023570cda9c5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4906527d-b8ad-42eb-9468-61e597522aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d989755-119c-40d4-944e-e0343bf92ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d52bc91-8e23-4b7a-9e49-b99117a6f327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e24895-0ae0-4d25-bce7-961b6b5db22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00182ee2-0655-49d4-a23a-939a85e1a826",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2767ff7e-ff70-4a06-8a0b-874f5c511a98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b44bd1-f4e1-464f-9581-33ffd13f62aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f000aa30-aa07-4e22-85c9-52c3739993e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1c673f-51f6-45ec-b8cb-88c14cfb5a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dd8f4c-afb8-4491-b8a4-5537ecbce60e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d5d7d9-2232-43c9-be3a-8c685337e360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b430a503-cf9f-4d3c-b329-94a18b1d548d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5a8a55-83a2-4e28-b54f-953de0037c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaec9ae8-090a-499f-89f1-74c02eff62a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50911182-42dc-4404-aa91-b4f1719fcd32",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed11c7bf-1d17-4191-ab8d-b517dc928e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3809e433-2da4-4003-a8ff-a7c4f4aab41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88955ff3-704b-4448-8351-8d907985e8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386c1e46-440b-4194-ab0b-0c1c1c7c320f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60f16c6-9038-4ba2-bea4-7c58f2c15848",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334abd06-1a87-4bc1-8821-4448e15544d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "772d57bd-992e-4df0-815c-4a2b599e6dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78efcd8-21af-4b82-adf6-e8b8d8e60a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1628191-00a4-410c-b54e-1bc0b0ab70e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b94bb1e-47cb-45e4-9209-5bc7538ee4d1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c204711-0cd1-4731-9a38-94715eb3f4f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0122807-032d-4ddd-99cb-a5f9be1bfbf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f05f862-3721-423e-88fe-a4e8469ddc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7750962-b128-40c0-b428-33bc9cdfdbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d99c69-4b01-4412-926e-be5051c63ee5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd17e1de-b09d-45f6-8723-de962b587c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b41dd96e-062f-4aef-a29c-6465773ad145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11864abb-0bbc-467f-b344-fbfb12ea8b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385e971f-ebd5-4725-a6a8-01d60d00b24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb821aa-0eda-4a2d-9b18-664e94d1058d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d8321a-2ccf-4079-8a58-d0a09e1e1c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e32d583d-7263-4e8d-936d-3cd04d63554c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bcdfa7-dbee-490c-86a5-be9693c44a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68ec0ee-d864-4425-be44-d287ba019545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cf38d3-5748-4c15-8fd8-89470b1e5a4a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e91dd0a-997a-4c34-9a85-2d47817cd4b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b461abc-8282-416e-892b-b839b0385afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcef6aa-a885-498e-b85f-889ec7365fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f539dc-4948-4053-91cc-7131ebe266fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eabd459-64f3-4634-a962-a24c58674883",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91164ff5-bbdc-4a32-b1aa-e40b3bb0ee94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e23ad6a0-ad60-4dbf-a282-262716889832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036914fe-4c78-4a5d-8c52-0c6458249448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957f56d6-106e-4cac-a3c4-2f75c849756a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6768da3-3a62-4675-9743-c78eac662788",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce10876-c501-43f5-864b-e36494225eab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4db6bed3-81ce-41e2-b5ee-e1a4afca9402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc8d82f-047d-49eb-8180-258c4aa831f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc7414f-c29f-4106-a4ae-6fa3971c09ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a67828-5378-45cf-8876-8f23a9bc6f1b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f940da95-cae0-4218-a126-f3cf5f80134d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aab23a15-d5c6-4af1-8084-dd7c73f59682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a706b0-02db-441e-a61c-f3d50ba20e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc15a8d3-b85c-49f3-b176-d73ada66b7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c01f1f-dd8e-4571-91e4-d7726425dff1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14bcf37-e8a7-4003-abd3-623c654e7333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc8d9b9-5d2e-4b38-9e54-346078d76f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a08015-a530-46dc-afae-b124b4a65cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810d86e1-4159-4162-8585-935fbb584f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714a5632-76c5-4638-a876-3b5fc0c40484",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ccf623-89a4-4006-9740-ba127dd8f7df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0354c613-c1b4-4633-9460-99b029e0bebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "358245df-0c6e-4ee4-8565-ffd2a0c3690f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a173c1-3683-48ab-b5c5-ac189e1d13a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5f42bf-fff6-4105-a89b-2e7d2898106a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a871ab-ed3a-488d-a031-cdaadb389f93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39278bad-ebcd-40b5-a0e1-d3ff80bb0848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c646fb-00a8-4481-a756-e7314f523e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a029bf92-39ee-4e21-945a-508ab2bd6df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1352a717-7e53-452d-9e5d-7ea781b1c8ce",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb276a15-76e9-4b28-80fc-f62349a873e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caef665d-1023-4a63-9b8c-63f0a5bc3d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd6a9b5-e9d7-403a-8902-80ed892b9557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f62a41b-9237-4c3f-864a-ceb70d36e00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae90b235-1f49-4e12-abc6-a657eece58c5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad292fc-94c6-4203-b7ff-58cef7bd04e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eec9cc26-6db2-4239-b6fb-fb2cc3f8b080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "813f48d2-5834-4ad1-8286-1c9387f1f157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f415ec8-e6a7-4a18-b260-ca20b9188320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe9bb23-c536-4c26-b6f2-7dc1ac8794e7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d629121-fdbc-4d98-acd1-25396abef45d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f297d1-c7ee-4483-9e37-22226ed35a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ededff26-4f72-46c1-8576-9415fa482864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5eb8fa-7ca0-4a11-a1f3-431a915e80ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8700f2-2283-458c-84e1-219f478cedba",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2badd337-8815-43ed-baca-7b640ec4af81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7766947-0314-4f17-9352-5223e087dac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d6c7fa-4a42-4a52-975c-9b49f6795cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68474d1-3006-4df8-92e6-f9e5caf4130b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62ad51e-ecb2-4fa9-8f78-9deb2ffd0e62",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19c4bd0-55cf-42bb-9df2-e42a53fe1d05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b6ac727-dfeb-4bc4-b743-412a6d34bad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e252f3f8-0004-4823-b436-905d30ab1671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8109d5ec-1306-47b1-8951-53d53358f704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af6c142-303f-4fe2-9e68-a6d26eadf777",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1e1dbd-6e5a-4a27-a2c8-f511643cc434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7970076-8261-4b8a-9e19-153d3b2da952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c5b0f9-eb08-4643-a507-9cac9d7228fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3551c4-7cc0-4435-a818-ce8316d58c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5671306-5989-47c2-ae80-71bed17a129e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf77e592-94e7-4dff-90d2-f923bb2304e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e699719-8905-4ead-939b-ce47b263a7a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07838f3-0931-4c3a-ba06-7d9e1b0a2793",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513a178b-5469-4c99-88e8-ec9b3d972032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57aca141-c5d5-48ed-97ae-ef38de24467c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d8201d-26af-44d1-9e2d-255bdd803c47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21e9a066-f554-4377-b9a2-585d4b75ede7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c999c1e-aeed-482e-a120-19a2e1c63883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515c09fe-af31-436d-8af9-ac5daecb00c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec402f4-f835-4847-8c1c-f06b86307ce9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f45fbeb-5eee-4180-95e8-8143f2a8f516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f524985a-aac4-4793-b200-b380c6fbcef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2831fe04-dbab-48fa-8dac-fbc3093abf55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6175f2-e584-42a8-a784-0936a82a369d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56a4c71-e3be-4eea-8e18-b8f38dc023e5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1c4fe5-0e30-428c-9a73-d356a7cdcbf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11705853-d37e-4c42-8ec8-b6109d68c59f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4318dc85-898d-4bc9-a8e5-60f7d968a057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9536a5-8c6b-4054-b1aa-207db45f76ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2d2592-bad7-4c01-b212-807f6817b535",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd51c6e-d26a-4c1a-805f-be38d4bb156f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e473567-ec6b-4f25-bcfe-74ac7b0cc34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa75d2c-850c-47f1-be24-7fa8cf447fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40743ef-4b63-4223-a0f3-3a34b387ded7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161d4562-6a86-4f76-b3ab-84b16ffc3322",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41470756-a83d-410c-be63-e8425c5357f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90d7889c-e664-405d-b2c4-34c05dfe30fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a468a58-ba66-413a-a704-c62557b25f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e521df9e-7230-4cfd-b372-3fde29bbb3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec081489-e826-41ed-8814-cc9b0d598759",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bc1291-8a8b-4ca2-b8bf-a69a6350ae1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45fe5ca1-a50f-4cce-a330-771a2335eb88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfde0e2-0d00-4cf7-a75e-809b494f99cd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ae2142-76ac-4370-b069-ceb85fb76b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33294e9-4896-4007-a5ec-eaffd1696801",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ac0f3d-1125-429e-b5d3-d7c12cd4b68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "407fc886-1cfd-41ae-9399-b2c193ccb505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8775705-664c-4237-9431-f71b8bda1370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea9e50f-5d83-4126-8c5d-bc7946c93af7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d6262f8-e362-48bc-a41e-bb37d06522e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a29f657-b468-4208-8787-22fe7389169f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f623b46-d259-4a3b-b037-4a441824411c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e4bdd86-c2f0-4490-9854-c3390130a4e9"
                    }
                  }
                ]
              },
              {
                "id": "bace607e-4c3b-4305-ab1a-23fc5433751a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b67292a2-04cd-4a25-a6d1-6d053485f38f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9be20a1-0746-4635-8819-91c83458beb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "82ed5fe4-3dcb-42a8-9773-14789227e372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476b5fa7-f63e-420d-97ab-73fb6d821b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb8aafc5-3536-4bcf-819e-ed6a73fd51dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b790db7-1bca-430a-a817-2b4816c0d847",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62422f17-c328-483e-93cd-e102c4c25d9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "571ae0c1-e1d0-4d23-a988-7a9612242efa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b450a011-1996-4103-96fb-3b3f11ce1102"
                    }
                  }
                ]
              },
              {
                "id": "d9fd6142-c673-46d3-aab8-b3c9e43d91bd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0b16e98c-8c4a-4634-9704-8304f37c8af6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eab3a54-6706-4439-9ded-6f46115a61ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "119ffa01-4731-4dc0-8118-2493f1249822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b0904e-3713-48aa-9d89-4adf8bed304e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8a6f9e-0233-47e7-9bc1-c1e4a796d4a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b3b04d0-73aa-466b-a5f8-d33dba0acf4f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7e32507-907d-47bc-93fa-816030df00d6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef240ded-b1e6-47da-95d7-1b098ca094d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4941cb61-a372-48f0-9b2c-219a18bbc4a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d27dc5da-59da-4e85-8415-763aa7284b53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8da5826c-2f21-4f25-aae9-b8efac7677a1"
                    }
                  }
                ]
              },
              {
                "id": "31419f1b-4b68-4b4c-8005-486ff6454cc9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af200ece-4e27-4c14-bef8-83ecb67a31cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7f9d8a5c-bf41-4c50-bb69-2c7da197df77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78d943d6-7e9c-4ed4-913d-feafa072212d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddf0ea4a-5a3a-4f42-a688-0a8679e04507"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb5d3568-5aab-4c3d-ad55-2782311fa632",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "eb9bfab1-e632-4555-b8e8-ce54db057cbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2df668f3-67f3-43b1-8fa1-7d8e0f11cb02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f31332b9-ecd5-4a28-854d-a0cdb7a4e274"
            }
          }
        ]
      },
      {
        "id": "6f7b2cc6-7840-4ec1-a64e-784416548400",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2c569f20-b24e-4136-b921-6cf14a12ad30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28b99c6d-04a2-4646-9fab-6de1f04c1143",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f7e0a1f-cc7d-41b6-a1a4-1a613ac95250",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c3e103-280d-48ad-a54a-8ab0e4f3d277",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "00693462-3734-4b48-b00d-999e7763066e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee32e98-28ce-44c6-9470-3f3d5b74c075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f5b2c20-4fe8-49b5-8d75-58636ebd4cf5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3241edc8-b920-4937-a2ca-f59fc4bfcc6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3948a73c-413e-4b1b-bbec-7e0a07511399"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d443d3fa-f059-4f2c-b132-49f8cd2623ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88ae1e9d-4fe5-42b6-b6e5-d206f876c324"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f4352fa-1ab7-490b-8fcc-2b28ad77fb2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0a7e8756-d592-4fbc-bf97-8c72ee7c20d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c74e8f36-f17b-42b7-8dbd-7a0ad4a1d9ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef1e6799-a966-4f33-8951-452171d62e99"
            }
          }
        ]
      },
      {
        "id": "fb310120-c540-46d9-829d-6d9e371256ce",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "73b9cce7-61b9-4884-9fe7-33be77f7bbd9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4d4eaeb-6028-499e-9a28-0b9134f62e69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97075b35-9a25-4936-9a54-275c5f313826",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87978c0-bdd3-4ecc-b1fb-d3167317d6ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2642e75c-a701-404e-8e61-c24797015fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78367ebd-178e-4eae-a491-46a773636323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61636b68-15d9-4cf6-8a1d-c2bc4bcf5dff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2774e6f-3cd4-44f3-b548-2ebedf4032d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26d97e98-1976-40c5-a76e-fe6f2fe3fe26"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3be1bf2f-5433-45ec-97d5-c4a1bfa3f811",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93acaec2-855d-411c-95c5-4f35be768d0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce7cd388-395b-49a5-b000-0cd34ffa2d6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6fb0f050-78c6-43a3-8b99-db20ee9b44b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4788dd5-3379-45ee-b49e-8b792bee2ca4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dcad6308-37e1-4ecb-ba0f-8d0520245866"
            }
          }
        ]
      },
      {
        "id": "cf9183a1-edd8-49f2-a56b-3d656d8a491e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "90e1040e-2f0e-42b9-9fd3-3b6dc306471c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e76fdcfe-222f-4d98-939b-1f9d18249f75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14e9bd55-f1d7-48ca-a3d8-187b416563d1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce359cd-887d-44a0-8afd-0eb9b6f68bab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bd1d24c-6224-47f2-a33d-14c82a0d4e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed461710-62b7-4355-b8da-3535798cd992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5ec79a3-d104-4b36-8f45-247f84f7d339"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8910ad4-3bbf-4f51-a4b3-3c55a74835d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0900fb8b-d5bc-4a31-9120-2c8cdaf3cb65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f359936-ec29-4f20-9013-e636322fe6d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e14c89d7-ff2e-4065-be0f-c748e80de4d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cd719c6-55ee-4a65-9987-4819a7bf89e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "35d391e0-c8b4-4223-9b01-e05f8cc94d69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a412defd-6aff-4d87-8e05-14f8160c02a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f4e5d17-7335-4604-8017-0cb36ac997df"
            }
          }
        ]
      },
      {
        "id": "ec09f154-8713-4eac-a31e-6d9f28483cf9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c7bcc1f-2ba4-4d38-9b8c-7bbb9975e9d4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5c99173-67db-4d54-8cab-8d5efebad021",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "08b57bf6-23bd-47ce-be36-2e862be60f17",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7505543-d48e-47f8-aaff-85581f29760c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b1f7bcb-752b-4b24-b2ba-2f56a9012ca0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.57539682539682,
      "responseMin": 16,
      "responseMax": 11805,
      "responseSd": 773.6572637645407,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726533373513,
      "completed": 1726533410375
    },
    "executions": [
      {
        "id": "c08d147c-0d7f-4b45-9c68-151c132ad795",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "20e01e72-bfd3-415d-a3e7-d0eb0c3cefa0",
          "httpRequestId": "8ba9b4d0-0f05-4ed1-bcf9-539607aa141d"
        },
        "item": {
          "id": "c08d147c-0d7f-4b45-9c68-151c132ad795",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8a96bc61-e1b8-476f-86be-69e801682ada",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "10429ccb-ddfe-4241-9dec-cc389d13b66f",
        "cursor": {
          "ref": "4fb514fd-ae07-4998-96d3-001bac9de604",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e0cc5f1e-8018-4ebd-bac6-92540c843909"
        },
        "item": {
          "id": "10429ccb-ddfe-4241-9dec-cc389d13b66f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1541c1b4-ea1c-486a-bcb8-98c0d80b7e35",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "94585e1c-7ac9-4c41-9324-e18b17f28179",
        "cursor": {
          "ref": "ec432689-27fc-43c5-8843-719318ba0882",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0d10cbb3-0f98-4f8c-9621-5be126d44285"
        },
        "item": {
          "id": "94585e1c-7ac9-4c41-9324-e18b17f28179",
          "name": "did_json"
        },
        "response": {
          "id": "255507cb-7453-45bd-8456-6f52eddf1d9a",
          "status": "OK",
          "code": 200,
          "responseTime": 165,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f70eed6-f669-4d3d-8e0f-63215f1b9700",
        "cursor": {
          "ref": "9e399c52-da90-471d-b8bc-ec5c2b1397f2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "625655d2-6dbb-42f8-bae2-b34cbf3df66e"
        },
        "item": {
          "id": "0f70eed6-f669-4d3d-8e0f-63215f1b9700",
          "name": "did:invalid"
        },
        "response": {
          "id": "4e069ae0-e6ca-484e-9e6a-16989ef32add",
          "status": "Not Found",
          "code": 404,
          "responseTime": 517,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f70eed6-f669-4d3d-8e0f-63215f1b9700",
        "cursor": {
          "ref": "9e399c52-da90-471d-b8bc-ec5c2b1397f2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "625655d2-6dbb-42f8-bae2-b34cbf3df66e"
        },
        "item": {
          "id": "0f70eed6-f669-4d3d-8e0f-63215f1b9700",
          "name": "did:invalid"
        },
        "response": {
          "id": "4e069ae0-e6ca-484e-9e6a-16989ef32add",
          "status": "Not Found",
          "code": 404,
          "responseTime": 517,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4942f0d-2b02-4c9b-bd34-26798577b00c",
        "cursor": {
          "ref": "db474dac-6770-4a20-8e25-d5fb7793215a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c0726f1a-a5a0-4eb1-a450-da62f4ccba80"
        },
        "item": {
          "id": "d4942f0d-2b02-4c9b-bd34-26798577b00c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6c3242a6-19a1-4b0f-a185-c061b4febdfd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a44f8b5-d347-4d83-b09c-20e982cca254",
        "cursor": {
          "ref": "a1bb0b38-5217-4b3c-a151-dee767d8a83e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d1813d6d-2927-4fc6-8fa2-85c698fe1e05"
        },
        "item": {
          "id": "2a44f8b5-d347-4d83-b09c-20e982cca254",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3fb1c834-54ca-4cd0-bae2-f942996c2a5c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77933ae-d7ba-4341-b9e5-eea3a899865f",
        "cursor": {
          "ref": "68ea8a21-21cf-40d2-b773-308fc3222f51",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8a4353b5-95e2-4fb2-a483-92f22eb72ea8"
        },
        "item": {
          "id": "a77933ae-d7ba-4341-b9e5-eea3a899865f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d125cd00-f799-4d8c-92d8-4e2b4bb35d42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60825f96-8f39-46ab-b73b-d942efa13eac",
        "cursor": {
          "ref": "2dc6044d-bb9e-4a4f-a558-620d4334a11e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "156bd73f-0ace-46d5-949f-08123000504d"
        },
        "item": {
          "id": "60825f96-8f39-46ab-b73b-d942efa13eac",
          "name": "identifiers"
        },
        "response": {
          "id": "76c2f933-5ccd-414d-a915-fbf7f202dc8a",
          "status": "OK",
          "code": 200,
          "responseTime": 147,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f86316-4a47-4c58-9f0c-78147eb68649",
        "cursor": {
          "ref": "22dae5f6-c1f9-4673-91fe-ef59f951cdb3",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9a5b33ab-c841-4dc9-b0d1-8bdde2c996ac"
        },
        "item": {
          "id": "01f86316-4a47-4c58-9f0c-78147eb68649",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d7f0f1c4-d2f0-4b15-a2a3-7cb7f1ee8236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5f274f-14e9-42c9-9f83-fb6387d19b47",
        "cursor": {
          "ref": "b8b85382-7890-4a9f-8e7f-b01cad80e756",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0cee7e40-c486-4c29-b1d5-2461fe393c6e"
        },
        "item": {
          "id": "9d5f274f-14e9-42c9-9f83-fb6387d19b47",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "82fa5bce-4e9a-4d65-a20c-8a084ef7ade2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ee59aa-1d5a-47eb-8710-900ca67e49df",
        "cursor": {
          "ref": "40ec2fd9-9a6d-4081-8c15-ae1d537f662e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0f381458-95b7-4538-8719-3ba2338b9e78"
        },
        "item": {
          "id": "37ee59aa-1d5a-47eb-8710-900ca67e49df",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dc93941e-2f33-40c2-99b3-83a79dfc0da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a41e80-2c1c-455c-860e-44d5f7754f73",
        "cursor": {
          "ref": "0b2b1781-f6c6-4f9d-97d7-208eec4aeef1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ae83e5d3-f9fe-4f12-bc27-ac76f3359bea"
        },
        "item": {
          "id": "27a41e80-2c1c-455c-860e-44d5f7754f73",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d1756e0f-e766-4853-abfe-f3ef8953cbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1573f410-5277-4815-9256-c0364432a273",
        "cursor": {
          "ref": "807b3634-7ce5-459c-ab05-e38b30dc9b19",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2d8869b3-b191-42e9-8798-21dcf6ddcc00"
        },
        "item": {
          "id": "1573f410-5277-4815-9256-c0364432a273",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6ee1b838-7755-47ed-9b1c-3481b90eb760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8770ca06-79ab-4be5-ae22-b14ff9c0f8d8",
        "cursor": {
          "ref": "d1ebad37-e0f1-4d19-b7a8-715fbf5da6c3",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "931308a0-b4d1-4502-8e2c-dbb61032995c"
        },
        "item": {
          "id": "8770ca06-79ab-4be5-ae22-b14ff9c0f8d8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8c75f46a-9f53-40ec-a8c4-4753d2fee921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c863ca0-a3ac-4cf2-9685-2efa6bc1f3f6",
        "cursor": {
          "ref": "594b2da0-27ca-4eb6-9340-bfc54243315a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f8abe32e-6623-4925-ba96-f5e5b8107eb2"
        },
        "item": {
          "id": "6c863ca0-a3ac-4cf2-9685-2efa6bc1f3f6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "545b256d-9cc5-4f9f-9969-9f0761da0cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520ef9e8-9e07-4d5a-9aae-dd928ad15474",
        "cursor": {
          "ref": "7b37f254-a2a7-47cd-b4e9-50d6acc918d5",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cf908c2a-87fc-45bc-b057-9a6d851c53fb"
        },
        "item": {
          "id": "520ef9e8-9e07-4d5a-9aae-dd928ad15474",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2b5a71f6-1283-49a6-a087-15509241eb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5891bf-b633-49eb-a710-7f1e84402717",
        "cursor": {
          "ref": "1be49923-ac99-4fd0-b6e7-e682bcb70324",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cb50aa4c-08dd-4657-95d6-160d8acdaf69"
        },
        "item": {
          "id": "0f5891bf-b633-49eb-a710-7f1e84402717",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "829c1e6e-c1b6-4477-ad1d-e239b79c235a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b911e8df-b98b-4a17-9fef-0e1899a1f0b4",
        "cursor": {
          "ref": "3ac3d8b8-9085-46c9-aefd-5e63eed1e157",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1b1bd223-214d-4601-bf50-3d1f6f312631"
        },
        "item": {
          "id": "b911e8df-b98b-4a17-9fef-0e1899a1f0b4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5bd2b43a-9dad-4f28-9cd8-2cb9aadef62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5362eb6-c723-4ab9-b6e5-ae5b385bdfa4",
        "cursor": {
          "ref": "79d3b3ff-5ef7-404f-85d5-8e9699273a2e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b8a33ba8-b15c-4f79-907b-6201553e0585"
        },
        "item": {
          "id": "f5362eb6-c723-4ab9-b6e5-ae5b385bdfa4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ebf1a763-3012-4d44-8cf8-d51aac9bc24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8be4128-9bd9-47a5-b302-a9f9db86dbd2",
        "cursor": {
          "ref": "f5c2c7a8-bc2c-4e06-98d3-c967dce2b7ce",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "916fb497-7ed4-4287-aa03-027b2779f0a0"
        },
        "item": {
          "id": "d8be4128-9bd9-47a5-b302-a9f9db86dbd2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "47c4b027-b54a-4034-9730-8a4c970c213a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c213b5-49cc-4cf8-9f54-62c432dce6fb",
        "cursor": {
          "ref": "e697383b-0654-4cd1-89bc-07387ebd6703",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "978e41bc-6a08-4fc4-9af4-c0f59d4bff10"
        },
        "item": {
          "id": "55c213b5-49cc-4cf8-9f54-62c432dce6fb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "04ffc2a9-15f3-4ed9-83d7-747985fcde4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5a8ea7-d26b-4065-8563-08c325f9a996",
        "cursor": {
          "ref": "2c1873fe-f715-4f11-9248-d3f8d7c8bc56",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5db7c089-3bd7-4193-8240-b8b4d404e27f"
        },
        "item": {
          "id": "5a5a8ea7-d26b-4065-8563-08c325f9a996",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ecc0ecc0-0fec-42f5-a646-86c1cbc07f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d9d4a8-c50c-4a2c-9451-59e1e8f90e06",
        "cursor": {
          "ref": "6c143c61-d5bb-4e00-846e-17f2c3c7b2e4",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9798f980-4d3e-4101-b438-dbe31ced7514"
        },
        "item": {
          "id": "71d9d4a8-c50c-4a2c-9451-59e1e8f90e06",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7e46dab3-98bf-4ef5-92a0-4a8163450859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0658f88f-3759-49a3-a570-aff93804ec88",
        "cursor": {
          "ref": "8cd92267-0e0c-4aa3-88c4-24f0536d91a2",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2cbc4417-7a5b-4ec3-8da9-ed0f4056c96a"
        },
        "item": {
          "id": "0658f88f-3759-49a3-a570-aff93804ec88",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "82ac9887-8a6e-45af-8ef9-63b3916b16c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa2ba0d-eb4f-4488-b4ba-9e54b3a5d353",
        "cursor": {
          "ref": "820b8bd4-6f14-4459-8fee-394fc803b3bc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d0aef321-c000-408c-b9d4-7dd56562ada3"
        },
        "item": {
          "id": "aaa2ba0d-eb4f-4488-b4ba-9e54b3a5d353",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4cfb0d73-cccf-4884-b7d1-18fed323b29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623a74ff-117f-4e27-a9ea-a6dc98425290",
        "cursor": {
          "ref": "8dd100ef-0bd1-429e-876f-ed27c73d2276",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6f35f8f2-6f11-4c3b-943f-76887e714882"
        },
        "item": {
          "id": "623a74ff-117f-4e27-a9ea-a6dc98425290",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8732c8de-7b47-4b64-8a81-eb73f5eda166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd4da34-c128-4e1e-9941-8d64516df076",
        "cursor": {
          "ref": "d60a2d9d-de12-4f5e-95a3-c3752914ffaa",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c6d99f78-b61e-4eba-92eb-20fcae2803a4"
        },
        "item": {
          "id": "bfd4da34-c128-4e1e-9941-8d64516df076",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a83fd24c-12a6-4d41-8a65-b7fc25cdc9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d47d48-85e1-40e8-8b68-924ed020b9ce",
        "cursor": {
          "ref": "a987795f-47ea-4af7-9264-d4a6dcbc916b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "05891f8a-33ff-4b1e-8d67-4c7e3156ca67"
        },
        "item": {
          "id": "56d47d48-85e1-40e8-8b68-924ed020b9ce",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dc288438-ece8-4077-8c26-bc9de57755d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cd8c2d-78ea-455f-a9cb-9ba134bc94f8",
        "cursor": {
          "ref": "dda44a42-55c1-464b-9163-3f0d5170f0b7",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4f10e215-7db7-4439-acee-f5c79d68235b"
        },
        "item": {
          "id": "b9cd8c2d-78ea-455f-a9cb-9ba134bc94f8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ac23a2c3-8c78-4a70-a2c4-16904e25f42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b946afe0-7786-4868-8ee3-7f802a178f41",
        "cursor": {
          "ref": "13f91c91-29f8-400c-b352-03abb2db5776",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bfc11031-183d-4128-b3ff-59c2c911a62c"
        },
        "item": {
          "id": "b946afe0-7786-4868-8ee3-7f802a178f41",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4e411bf7-f464-4aab-83b5-95a8646940fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccaa469-935b-414c-a3a1-1cfe1b5770e5",
        "cursor": {
          "ref": "e6f394d4-96c7-4c17-90d3-305c8d6e5dcc",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e79964d1-7259-44ff-8787-9bef39b68993"
        },
        "item": {
          "id": "3ccaa469-935b-414c-a3a1-1cfe1b5770e5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a2d3cbe7-b11f-4237-9b74-2747d958ed4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eba5c8-8634-4474-8e59-1f2213ede182",
        "cursor": {
          "ref": "0ff172ce-cf7f-4355-9bda-f208b7980b99",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ac9f1fe9-54bb-40fd-9951-79423c2038ed"
        },
        "item": {
          "id": "69eba5c8-8634-4474-8e59-1f2213ede182",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3acaa7a0-e8e3-48b7-921a-b6343c7d56f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d187bd-f843-43e1-985d-28095a4f497f",
        "cursor": {
          "ref": "827f39a7-957f-41e6-aabf-b3cc4d9abbc3",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f319c902-3221-4491-a0b6-af7a53b3f257"
        },
        "item": {
          "id": "40d187bd-f843-43e1-985d-28095a4f497f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "11aafe93-e7c6-47c3-9f74-ca971e56f391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea5cb73-ac7d-4740-810e-5fe8769b6c85",
        "cursor": {
          "ref": "272e7860-34fd-4fa2-86bd-eab23cd72604",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "075b25a9-9b36-4775-afc0-113f32282a24"
        },
        "item": {
          "id": "6ea5cb73-ac7d-4740-810e-5fe8769b6c85",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9d5db406-a3fa-427b-ade8-451c29959551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549af070-7235-4a46-975d-40a4d59a3fb7",
        "cursor": {
          "ref": "3bafcb38-3355-4fec-be60-1ed7b9fe26e1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f92d70e8-f2c7-4933-969e-356dc70c3be2"
        },
        "item": {
          "id": "549af070-7235-4a46-975d-40a4d59a3fb7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2bc08831-0570-4134-ace6-1b539edc8f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45ecf35-ca4d-47f0-9e44-57d65459353d",
        "cursor": {
          "ref": "6b6444b8-bd81-43af-9ed4-4b1ad765b619",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a9f6f6f2-a667-4122-b6d8-811bfb682172"
        },
        "item": {
          "id": "a45ecf35-ca4d-47f0-9e44-57d65459353d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ec08998f-398b-451a-a5a6-5abfd8ee90a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45e8ccf-0b4f-4bba-a2b2-141336593c6d",
        "cursor": {
          "ref": "56a0fa74-f773-4192-a54c-ef68f8c262e1",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5a3af8c0-70f4-4408-a232-fbb67a7e7f89"
        },
        "item": {
          "id": "d45e8ccf-0b4f-4bba-a2b2-141336593c6d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "35884b96-b27e-466f-a4eb-759da7888d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e02ce0-f708-4b6d-9051-0f697a3f23b0",
        "cursor": {
          "ref": "6ca3cd94-fc37-4adf-99fa-b137ddb01fd2",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "de91717e-57f1-43d0-9ae9-565010bcfa56"
        },
        "item": {
          "id": "b6e02ce0-f708-4b6d-9051-0f697a3f23b0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c02d1e8f-0c9d-4121-a2e3-02870e3c92a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6f91d4-da4a-4f11-adfd-65e8d27f4684",
        "cursor": {
          "ref": "94e81b79-e80c-40d4-94b6-0e4db58d89b5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "13b5c9cc-e48c-4fb7-88ce-1a168822fa69"
        },
        "item": {
          "id": "4f6f91d4-da4a-4f11-adfd-65e8d27f4684",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b7552f96-8e64-40bd-9973-f6b16c822529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1860561-1427-4acb-865f-c7c907e8a8fc",
        "cursor": {
          "ref": "73cf30f7-2a54-403b-b5fb-29f5414aae8b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "983147cf-7ace-4ca6-8038-837c7aa3f103"
        },
        "item": {
          "id": "a1860561-1427-4acb-865f-c7c907e8a8fc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d77b6e9f-55b5-49da-a97a-95f5b4ec50f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada5faa1-2add-43f0-a1fb-87139b1a8bfd",
        "cursor": {
          "ref": "490866f3-6fd5-4fb1-b97f-321f38e3a09c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "29900987-199c-4096-beb1-3758151888e0"
        },
        "item": {
          "id": "ada5faa1-2add-43f0-a1fb-87139b1a8bfd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "597ac92e-f76d-42e5-aa80-ea08c6feb677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72a9122-351e-44f8-a823-5877d6d57aff",
        "cursor": {
          "ref": "301f419a-d150-4d67-9bf8-4863d8def1d8",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "24dbb2d2-73df-436f-b414-9b5afdea556a"
        },
        "item": {
          "id": "e72a9122-351e-44f8-a823-5877d6d57aff",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b3cd6e3a-f825-4f45-8cf4-0f4acf20ba88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8783674e-3e79-46df-bd2d-9afbeab12b08",
        "cursor": {
          "ref": "85f4d1df-3f8d-41c0-a4bb-8a4350136ac3",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5067ede4-3f69-4f89-b714-d3b9b8845c60"
        },
        "item": {
          "id": "8783674e-3e79-46df-bd2d-9afbeab12b08",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0b51ebd3-c862-497a-81ab-b5ece7ba8568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5ee5bd-28de-42f2-b727-a8d075dad28d",
        "cursor": {
          "ref": "10a7282a-dcc0-44da-a9ef-48bf541ff1a5",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "063b4d2e-0202-4ce9-a0d5-3e6baba512e9"
        },
        "item": {
          "id": "ad5ee5bd-28de-42f2-b727-a8d075dad28d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3209ede9-7a6b-477f-b90c-51a97008535e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e2953e-26c2-4bf3-b075-608224728249",
        "cursor": {
          "ref": "e32f1159-cf27-444f-b87a-437cc9549fe4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d105cba8-bd3f-4411-b39c-12d0b2b5943f"
        },
        "item": {
          "id": "e0e2953e-26c2-4bf3-b075-608224728249",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ef01b2f3-7f4a-4cb3-b6f9-babb72cf50ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87acddf4-6ac2-4a70-8835-bbc574b50d0a",
        "cursor": {
          "ref": "dcd56d21-54cf-4fda-b0d3-f2b2c980a962",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a2fcc50f-0fbe-4b86-9faa-4a1ac540c472"
        },
        "item": {
          "id": "87acddf4-6ac2-4a70-8835-bbc574b50d0a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f69b1b58-e285-4f94-8a8f-e8ff123d742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328d741f-0e52-405b-a616-06d6419f41b4",
        "cursor": {
          "ref": "290a2fd1-fdda-45c2-90ea-51948d2b63a3",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "be7a99f0-cd45-4dbc-820a-31904f7be722"
        },
        "item": {
          "id": "328d741f-0e52-405b-a616-06d6419f41b4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2e91fd66-7eb9-4025-9ee9-664d4890720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca9dfa9-f65c-4a9f-aa61-1794801bd28c",
        "cursor": {
          "ref": "b42c6c8c-f629-452e-8d13-6b1c264281b6",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "774dfaac-c687-42ff-8875-52fd7257671f"
        },
        "item": {
          "id": "dca9dfa9-f65c-4a9f-aa61-1794801bd28c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "86270153-9cfc-459b-af96-a573315e8660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2874805-342f-4b86-a21d-ae3e7914ca29",
        "cursor": {
          "ref": "fba52ca5-a265-49e5-b8da-6d615890e0f0",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ad540082-e624-4cd1-a28c-520a827c0da0"
        },
        "item": {
          "id": "e2874805-342f-4b86-a21d-ae3e7914ca29",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0500bf28-bc57-4fe5-bec3-e8dd0e1384b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4204222c-a483-465d-993b-f18e7feabb98",
        "cursor": {
          "ref": "08494fc2-aef9-4455-bad9-4f04fb576d51",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "72614551-1136-4cba-a6ae-3aef8f39415e"
        },
        "item": {
          "id": "4204222c-a483-465d-993b-f18e7feabb98",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "00601897-1b2b-4a9e-8e74-48b2cf9ce04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823a6d6a-b79b-47f5-b5cb-90832eeab73d",
        "cursor": {
          "ref": "83dda2ac-8229-40be-9782-5f44ac8e48db",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9864f451-a585-4795-9455-e8190cf83105"
        },
        "item": {
          "id": "823a6d6a-b79b-47f5-b5cb-90832eeab73d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "767e9e45-8ccd-47c6-ab9c-78844964236f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24269efd-2435-492f-bc10-c01a39232970",
        "cursor": {
          "ref": "0975aa1e-2e7a-47de-9db2-c0a1416e209b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ad3aee9a-432c-4621-976b-7ff99b9b876f"
        },
        "item": {
          "id": "24269efd-2435-492f-bc10-c01a39232970",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "624e9d5a-503b-475c-8833-3b54993dd8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc227ff-5c28-43da-965d-cf593f47cd62",
        "cursor": {
          "ref": "b0bcbcee-a11b-4a47-a78a-39438e7a0a50",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "56899c1f-c930-450b-b072-7dda6bbda849"
        },
        "item": {
          "id": "fdc227ff-5c28-43da-965d-cf593f47cd62",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b1107b36-577f-4a69-a29c-77486762967d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00635067-242e-46a3-8da9-ba90aaae5622",
        "cursor": {
          "ref": "4e437f87-3c55-4720-a822-efc8d914881d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2fe883bd-6fd1-40f8-a2fb-d666fc6c436a"
        },
        "item": {
          "id": "00635067-242e-46a3-8da9-ba90aaae5622",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "844c6da8-ba6b-4e28-8f00-e4e18c4a1146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a98a85-dc0d-422e-adb3-2337d09ecb61",
        "cursor": {
          "ref": "6b8499c8-023b-4c02-9fc5-2b3841797c48",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6f7bc86a-cc86-4df8-8b46-5be22c0360df"
        },
        "item": {
          "id": "f5a98a85-dc0d-422e-adb3-2337d09ecb61",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8359030b-1e85-4154-95a2-c83f40729668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2fdee6-926a-4063-93d0-f4835265e559",
        "cursor": {
          "ref": "30976ff7-5bfe-4a25-bed9-e104be204bd3",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "74224737-aed6-42ba-b9cd-365bd9b55aef"
        },
        "item": {
          "id": "dd2fdee6-926a-4063-93d0-f4835265e559",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "742aae01-8f32-4755-85ce-05f72c540b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00736fef-5dd1-40a1-8c17-d755d140f032",
        "cursor": {
          "ref": "79c2b638-13b4-4dc7-acad-1dfc308f0998",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ca2d00d4-c1dd-4c73-a074-9828004314b6"
        },
        "item": {
          "id": "00736fef-5dd1-40a1-8c17-d755d140f032",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "49e661f1-00cb-470e-b0cc-d3055a00b88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa9eb03-449e-4c36-bcb3-708b945b2970",
        "cursor": {
          "ref": "20524b11-792c-4f9d-8a52-27ec98faee5e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "599e7f53-2285-47ff-bf52-cd7bca5c5459"
        },
        "item": {
          "id": "9fa9eb03-449e-4c36-bcb3-708b945b2970",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "eb3cb30a-a85e-4eda-916d-8bd85ab151e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331ed0d1-5b68-4fc8-9946-72ff7e01c37b",
        "cursor": {
          "ref": "238aa37c-10bf-4c53-80e1-c86bce08dec8",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0d6e8c40-c38d-4353-b27c-c7263b6a258e"
        },
        "item": {
          "id": "331ed0d1-5b68-4fc8-9946-72ff7e01c37b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9ce532b4-6dde-4ca2-aee2-30ddd5f50ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992e2ed7-eeba-4f31-b5c6-a63009d61996",
        "cursor": {
          "ref": "6d3b6411-374c-422a-a866-14adbb8f09ea",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "739647e2-be4a-4be6-bfe4-9215c3616cce"
        },
        "item": {
          "id": "992e2ed7-eeba-4f31-b5c6-a63009d61996",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0b6c5ddc-b431-4856-9113-f609ecb5dd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e996a9b9-75b6-493c-967b-1aedf39831d6",
        "cursor": {
          "ref": "a254a067-5527-4d85-9446-6c3c75c27f67",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "27f0b26c-7040-433d-b3f7-aa6d6517d751"
        },
        "item": {
          "id": "e996a9b9-75b6-493c-967b-1aedf39831d6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "124f8b0c-a219-4dde-87f6-3d977be59806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a280757-8053-46fe-baa0-61aadfd16c1d",
        "cursor": {
          "ref": "255bfc81-2531-42cd-872b-92c2af45a5bb",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5a31413e-aa97-43a4-ba0a-8e6341223317"
        },
        "item": {
          "id": "7a280757-8053-46fe-baa0-61aadfd16c1d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "641d964c-d406-4be0-9bf5-470714a1d893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd84c604-ee5d-47b7-9ad3-40f70a37a300",
        "cursor": {
          "ref": "179ee85c-7c06-48b4-8713-c26ea7598927",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1ba48380-f8f2-4658-b830-d6ca9413ccbc"
        },
        "item": {
          "id": "bd84c604-ee5d-47b7-9ad3-40f70a37a300",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "697afda8-7a9a-4021-bd7c-814c3ce56e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569d0bda-22cd-4a07-bc9b-0d3744ac3e49",
        "cursor": {
          "ref": "3a00692c-8655-4928-bb7c-988917afd6e9",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a48b99a4-5efe-450b-87bd-c41c950e931f"
        },
        "item": {
          "id": "569d0bda-22cd-4a07-bc9b-0d3744ac3e49",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "446bb267-bab7-479e-aa0d-091036191378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a39f02-259a-47c6-83a6-6ca0df3d2320",
        "cursor": {
          "ref": "b14c8520-7281-4dd1-807d-583478553f8b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c7cd8cb3-e0aa-4a0a-982d-02adaaa578b7"
        },
        "item": {
          "id": "11a39f02-259a-47c6-83a6-6ca0df3d2320",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0d98fba8-a9c8-4ec4-8e0c-cf406bc1074f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17d3a2f-b079-470d-9459-b7e3c72e2a6b",
        "cursor": {
          "ref": "ee540033-5241-4e12-a8ae-5bf4bf025c81",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "192c87b5-296d-411a-8ec5-dd43c14b0800"
        },
        "item": {
          "id": "f17d3a2f-b079-470d-9459-b7e3c72e2a6b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e64f8835-3724-4a85-af5d-ff367140c469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dc1174-438e-412e-9332-cc304f6cdb5c",
        "cursor": {
          "ref": "c4f383cf-578c-4906-950f-9a602fe29bdb",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "129e9e66-83ef-42ea-8254-bd299c9a934f"
        },
        "item": {
          "id": "02dc1174-438e-412e-9332-cc304f6cdb5c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e41a4733-140b-4c5f-a72a-5b8567e6a849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c176586-a498-4f4e-8365-2d0a20223a5e",
        "cursor": {
          "ref": "0c0769ec-10ea-4577-82cd-5e40d5999415",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7b460aa5-b173-42ca-a0e0-ea6ac5e52fe5"
        },
        "item": {
          "id": "3c176586-a498-4f4e-8365-2d0a20223a5e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6004d085-ab4c-4079-a2cd-591fff896b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d36730-547c-4ce1-b656-a98f1250fa58",
        "cursor": {
          "ref": "8410c8f2-74f9-4bb2-83f9-75037065903f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b6c58b14-0db7-41a4-870d-ea1026f6dbbf"
        },
        "item": {
          "id": "b1d36730-547c-4ce1-b656-a98f1250fa58",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1850d99d-672b-4eba-8717-6951a6bd5656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80338803-d661-42f7-ac9e-186acc48fc07",
        "cursor": {
          "ref": "5add140c-4c1d-4f75-966f-cd788c2e0ab3",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0cf64c7b-7718-4129-ba62-8d233371204b"
        },
        "item": {
          "id": "80338803-d661-42f7-ac9e-186acc48fc07",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c47f0766-22b9-46a5-b9d5-98591a950fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08840c7d-a9cd-4905-bd22-b33e166b73a4",
        "cursor": {
          "ref": "9ca38827-97dc-4cd4-ab30-108572c81bd0",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "796f3225-8470-49de-8e77-c8e883fb95c9"
        },
        "item": {
          "id": "08840c7d-a9cd-4905-bd22-b33e166b73a4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "07a5cd33-b358-49e8-84a4-c7690a4be307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf86837b-ecdf-4869-a8bd-e61bd5a3ebed",
        "cursor": {
          "ref": "4ad4e10b-7486-4d1b-8c2b-c46ea6a3df0d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0c870771-a253-4219-b0a2-511e359e92c7"
        },
        "item": {
          "id": "bf86837b-ecdf-4869-a8bd-e61bd5a3ebed",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1462aada-1aaf-411b-9bcc-41aa6067d30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168cf17a-0d1f-48b1-9c95-a9e06bdff9b4",
        "cursor": {
          "ref": "ab020f8e-e33c-4914-9703-39a6dd7f43f5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "756ab579-16f5-4d47-ae9c-0073c9195262"
        },
        "item": {
          "id": "168cf17a-0d1f-48b1-9c95-a9e06bdff9b4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "015ef6a0-568f-4853-aa88-f8ffc1043b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c459ad3-87e5-42da-b270-3a2bf80dcbe5",
        "cursor": {
          "ref": "47fde9a0-5ed7-4226-8d54-07623da8c0db",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "15bac424-3b92-46fa-bc11-b3ba7c1ef359"
        },
        "item": {
          "id": "7c459ad3-87e5-42da-b270-3a2bf80dcbe5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2c1e6760-76c2-46f6-b11a-b167b3a64431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a605de-0680-4da7-9319-2a81b85903ba",
        "cursor": {
          "ref": "09434da3-1582-4a8d-8b03-82ce88905a15",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7a8fca0e-6323-49b3-b189-49f98e285381"
        },
        "item": {
          "id": "04a605de-0680-4da7-9319-2a81b85903ba",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4952ca29-cf58-4cde-b24e-cd1aaae5474c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6adba25-c150-463b-a2dc-ad41bc71ce6b",
        "cursor": {
          "ref": "787ea70d-5516-4a31-bb14-dd828cc15106",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a84abf0b-f1c5-44e7-b993-df6abd4ed46d"
        },
        "item": {
          "id": "b6adba25-c150-463b-a2dc-ad41bc71ce6b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d6ee5c92-4c73-46a0-8fab-257c81bdcc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297ef23b-1885-4c7b-9c7d-d428f29173e3",
        "cursor": {
          "ref": "60e43a60-54a1-42d6-b5e4-aeceb4d2bdd1",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d06d8fd7-55f4-4278-bd79-d2f7a495248f"
        },
        "item": {
          "id": "297ef23b-1885-4c7b-9c7d-d428f29173e3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5230d423-a71e-4f7d-aa43-f6fd79d0340a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a396af-26a8-4cd8-8c05-0ee2fead89de",
        "cursor": {
          "ref": "1f848520-8873-4637-a360-85b27fe27ff8",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4afde1e4-5e0e-4692-ab95-e108d64801dd"
        },
        "item": {
          "id": "c3a396af-26a8-4cd8-8c05-0ee2fead89de",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "aaaea649-94c8-47d2-a25a-83fef07a7aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69f33c9-f3ce-4ea2-a303-303848bb1616",
        "cursor": {
          "ref": "5996b4a0-f875-49db-a7ed-b911315f01cd",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c3a0de7f-a439-4053-b608-afd9b0efb515"
        },
        "item": {
          "id": "b69f33c9-f3ce-4ea2-a303-303848bb1616",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "45258ec8-c7bd-48ce-a7a9-492554c53984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e235fcd-60a7-4c9b-b695-c81b263eef78",
        "cursor": {
          "ref": "2b2fecb4-3dd1-4949-ada7-f68f357fa45d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "14d6ab9b-cdcb-4f8f-a36f-2ca2025fe611"
        },
        "item": {
          "id": "4e235fcd-60a7-4c9b-b695-c81b263eef78",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5ca0aab1-f776-4584-bd3e-7317ad70079f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c6d000-53d4-413c-a73b-28fbb37e467c",
        "cursor": {
          "ref": "761dacbd-1d49-4170-b3b2-612a6d344cc8",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9efcb937-ef97-49e7-adc3-e8ab51e42b24"
        },
        "item": {
          "id": "e2c6d000-53d4-413c-a73b-28fbb37e467c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4e1c8b52-2016-4844-b993-a46ae2f980fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8e50b9-3295-42c7-9dd1-ccb669798d8d",
        "cursor": {
          "ref": "5039d541-1819-425b-88b5-bd96a67399dc",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e161aae3-cc00-48b4-9f7b-974c14242051"
        },
        "item": {
          "id": "5d8e50b9-3295-42c7-9dd1-ccb669798d8d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cdfda5ea-c622-4c6c-af2e-a5c847dcfac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f031e2-36ac-438f-8afe-6bc1bd6e276d",
        "cursor": {
          "ref": "2032a0e9-67e8-401b-9a24-47ca497b1d85",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4468ecfd-da77-4f27-8f2a-3dba2ed160d6"
        },
        "item": {
          "id": "10f031e2-36ac-438f-8afe-6bc1bd6e276d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "968ad068-1e23-4b97-b0b7-39f124fc2770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1218f752-a788-4a91-a77b-d4b40794c1c2",
        "cursor": {
          "ref": "e4b0afd4-5aed-4b75-bf93-50a5eb59cff5",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "aec23aa5-3bb0-4e34-8970-3bd803960ecb"
        },
        "item": {
          "id": "1218f752-a788-4a91-a77b-d4b40794c1c2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6c80a911-8e4d-4269-aa04-0446f5a45c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d8aef3-bed3-4b8c-af77-4febff453506",
        "cursor": {
          "ref": "c4e875cc-8793-4534-abf0-1c3e6e5bc6be",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fc8b754f-af86-44ec-9d77-5d48b26b8d27"
        },
        "item": {
          "id": "40d8aef3-bed3-4b8c-af77-4febff453506",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6cf92b97-7f60-4177-8643-4fb38c0a45b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98592b98-4c80-43c0-ae0c-354c3908bdf4",
        "cursor": {
          "ref": "686c6e31-68be-4df4-ab00-85d62baf28f3",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "192d8b2a-d561-42df-a58b-d03c121b25ea"
        },
        "item": {
          "id": "98592b98-4c80-43c0-ae0c-354c3908bdf4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cd8adce4-5483-4965-b210-d52196d88ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e0a0ee-8751-4135-8b7b-494e36d20937",
        "cursor": {
          "ref": "5cecc044-0fdb-4e9f-9bf5-e42b13a4a4a6",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "28dad752-3e63-4b9e-b290-4d3c44f237b7"
        },
        "item": {
          "id": "d9e0a0ee-8751-4135-8b7b-494e36d20937",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bf2498d5-efd4-4b3e-8251-34a9ca5e0945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6cf083-b06a-4351-8d98-4fe2e0e3c2cb",
        "cursor": {
          "ref": "da7a1532-155b-4c84-8acd-1c5ed5cefbb2",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e285ba75-12e1-49d6-adf6-b62e2bab2698"
        },
        "item": {
          "id": "9d6cf083-b06a-4351-8d98-4fe2e0e3c2cb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "adf22f99-06dc-412b-ac26-c12066c3c05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938a056d-a17e-4c67-9550-48e85af99cda",
        "cursor": {
          "ref": "fed3df0a-34f5-444b-8a1b-6253cc610e83",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b6e3d41b-671e-4b91-a1f6-f91ff37eb078"
        },
        "item": {
          "id": "938a056d-a17e-4c67-9550-48e85af99cda",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a53c61a5-d614-4f6d-8c22-4351535c8d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27185b08-a73d-4c6c-8424-93a09957e84c",
        "cursor": {
          "ref": "e03da203-a23d-4dbd-9cfd-44934e314517",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b0d4256c-2179-4ed9-95f1-27afee6d7c98"
        },
        "item": {
          "id": "27185b08-a73d-4c6c-8424-93a09957e84c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f371b992-4874-4052-ad90-b9d61c727197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22108b90-0c4f-4de6-aa82-9f5b3e20cb0d",
        "cursor": {
          "ref": "7f42cd14-1893-4753-a139-7780e9c7ee9a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4b07e6cb-7136-4c54-8ab1-e9bfd272d1e6"
        },
        "item": {
          "id": "22108b90-0c4f-4de6-aa82-9f5b3e20cb0d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5cfe3e0a-7eb8-492c-8241-cf888e754a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3573e2-0e02-49b3-94f8-6a57790c4341",
        "cursor": {
          "ref": "d83d4e96-9f6b-4593-ad3b-02ae4d1acd01",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "81c9bac7-2cc9-492f-acaf-0b8327c404a3"
        },
        "item": {
          "id": "8a3573e2-0e02-49b3-94f8-6a57790c4341",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5c4ae871-6159-4d66-aba1-5390744dd0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce165cc-db00-469f-a0b7-8aaea072c714",
        "cursor": {
          "ref": "356545f1-b4f6-4aa5-bf07-cc76b67eaa8e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "531b96f7-f934-4e75-8909-30dfc5f35969"
        },
        "item": {
          "id": "8ce165cc-db00-469f-a0b7-8aaea072c714",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "abf8380c-ff55-4de1-8288-e6e0f1770cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93e1c5d-2808-4bb1-b9e3-ecdf1295ae16",
        "cursor": {
          "ref": "de45ddc2-5562-47f7-a6e6-e68f20cdc134",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0901f230-287c-42eb-ad1b-75655e58708c"
        },
        "item": {
          "id": "f93e1c5d-2808-4bb1-b9e3-ecdf1295ae16",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d5ed7233-4c92-439a-be8d-aa0953dc6395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accfb619-832f-4f85-9375-2e1c7c1f620e",
        "cursor": {
          "ref": "3c07b9ee-d6a5-4aa9-aae3-c6120e61db8f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "19a00b54-c371-4af4-820e-b03502be92f9"
        },
        "item": {
          "id": "accfb619-832f-4f85-9375-2e1c7c1f620e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bc1af3d0-06f1-4fd6-8a3b-c466c303d28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fdcaef-a639-4e40-9cf1-8bdf7b366f31",
        "cursor": {
          "ref": "b12aeb9d-48c9-4bd4-bc6f-1c4a490e5e77",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6d469c27-99b9-4a84-8c0e-b33cc8642a12"
        },
        "item": {
          "id": "e2fdcaef-a639-4e40-9cf1-8bdf7b366f31",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "96b951f1-5b4c-405a-92ad-dec886ea5042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3f5dab-d0e0-496b-9469-024208ebf248",
        "cursor": {
          "ref": "69188311-e661-469f-8721-6ca7d232cb1b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4e16dcd6-4cc0-4975-891e-d96059bcec62"
        },
        "item": {
          "id": "6a3f5dab-d0e0-496b-9469-024208ebf248",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5a676a3f-a37b-4b85-8849-beb2c98928b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d418434d-e988-433c-8ea4-8caf9293f340",
        "cursor": {
          "ref": "a013915b-8b3d-4b95-9de3-d807c74acb0d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "08abb89b-e0fe-43d1-98f4-217d1ec71adf"
        },
        "item": {
          "id": "d418434d-e988-433c-8ea4-8caf9293f340",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "73afd093-054a-4b07-839b-47848344e31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b813bc1-d59e-4852-9fa0-9ba64692956e",
        "cursor": {
          "ref": "a2c6ce22-b1fa-4014-b719-b23cd0ba44e9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7e43a798-1c71-464b-bd61-d24a8c707642"
        },
        "item": {
          "id": "5b813bc1-d59e-4852-9fa0-9ba64692956e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "df181e24-71e4-4206-89cc-f6a9f12a4281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a11a5d-104c-4815-9f3d-ad75c5da9757",
        "cursor": {
          "ref": "4046b822-961b-4c33-ba65-61ea6cf136de",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bffc170e-996c-4f82-84a8-e47a8acd804a"
        },
        "item": {
          "id": "00a11a5d-104c-4815-9f3d-ad75c5da9757",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8fe9c50f-2bc5-4da2-b604-1f8207ff9532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81bfc9d-ddab-4b0b-9624-2bab5b16b4b6",
        "cursor": {
          "ref": "111d028b-55b3-472b-90ae-7262c722c0d4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dc0abef0-33a3-49e5-8810-2436d25d3488"
        },
        "item": {
          "id": "f81bfc9d-ddab-4b0b-9624-2bab5b16b4b6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "99400b6f-d3a4-49c7-8a78-e5bd138769a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878501e0-4a6d-421b-a757-d2f537494300",
        "cursor": {
          "ref": "13479065-2a01-4ca6-900a-69f179ed14aa",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e363050f-44a7-4440-8883-75cbbfb163d2"
        },
        "item": {
          "id": "878501e0-4a6d-421b-a757-d2f537494300",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9de60183-1382-44e2-a928-d28d166221da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "77ec0b14-5c3c-43d3-816a-d3e918624798",
        "cursor": {
          "ref": "5c7c5797-1f8c-47a9-b4e7-363dbc2ff507",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f1559c70-282d-4c5a-9011-cf2975756d2d"
        },
        "item": {
          "id": "77ec0b14-5c3c-43d3-816a-d3e918624798",
          "name": "credentials_issue"
        },
        "response": {
          "id": "14dd402a-d0d4-4bec-a79a-2aa1f6e14455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "bf6c1480-5ef2-4750-896b-70f6730ff2c8",
        "cursor": {
          "ref": "62b69127-1290-41af-9143-077175674405",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cba1b89c-b656-48a8-992a-fc9ad337f57f"
        },
        "item": {
          "id": "bf6c1480-5ef2-4750-896b-70f6730ff2c8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "14392a92-15e9-4c4d-8acb-321334457144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "627036bd-690f-4ea1-8929-924041160664",
        "cursor": {
          "ref": "cad21da8-e8bb-41c6-a90f-9d22b6173c22",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6c042ad0-aa90-4c63-a72a-f6ec4c51e842"
        },
        "item": {
          "id": "627036bd-690f-4ea1-8929-924041160664",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "47b78ac9-ba08-4c65-83ff-301523614c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "45887044-5a0c-44d6-861e-bf003f01f70c",
        "cursor": {
          "ref": "fe93642b-1b73-45e8-83d4-bdb0cae5f5fb",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e7ff1cea-a424-466f-b366-3a07de17e0e2"
        },
        "item": {
          "id": "45887044-5a0c-44d6-861e-bf003f01f70c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ee4d48ba-5904-4977-b830-a6eda183e411",
          "status": "Created",
          "code": 201,
          "responseTime": 11805,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f4eb01-c182-43ac-a785-26f17540c8c7",
        "cursor": {
          "ref": "9fc64d49-66fc-420b-8547-b7b6bc3fe214",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "29743ebf-cad5-4453-994b-b551d7e3894c"
        },
        "item": {
          "id": "41f4eb01-c182-43ac-a785-26f17540c8c7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "27c4220b-4729-456a-831c-16bb9524cd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8494deaa-3104-4091-afd7-6256681fa952",
        "cursor": {
          "ref": "eda2f06d-7c89-49d3-8870-364940bf6196",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bf8bb693-4fc1-4fc1-9293-3c4261ca5aa0"
        },
        "item": {
          "id": "8494deaa-3104-4091-afd7-6256681fa952",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "359922c7-8f76-4ed7-bcf3-390a4b454f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b21c3191-be76-4edc-bbee-36a6f5535545",
        "cursor": {
          "ref": "3b512824-d495-4aec-b3a0-fa47f4fb8cfc",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d19f9564-ea9c-4b2a-b7c9-b806b85fa293"
        },
        "item": {
          "id": "b21c3191-be76-4edc-bbee-36a6f5535545",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ed6d755c-d9cd-4691-bcd2-3e47be5798b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44664bf5-78f8-434c-a444-7cf4d1fcf1a2",
        "cursor": {
          "ref": "5b0876c8-fc2c-4adc-a0b0-5871d7ecbbd2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "34e2edc2-f970-4fcc-89c6-5015c48a23ce"
        },
        "item": {
          "id": "44664bf5-78f8-434c-a444-7cf4d1fcf1a2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b301bb12-3d51-41cf-a751-07c3b753150c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c0e24a-51f3-43ce-b088-3e23eadc0a13",
        "cursor": {
          "ref": "ee0db29d-6b60-4a1e-a07a-ceb34f0277c1",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a9d11e26-9d3b-49ff-879f-536aaf73bbbc"
        },
        "item": {
          "id": "54c0e24a-51f3-43ce-b088-3e23eadc0a13",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d2b0e286-cb6a-4f21-a06b-e799d17a9be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58105d64-ce79-46b7-83e5-a673f85c8410",
        "cursor": {
          "ref": "7db42e67-952e-47fd-a5bb-ad29e4fca693",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "556ca749-0405-457d-9ba2-cbc0246c4ca2"
        },
        "item": {
          "id": "58105d64-ce79-46b7-83e5-a673f85c8410",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "288a9069-fe99-4797-91b4-068a456d62b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4174c1c2-f71a-4874-ab1f-e4d4fe077154",
        "cursor": {
          "ref": "d162d5a1-029d-436e-8536-91f9d21ccf29",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "06de8df5-1a50-4348-abdf-78a01e19009a"
        },
        "item": {
          "id": "4174c1c2-f71a-4874-ab1f-e4d4fe077154",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7b571fb3-6822-469e-b402-d985d8d5cf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f40049c-9c61-4d96-844c-5bc0c9ab654d",
        "cursor": {
          "ref": "582b9d98-296c-45f8-91c0-383678635142",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "21fe5268-6c22-459d-9b6e-f73efb86629a"
        },
        "item": {
          "id": "4f40049c-9c61-4d96-844c-5bc0c9ab654d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7a3eee8c-6cb7-4c4c-8fca-6ea3b879c2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3c1f9b-0187-452a-8dca-6637d108ff18",
        "cursor": {
          "ref": "f404c1e3-111a-46aa-950e-609d2be96cdc",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8a983d35-7831-4b17-8542-b02e58ca904f"
        },
        "item": {
          "id": "ed3c1f9b-0187-452a-8dca-6637d108ff18",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0db05cfc-28b0-429e-921e-f22a229ed92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a6fe6d-f148-4397-9d41-cc3a1968861c",
        "cursor": {
          "ref": "99b47878-6b93-437e-b1b7-f3c735a46fa5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b58c4fd0-b29a-4115-b037-84fc207a3a4a"
        },
        "item": {
          "id": "89a6fe6d-f148-4397-9d41-cc3a1968861c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "99c19a7f-0c0d-44c9-afb5-cb6648045a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dc061f-1987-40ef-a73c-56dce1a38899",
        "cursor": {
          "ref": "f50d657c-c179-4a18-a64c-e8c962c9655d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ba309407-2ebb-48bf-962d-03e3177661f2"
        },
        "item": {
          "id": "36dc061f-1987-40ef-a73c-56dce1a38899",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "28446e53-d913-4e16-afdc-b6455eed53d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23fc094-e4d4-468a-aebf-063c39259643",
        "cursor": {
          "ref": "aab189d0-fb88-46b1-bcc7-cc459cb2cef5",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "56604474-1694-4669-a6d9-707c05397b9a"
        },
        "item": {
          "id": "f23fc094-e4d4-468a-aebf-063c39259643",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "063b1205-6582-4a6f-aa1f-ba794f2a1fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e990ff62-964b-4819-b7c7-18be3b8d525d",
        "cursor": {
          "ref": "a87d9c34-0967-40e0-96af-585650e49138",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c7694de8-118b-46e2-86bb-2a2b01889638"
        },
        "item": {
          "id": "e990ff62-964b-4819-b7c7-18be3b8d525d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b4586051-463e-4a2b-8cd9-4cd358efa5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782776c4-09b7-4dd3-af66-e6e317d17db3",
        "cursor": {
          "ref": "6f410127-4bc1-4e6d-bb3c-399aa733263e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "792c6cbf-5261-4c29-803f-16ce5447619e"
        },
        "item": {
          "id": "782776c4-09b7-4dd3-af66-e6e317d17db3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ee9d30b1-cea0-4cb7-95b8-cd4cea06cb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e461881-550c-4d59-9925-4c7b468eed4a",
        "cursor": {
          "ref": "5edd8e91-6f31-4f79-90c1-7e43de279cb1",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b28fd56a-ffd1-450c-9916-28df1cc1d7ca"
        },
        "item": {
          "id": "9e461881-550c-4d59-9925-4c7b468eed4a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0d1b1765-22b7-4481-83ff-545600bacd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b6a28a-72fb-4194-98dd-7f0b040a128c",
        "cursor": {
          "ref": "cb2b7545-2837-4068-b49e-531f568af54e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c2e32a41-6f9a-446b-8f40-370562a9b7ce"
        },
        "item": {
          "id": "d0b6a28a-72fb-4194-98dd-7f0b040a128c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7784dbee-2c70-49df-9fda-ffa5140815a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9486481d-672b-444c-9b4d-227edbe35261",
        "cursor": {
          "ref": "d0940ea4-881b-4e3d-838b-8eeb856f3353",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5096cd18-2446-47f8-8a22-2aa0803e238f"
        },
        "item": {
          "id": "9486481d-672b-444c-9b4d-227edbe35261",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "75e53c00-4278-4d99-a81d-c09215d0e981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d754632-0d93-4391-9987-f3819d81f214",
        "cursor": {
          "ref": "67c4eda2-c533-4784-a985-ca8880231ce3",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dafbe1ea-1ca7-49a3-8fcc-fe8bb6e76625"
        },
        "item": {
          "id": "2d754632-0d93-4391-9987-f3819d81f214",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4586be6b-0cf2-4745-9ade-4fa5453fc599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6beba941-a461-429b-bd3a-7e3eff9aee2f",
        "cursor": {
          "ref": "59bce37a-6218-438e-9d22-8e0c693fb8f5",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9b5638ae-fc0d-4178-99f1-be734e37f550"
        },
        "item": {
          "id": "6beba941-a461-429b-bd3a-7e3eff9aee2f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3c124fd1-dca1-4822-b8f0-8aceafe946ea",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 757,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "58e74def-13c2-4e01-b427-324c483bbc67",
        "cursor": {
          "ref": "e8283fb0-574b-4c7a-90c1-1dd50536ea35",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a401cd55-4281-4e65-bfc9-ef3188ba887d"
        },
        "item": {
          "id": "58e74def-13c2-4e01-b427-324c483bbc67",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ce63ec33-65ee-4d6f-bbf5-c43ee2acc0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8503639f-fcdc-4b6e-a75d-9281bf7b32fe",
        "cursor": {
          "ref": "12939a48-c227-4f42-96d3-764ef4d6e922",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fb8bc833-1d37-4938-a91e-08bb98af7ea8"
        },
        "item": {
          "id": "8503639f-fcdc-4b6e-a75d-9281bf7b32fe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "693cab6f-9e13-41c5-a306-b6532f2d1bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e09762-598f-4a24-a982-3324151d2ea4",
        "cursor": {
          "ref": "6f256c94-8c64-41c6-b9fb-0e38424d3fc0",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "789e0119-9cc7-4ce8-8d7b-8d8dbeb0a947"
        },
        "item": {
          "id": "63e09762-598f-4a24-a982-3324151d2ea4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f75a4b95-c56b-4dc9-a9a2-2df73d7dacf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a243d2c-7b9e-4f7c-9eec-585a43a7fcbc",
        "cursor": {
          "ref": "39a51401-e0f7-4df6-b249-6b1f4650a0bb",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e583c138-143f-435e-855d-0da710732ff7"
        },
        "item": {
          "id": "3a243d2c-7b9e-4f7c-9eec-585a43a7fcbc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "52fc66b7-1b9d-48dc-a798-a68cf517973a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e08414-55e2-4389-bfd8-9080741daa39",
        "cursor": {
          "ref": "ed4612a1-5ac5-4c69-bf6a-2a86787fe784",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "32c50c4b-d16b-4d3c-beb5-8810ad975ae2"
        },
        "item": {
          "id": "37e08414-55e2-4389-bfd8-9080741daa39",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "824643c3-758e-48bc-a975-59a5194da891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c26dce4-5dd8-4ecb-a9e8-52294d11e8e9",
        "cursor": {
          "ref": "b34aee16-1032-41e1-80b4-912fc8ab2ef9",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "216f0d9b-e38e-4f56-8425-5169a05c8c55"
        },
        "item": {
          "id": "6c26dce4-5dd8-4ecb-a9e8-52294d11e8e9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f5ffcb3c-5cff-4c9c-8e2f-b4fe50e5e61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795edc70-17f8-4390-8709-ea76eaa0e240",
        "cursor": {
          "ref": "30cab465-d872-4588-916f-4177129220e2",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8df3a1e3-703c-4732-8045-9af03e2afa3b"
        },
        "item": {
          "id": "795edc70-17f8-4390-8709-ea76eaa0e240",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "013a423f-1179-42f5-92b5-427d2cc3e72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4ce435-1782-4dd4-af9b-86325562cd13",
        "cursor": {
          "ref": "668c02f5-f011-466f-b6e0-399f7695a1af",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cee67862-eb99-4b86-83bc-3440cee51f37"
        },
        "item": {
          "id": "2b4ce435-1782-4dd4-af9b-86325562cd13",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "92699eb1-c231-4a00-9c82-1d9d00dd6e47",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "6eb81d2e-6310-4c13-bd78-32db4c98a507",
        "cursor": {
          "ref": "9797d7c7-9281-4747-9cc8-50ae29b24c6d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "163dbfee-3da3-411a-856f-1a7e28927198"
        },
        "item": {
          "id": "6eb81d2e-6310-4c13-bd78-32db4c98a507",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0406c13e-c052-4f15-95a4-0924b502ccae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb33506-2a5d-41b5-a5ab-f5dd3015ce73",
        "cursor": {
          "ref": "91f85c01-caca-45f8-a9d2-e3cf0ba2fe5e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bd9d64d9-bffc-4fa6-9ab2-7759a79ecd25"
        },
        "item": {
          "id": "deb33506-2a5d-41b5-a5ab-f5dd3015ce73",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7c50d9ad-9fec-4a57-bfd1-705660043271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7327ee-a1ed-49d0-b181-7d535fb350ce",
        "cursor": {
          "ref": "a7f6272f-0c28-4fd3-9f25-3d748d859a77",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "54887cc7-2387-4b23-adc4-89b9a63473ee"
        },
        "item": {
          "id": "bb7327ee-a1ed-49d0-b181-7d535fb350ce",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a9f3dfd6-4752-4c98-8e63-23e51136f3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fd0960-25a9-45ab-8f97-825c5299b4f6",
        "cursor": {
          "ref": "49abc2c8-c412-4306-9d56-77732b9b062f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "afe521de-60f3-49fb-9eba-19ef84e487ab"
        },
        "item": {
          "id": "d5fd0960-25a9-45ab-8f97-825c5299b4f6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3b323e46-a11c-423a-844c-c049f5daaf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fe39fe-f892-4d3b-b2a4-ce4b51486efb",
        "cursor": {
          "ref": "eecc20a3-488a-4bd5-aec8-7032b4c442ca",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4ad473fd-2d48-4f1a-836f-f37cf858e7c2"
        },
        "item": {
          "id": "77fe39fe-f892-4d3b-b2a4-ce4b51486efb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9b43bac2-8b15-496a-9a17-7603255c75d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b4d4b7-bcb9-4d8c-a1a9-746741aba578",
        "cursor": {
          "ref": "39e73354-e572-4033-b3cc-01e128926fbc",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6f52e397-ddb5-4644-9722-dbd4c17e4fe1"
        },
        "item": {
          "id": "f3b4d4b7-bcb9-4d8c-a1a9-746741aba578",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "527f0752-b8e3-4756-87c1-4a431c59489e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c440633-66a3-4054-ba33-5e986120f5eb",
        "cursor": {
          "ref": "0e6de35c-3456-4938-a525-df99a6a4810c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3c75b81e-cceb-44cb-897a-26bbce26a244"
        },
        "item": {
          "id": "3c440633-66a3-4054-ba33-5e986120f5eb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5b91a245-1b2e-4336-abe1-5f9be393e4b4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 56,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "bef23732-b532-485e-a07e-5f8e86b019c5",
        "cursor": {
          "ref": "9cb51341-6f61-4386-9b27-07deb039788c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "036a1cdf-831f-42d2-981d-0544ca1f73e3"
        },
        "item": {
          "id": "bef23732-b532-485e-a07e-5f8e86b019c5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7f7a44ee-6665-4c64-8ca2-45da4873a9b5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "3ce538d6-4b08-4c12-9320-84d996c6088f",
        "cursor": {
          "ref": "6c05c06c-05c7-4a79-ad7c-2ea7a30025ca",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "728b38d7-daf7-4a2c-a059-5b8a4b98b5d4"
        },
        "item": {
          "id": "3ce538d6-4b08-4c12-9320-84d996c6088f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d238a752-39bd-4c2d-8079-4609c9567efc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "0bc4d287-3ba0-4223-9fae-b5ace7b913cb",
        "cursor": {
          "ref": "17f4c656-38ba-4b29-8c03-a326774ccc5f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5cfec19d-3618-4128-87d5-e725dabcfa3f"
        },
        "item": {
          "id": "0bc4d287-3ba0-4223-9fae-b5ace7b913cb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "18c93efc-09f5-4b15-bec5-215cb0d03c31",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "f7604767-eb5c-486c-8258-8d792e77589b",
        "cursor": {
          "ref": "d8255025-d5ad-40a6-af9d-375a7f921131",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "35d49397-c422-4378-8b4f-e31cdcf4236b"
        },
        "item": {
          "id": "f7604767-eb5c-486c-8258-8d792e77589b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "685b9f16-b9d6-4728-a0f1-881710d6ecb8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "635132c6-3536-48a0-a017-62b14d8552ca",
        "cursor": {
          "ref": "ac0f6ebb-fe41-48b6-aba9-f74d9a6580b9",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "034676af-c51f-4b58-a1c1-1ec98706b676"
        },
        "item": {
          "id": "635132c6-3536-48a0-a017-62b14d8552ca",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3e89e288-1383-4b14-b25b-e695552416b4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "e49cad14-1561-4da3-a665-cda98d32fe6a",
        "cursor": {
          "ref": "e35aa984-7395-4123-8485-012000c5b360",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e8bfa2f0-f138-47a5-8356-e5b2f1da42bc"
        },
        "item": {
          "id": "e49cad14-1561-4da3-a665-cda98d32fe6a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2dc161f7-b7f9-41cc-b962-ddd1386902ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5033108-f663-4c5e-825f-aff3a5b3fc97",
        "cursor": {
          "ref": "ba2a3119-97a9-4082-b9ca-2ab23b73ccdf",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2bdf7184-2b7a-48e1-8b33-2fca89011acf"
        },
        "item": {
          "id": "e5033108-f663-4c5e-825f-aff3a5b3fc97",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d81463ab-b1dc-4dcb-bb74-7c08905774c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6ab203-81f0-4d9a-805d-0d9ddbe531af",
        "cursor": {
          "ref": "90fb6eaf-f847-41d6-bd06-cbbf84673f0f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "df032c22-4a31-405c-8381-9689f584b53f"
        },
        "item": {
          "id": "aa6ab203-81f0-4d9a-805d-0d9ddbe531af",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5817d42e-221e-448e-8237-252c6f733e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5a2464-b510-404d-a2a7-01bc31795495",
        "cursor": {
          "ref": "a11be778-f038-4b4c-8019-0466be999bac",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "66783ac0-8174-45c8-8a89-0f35eff2537f"
        },
        "item": {
          "id": "ef5a2464-b510-404d-a2a7-01bc31795495",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "898a3f13-861c-4916-bc22-ad39dd5e1198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9527e4f-bf53-4fa4-9453-d5ac9477f394",
        "cursor": {
          "ref": "c2adbfea-ea28-453d-bb10-609f713579b4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f38e5860-495f-4736-a99f-513e01f5ff3e"
        },
        "item": {
          "id": "d9527e4f-bf53-4fa4-9453-d5ac9477f394",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "068faab4-e562-46c6-aa67-fb30a8e80de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4081460-f446-4b92-a2d3-06f84a9b1eda",
        "cursor": {
          "ref": "03d5cbc6-1ffd-454e-a326-42a0a2c08962",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5e6eed3c-85ce-4dfa-b34c-bd5089116847"
        },
        "item": {
          "id": "d4081460-f446-4b92-a2d3-06f84a9b1eda",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "48cb9b7c-defe-4aaa-b094-11ccb095dd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c863c842-3333-4434-aba4-1d54905cdf05",
        "cursor": {
          "ref": "80edd100-c8bb-450f-b669-0afd035d84fe",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fc69b476-525c-425a-aeae-037e51b9b69a"
        },
        "item": {
          "id": "c863c842-3333-4434-aba4-1d54905cdf05",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "16b61c2e-8600-4755-9cbf-e6a4e31e08f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270b82f7-b3e5-4f7c-bc5e-70222eff551f",
        "cursor": {
          "ref": "99eb0369-ee8d-433f-9837-8791df1dbe4b",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7762f193-8242-4071-842c-62d0ab7db5b8"
        },
        "item": {
          "id": "270b82f7-b3e5-4f7c-bc5e-70222eff551f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "feadd6b6-db75-45c0-9fef-2916e1b3d462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8539bed3-de6b-4a60-b3c2-4294381a3631",
        "cursor": {
          "ref": "e1350886-3b60-4c55-846a-51394bc826d4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dd2ee7db-0826-4841-81d4-843fe2004ee8"
        },
        "item": {
          "id": "8539bed3-de6b-4a60-b3c2-4294381a3631",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3b9c9b4e-7c00-4615-99e1-c74db6504f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7570077-58b3-434e-b73c-35ff4bcdef63",
        "cursor": {
          "ref": "8eeacd21-31fc-4094-9729-c887db883a1a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "56807522-9c4b-4693-ad22-0c29a97a0af0"
        },
        "item": {
          "id": "f7570077-58b3-434e-b73c-35ff4bcdef63",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ee35230b-5aa7-4696-a56e-d837a0207a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2567681a-4a9e-4e49-acff-6f56d16b7acc",
        "cursor": {
          "ref": "a18de574-2ec7-4e70-b25e-53183e2b96cb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f2deeb53-edd3-4c66-953f-7b61e303cf7b"
        },
        "item": {
          "id": "2567681a-4a9e-4e49-acff-6f56d16b7acc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "db6c9486-d8d7-4d56-8aca-9c0c74a75073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87e7ba8-f10c-4f71-ad38-2ec8c03842c6",
        "cursor": {
          "ref": "57e00825-1d02-437c-8925-692d6da25125",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1e8ed90a-2bc1-4947-b71a-81ecb76eaf20"
        },
        "item": {
          "id": "f87e7ba8-f10c-4f71-ad38-2ec8c03842c6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b5b5bfcc-bed1-48f5-81b3-56abd5ae5e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c2b5ea-cda8-4ec6-9342-0ad96c479950",
        "cursor": {
          "ref": "7852350c-b00b-4710-bb53-93c2b8ea2bef",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bdd312c7-96d2-4bed-a4db-481857aca6be"
        },
        "item": {
          "id": "63c2b5ea-cda8-4ec6-9342-0ad96c479950",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c8aa5d83-deaa-4906-ab79-94e68687d21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46ce063-e65f-4fd8-966e-374d99ef17e5",
        "cursor": {
          "ref": "a5b2c4fe-d12d-48d7-b8cb-9ccb416e8172",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b06092fb-8040-4816-86df-deeaa782cab0"
        },
        "item": {
          "id": "d46ce063-e65f-4fd8-966e-374d99ef17e5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "709ca705-a427-49bf-a190-44c617377de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5478f134-f0b6-4345-9836-eb5739ad0ba8",
        "cursor": {
          "ref": "0c420615-dd12-4a8a-808f-2082381e80a4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "50569fed-c4ef-4613-884b-2a674586b429"
        },
        "item": {
          "id": "5478f134-f0b6-4345-9836-eb5739ad0ba8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0971d933-dcc7-4c1d-8c68-95cc3a5d6226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e84d0f-8569-401c-87b7-ade3a8b3c5cf",
        "cursor": {
          "ref": "838bdc29-0b0e-4e33-a2d2-61874f58bae6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fe0a450d-faa7-44d0-8188-87667c3ffc85"
        },
        "item": {
          "id": "c4e84d0f-8569-401c-87b7-ade3a8b3c5cf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "65de4f2e-57ee-4363-ac50-a8a6e2c4c089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9549136e-7441-49ea-88c9-2d415966c23f",
        "cursor": {
          "ref": "a5534530-6d23-43de-9bae-e9033e6db529",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "878dd3ff-939d-4129-a1f8-34b8efd605ef"
        },
        "item": {
          "id": "9549136e-7441-49ea-88c9-2d415966c23f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f442b346-3ebd-426d-85c5-0d626b31ddab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212afbb3-f37f-4efc-8b73-35a253c04a8c",
        "cursor": {
          "ref": "be4bb4ad-0fab-4acd-8439-5822cfc9269d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5afe5fcd-3d6f-4af0-a870-27974e962ee5"
        },
        "item": {
          "id": "212afbb3-f37f-4efc-8b73-35a253c04a8c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3742beae-1752-4fa0-91a4-a4ab69d7e974",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "155319aa-30f2-4594-80dd-a7cd9f198a8c",
        "cursor": {
          "ref": "d1a4b58a-5e3b-4a0b-aae7-1ed43a826e4d",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "306f03ae-0cc1-48f5-ba16-1c62b0827fdc"
        },
        "item": {
          "id": "155319aa-30f2-4594-80dd-a7cd9f198a8c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "356a467b-988f-42cb-b873-62b2ce96bd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2615c50f-f865-47ec-a291-b67b6f257017",
        "cursor": {
          "ref": "0d123200-8465-42d5-b0cd-a71abc3728c0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "51eabb6d-8046-43b7-9baa-99c026b06aa0"
        },
        "item": {
          "id": "2615c50f-f865-47ec-a291-b67b6f257017",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "39a4ec80-a510-4a47-a6e0-308579ebc30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b17ac9-2573-43dd-ac20-746d74b6f37a",
        "cursor": {
          "ref": "08e6b736-39be-4ccb-bb81-8ad96c5b168f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c3f5dbbe-00f3-41c8-a9e9-e5b85f956cb1"
        },
        "item": {
          "id": "27b17ac9-2573-43dd-ac20-746d74b6f37a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "af0e15bf-c7e8-4ca2-9249-4a6600102c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97aad14-e3dd-493f-b45e-a51b26be5077",
        "cursor": {
          "ref": "6fc05acc-ac9e-4fdb-b2fb-a9808e51621e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d27f6d27-e6f4-458e-9ab3-3bc4c0ad9fdb"
        },
        "item": {
          "id": "f97aad14-e3dd-493f-b45e-a51b26be5077",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b2ae4bf1-cb59-451c-a66b-2b42e68a4d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db29ceac-78f9-46cf-9703-9d373e2c6a81",
        "cursor": {
          "ref": "f177199a-4d2c-4050-8b43-49007cb933e2",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fa19bb67-027f-4163-9789-8f89b09ecbc7"
        },
        "item": {
          "id": "db29ceac-78f9-46cf-9703-9d373e2c6a81",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b1d88055-d539-4556-bb66-1d233c5f9cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d9bc28-696d-491a-9554-f0d2687de976",
        "cursor": {
          "ref": "9dcdc319-6900-40c6-85a4-6bd779277390",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "886e5fc3-1041-4262-8017-92beebf54ea4"
        },
        "item": {
          "id": "27d9bc28-696d-491a-9554-f0d2687de976",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "11372f9b-892c-43b1-894a-e7b3ac1727d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cff20e-f29c-471a-94b8-fddd36504a4d",
        "cursor": {
          "ref": "6b4cf416-ce2a-40ce-86c4-879e4b9a7e14",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "de082142-9479-404a-ac0f-2de65d747a57"
        },
        "item": {
          "id": "93cff20e-f29c-471a-94b8-fddd36504a4d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "99e9e3d8-9c23-4003-898f-74122bfd4a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98228f8a-2f1f-4b06-a8d1-9637a87a0f03",
        "cursor": {
          "ref": "b4b036dd-9ea2-4088-82fe-03eb174c7aeb",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cb0c10c8-916b-4486-93af-1a016ebf934e"
        },
        "item": {
          "id": "98228f8a-2f1f-4b06-a8d1-9637a87a0f03",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "12e4d98e-7a2e-4a03-81a9-65fd4384ebf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dcdda2-5ecc-4224-84e5-b1b7479a6df8",
        "cursor": {
          "ref": "01ae6316-4653-4924-a577-de6b88cacdc3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f8f47bfa-b091-4d44-baa6-5c1f39d29296"
        },
        "item": {
          "id": "f3dcdda2-5ecc-4224-84e5-b1b7479a6df8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1367954e-bb0a-487c-9308-ddbd9b3b6c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0dd933-7016-4bdb-bdc4-0bd4fe167b2e",
        "cursor": {
          "ref": "d1b6af35-8b9d-450a-8f28-237e37a564f6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5e052796-ae95-46ae-9212-bce25a5817a2"
        },
        "item": {
          "id": "cc0dd933-7016-4bdb-bdc4-0bd4fe167b2e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7627918e-15f4-47f3-a4c4-00570edac0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d97003b-7936-4de0-a345-ff9241453e17",
        "cursor": {
          "ref": "d033bef5-159c-47d0-9155-6f8ee89f6e31",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "76d1a5aa-aa63-4c72-859e-5ec5608f9f8c"
        },
        "item": {
          "id": "2d97003b-7936-4de0-a345-ff9241453e17",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bf9cdaec-4e52-4f8a-ae43-04d2934d03da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790f1874-47b4-4ef4-a564-5df07eae55a2",
        "cursor": {
          "ref": "5f8a7f9c-266c-4d52-a89f-1c1b11ff1d49",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8d8601cf-7520-450a-ba88-20a7d40029af"
        },
        "item": {
          "id": "790f1874-47b4-4ef4-a564-5df07eae55a2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "df72033a-3fd7-47e8-847e-544006e1b920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bcae19-9b75-436e-a75a-5db8fd5ac63a",
        "cursor": {
          "ref": "b7daf6bd-1353-4c48-b1e5-eb72c7e6fc74",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ba60da3d-ae06-430a-8790-14faddfd2a7c"
        },
        "item": {
          "id": "50bcae19-9b75-436e-a75a-5db8fd5ac63a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f47df0c0-386e-46fe-b378-70fce0805bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24e00d5-f31f-40e7-ad49-0d64d8c1cc55",
        "cursor": {
          "ref": "9a59dbf7-08ca-4dc7-9176-2b245b317930",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7acd4392-f588-4505-a9f0-6461eb551f34"
        },
        "item": {
          "id": "e24e00d5-f31f-40e7-ad49-0d64d8c1cc55",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "371ce12b-ee08-4e76-93d3-0fc59567bc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abf8b9f-5726-4704-8e3a-74b9aef8a3a5",
        "cursor": {
          "ref": "8f149a7a-df0e-4459-ba35-8e9a0b067229",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ac43f9c2-6024-4dbd-a145-fc7652cd6d71"
        },
        "item": {
          "id": "6abf8b9f-5726-4704-8e3a-74b9aef8a3a5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c1bc47be-3ed9-4ad8-bba4-9ca1a878080e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49d0e4d-72d7-41b6-a344-a89c86a0b7e4",
        "cursor": {
          "ref": "27e61163-f6a4-47c1-9bd7-2fcffcf5d773",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9faf06a9-0d6e-4b06-9ce1-c4898ad2e04b"
        },
        "item": {
          "id": "f49d0e4d-72d7-41b6-a344-a89c86a0b7e4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f147bee0-592a-4d5c-8e52-73fcd3c016ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd43f738-ad01-4a4b-ad8a-990ab7d14ddf",
        "cursor": {
          "ref": "86415283-a1c5-491f-8f90-bd83ee2f3e5a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a4abd5c1-aa8e-4a9a-8b75-e8396c568834"
        },
        "item": {
          "id": "cd43f738-ad01-4a4b-ad8a-990ab7d14ddf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2f8d2732-9776-466a-bed8-627bc662499b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abce45a1-079d-46a7-a09d-217376a9fe9b",
        "cursor": {
          "ref": "b1739a92-8fb1-42b1-b0d7-f2d533200d28",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3d471a3e-7111-4b5d-8459-082f92f95da7"
        },
        "item": {
          "id": "abce45a1-079d-46a7-a09d-217376a9fe9b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "996c881c-1503-4621-b34b-4c7e69206293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef24655f-ed6e-4cb5-a7ba-bb9e40addbef",
        "cursor": {
          "ref": "eef8781a-55ed-4f6b-9f50-07aea5df0789",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0e6f18ec-8e7b-4b85-a5bf-d23ca442adb3"
        },
        "item": {
          "id": "ef24655f-ed6e-4cb5-a7ba-bb9e40addbef",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "476e9223-7c98-4eae-8985-359149f3b35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e9b4f1-5f82-481d-9a4e-ca154826d79d",
        "cursor": {
          "ref": "4f3fee52-d27b-480e-a539-b8a254a5511c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "95bca6ad-4bcd-421f-9f18-e13ca5e8dcc8"
        },
        "item": {
          "id": "c3e9b4f1-5f82-481d-9a4e-ca154826d79d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1a12eb34-81d3-4b45-ae9d-67189dcfa4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e7b765-6900-45e6-8e22-286d4d96bab1",
        "cursor": {
          "ref": "37b7a2a6-e781-4f6d-9055-e2b7bda278ec",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a793390a-5777-4c54-afda-1e052fff36fd"
        },
        "item": {
          "id": "04e7b765-6900-45e6-8e22-286d4d96bab1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e94d946d-3c61-43f5-9480-c24d50e0f09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72db2f9-a039-4c16-9c3a-0c541ed4dec8",
        "cursor": {
          "ref": "086bb9f2-1c1f-4c14-a8d2-24fdeca9b99f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3aa8384d-7926-4cb4-a58e-6bc4dd124a91"
        },
        "item": {
          "id": "c72db2f9-a039-4c16-9c3a-0c541ed4dec8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "67ba167f-50e3-4554-9251-24e2c47f492a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0528d521-7656-45f8-8aa8-6eafc20490b0",
        "cursor": {
          "ref": "ee2496b9-0948-4a74-8b8e-1f1004620219",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1aac9f6a-1a92-488c-b2df-c9f9dc5bd5fc"
        },
        "item": {
          "id": "0528d521-7656-45f8-8aa8-6eafc20490b0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2b5e4d30-8084-4b10-86ce-8c08d7970a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7475262c-27b0-41d5-b001-3a56682c6927",
        "cursor": {
          "ref": "bb59788b-f873-4b8e-bd21-c9420d7cc4ea",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a3c3933a-b8e9-464d-b1fe-9c4ec075e5f8"
        },
        "item": {
          "id": "7475262c-27b0-41d5-b001-3a56682c6927",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0b8f7ce4-8d16-4b85-83f2-ee976b4dde74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e78859-d1f2-41f9-a5d0-6c0284203364",
        "cursor": {
          "ref": "281b0858-fca5-456a-8526-703cce846897",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "be984d12-9bb0-4d77-92cd-7802bb80b210"
        },
        "item": {
          "id": "a6e78859-d1f2-41f9-a5d0-6c0284203364",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "50282b9d-3010-4746-a406-162bfb21081c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6a7a07-a4d9-4289-b1c0-cc6754c3f084",
        "cursor": {
          "ref": "ce926554-ee79-416e-b964-dd26c4dc9637",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a1b24db2-d0ae-4caf-b29d-bc58927a6918"
        },
        "item": {
          "id": "7c6a7a07-a4d9-4289-b1c0-cc6754c3f084",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1d7e719a-4554-4e04-adaa-ee581e33e854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a512822c-aaaa-4755-a8d9-def39a7c19fc",
        "cursor": {
          "ref": "f549ae57-ad61-4a98-9f6e-cbf12c247240",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d622bcbe-96ff-47f0-8c1a-bade6cccd6c3"
        },
        "item": {
          "id": "a512822c-aaaa-4755-a8d9-def39a7c19fc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a33d204d-f152-4285-a30b-f97ffe78122c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8a8cf6-aef6-4297-aeea-dba123de091b",
        "cursor": {
          "ref": "4c956a86-011d-4fba-8ab0-059f57d8fe31",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "03e36b70-e7f6-44c7-b9de-c72ec10ce67c"
        },
        "item": {
          "id": "0f8a8cf6-aef6-4297-aeea-dba123de091b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "56494c6d-6281-4f6d-ae99-e45c055c6097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9e8211-2227-48fd-a083-7f2d0438251a",
        "cursor": {
          "ref": "5f1d7754-3c30-4c42-a7a2-6661c8efff76",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "21c750c6-0755-497b-95f2-58feeefb6115"
        },
        "item": {
          "id": "8d9e8211-2227-48fd-a083-7f2d0438251a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6a674479-863e-49ac-be84-7c7210964465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34685e96-46d8-48c5-938f-8c5558ffef8b",
        "cursor": {
          "ref": "4fceeea6-f881-4026-9442-82cc72732acf",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "60cf934a-d6f0-475f-9ed1-c7d617bbafa8"
        },
        "item": {
          "id": "34685e96-46d8-48c5-938f-8c5558ffef8b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b9d70cf6-2a6a-439d-8c93-cf3a69e97fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a68296-fcc0-43d3-a9db-0267e48d2c47",
        "cursor": {
          "ref": "adba080f-8d0f-4580-b49c-816e7ce0f27d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "00651968-a117-4ef5-ab10-07aa70204c00"
        },
        "item": {
          "id": "73a68296-fcc0-43d3-a9db-0267e48d2c47",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2aaf53a9-0fef-4670-a759-0bcfaec90669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0a91f3-a3df-479d-963d-22fc5cb0ea2e",
        "cursor": {
          "ref": "2ad9af4d-0065-40a8-8901-86eb34cbe419",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "17f225d3-1d51-473c-8f79-78da137bc8b7"
        },
        "item": {
          "id": "6a0a91f3-a3df-479d-963d-22fc5cb0ea2e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "056c2c43-1d2a-4eca-8a1f-c25c0208e640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676df7e5-c947-4a34-8635-20c348f6a960",
        "cursor": {
          "ref": "6e44b285-f5a9-4566-b195-5355be5db77c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0427e362-db99-48ac-b5bb-0b270be74fbf"
        },
        "item": {
          "id": "676df7e5-c947-4a34-8635-20c348f6a960",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1b88ebb0-3dd9-4674-9fc7-3d9cc02e6ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3629eec4-f27f-41b0-8e68-f1fe0c7aa37c",
        "cursor": {
          "ref": "d067bc4b-579e-4301-9890-f9d83adba712",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ada84b87-9500-4a63-9ef5-3f63630ebafb"
        },
        "item": {
          "id": "3629eec4-f27f-41b0-8e68-f1fe0c7aa37c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8da5053f-ab96-4f04-96eb-446ddcb15197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd876e6d-cc79-4dc4-8613-afcc4b315dd3",
        "cursor": {
          "ref": "b3ebdfc7-adc8-49ec-b365-f8468cae464e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1d739a73-88bf-48e9-8f61-ceac5834ca58"
        },
        "item": {
          "id": "bd876e6d-cc79-4dc4-8613-afcc4b315dd3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6f9bb9fd-0ed9-4f73-9a80-b9f38fdb9d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f85206-1adb-4d32-ae9f-42547ff97ba9",
        "cursor": {
          "ref": "0cf221f0-2424-498f-87a8-5cf076f9ca47",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9ee04472-ad88-4939-aec2-9df356132f50"
        },
        "item": {
          "id": "f1f85206-1adb-4d32-ae9f-42547ff97ba9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2bb0ef34-81fe-4ed2-ba03-24ef4d6f9ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39d782f-a8b7-4a43-b3f8-c368ca8d603f",
        "cursor": {
          "ref": "eb7ff83d-a290-4274-ae8a-5442896b957d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c779a3ac-5a70-4009-9da3-65eeaed9e0ca"
        },
        "item": {
          "id": "e39d782f-a8b7-4a43-b3f8-c368ca8d603f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a9edb086-2cd6-4b5a-9297-178ea20db060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1a4bad-65c6-4ed4-ae1c-539e80236b65",
        "cursor": {
          "ref": "383b5ec1-971e-407c-9bdd-4c6f8c0b4481",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "98244025-7abe-4e02-921a-6f045a6ce321"
        },
        "item": {
          "id": "bf1a4bad-65c6-4ed4-ae1c-539e80236b65",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "24554ac4-4513-4dd1-b62e-45d5a94da64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bab0e5-0d3e-4b2f-88f6-52a2870bc69a",
        "cursor": {
          "ref": "262daf1c-9942-4981-b774-638ac73140dc",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "31d52320-4758-49f0-b2c9-c89e0381ae6e"
        },
        "item": {
          "id": "87bab0e5-0d3e-4b2f-88f6-52a2870bc69a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a7b86c86-b4a8-4c5f-ab31-8b3aced2719c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df2d466-c995-4439-9e40-02e5f87162a4",
        "cursor": {
          "ref": "b82a24d4-5d3a-4939-93d0-5c38fec36740",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "112923a8-ae09-4ae0-b07c-3f60e4fe5de7"
        },
        "item": {
          "id": "9df2d466-c995-4439-9e40-02e5f87162a4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4c2f277d-5c9d-43e3-8a63-623f1ffe0297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc2baf1-dd8f-4506-ab28-a1dc4bda7445",
        "cursor": {
          "ref": "23688ba2-06ed-455b-a4fc-b264c2d3de47",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a1185dff-1383-42c8-9649-579271baa626"
        },
        "item": {
          "id": "8bc2baf1-dd8f-4506-ab28-a1dc4bda7445",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5729adf0-ea5b-4150-bd55-f4e24517451b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d87fa6-401b-43c0-b90b-4431ef108c7e",
        "cursor": {
          "ref": "87439f3d-69df-4285-a873-3d8c109d4560",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "abcf7a1f-4df0-4eb6-8c01-0d537325917c"
        },
        "item": {
          "id": "b6d87fa6-401b-43c0-b90b-4431ef108c7e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2a272726-5d68-4cc8-beac-606689eaad40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5172ec78-5d88-427b-b74e-5b7c8f37f892",
        "cursor": {
          "ref": "b888b7d4-0249-47ff-901e-763e01ac304b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b3d2f0e2-cc92-45fd-a7da-a5b059d494e6"
        },
        "item": {
          "id": "5172ec78-5d88-427b-b74e-5b7c8f37f892",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5691f87d-6a4e-405c-8fc0-dc9aa7a7954d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0a1381-51f9-4c24-b54e-0f978fabb339",
        "cursor": {
          "ref": "67dd7fd7-8383-4734-9986-3579fdb52fbb",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e4f21a9f-2b2c-4991-ab37-6d6d77b4d366"
        },
        "item": {
          "id": "cd0a1381-51f9-4c24-b54e-0f978fabb339",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "33ea93e2-1b84-4d5c-982d-ad885f2557aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7948899f-e70d-47c5-a304-f0432b375ded",
        "cursor": {
          "ref": "657ef736-e295-41b7-b4d0-373778a20686",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a9ea2a43-a814-489a-bb5b-7bde8f28e4a6"
        },
        "item": {
          "id": "7948899f-e70d-47c5-a304-f0432b375ded",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5cb00d26-3e71-4cec-b761-737b03af0706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedc63d2-35d0-469e-9a4e-d77fa4193dd0",
        "cursor": {
          "ref": "cc4c818e-f7b5-4e6c-9c3e-a045863ec63f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d4f85ea9-7369-4f06-a73a-8d31b8aa8d3c"
        },
        "item": {
          "id": "bedc63d2-35d0-469e-9a4e-d77fa4193dd0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "953a28af-d1af-4717-b269-8789d49f4048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1de88bd-b350-408e-8ddb-6c4b7ace074c",
        "cursor": {
          "ref": "28c89070-6011-4942-8ea6-6e9e661b8011",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "71b62581-9a85-4dcd-8c22-d08d25fa6eb8"
        },
        "item": {
          "id": "c1de88bd-b350-408e-8ddb-6c4b7ace074c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3cf90e4d-9bba-4217-8d5a-c55bc44f01ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27421e3e-0039-4e3f-bfda-34b2cd47e1b9",
        "cursor": {
          "ref": "353301a2-3d17-433a-875d-7758a0cd0819",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0e4112d5-9257-4931-a129-043a4bfa91a0"
        },
        "item": {
          "id": "27421e3e-0039-4e3f-bfda-34b2cd47e1b9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "32653b25-5dc2-4964-bbc2-3830b4a26fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af7bea1-1406-4553-a5c2-e0778948c028",
        "cursor": {
          "ref": "44709b48-d4c2-40d8-898e-d05400eb7d2a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4936c1d0-7319-4203-9f5a-b1e093dec8eb"
        },
        "item": {
          "id": "1af7bea1-1406-4553-a5c2-e0778948c028",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e08d776e-04c7-46f1-a88e-a71e8ab23844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd41c63-8ff3-4498-9b58-892fa492d395",
        "cursor": {
          "ref": "48357c5b-8373-4514-9e16-e58a0bb9046f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1ec0ff6e-de68-443a-af84-5897403f6f64"
        },
        "item": {
          "id": "6fd41c63-8ff3-4498-9b58-892fa492d395",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "72f20d2c-ad1e-431e-a7b8-b0ce814ff878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3d8d44-994a-42ab-9f27-d519f983e8fd",
        "cursor": {
          "ref": "f2e6a9e5-de7c-4f21-93b7-bccfd3ea19dd",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "48e4f301-2c4e-46cc-8386-066f3b26581b"
        },
        "item": {
          "id": "af3d8d44-994a-42ab-9f27-d519f983e8fd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7d778970-c7e1-4678-8d2a-d96ab1377489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ff9104-f7c2-404a-b0e4-023570cda9c5",
        "cursor": {
          "ref": "9fd20090-68f2-4caa-98f4-49d89380d236",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2df7ecaf-63b2-4755-9e43-18f566025108"
        },
        "item": {
          "id": "f3ff9104-f7c2-404a-b0e4-023570cda9c5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ad246bf3-51ef-4dfa-9ff5-a722da31ab2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00182ee2-0655-49d4-a23a-939a85e1a826",
        "cursor": {
          "ref": "6e73bbb0-1da5-4184-8bc2-f7e393c25766",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5d943cdf-3bde-4ffd-a0b0-3c39e9b1754e"
        },
        "item": {
          "id": "00182ee2-0655-49d4-a23a-939a85e1a826",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b9820f80-e4e7-4c0b-8015-a808b49f52d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dd8f4c-afb8-4491-b8a4-5537ecbce60e",
        "cursor": {
          "ref": "e5fac867-ac64-43ea-8f7d-074767f029df",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b8d71e68-f195-434e-8a5a-94d456e0f712"
        },
        "item": {
          "id": "97dd8f4c-afb8-4491-b8a4-5537ecbce60e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5f5fc685-49a4-42e6-873e-e5b548ddf82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50911182-42dc-4404-aa91-b4f1719fcd32",
        "cursor": {
          "ref": "5af77da3-cb24-43cc-bc69-49d3cdc4bba8",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "09fdbd3b-b2c8-412b-9acb-72c43fdb45c2"
        },
        "item": {
          "id": "50911182-42dc-4404-aa91-b4f1719fcd32",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e7c724ca-7e1a-458c-b852-0daea2eca951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60f16c6-9038-4ba2-bea4-7c58f2c15848",
        "cursor": {
          "ref": "341f590d-ebf6-45d0-ad24-66c74b80d944",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "162bf9ac-be8c-4855-95b6-80e15cfad9de"
        },
        "item": {
          "id": "e60f16c6-9038-4ba2-bea4-7c58f2c15848",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d1bcd4f3-aaee-4132-911e-7e6f7fd5677d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b94bb1e-47cb-45e4-9209-5bc7538ee4d1",
        "cursor": {
          "ref": "4b306f36-c8b5-4d4b-a2aa-d7ee4bc9cadf",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7e926187-c4ea-4167-b57f-82404c918623"
        },
        "item": {
          "id": "8b94bb1e-47cb-45e4-9209-5bc7538ee4d1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "877428b2-ca8c-489f-966d-7959178faa17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d99c69-4b01-4412-926e-be5051c63ee5",
        "cursor": {
          "ref": "c2327e38-8bbd-4f38-b55e-1234b0a12632",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "755162a7-3a49-448d-99b9-e30f3654c5c6"
        },
        "item": {
          "id": "40d99c69-4b01-4412-926e-be5051c63ee5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "217b2685-0f6d-4329-8787-c44a2e77aed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb821aa-0eda-4a2d-9b18-664e94d1058d",
        "cursor": {
          "ref": "1dade4ef-42b1-4efd-95f8-2b9f1ab8428f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6ae5e41b-56d9-4966-803b-64aa1c35e8cd"
        },
        "item": {
          "id": "1eb821aa-0eda-4a2d-9b18-664e94d1058d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "02c795e0-ff31-4c3d-b508-65fb95f928f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cf38d3-5748-4c15-8fd8-89470b1e5a4a",
        "cursor": {
          "ref": "ace8f778-30fe-400e-9922-8ee357e2f567",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "91aae558-3a61-4052-824d-93bb0ce7ce29"
        },
        "item": {
          "id": "84cf38d3-5748-4c15-8fd8-89470b1e5a4a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fe984323-6f0e-4e52-ba3f-37d9270f2912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eabd459-64f3-4634-a962-a24c58674883",
        "cursor": {
          "ref": "5771e1c8-c713-484a-935c-f51372b0591d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cca0b175-88ce-4c52-b3d1-009c8366c382"
        },
        "item": {
          "id": "3eabd459-64f3-4634-a962-a24c58674883",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b52d251d-5412-4c96-a943-a279cba0705b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6768da3-3a62-4675-9743-c78eac662788",
        "cursor": {
          "ref": "02c2f7a3-f4cc-47eb-acdb-5aef371b4185",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "54cf46a5-fc60-40ff-ad4f-52cabc3e0f59"
        },
        "item": {
          "id": "f6768da3-3a62-4675-9743-c78eac662788",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f8270c0d-8eab-4a1d-b3b5-781eab282474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a67828-5378-45cf-8876-8f23a9bc6f1b",
        "cursor": {
          "ref": "dc8ca1f6-a6d6-4c54-88b2-3b77d5aa1929",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "16707a37-5382-4a6b-9be4-ead9b517e40a"
        },
        "item": {
          "id": "a5a67828-5378-45cf-8876-8f23a9bc6f1b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d1dad251-9e21-4b00-903c-7a070f8e00a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c01f1f-dd8e-4571-91e4-d7726425dff1",
        "cursor": {
          "ref": "f487f114-5511-4f29-a408-6fc420dd7b59",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "346aa38b-a05f-4cc1-adb5-dcd2b32fbd0b"
        },
        "item": {
          "id": "27c01f1f-dd8e-4571-91e4-d7726425dff1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "33476668-1324-47bc-a715-6497e1d65345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714a5632-76c5-4638-a876-3b5fc0c40484",
        "cursor": {
          "ref": "7a6e3057-f888-4898-a387-97077e0a01e4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8aeb84ad-229f-4341-866b-24ef04892c87"
        },
        "item": {
          "id": "714a5632-76c5-4638-a876-3b5fc0c40484",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "274e0a64-fae2-4785-9671-18b3ef2b7cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5f42bf-fff6-4105-a89b-2e7d2898106a",
        "cursor": {
          "ref": "6caede3d-3883-4b46-bfbb-744260e220ec",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6d59b5e7-54d1-4709-97ab-774df6be4a2b"
        },
        "item": {
          "id": "cd5f42bf-fff6-4105-a89b-2e7d2898106a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3715fc28-c2bd-458d-b10f-e640a2f976df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1352a717-7e53-452d-9e5d-7ea781b1c8ce",
        "cursor": {
          "ref": "4087df30-394e-4451-bacc-4b571048b25b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2b3e4726-dfcb-4d37-93a7-5c888ccba39f"
        },
        "item": {
          "id": "1352a717-7e53-452d-9e5d-7ea781b1c8ce",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a5abb4bd-d755-419a-be04-2dfc938272ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae90b235-1f49-4e12-abc6-a657eece58c5",
        "cursor": {
          "ref": "220bda1d-e3fd-4872-8493-8a6a56e76e26",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "daccc2ae-b67e-4539-ac1e-7ed816bdd62d"
        },
        "item": {
          "id": "ae90b235-1f49-4e12-abc6-a657eece58c5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "094ea16c-c2c6-44be-8492-0173957fff85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe9bb23-c536-4c26-b6f2-7dc1ac8794e7",
        "cursor": {
          "ref": "15d4da0e-099b-4395-ae14-4ae77322c93e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5fa4b43a-b448-45b7-923a-89f6c1af42ab"
        },
        "item": {
          "id": "afe9bb23-c536-4c26-b6f2-7dc1ac8794e7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "55587ba8-63af-44f8-bf00-07fbab5cafb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8700f2-2283-458c-84e1-219f478cedba",
        "cursor": {
          "ref": "4df8d786-3972-4e18-b02b-c999fec233a2",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9cd78bbe-4437-4466-ae25-4749afdabc6a"
        },
        "item": {
          "id": "9b8700f2-2283-458c-84e1-219f478cedba",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b45d2242-8bb0-43c3-8481-3160cace0431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62ad51e-ecb2-4fa9-8f78-9deb2ffd0e62",
        "cursor": {
          "ref": "c9f173fc-19fb-47ee-98bd-a6da27ae53a1",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3f76db9d-ca3a-4387-bc8d-c201d18d7964"
        },
        "item": {
          "id": "a62ad51e-ecb2-4fa9-8f78-9deb2ffd0e62",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8a269fd6-ab29-4670-b698-8fce50e420a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af6c142-303f-4fe2-9e68-a6d26eadf777",
        "cursor": {
          "ref": "5f5752fb-81cf-45e5-89f3-2a75b301d76d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6236b69f-336f-4585-826b-c4d8476e6b41"
        },
        "item": {
          "id": "5af6c142-303f-4fe2-9e68-a6d26eadf777",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "55eadbfb-fbc4-4e14-9614-31947d42645f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5671306-5989-47c2-ae80-71bed17a129e",
        "cursor": {
          "ref": "d1f4ddc4-d663-4a7d-8063-b2417be4c88b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "10a95646-883d-4889-8941-176aeff3ce00"
        },
        "item": {
          "id": "e5671306-5989-47c2-ae80-71bed17a129e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a75a7ec3-7037-458d-a62c-7f3224b1b7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aca141-c5d5-48ed-97ae-ef38de24467c",
        "cursor": {
          "ref": "302bb5cb-9bc4-4a09-aea5-cb25fcddb1d5",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f2a80ddb-40d7-46fe-abdc-3d82a82f6f5a"
        },
        "item": {
          "id": "57aca141-c5d5-48ed-97ae-ef38de24467c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "354846de-8e00-4ded-b32e-e20457bbaab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec402f4-f835-4847-8c1c-f06b86307ce9",
        "cursor": {
          "ref": "f27c8757-73d7-4676-ba84-208a8f848b11",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "54f9a7d1-85c0-48a8-bca2-60f0242b2d5f"
        },
        "item": {
          "id": "9ec402f4-f835-4847-8c1c-f06b86307ce9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ced0f0c0-362f-4815-8c0a-8740abbb6183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56a4c71-e3be-4eea-8e18-b8f38dc023e5",
        "cursor": {
          "ref": "cb6d09c7-0cd8-4af6-9eb7-40f811064f39",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "76d90ec5-80b9-4460-9349-955d9e0961de"
        },
        "item": {
          "id": "b56a4c71-e3be-4eea-8e18-b8f38dc023e5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "94a7d70e-ecfb-4fbb-9024-08aa2d185ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2d2592-bad7-4c01-b212-807f6817b535",
        "cursor": {
          "ref": "fecf507b-de4f-4592-985f-28e9dc6d1d7b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "967b7a7b-b573-441d-b2b5-746493e0f0fd"
        },
        "item": {
          "id": "ca2d2592-bad7-4c01-b212-807f6817b535",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "47636240-bdfc-429f-a3e5-09f43e837781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161d4562-6a86-4f76-b3ab-84b16ffc3322",
        "cursor": {
          "ref": "ec2c322f-a282-4c39-a64b-4c49112de53c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "65509201-d1d4-43e3-9cea-c61dae65ed87"
        },
        "item": {
          "id": "161d4562-6a86-4f76-b3ab-84b16ffc3322",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a2bd1451-6472-4c0e-bbb8-31a6d8eb4b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec081489-e826-41ed-8814-cc9b0d598759",
        "cursor": {
          "ref": "a9d7014f-d9d2-4711-9fbb-ad42bb154de2",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6e426d1c-8772-430a-b72a-f3bc0f4bef91"
        },
        "item": {
          "id": "ec081489-e826-41ed-8814-cc9b0d598759",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bf800c1f-52f8-46ad-82be-3cc2aabf8205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33294e9-4896-4007-a5ec-eaffd1696801",
        "cursor": {
          "ref": "a87f3292-1e99-41b1-8c82-a1d86eb248be",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c74deade-3127-4ecc-afef-4292585bf7e5"
        },
        "item": {
          "id": "d33294e9-4896-4007-a5ec-eaffd1696801",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d872a924-f73a-4518-a74d-1c16f9a5820e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67292a2-04cd-4a25-a6d1-6d053485f38f",
        "cursor": {
          "ref": "8b56a8b6-064d-4028-8139-0f05b17d7094",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e4bb6e90-9683-44ea-aec3-a822c5f8eb59"
        },
        "item": {
          "id": "b67292a2-04cd-4a25-a6d1-6d053485f38f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e7049201-4faa-44d5-8c05-800458f2d1b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b16e98c-8c4a-4634-9704-8304f37c8af6",
        "cursor": {
          "ref": "8bc2e5dc-ec69-4068-8377-f2f131a5a23d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "750eb3f2-91f6-4574-983f-f219f5232f00"
        },
        "item": {
          "id": "0b16e98c-8c4a-4634-9704-8304f37c8af6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d923071f-1970-4abb-9b68-dfe6952535b8",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e32507-907d-47bc-93fa-816030df00d6",
        "cursor": {
          "ref": "906facc5-fd3e-463d-a901-782edaed4380",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7138831a-bc30-4f0e-bfef-8a78f0392b0d"
        },
        "item": {
          "id": "f7e32507-907d-47bc-93fa-816030df00d6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b3f0d8ca-b27d-4e0c-ae91-9d08a7a8eeb8",
          "status": "OK",
          "code": 200,
          "responseTime": 2229,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "31419f1b-4b68-4b4c-8005-486ff6454cc9",
        "cursor": {
          "ref": "07a8145c-576d-4a09-8f1f-f91566388495",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b6996e4c-24ed-4588-8bc8-f35a4af18fb8"
        },
        "item": {
          "id": "31419f1b-4b68-4b4c-8005-486ff6454cc9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "92d85bcd-e5c0-43d5-9cb4-2ecb4f1616e5",
          "status": "OK",
          "code": 200,
          "responseTime": 2753,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7e0a1f-cc7d-41b6-a1a4-1a613ac95250",
        "cursor": {
          "ref": "1931cfc7-c212-459c-8f52-623d77591f81",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e05b3a73-1db1-457b-94b0-02be8ec0f20b"
        },
        "item": {
          "id": "0f7e0a1f-cc7d-41b6-a1a4-1a613ac95250",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f93062b7-7352-4310-84a3-5b1060e025fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7e0a1f-cc7d-41b6-a1a4-1a613ac95250",
        "cursor": {
          "ref": "1931cfc7-c212-459c-8f52-623d77591f81",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e05b3a73-1db1-457b-94b0-02be8ec0f20b"
        },
        "item": {
          "id": "0f7e0a1f-cc7d-41b6-a1a4-1a613ac95250",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f93062b7-7352-4310-84a3-5b1060e025fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97075b35-9a25-4936-9a54-275c5f313826",
        "cursor": {
          "ref": "89f17aae-9d90-471e-a755-5f13f0a2c6aa",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dcf240ab-309a-4742-852f-dee514188c0f"
        },
        "item": {
          "id": "97075b35-9a25-4936-9a54-275c5f313826",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "69b5654e-efbf-4b33-801d-1d334bdff0aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e9bd55-f1d7-48ca-a3d8-187b416563d1",
        "cursor": {
          "ref": "1e7c9116-2fd0-44f3-8262-c573b08aecde",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0cc6feb4-436d-4fca-9524-30e6080c18a9"
        },
        "item": {
          "id": "14e9bd55-f1d7-48ca-a3d8-187b416563d1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ca0dc9d9-8f86-45eb-864b-d4d4e45de2f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}