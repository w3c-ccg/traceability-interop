{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4c012f0c-4735-4e05-b6f9-8140379cfb12",
        "name": "Clear Cache",
        "item": [
          {
            "id": "86e1e9ba-bda0-48c5-bb38-0ea294154cd7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "615becb1-1ae2-41eb-8b4e-9344d4de910c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7fcd0794-8fc7-4ddf-8a62-f6d1d62c82e1"
                }
              }
            ]
          },
          {
            "id": "3403eb75-e47a-44e5-9cb3-d04528bc7c54",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd17a694-35ec-4399-956e-a002042ceb7a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6f387c36-1d24-463a-93d0-2f4a91038c83"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "387df92f-faa8-4d86-878f-22db99f56811",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e8b47861-f711-4477-83c3-355a597d2458",
            "name": "Positive Testing",
            "item": [
              {
                "id": "89887328-46d6-450a-a084-c085184a6432",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64e91376-c051-46d9-8194-b78edc78f8e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99a4b738-14b9-49bf-8b24-fba93b29e024"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7cb4663-606f-44b3-891f-ca59aad27161",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "553dda97-e14c-499b-9326-f46700fff173"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9518bb36-58d8-42ad-8de0-f683ed40c293",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44077bbf-ea63-4775-a4c5-69323f0abdd1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a922dfd-152a-453d-a15d-179cd4e88aab",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "65568e20-5671-43e4-b23f-0dbd14f912e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c98eac0a-fae2-4c8c-b6cf-0090251b4dc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46e7a11c-aa30-4500-9073-931db2078b8d"
            }
          }
        ]
      },
      {
        "id": "7057b60c-1551-4849-871d-39087b322841",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cd3d63c3-a317-4609-b1e6-38924d1deaf7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5de5f69-1618-47e8-890f-3644e5ac43e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6093345f-49e2-41b6-98b7-0f77f678dabc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fedef7-f197-4484-839e-f5305b40800a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b48e7e44-740b-4881-8437-029d350407b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca2e1a8-b83f-4182-92b1-c9603f93c8e0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4d3931-84da-465d-99ec-a393b128fa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8580666-a7ba-4b39-90e5-83a07722127d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8491650a-cc44-4570-a6cb-7df7fe875edd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0aa5402-e523-467b-9544-c9bfa6c74ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d394473-4edc-4c81-8551-11d6046cea59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42f24157-087f-4455-a04c-03020cd7638c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea76e7d7-dfd8-4a71-a846-d359bfdaf8c5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aebed10-3339-4e04-98cf-e5589a5b0d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "056b0876-de56-425b-9922-dc2ad2f50ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e91330-32cd-46a9-8935-57f9ee86c8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627ef5a3-f6ff-4328-80b4-e9f31f510d85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d4f62b53-6133-4556-8081-1dd44cecbf65",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e2c26c0d-d50d-4b47-8de5-68f238b9a98a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b943229e-c147-4103-a97c-021d76ca9705",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5273a52d-e2f5-4de1-800c-97f30b4837bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfaa9631-6833-4b3c-882b-ed258ae77906",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4d0459d3-eb28-4580-ba1c-e08ecbb634db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd7f8be2-4bba-4867-9a2b-b7963548d44e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "201ab3ec-b1bd-435d-bc74-e22023bbb934"
            }
          }
        ]
      },
      {
        "id": "3a56d507-5d88-4b38-a9cf-958987d65caf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5660b6b3-cf5a-4aeb-8529-9a549ef1918f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b40435e7-0dcd-4ae5-89ef-a9135d055d0a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fc7152d2-69d5-4187-9dd4-178228b8e48a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a22372-038f-4a3d-9f21-43e58fbb634b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab87e0e0-8602-4e24-9c67-229eaaf97812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c98a2d4-e5f7-4ff7-a0e3-421019c8d91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a2c8bb6-2ccc-47c0-bfba-e5c958721f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad36e4d7-aa51-4468-8380-a65622e4fd6f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b76f73-ade3-4654-961f-e26fdfb07ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3308929-3a7b-4950-9350-b692869c2b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8541499-7bef-47bd-b793-2aa917fcf11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "460d3ecb-df84-4666-9515-e43b5560563e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6a2833-f152-4c6a-b187-9b8b5bda3f30",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cbe103-bab9-4903-b3ab-8e219c01926f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a0b951-3ca1-4444-b321-e56053b26f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22c45b8-0530-44e6-a078-a784b9dd77ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ac76bf2-713e-4b40-98d8-12a4dc4cfacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab068ad0-b34e-4c5c-b848-84e424cd8744",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b72fee-653c-45e9-9ef0-9bb2a4cedb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b03165-1afc-4f23-b03f-d7a6208339bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f26b86-2249-4633-bfee-7886f663ef75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bbb336a-ab50-4216-b3dd-5676779fc7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62e60dd-d6cd-4c29-b494-6f333bfda6f1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e738fb58-2312-4155-84ad-08bd38981284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc10bc3-0c47-461a-92aa-9c87f4079f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05a6d65-9f5c-42d5-a8ce-1577f3a2a030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6621208a-86a5-439a-a4f7-9d1bd24d7669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3ae479-0fa4-4bb7-a6d3-5db939a28c6a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3e83f7-435c-453d-8706-12838c7239ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda5f19d-7362-43be-adc2-e135bb27d310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12297325-d04b-4a2a-be84-0d4162961d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3f8fbdb-6c58-44f7-8d11-2e90da186385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85875a87-ec91-49fd-b9f0-0e923678fcf3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bde03d4-b141-4a93-ba02-8dcbbbaa7719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb9cf97-19bb-4984-8426-9d32eb7596a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bd512c-ec99-4254-8052-040b82217e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "def4b4fc-c657-4d7c-8029-47484c36b9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b29c01b-77b5-4aef-aed5-49495c7be9e8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9e6e7e-deaf-4356-b57d-e3cccd455c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287fbe53-ff0e-4e26-98ff-57bae3cd5483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a11e1de-5dd3-41a1-94e6-11584f6475e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83c926c8-a5fb-4566-83fc-3aba42b61031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3eb768-88fd-422d-919d-cf73ce5babd0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e834f3a-0692-42da-930e-95e8d12be776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c15dbc8-0024-4923-82e2-ff769812a321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6360f1cb-3e9f-471f-94cc-4d2387afd371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "626b1e6c-adb4-4de6-8283-7e112f0a4eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7efe844-39e5-4e65-bc74-c86a091bc78f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bbce0d-5bd2-4a39-abf2-d1245fe4ac4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261660f9-8a47-4ae0-85cc-9c3682de70ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efdaba7-4340-475f-bf53-435fab95b7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3e5a9ed-9dea-4cd4-b691-b40b689eb848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573c3355-e92a-48e6-9cf9-ba31b73c836e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c4cb0d-5122-4ace-a6e8-fbf2dd111a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ec0216-6d7f-44ab-8197-2d7f1cca8474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725618d1-781e-4fd7-b059-e29637aeebdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd444584-dfb0-4a8d-acb6-5b19266bce78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614f4b04-5f9d-438f-b5b2-36d0ff9db3ca",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea378a33-bd6f-4e85-ad34-89bb4f10328c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7a580f-c4e9-450e-96d8-005b2f782eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae6d66c-6c15-4497-a6d6-a35e6818c6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c46a00a-679a-4433-9681-01a23566df16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e574dfd5-8dc5-4155-990b-014e5d15c417",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ba2298-7a42-45a3-99b3-bab380f17ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8695ad9-60af-476c-a365-f513d6dbff4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d25f43-c5bc-4423-91bb-9a050f124bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b57133b1-d111-44d7-8efb-df5ab8213bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00aaa157-7f21-4b9d-90a1-682e8fade3b2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f07797-9d64-4947-87da-33b4c5137282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63880bdb-6c33-453c-95ea-74ebaf89ff93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2317e902-0dda-4bfa-abdd-a047bbba657a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1cc0e57-019f-4502-a526-caf8e0014ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f914ec9d-b978-4204-bb89-5cfae08f72f6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326cdef4-2e6e-459f-b358-bb173eb5d20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0722953-fb86-4b90-b629-6c89cae17919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f8fda7-25a3-4830-8c45-5a5427c2b1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01723207-f312-4f8b-b9e0-fbcc04829924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3020bae0-4a30-404d-86fc-029b333c7143",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e84fd7-91e2-4c7c-ad3f-792075300163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a26f03-d954-4584-b46d-b9a9bdd6d498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ea631e-a345-47fb-9fda-b99980f6d88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8555c9c0-f89d-47be-9d9a-dcf6fab509cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690acc4e-93f1-4b87-838a-1f0d8982e133",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee63c830-4711-46ed-8967-777a02fd4e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ba19f0-8bc6-4a5e-8145-db2864e90c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9135e66-6059-4109-8c60-19b896ff0cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e90b0a93-3821-467d-b12f-3ee406cefb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc7ce52-acd1-4f93-a74e-b1da4f4ce17c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f81f0e-6e4b-4e3b-b0cf-4fc5ceebf331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1e3926-b487-4d1b-94fb-f8cf7ee7c26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb7fa42-2263-4371-869c-b78bd548e9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b7fa35-6dc5-4a3d-9312-2bafdcea0860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035cedfe-3869-4e08-b6da-127043f7baaf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59145ea0-87f7-449e-b815-e3a3d56b9fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b924f816-7c64-42f5-86eb-52ab9c9d5c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68bf0d5-436a-4eb8-a5b8-9b753bb25d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1ca1f7-ad39-473a-bb32-b79fd3f4f032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a572859-817a-473b-bf4c-78635198a91b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dee195-d514-4d28-ab21-830979308f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e54a7c-958a-4a5f-b099-0e1afd3fe40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2f85b7-e248-4ae3-acb9-ecb5b38d5ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d194aab2-4761-4854-859f-d843b7648e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbac8f5c-7fda-443c-98e1-41ccf0c46d83",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a264f3-0414-4222-902a-35b795ebe423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08a68a2-320f-430a-9bf1-bf789ea2a8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dc64e0-7651-4fde-b5b6-7d771b9ba253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a40abad5-2da4-4729-ab63-88f9295528c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b4cafc-e4b2-4d8b-b239-2d86a434e003",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b961ae1a-dcb3-4857-a380-163a1260f42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115022e1-9030-4f2a-8b1f-3fa836df7053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49013c88-f967-431b-a354-0113a70517c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fadc254b-d8bc-44f4-9147-e6cc996d57f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec6a53e-52c0-4ba2-a01f-e115e5470103",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7981328a-3fde-433d-95df-6a8f675740f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bb2477-074c-4063-8303-17969aa60dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f6b5f6-45d2-42f6-8ece-5af9ac0c943e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab741d17-620a-4b12-9a73-47a4807fde7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ee040e-b9a2-4661-a5fa-7a28aa6c0fa4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72159e32-159b-4224-b4b6-370b29c47966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b6fc92-bf7c-4f74-9bc1-27e2797295e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd6dff1-f26a-4742-a6a5-7753e981f265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b27a80-2e77-4f48-9563-5e5776c58cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc10c9d-f85b-4e2b-b4c7-6cde3f3364b7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55273b8f-3edb-4c79-b479-108e41413cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d77b1da-d52a-45ce-98bb-ffa76e06f4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dec20c-71ec-4421-a210-73a0b0d20eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5395c9a-dbf0-4393-a097-577ef9324f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd4df7a-0f62-49eb-a15b-e84fe55940b9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02670f90-ee0b-4648-a30f-3d63b6419c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fd17ca-20cf-4370-8c89-012009e54ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1b0449-5929-41e8-bdb4-508bf0c1f19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f84372d-4d7f-497e-8b37-0a64e028108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d279ce3-66ec-46fe-9052-d5dfa2a27815",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8734c5-33aa-4421-bc2c-fa13144bb689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce471c07-63c0-40f4-b710-b530bd9d30d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf43593-b22c-41bc-b17e-67a70811705a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31e5aeb4-725f-45e9-a69a-0875957fb374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac30fea4-3f64-4daf-891c-5c07776a7d39",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f371228-0c33-454e-9949-4694a232e621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca66efae-1f9f-440e-84cb-259928ab7a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61d241f-4cc3-4f49-bfca-1788e358ccb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d602afcd-596c-4627-9905-703440825039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb3f3d2-7f13-4bbb-bfe2-7478bdfc5c96",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6549bb-1a44-4e49-9ebe-93e467d84521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe378149-ac92-419e-b9ef-814993ac045a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8752bf-b154-44a5-aba9-a3a4fb3b233a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8a796e-c2b2-475f-9196-4d6e6d58b1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e7e297-3ae5-4cba-bfd7-ecb025f68f13",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ffef0b-6546-497b-977e-de8138d8f88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af562f1f-da3d-4236-8f80-c1f9eebbf193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116e3939-87f2-4b7e-aba2-9ea9f8ae2fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "366df181-ca2f-4712-818a-9144dbe5a233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c39f3fd-40b5-4db2-838e-e9244ecea5da",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef93181-fca8-4dd8-b5fe-e38d493a4863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b833e82e-370f-48f0-b5dc-ebfc29a7f696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99322fdc-01d2-4003-aff4-1a70502dce27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba17403-697f-4d86-b507-ede60273e4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a2276a-4bc4-4c53-a157-14f13a0fe72b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901d4c0c-d4f1-4c67-8758-99638121f37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794c5af9-5a0c-4030-bfb1-167e930e86f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4f40b5-a471-4525-8716-0f1963496943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5223a6fa-87e0-40d5-b56c-d03420de75a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231a3fa9-e98b-4e36-9ac9-08b2bb6e9c4c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761c4767-6c8a-46db-8411-6bb070b0c920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d208e1-f272-46a1-afee-1e2e13af4f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2c8fed-b007-4342-b630-5e871efff247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb147b15-933b-48c7-84c6-793786bf60cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209b9ff3-1776-4e83-865c-9604d0fb5759",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb995eb-b625-45cc-b8c5-1bb22b2942b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251bfbd5-ccdf-475a-adf6-629db44fa6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a79b11d-aa53-4b97-b9be-d55fbc9fbcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48ab87f4-7581-47cb-9414-d8c1b8c62f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5142d6a1-8f3b-4b9e-b06e-1cd18b2d19a2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbf8e24-2389-4084-a3ab-720323f8bd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145482c9-7931-499a-8023-6005b7e39c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1727fbf-4e73-47a8-b4e4-15ae3329aaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0fb056-7cbc-4366-ae62-387e2c3ede60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9450e765-e1fd-4811-9c7b-df3db2425271",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc102c1-c747-4f84-bd86-565f0e9edfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "440fabd6-a75e-4b4d-9311-8121290a44d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b5fea1-201c-43c7-8ac2-c03b1668f859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b95246c-752a-4486-b177-fdda75fbb543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be27b68-6b20-45d8-b3ac-d1e7ac86b2e2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4ca6cd-ef58-40c7-b239-04eb7fb7fa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9c8468-353a-4185-b816-6d2ddd0d929e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee8209d-8bae-4d99-88e7-07445c86d984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23f74bd7-8fe2-4088-86d4-af1b4546771b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694664ec-5a08-4f0d-8002-081b2cd9799a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2734483f-c77b-48dc-b90d-d311141c6dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9ceeb6-9030-4b9a-af47-10a9de153df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8a7e74-ce2a-40ab-b045-072178062084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7a5ea1-0727-400c-8a0e-fcadefd34f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7343490-f717-4ab2-a14b-6edbe5257652",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510c3cd5-31cf-4e41-bf1d-eb09033221cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ce93d0-b49f-4bbb-a571-b33faeadcfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ad8b84-855f-461b-9a65-c28717410b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8645f8cd-1c9e-4353-9517-90e2518f504b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89edef69-723d-4973-907b-5436db6d42cc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8614fc7d-fe77-440e-9339-946cc2ceb419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d742a02e-02ff-4083-943b-fe5b1c4697c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a2e2c4-41a7-4110-bf26-482379ce2718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "df7bc140-d87f-41af-8da5-ee064711662f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865dee20-f1df-4c5c-8348-40a2dce072c2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bf21c1-abc6-4b67-9569-123e2bf89ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b636db-8969-4a24-814b-013cfcc53293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4377b1b5-dcc7-4dbf-a875-1207c0ddf35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "79383654-5d95-468d-bba6-b56021f898b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371ac792-04ed-4a13-a1b7-d787ee16e594",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3065df-cb52-41a1-a95f-07dd507f3b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5ccbe7-0348-438a-9c24-044a62ddd0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789e0728-2978-4a33-a242-8459ea0ae59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c419014d-4e81-4442-a7b4-b08fa213e9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8360b8d1-da77-45ff-801c-aa4819d53896",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a8ed02-0d16-4bbc-91e4-c01759bbd588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ccb255-f2e5-4df5-9ff7-e7775e1ff0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbe7eac-0a0e-4fc3-bb46-ba9b114832a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eda2423e-bf60-442b-b649-c9c943ea4f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2330b6ac-9c22-461e-8d8a-375e80b3073d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733d9636-c818-44b9-b527-01b0c0cd6bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157fc4fc-99c4-41c6-8eb6-c25c65c5d72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8112a8-0ff3-49e1-a6b0-bf929eac6f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "201e9b8b-d78d-4ead-bdff-758107f66cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e6fcdd-a09a-4b10-b716-07cebc17bab5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7746ee-4e5a-4cfb-982b-3ba8abb10b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9064c05a-27ba-454e-a405-2ce3116022f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18e88fe-2a8f-4cf9-940b-4ff69f03bc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fc04c2-6498-4152-8fa6-3f52789f398a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936e845f-9c7a-4396-a76c-07310469a441",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857bd9eb-fd25-4007-a3e6-fbe1fab7f68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f795604-7d0c-4e83-a6ca-c2bd2244282d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b1cd9f-7b96-4a47-bcd3-c51acfda868e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3d456b-f593-4075-b338-1bf52082490c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c44eba-1595-48b2-a1c1-9992ac2682fc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f956f7f-0a2a-4aa9-a43f-2c5609f0eccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79cc4d42-8b6b-4978-9ce3-e282edf28d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985bddbb-564f-4e43-a5da-93da1cda311a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d982284-97ee-47f4-bb6d-90e41c59f2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ebf486-1740-4b68-8add-e94831282c77",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bf0268-d454-4259-b3f9-489a8e8fc784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288d6c0e-b86f-4327-b0a2-378e67255783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eec7e84-4bd1-45a1-888c-cbd184f62922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ebf324-6969-4a30-926e-1d6edda5ff24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d51fb61-613d-4eef-a365-8c499934cd96",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab413d34-accf-4bfe-a896-4fbe0a38bf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69afac4b-9e83-4a9a-a9f5-97ee87e8fcea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c107598a-9fbc-4b9f-ba01-6928a4295e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba049ad8-fed2-4445-9368-7c627d9949d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09854090-5eb2-449c-9bd9-375e1ce6afa7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99031c46-bb5a-4e79-8bf7-e59e6896553b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce96d01-eef9-449c-898d-05c0802dd404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc7c79a-9a9e-4c4f-b849-3811f8e4a42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "934bccb9-bee3-4cee-bfd7-a10226e16bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160d4ed0-6cc8-4768-916a-3ee825174573",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be541f1e-d4aa-4252-90c7-a2dc37901d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af91dd4-bded-43a7-9c90-1f2968fa373d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d1b838-fbb6-457a-8f21-b7751a80938a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a58886f6-34b3-45d2-9f4a-da9b23a948c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fbca31-d7bf-42fd-b8a4-0e98673f6554",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83cea70-ab75-4a91-a808-f86e22e378c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5d1d90-6d32-4aae-8224-5c81eb1348e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80d9526-75bb-4e24-bbb7-77b6949c37d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0874faa-5ca3-425c-a542-3fe117e5846e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edb0fc3-c527-485e-afe9-9afbc711ca75",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1f4e2f-bd47-4123-8699-de88498f5273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4814d968-5765-4362-b7aa-6e5d3d0ac1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f0ece1-85a2-4f0b-ba7b-d264f0c5b3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f613ae4-0e36-4ac3-99f5-c39b9880378d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3104202b-8955-42d8-b0af-be16b28927a1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b816d1-eec4-49ae-8e08-c9f52d11e4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dcb58a-36cb-4a0a-88c1-c77a0658c396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076baa72-d4d4-4c90-8c8c-2177bdc295d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1770d87-15ff-4af9-a7a9-d20ecb84828c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8836fbf6-27c4-43db-968f-d0e5f86237ca",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c59f53-c254-4ec9-ae4e-2d440f36e850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c669a8cd-cb87-431a-8abe-38db41546ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22515aca-92f0-492b-8b47-acc657abdc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5347a612-d63c-4d04-aa35-b524317ad0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5593b124-dd83-4270-9258-453854384754",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749213c1-e9b3-4fa3-aa22-787ad134f8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1743ece1-9164-4bb7-b043-8161fa358dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c751358-4146-467f-815d-579a72bb8f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "debf5da7-5e79-4769-a5f7-b525effa3009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dc2453-dee7-4f78-8f1e-2cd483bee740",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6563330d-7fea-40f8-b777-72917c064e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc09a85-7417-4674-95f6-7d51da1d6c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38352c09-9e87-4351-9435-b9f6ffdd33aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15e04dce-95c0-4fd8-bf05-0f5d66bbfd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bf1b1a-3fd7-49c2-8a57-987fe1cc00e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c6abd9-3690-47cb-ad12-2832bdc64029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fbf90a-c0d6-49f7-9616-2f82e8175574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e0500b-2474-4cd1-83c4-3b7d2a2da7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "60491b98-0642-49c0-ae55-dc764d08a9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff28d8fd-de9f-492e-b891-1584faa24ebf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f26bd4-8e49-4aed-b759-3113b10c5593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d666ce0-dfdf-4cc9-8185-b2871b1df2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87868eaa-ea89-4dd1-b215-fc255c62828f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4cca0f2-2868-4e38-b7b3-2551b90169ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7ad411-54dc-4b2c-b135-4763cbf00e4e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a0208e-5267-401a-9825-8b7c58aa7629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea03119-3ca8-467c-9b3e-d58217e08840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c177fa-8767-46f6-bc9e-f1f58a8cab79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0907c3-9be6-4ebb-8035-449281ea4267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54291e1a-8563-4e0a-aaf3-38a8d3fd4f14",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20feca8-80de-4717-8c08-3c632cbc4a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06315d0-a30e-4aeb-9759-4020cd86ba8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635ecb4b-e1b2-46fe-afbf-88d946a89db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5c29b8-5721-440a-8e93-570ee9bb7751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152ce634-771e-4807-a06d-32c4c199f982",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e983614-0f6e-46a6-a5a9-c94cee275280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853f9cb4-117a-44e8-b71b-c0538ef6fadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727ce1d1-2a2b-4142-aab4-5be7accbd10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a7d4f1-0a37-445c-b2cc-f1bca5f5df17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7949bdd4-107a-4d82-8159-0cabdf604a16",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee0129b-7e00-4b23-beff-024bf314182c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a24222-6429-491f-8ee7-ea976ed6a3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0e8280-bc7e-4f8b-a84c-aa99a60bf42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6cc6b8-939f-4f7f-ac92-cbbe1b392509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de8e80a-7d02-4591-9652-071fe4d98d16",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f2c62f-ad59-471a-8183-49c4ca7cd8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469707b6-5ad9-4fea-b76b-a24a4fdec69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977f1791-88c8-4933-9555-eb118310ec79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38fb8de8-add8-4ce8-9413-8a352cdc8aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f25707-e6ac-4b7b-b048-e1fc3e93452a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b44bf6d-8f32-4beb-b48e-fdc719401466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84be28a2-af20-46db-9dc8-d17fc9c0d825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b01d57-f853-412a-ad21-55e27d34a937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea5fb28-0139-4fa3-b462-870280502687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68da08eb-8e0a-4cd7-b938-5fa62c747c96",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde3e0ae-40c0-4fff-a0eb-8c4dfdc724e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f144f09a-c9a2-4c0d-aa21-8c51391659bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b9e503-1f69-4367-8675-4da46d80ae02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2bf6f9-66ac-4de9-8761-b24797e6eea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56a638f-fa87-4ed3-871c-67d45554a848",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4426d689-1941-437c-91e5-088ddbcacb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d28bcb5-5464-48b4-863c-c3d1d6c3200d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43586a77-5241-4b16-9094-02528efbb6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b889d56c-5deb-4dbe-9dc5-36292bedd859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8651741c-dc35-4513-a578-67bd6f86eaa6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d03930-459b-4f01-b782-28125fe440e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804c876d-a8af-4ff6-a606-b56c6a83ad54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a12bea8-4040-44cf-8460-b257234dd566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "12683188-18ea-4486-afe5-1300d180d971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855bf424-3372-4a48-b495-d4b077601b9d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecb7343-69da-4f4a-8624-72a6c9f79b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acdba5b-2e25-4236-a739-da1f99fe4e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdfe0c1-8094-45f1-a433-8729d7c65969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67ae7989-6617-4816-99f6-271e1ebf22c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b2675a-828c-499c-a466-fd70b05dd0fd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715f13b9-4107-46a0-8476-51c757a4e1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9891898c-d654-414c-894b-a994de723d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b627c96f-7c56-4053-ba20-8399325e5012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "802bbd90-4371-4074-9539-ceacbaa3de91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6b910c-c407-4cb1-825e-506d84dc085d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee337b45-da42-4e1a-b997-d7fd5e3a5084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39210d58-6b51-41e4-969e-4a097d0cf57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f83eb53-bc5b-40d5-9000-52f3423f7d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4860498-4c84-4c9e-bd6e-4061823d69d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22197b0a-6aab-4c3d-9074-f204749c1827",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2027d50-91a2-4d5f-a385-565c2eaaed0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7577fa6c-629a-44eb-9d40-314b8ec42717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab297f0-8acd-431a-83a1-1bb2cf0384f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b346182c-e25c-4cdb-a445-a868a25e0e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c10e740-e28c-4fd3-b08f-c8d1e7ee8c54",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01243c9c-e082-46cb-aad2-7cfdf5457eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cae291-8faa-468d-9149-518d7352230c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95a4802-d007-4252-a2da-74de92f21033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "363b4dba-ddab-41a7-952e-96244e6e7a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8f03e5-1228-4a1a-919d-e47d5642f7b2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94569250-ec5c-4e5e-8651-facc64120fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d5ffeb-1c7c-4097-a863-1684f3033292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2676b3-a96f-4fb1-92f8-213555257ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0126dee0-e486-4b61-b202-97b234779190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb78e4a-00ff-41c7-a37e-1a92082344b9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00e5a97-e22b-4a43-a3c6-16cccdf7d36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfef0557-fdf5-4d3a-ad1a-013543d3a3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fb07a4-da45-4da2-a33a-7bd61eca17a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6874a303-368a-4fd0-9c95-92f9318869c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805de26f-c1d9-473e-9e3a-df1e726acbe5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9b4730-9a85-4a16-b034-3779a6c23bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91432ee2-bc45-4bbe-a893-079ed4231e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0912c15e-ceae-4bde-94e8-e098c5044ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3e722a-507f-4c6c-bcd0-e953dc4f8c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0644be-d7ca-43d3-8c07-79a5ecebda09",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10398e8b-1a2c-4642-9b65-3805191375f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9234ae-fb31-4b63-9665-10d0fe5f2198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809fbd0f-e4ca-42cf-8816-b297dbff1db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65569371-0e12-4aa7-89bb-c4f3fddc8778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc3921a-93f3-473f-93ec-2f71b7a8e250",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3957f92-22f8-43de-b9d7-31da51714130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc360eca-fb01-4d47-a429-b775f2ba5c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cba0a9b-5578-4b0d-b009-5f18a9252b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e245b223-38ea-4baa-8168-2cd1caf6a702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a429376-af02-46e6-813c-a0c78362d629",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f148a1-7a26-4b6e-bfcb-fd8fd8abdb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e377da0-3cc8-4dc3-93ef-8d69713225e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6ec808-fcfe-420c-b24f-656c2a4471de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f46d718-d96a-4de7-b2bf-6806cc22e936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145e231c-7aeb-40ca-b577-0f949e936bac",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec277a78-5776-4466-af5f-2a6ec552700e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c12b76-9581-4af1-afd5-53aeb070670b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dbfb6a-35bd-4c11-ae3f-50510dc83049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c3fc17-7cd1-4b4f-b928-c926c0e28f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90b967d-661c-43ee-9037-65289b33d936",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4ca00c-74b7-4f1e-b589-7e7a529d17e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ab6b28-22ef-42a1-af57-ca4c916fc2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46049357-f421-40d9-8b3c-e8e29d87367f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b90dee9d-4dd9-4d9b-8889-9f1fa3a0d1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c7e77d-a493-4ea1-81d8-df82b639d81c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61dd2d12-2764-4445-8fcd-76bb09f315a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edcd1d28-1626-4aca-a3a9-b583f4133c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0e0be0-1d53-41e8-b39c-54512ae686f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5238efd5-e51f-44e0-b5e2-1d70413c70bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75188b81-9e3c-4f34-b007-9e2ff6ccd45d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c99ec9-15fc-410b-a781-b47a6671fcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94166c79-acfd-404f-af50-c8d764e7c83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c40cf38-9ee1-468f-a6b9-1a070880a78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7546850f-4b52-4f1c-9ebb-4e5bfdf8aa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428e46f9-e143-4e73-9b53-ee09b503623c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64f9b5a-78d2-4178-9b48-369717e807f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9707e1-7fad-420f-a875-5c118a045884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750fc99c-e347-4094-954d-d2ab614a4976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "081eaf00-7426-456e-8fe8-bcff7190e1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3312fc9f-7480-4d14-9d3d-9dbc5218d31f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4877b55c-c971-4a15-852f-b9f35cb264f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7496d184-da21-48ac-9ffb-e232e0b2278c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d12a37-82ff-4dbc-bf91-524e32f5dc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de985259-64a8-4c46-8406-ab444e537b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee012ed2-9afb-4786-becc-62917f8028a2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0205f9f9-df14-48ef-bf5f-d5eb61b1eafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e19fd65-94d5-41c2-bc43-f6d0ea5f43cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6803cb03-e43b-4827-a752-af2329a2b8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8e24df-18da-44eb-85ce-99042c643b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda80e06-a39b-485a-9326-c7d18182b2fe",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e681bb5-0c19-47fb-abc0-2ddf70a4f930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dc713b-e3f3-473a-a9c8-53e79fdfad1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd1e8ea-bd05-4373-9c56-eb57de434b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "81b4b42e-abd9-4e3c-87ee-27faa87b6cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16a792a-04e8-4bd7-b9ab-a60f1c031dbb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75f751a-0475-40c3-9a9e-607104c12db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03930b2a-4374-42ef-93bf-2ee97de13ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9663182c-6c7f-4cfe-8045-6fcac1b0afaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b341b92-ab7a-497d-9d02-99c57841939a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0c2367-2266-41da-af6d-ae7a810324f5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c5dc5c-fa42-4bb2-ba7e-0e8e42588313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c82c8d-d390-4cf2-8c06-9d5816619eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f457b00-f646-42f5-886a-717144836b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad999c06-d86b-4dd2-9c34-c78b112e554e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6413e0fc-9539-432a-a9ea-f21c887e5a60",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d5b3d2-cf28-46b3-a3de-99f29e4600a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd8ce6c-332b-4bc7-8791-4b12b408a4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ae9918-06a2-4185-8c5f-5eec1dffbb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78eaccf6-a8bf-4e04-be70-f54da2a1dba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a1534b-ccab-44b3-83b7-a2049879bbb4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da4ef00-d26c-44bb-b881-63979131b845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfb29d4-d959-4a5e-a17d-9c69257906b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc6a52a-701e-4eec-b79c-ad6c7f96b108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9714f52f-75f2-45ae-bc85-c603b746224e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8931e68-3050-4458-900d-d35c2aac573a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df6a9f4-fedc-4f9d-890e-b9cf024ef0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "82ccadb8-60ed-4281-b8cd-3b25817c363f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12ff861-126f-4db9-925d-2854ad2285e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdce049-e29b-4772-a48c-c65df14dd08b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "57932eab-8c8a-41bb-b148-664aa48fea2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d497d1c8-bb3b-4cc2-893d-1db5b3fbbd22",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ed412d-d220-456c-889b-59221050fdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "787c3f5c-1214-4c56-8f0e-2ed1cfc4d7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862c91b0-bea7-4fb9-b4c8-63c8e5963ebb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "159e4950-1cad-49ca-a267-b7adc974386b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0991020e-6e7c-4b78-82c7-a03b6611802a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56693ea2-c34b-42da-bb03-647c27aa8edf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fa0fbed-83dc-4b44-bb54-b072eab0705a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "384461d5-0a93-435c-9b8b-e7f95dc02293"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "473609e6-369d-4114-a529-edbbf1e474f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9036f782-52d5-4c90-bc1c-084eeb61480b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bf7e296c-1043-4c8e-a754-667074ddef73",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0592c2ae-205a-46fb-a0e0-6560f5411ec0"
                }
              }
            ]
          },
          {
            "id": "73a0345c-396c-4181-b1c2-075492cc6251",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa16419d-f1fe-41ff-8a30-01f725b0ba5e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ed0def49-0018-4cb1-bbf1-971f4781cb65",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daa9ee5-2ab8-47b3-a9f0-7887bd08fa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fe14ee18-0bd9-4e5f-8d1e-3f96bf1f4d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ada9a1c-4232-4d7b-8750-874ef9e88b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12996ce3-1c0a-4faf-a324-b345c211d7dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36ac902a-c5ca-462d-89a8-b9720cfd7df6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57b542c3-ac6c-4641-9adb-5d08476e6343",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac98603a-5e1d-442c-a3f8-4cf61d3bb3bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2b16786-6e46-40a0-976d-f56913b4bbbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6e851ea-19c8-465c-b768-d069bf4703e3"
                    }
                  }
                ]
              },
              {
                "id": "278d3dde-7f76-493d-8570-d3f55e2a754b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16447bc1-ab60-499b-89cc-8a79286d4619",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b545f371-74ee-4856-8738-ce30cf0398c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84329178-8db1-4798-8b26-8f30df0d64df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "28296dfc-e330-45ba-858b-b067df60f4a9"
                    }
                  }
                ]
              },
              {
                "id": "7462a9c4-b9cc-4ff7-ab58-c942a0e4c261",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd931ac5-aa83-4a73-9c83-5cf0a09dbeeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8870041-7828-40ae-b18b-2938ee306b80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ed6a10a-4598-404e-8769-aad97f2bc4f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e54ee4a-4521-488b-b4ff-717dbdee3eb3"
                    }
                  }
                ]
              },
              {
                "id": "8427f5a5-bc7f-4efd-a416-7810b7c1cb7b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8dd8921-34ab-45ce-a754-ad7f0d11be51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7bca3f78-89fe-4ea2-b370-a84b7333038d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c5dcc93-80b6-4870-aaab-a3bd8389c485",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "72a55e9b-a3e6-4dd6-a1e0-1fc207fb13a7"
                    }
                  }
                ]
              },
              {
                "id": "3a451d54-c952-48e8-ac39-296d10ab98cc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2245980f-0ef9-4b95-b47a-5102f44280dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e3818a9-2a16-4a72-b623-7ac4fd8ee1d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b0ea4cd-426b-4707-9dda-559c14674d43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f3691928-20d7-4608-b3a7-c4d966d8e786"
                    }
                  }
                ]
              },
              {
                "id": "e2e623da-8593-4bd7-8a54-2681de44749f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e253070-056b-4eb5-8ec9-36f6349686aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8caae1c-3a53-4a34-b883-716ff2db65bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad3763d4-113a-4e0d-bd15-16759c3d75ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf33d88a-7e9f-4bef-9d7a-ae01f8869c01"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d78d26b-6f00-4490-9292-cf4163560e40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4077068-9160-4507-848d-a7b40dfb7b86"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f55b9bf-9eaa-44db-b9f1-1f0189d9d22b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48753bec-bd0b-487a-8bfe-309b6b00473a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60588c73-70aa-4fed-a915-23e994936e1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9da584d5-927c-4af7-b4d5-39d7cae61eb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12e44db7-9242-496e-aaed-a0893f83e7e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a85da99-e3d2-4c67-b9b9-1fdd817a9aff"
            }
          }
        ]
      },
      {
        "id": "f606f1bc-cc8b-4cc5-ba7d-2a0e806ad3fe",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d5d48a7a-024d-46be-8e0d-4a7fd50b9339",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d677ed8-9080-426e-bc0a-1c1818db7783",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9815ee91-a2f9-4093-883e-efa32c06e62d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5880d14f-7e35-48b8-8be0-fdc122d66f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be32ce1-b66c-469a-900c-e34726e09428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0f0123-f1b6-443f-83d6-a7bede3fb6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f84feca3-afcc-4062-8965-8417ea82825e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af507f65-92b0-4454-8eb9-eccf961db292",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f2fd85-62df-4b9f-8935-440a1838ac0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466bae00-1ad4-4f64-ac2c-9436da909431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e79a73-5375-45a2-97cd-d8b17e3fcbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e65c66ca-a82f-41f6-a33d-5ac63d54b82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a658c1b0-414b-4bce-960b-e8ef3ab6371f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e2bd62-1447-42d5-9984-3c1ae723ecf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede800b8-47e0-448b-b30e-0c75b96447f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f0c990-ac1e-4cae-b7bc-84cb5e75b94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e266252f-8168-44c1-93b9-644c7750560f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9393b05-bb58-40dd-bb03-445713cb9404",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b93bb4c-b3fc-40db-a007-4dd632e4de99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c8cbe0-ed32-41af-8483-d616c0403828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb9fdb4-fb08-43c4-8dd5-681196a142bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a50544b8-6cea-498f-9b43-d323c3248f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe3fcea-582d-4a59-a021-b5b4642ba4a6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1e6e08-6d86-45db-a9fe-8b2141892724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0459d4bd-8564-4227-9330-481e567d939b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf113e7f-c41a-4843-98e8-609ad0123592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfad33ca-c66f-4800-ac3e-7d06015fd617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2c5f42-67c7-49da-8b72-47e90ab334c2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56109a0-20f1-4934-bca1-ca5c2b831b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc55b13a-3820-4c98-bbb5-10d9b9298dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee187a5-1925-484d-9564-75da62f1dad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6eaf1343-88b1-4f58-948a-02472809078e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fecb73d-1e97-4673-8e50-93de5538a67e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4ee12b-abe8-48de-9266-aafd3d27db55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c9c3bd-7bae-4e00-a859-493a517b97fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7153f5-6eb7-46da-afca-43ea42a1c84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6883b6-6396-43a0-99ba-306fba9c6bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ba82a5-b491-4807-854f-88b455650890",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c6b281-fe1a-465a-ac25-9ade130a0247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5ab012-0bcf-40d5-97db-0e8ed08c448b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ecea38-38ee-4cd9-8144-c60f0f3ac03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0348df6-414d-4f99-b004-a829a33d2d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a46305-fab4-4418-bb4f-dc236322629f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e607da62-df92-4d3f-b8ad-14652c4ce787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b50ad26-d613-4c65-90fb-41fdee262e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef5014a-d1f1-42f0-b2f8-17f294487b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35d3487a-a2e8-45b4-9d05-5c149300598b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00eaaa00-00ff-466f-85a4-ee711bd9f845",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12868c1-5d01-44b9-ae96-7477eaf7d573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d207225b-5ebe-4e22-9af1-c9a9f7321a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f6fc0d-2695-4c57-b160-763f8b3db0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74432d65-111e-42f5-89c8-d9e90de346ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35100e21-1bb9-46cf-9911-a0957da244df",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b6a073-cd44-485a-889e-fea56d8a334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94339431-c4fd-4357-81d9-7898472757bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906db3e4-02a0-4f5b-8d4f-9f09e8e6eb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "47c015a3-fba6-4126-9755-264394678f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18d11b1-e7e5-4a2f-82a5-295b058f0912",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeaafd9-ec50-4a82-a0bb-74aaf99503b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac206a53-16b1-4f32-907e-e47deca77d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f021f3-ae88-424c-aac0-e68cc0cd99aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c77cb1-795f-43c2-b5ce-719d6a19c2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d96230-9f44-4c7b-9283-5e379a1b9393",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea3fe65-e32c-43e4-91a8-e75080b19b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a17e81-13f6-4370-978f-ce3ab50bb697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376b7795-52c8-44f9-8f75-5846750c397a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78727596-75e6-43c4-9864-20f41422b16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c37d388-212a-406f-a588-70a0076939d7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa5015d-7ee0-486e-8c25-65feba625c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cd3d96-3c4f-4013-a709-be0e1c7b40e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199a3871-0a13-4f94-bc27-3f4ac431328a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "37e9d2a5-128d-475e-8e95-f06127b91ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc32fcc-1b6b-4685-8a5e-b482fcf75e56",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572f9a81-93c0-4ce0-8eba-c8e7726c87e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1a7dd0-967d-46e5-89b8-aa3cc98b037b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7dd02e-3556-437c-a60d-ae55ef7bed26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "035cc4c3-c380-4712-9fbe-506a82cca041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c10622-6783-4143-acd7-01f9557440f8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400ba4b4-a3fd-4438-af80-d13e2bfb2b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dee432e-4625-4367-90a5-5538712c7aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df252f31-470c-4f06-b5f6-e2e8645a149d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "43eb2e80-c0d2-4cc0-b31e-88d5b0117728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c131f8-169b-4c0c-ae1e-95392db8bb0a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c08700b-dfa4-45bc-aba5-2c249fd8d1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fccd4bfd-dcb3-44e7-b9a8-f50ebc9c2558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c74e540-d172-4298-8acd-31cbf2146b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81a2398-a4e8-45c6-a09b-478f038630c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3203c974-6449-4f3b-ac9d-389af6a39624",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc089e51-3688-4a4a-ae42-64319ba864f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5650b2c4-13ce-4c94-a37d-3f3f21b54735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61100662-29d8-407e-84fc-13882469b605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6dc2f6-48a5-481f-85a8-667f581bb044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e85c46-ecc6-4d44-bdb9-9dd8b12f33eb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb198007-4837-4efa-819d-80aea4197204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6484d74a-b15e-4173-888d-60e2bd214f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b74cdf9-2585-4970-82f9-d8e5dc7bf03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66b2c1fd-c165-4448-b7c4-5ee265213b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbce6c0c-f356-4458-af1a-49a9c9e865ec",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd54e240-1ab1-4e1e-9a82-48c92de620fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c6d99f-b9f2-41f9-9878-8c81e9252bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a46e8bc-3fa9-45ff-b12d-8f2dadb7369b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fddebcb0-909c-4270-9cf3-95a08d69a4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf888242-4d33-4edf-ba4c-a6a3224f4079",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7780cad6-8b2c-4df1-a0be-5fc1ff8a98e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c031bac2-40f6-4fcd-8ade-152ae3a088f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7826fe50-1bc6-48bf-bf9d-01b1da29c011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f956d4b1-09f2-4e71-9967-4cddbb118641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b603ac93-e3db-4706-8a36-3a0bd3fda4d2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08370227-bbc7-4626-9c7c-9e1c6fe24953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6edb389f-9035-4aef-a15b-054118384e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b03875c-2721-4aea-a5ac-1806317b5507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2defb00-060d-4c38-9dfd-ae8e577375ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90050054-42b3-439d-b2ad-68b0b49c19e8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08de08b-23f7-4c3d-b402-7c0f95bc4455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610d9a28-97c0-477b-af8e-897360dbfc8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a5db86-5641-4422-8ebb-6e8dce2a94ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c54b86f5-87a3-425b-8e4b-878f8eb26dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddb967c-4538-48ae-b9fe-e4785a5be4f1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ee2304-720b-40a0-98ac-d5c748f39b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502b7d4e-1aa6-461e-a2ad-a42913d3074c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517a2f85-fd64-46ce-ba19-570e1c0ceeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "884cbee8-1b32-4438-8dc9-7a320b5ccf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ecfa1b-946b-4ed2-a1bc-a4faa924393d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88521b08-8ed7-473e-81b0-0d2e8922c16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23c8d80-b1b7-4d25-8ae0-207ef9ccb601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74ac89a-d04c-43df-b4b6-6fb4727f043b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1575ec-91c4-4e45-825f-6ab0fac2a043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b1b4ca-6d8e-4e40-ba4a-078b44a5793b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ff1355-539b-4d24-a4b1-5302cb627cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d65ab2-622d-4690-811d-b3a6d9585e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bfa205-552b-44cf-a134-ab4b670d30b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26c70383-3ad7-400c-932a-2d2413c9859a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9ff1f5-dce6-4812-9d09-9af7e6d9e694",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae72fbb-d2eb-460f-bfba-0071ad4b9998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0799239-a2d5-4da3-b0de-5669b6b33dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d29982-27e5-40a9-8924-dc583c86994b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e26fa9fc-0512-4d7d-9410-a03443e2cf1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca48a9e-76b2-4786-80a4-b45c58816e99",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f4f1ad-7b6b-47c6-8b72-086829278025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cdb85d-a3d4-437b-8a79-71ba74b5eed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba77aa3f-e993-4e24-836a-8c4c4167d0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73f25e87-edf6-4ff6-8e9b-df07ec403b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a181455e-4835-4238-8b91-b4c2166c4b74",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3503a0dd-f002-491c-becd-0c05770092f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2096281-20a5-44fc-98d4-28075ccba71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b883dbee-cca4-4357-92fc-52dd10817ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6927eabe-ca7f-4eec-af44-bc35fd4af595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bf9606-2b74-4113-8029-71807e990002",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5384cb-610a-45d5-a408-81fcd327e019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6373c1b0-31f1-4486-8c6c-9164bb553556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb6c1e2-7783-426e-b2c3-b6206e039902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b162b68-e322-4b96-a4d0-e52a8c59e092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b6c0ed-c199-45d7-a247-da3948784c5c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6760547a-c4a3-4fd9-8549-3f57facdc631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e027fd-a59e-46d9-bf52-327faa89150d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a053fab-ad5b-4fb5-8666-883f41643680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7796b728-7195-4890-a80b-f600e2807931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a762f336-1f9e-4a47-9c93-7314aa22a976",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3b82a5-24bf-4f30-a68b-5280bfab1137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c709ba-dc1e-444b-8126-e4c5909bf236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67221c3f-92f9-4dc0-95d2-625cb364418a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50077bb0-7d41-4924-9932-4da97c8d6f9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c02a605a-bc8a-410a-8855-5273709ca3a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "570111ab-5caf-4f20-8e56-1318b8a313cd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4489e817-ddc7-4a52-b01c-d5e5435052d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8be514f3-e833-419b-892c-5407b2e145f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60951f8b-f857-4b8e-ae24-3449cbb30d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10154ccb-d336-4a69-b2d1-5cdc99cc03b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e8dd35f-9dbd-4d45-ac48-3e122c2a871f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb38634e-dcbe-420d-9ea5-59a12da703aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a4f2486-bab7-40c7-9dc1-ef0f6373c05f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b269034f-acba-4116-8234-a9d730291cb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f10968d-aec8-48a1-852f-7323eec768d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0ea36430-9bbe-43fe-badd-19dc9d53a817"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e968f81a-546e-40cd-aaf8-da3d1c2a9ad6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b427ca05-f4df-49da-b5e9-4172a2061f45"
            }
          }
        ]
      },
      {
        "id": "d4986710-8f63-4e03-ad0b-f52947770710",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "72a57bd6-f958-448d-8075-1075b0c9b3de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed118472-6fbb-42fe-90fa-588b37179352",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "32793c65-02d0-4fc7-9827-c1f61d0f7b31",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5285b5-4bf4-4efb-85a6-9ce35d84da82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e081af6-7ff4-4f39-b43d-9c9146fa6e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de05d16-a0ba-4105-8c57-33af47d948d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "40bfff39-5bb4-4360-9c3c-819a7d6ef301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3348f68-a78b-4378-bb82-7f717a142326",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60033ba8-1c4e-4483-acad-e65efaeb5314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5915fed2-13fc-454e-bc4c-acdb5e805021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a15855-d23a-4b45-bba8-371ff97c2042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eed3214c-dfe5-4816-ad02-d184cdff6ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409a1305-597e-4872-82cb-ba7b7cb93ecd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cf7711-d356-4260-a29a-8e907d999247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db97116-c6db-4e92-bbf1-1a4ac3ec01ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bfb06f-a96b-435b-9707-e7c943b1f0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29269d40-50d8-462a-9965-15b1d8c2a5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ada8393-92f1-4c1b-bda3-00f1703f6199",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cafce1-6789-4b9f-9e82-7b3573b8e353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5041c4fe-3fdc-4bf4-b420-9977bd634c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a289ec94-5666-4090-8949-981eb6d310e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a90572bc-93db-469b-ad24-06b59f2e4150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01849581-3b31-4749-9ddb-dabcd60aec93",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ea352d-67d3-4cd4-80b2-fec2401d6ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3a1473-b07b-473d-b7e9-4db4457c6a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55eaacb1-5a72-4548-8596-636073d1bff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84db2e2a-ed3e-4ca3-875c-d4b240536d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3434c34-3ffa-48cc-993c-b0ed2f3808ae",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52d88fa-b753-4abf-8530-ba80e4f1602c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753ef168-4a36-430d-896c-75877ea148d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a26201f-7063-411f-9975-4ec4b8acb64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "050a4c45-041a-4949-9740-0bce6a87cfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad03ebcf-042c-46a0-b112-a47d1ceebdba",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcbe59e-e14c-48b7-8d90-f4d50a427744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9e20ad-9574-468b-b64e-852f08c1ded7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5f30ea-5bd1-4b9f-a340-7aa797175e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "921051fd-8634-439c-8680-732e2f5994c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a36bb5f-2fc2-4f61-a09d-024161a529ac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b9788b-1a7d-4cfe-90dd-35f211f55ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa34be5-f08d-403c-b833-7e7278be3d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a88595-defc-41df-9143-cab0b59f53dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e562f698-6ccc-41d1-8d6d-3ddc08f0f72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9623e1bf-2336-4535-a3cf-d378df1e6dc3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f664acd-71c5-4ff8-848d-5fa7fb2c4224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42946d99-ed2a-4ecb-a44a-05ab44ba41cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb11bc2-f263-4eeb-a8bb-baafbac5b3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0914d5ce-277f-4375-b516-7a219e47d7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6cb5f7-4661-406b-81bf-7cc720473dfd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9636696-0788-4033-a3ec-c90ab9b3073e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed888b6d-3b2c-48b4-8903-cfe8f8b23829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cab33fc-799b-4f3a-95e2-f0745033729b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de674459-fd9c-402a-b9ef-296329a466d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf39f54-058b-485b-94f3-b14b34768eed",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b605997b-c460-4a9a-ac0c-c56906ca6477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd90d3d-7814-4b46-a587-1544b3a4f449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860c9bb2-f881-4822-82e8-5a0848f397a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e777561a-d429-4520-93f1-2f76f3e96211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d89b9e1-5486-4a2e-910e-af7736ba927a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3577e2cb-87b9-478a-8466-4d254ce45ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e769f90-eeb6-499c-b61b-999f1cc7a2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cafc1e-7151-4cd4-be7e-8f8d729da376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b94609-825c-43ec-ac0c-a87ecd8e86f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cd8464-9e28-427a-947b-69f0516442cd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a705753d-c630-418c-8258-879235d6a12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa3584a-341f-46bb-a0a6-3ab53e78df85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d439c1fc-2779-44e2-8d17-cc28a240359d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d220f3a-b59c-4d56-8285-74e724a4e94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb32cc5-ae7d-4797-bed3-6abfcad1e178",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa7b713-e9e1-4866-9c7c-81cd4c50dce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea753f91-ac91-4d38-8f8c-21e15094edb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e756a83e-f9bc-4eb8-8b37-5b577fda5b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b25137-49ee-49c5-9393-76113cda9b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f2f32b-8b9a-40eb-b4b3-b759bdd3ec17",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a078ae88-db2c-4cf8-9b0d-95d0af6542f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64dd32e8-75bd-4342-a127-710431834d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee373b25-6c85-40bb-b2a3-47219d25c85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcce2752-cae8-4021-b243-3019a3ad4ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85392da-661b-4e64-b1ff-ac25a5eed063",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a4426e-a02f-48c0-84b4-ecd6c5ddb7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec113ab3-04e6-4b0d-9acd-a90d6227f7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8602cdf6-8073-403f-b6a0-4fb969ff773e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb23eda0-06e0-48ce-926f-1a97608b2248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5d16d7-8860-4e9b-ae22-809167058028",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b35871-b6a4-4916-bffd-a27158f37710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fccf262-75cc-4cc5-a4d3-fcd609662475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad69ecc-6810-4ef4-83c3-68601822dac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d763181e-c18f-4bf9-ad60-23fc1ad3b681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de30c067-4ad7-4164-8c13-498ee087f9b9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9861ae87-4d19-489c-aa34-2a8219a8b517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e8a24f-7390-4b6a-8947-e4ece9b349b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b09457-744a-4498-8e71-abec6ff14344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4de931-7557-415d-a2d8-d8e899037974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84ababc-dad2-49db-8c7f-4e8db6418063",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db1af61-8597-4ef0-b697-0f12374b23e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d316d3-d43f-4488-9fc3-4eb818740992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26287b3f-ce8c-4be0-8352-d4d978199c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9207f4-95e6-4d8e-9a80-8b239231d36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45633c41-88b5-4294-ba27-76e4c19acfa3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2889f0-3868-48ad-b140-8ded0717ddb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b4c808-3500-476a-ac61-ffa726b91251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01707c4-31ba-4e02-9134-3352c1feceb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "863d85eb-2e8b-4a43-9b51-0ceba35b02be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c97f822-a38e-474a-ac43-7c69daaa13a1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dba79b9-8102-4148-8cbb-6ab62e9310de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0aa60e-ca95-4673-9fb3-9171b569eb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b219e3-98b9-4210-b3cf-3aec3cf66720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba053dda-79fc-474c-b5f9-bd38d1bbd32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95236fd5-c4bf-480d-b8b9-938e9aaeddd5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960e1a83-718e-48d7-b191-ae748331c198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ecac53-c01e-4633-9bc4-89422223d69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8194ff2c-dfc3-4360-865f-f97eeaa19ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ca7fa0-1097-4664-8f8a-14a5a7d1b2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee7a3fb-6d89-4444-832e-be0374ec2867",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c90537-1792-45ec-8cc8-998b05f1f5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4add3cd9-f601-4bf4-964c-e6ae86018c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8378aef6-4527-41d4-97e1-fc6fd6e619aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5436659b-c78f-47e1-a556-908549e3fa95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461cc566-720b-4b1e-8096-2545eb518c25",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0996cd6c-bb7e-485b-b5ec-a20f896337fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81de3d4c-c456-4717-a9b4-86161ac83d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe80e82-0f16-403a-9a70-89820db94fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52d062b7-a8c7-4d4f-81f4-73425bfbcc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2c81e4-6fce-495f-9a3b-221d5b90b716",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f80c4d-8beb-42cf-b66c-2bc1fc5c01a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb50008-3474-4bea-9e84-e721a6e9358e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529caea9-4c2a-4c64-af16-81576dee1a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea88a05-44be-4be2-87e1-bd40052c49d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5535e16d-7f45-4ce3-8ccf-4d388dc08534",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fbd149-83c2-486c-83e2-ec1cdd43334e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6dd45c5-0268-4449-8d30-e4322aa331c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e940e86-1fd1-4c53-b852-410000f57ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd97396d-ac39-48ab-8ec0-1734c4ecae1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa30f72-9e57-41eb-b93b-d6e22450bc7d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf735470-0f49-4ae7-a83c-9f97d2c79865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c7f4ab-7fed-4f61-b7df-25ab556474bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1482c7dc-e3b3-4955-aa0a-0d8d825a1be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "610f3cbf-549c-4ef5-afe4-405a7efee879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa7eb80-c866-4ab0-a0d3-87da9dfd5097",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd4547d-a3f1-46d2-9fcd-9ee76c6165ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d27d60-6d78-4c76-835a-5636eb2d17b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ec4bb0-44b7-4e4e-b92a-590b648ad724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1201eb71-c3e8-4f67-b081-a640750c01d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8942fa13-c8d4-4270-a6c2-3e192ac98998",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed247aca-bc52-4923-8c38-2460fee10daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc0901c-ea4d-42f9-ba20-9f356579ca3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69697632-3c38-4417-9908-6e30dc970135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f18bb392-3d7a-41db-92d7-bdc0639f232a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56b1bc6-4458-47f8-8c21-8a751f5cf1a3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b364fc3-0259-4220-a5ee-ed89f4f4eb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d39844-2c59-4881-a96b-6038591d481f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0946d8-0119-46b8-afe4-6051e0368eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe9b4de-992a-4343-a8fb-c6508e7e7ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447f4b72-ddec-4e73-a3f7-0778f3ee01c8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b279aa2-9761-4c05-91bb-3727d2014b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4bebbe-2bab-4ef5-ba99-7124e12395c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327630ee-4592-4c82-863d-5ae8658f1a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b16330-5ffc-46b3-811c-db54ab5b503e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d89142-0f66-49c0-b82d-5281ce247a65",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01344d2d-db44-46f8-90c5-50d00e69d96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a307ad-a53c-4430-abd2-aa9232b52a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da83fef5-928f-4839-b768-f94b04a13962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "184e7317-1049-4aad-aece-580703f1b173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab65faf7-4834-4124-a6ad-8a14a1a59f20",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790195c4-011b-400d-9e75-f3ea80069ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419340d5-80ad-4109-b871-6394648ab36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859ea3c9-1612-4238-84a5-e1f3a6935fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6222d72f-1504-4caa-aa8c-12cf3e5732eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ace961b-9cdb-4005-adcf-a362bf135905",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a3a6eb-c490-4318-91ff-7f363203f115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380e3cd0-a82c-45c3-956c-30826b7a2fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba58dcc-060c-432c-8261-d04ee1b8615b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0283de5-1861-4c33-8f9c-5e392ea4da71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f9c033-53d9-45c3-a393-92511413c981",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba1c17c-2a80-40e6-80e1-48a0d5b3fca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bb25be-b4fb-4ce0-83a2-9ad4b844210d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c399dc6-748c-49f3-8b52-f44b5fd432b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e070d9e5-5dbc-42d6-8ea4-4dc6539f8336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88312788-4d7e-4260-ac15-e78105814870",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7fb0a4-9fdc-4c80-b495-e78609d710d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef88b0e0-7d68-49d0-b8d6-998273e2fe0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d4121f-ae37-4e04-ad8c-ddf0f70a87dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54a72800-48b1-40a8-8624-45caf943de3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8268d73f-32af-4439-87fe-281f9b82768a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656e52d5-7074-439c-8dc8-78cfe5442645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022f1f20-69ea-4a0f-9779-77d70d331884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50328d8-fcef-4ebc-99d0-43f2765c2009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5793d36e-f37d-404e-a173-3f84ab4554a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5500ff18-12d4-40c4-bac1-ba4a7df2c552",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb8a537c-16f4-4dc4-a736-519a90e54265",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7f2a60-3044-4eed-a542-9a4f66d86696",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b6907962-3fd3-449f-ad9d-1c5f07d74dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f9896b-6455-47bd-ae25-ff8125370c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4fba856-576e-4a06-9447-d40b6dab1f3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f95e09b-b030-4897-8a6f-d54bb541aa6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a46c3caf-4361-4f1a-873a-ac726659ed85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5779117d-04b1-477b-902c-01d32a8365d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f6e4623-38ce-4dbb-b137-61404077d915"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "259fc9b1-e9ce-4ecf-95bc-33781a160333",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d1257218-e76a-4be9-927f-9e2acf05dd90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cbd7cb6-1605-466b-8d7a-0f0f822dfb98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7a4222a-1d5d-4543-addb-c540bf5155a5"
            }
          }
        ]
      },
      {
        "id": "a463a9ac-f833-4e18-b556-07b2efd9dfa8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "313f1a13-3d3f-4a3d-9b54-fbfcec071ec3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ffb67b2-cd2f-4f12-a0d7-d438ec39b22a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44c4ce03-7eeb-4719-a8c5-2b56b7d8eb2b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197285f7-f9de-4a38-a5e9-8ef54c2d2b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02120721-d95b-4862-a537-0b42684fe44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bf4af6-7e8f-4049-afb2-7baa95fc5567",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fde78b-37cf-4791-ade2-a106b5c90568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c23ecc7-7bd5-4030-9905-32fa0313e152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b544ad4-15c4-4d26-ae69-6a8408e92128",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3357999-910f-41d1-838a-f16b505b382e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15257b33-be2b-4334-894c-ea2d3bedd41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6500ca5-50d8-48e4-9719-f0dc02392dd5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82afe741-293e-41d2-a737-91ed6cb3827b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03ff7a9-9079-4cd7-b107-dd9f853c03ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd8a6ae-8f4e-46fb-9452-ab81cda5af56",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd33e43-bd65-4aff-8e4d-2c365af97b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941e21d7-53a2-45ad-be99-75ea2bba4974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec92b1ea-519c-4ba4-805b-08df768a3db0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58792472-68c2-4f3b-93ff-62747e8573bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9409d39b-512f-4039-a558-2da789b979a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e204fb9-9028-4bfc-8d66-8ee41b45572f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3737a58-2417-4a0a-bd5c-61b9851c507f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000f36d7-f1e2-4db3-9aa0-29ad48c489fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7064e6-2a1a-43d8-a620-77df8d5f19f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069b9591-de99-46e8-a30e-4594ec26dbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67da2d04-0214-40c8-8b35-9746e5b19924",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395594c3-97e6-43cb-9fca-1813cfdd4ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb37b80f-dcba-4c9d-a9b8-210a75656142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b5b93f-f0b7-4bae-a888-f414d28dfd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d0de25-30ef-4e69-9a71-1f2ea20c38c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02fbf34-edd6-4a2c-955a-81f422b8b6bb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef10261d-4d77-4e1a-bde9-78e92b9fa57d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e59c638-3ad1-4f79-9d71-df24ac309d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb57a1fe-a25c-4735-b95b-9bb47e5d3088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e701a7-2d2a-4497-b1de-83819b3c5497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5993c42a-c227-498f-bd24-744112b21ec0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa190b8-7edb-4786-8ff0-92afdc48dfdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "577c86c5-0c07-4310-96e4-c4351c5de281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95a9fcb-1ea5-4a6d-b7e2-91e4fb667c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ea0814-0126-46cb-a785-d4c1e27fa232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44df133-33ac-4e0b-96a7-87cbbfee3ace",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b568bce-98e1-450c-90f4-58adac03316d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c18a7c6-dbfd-4c9e-97f3-3445c90f1ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c39f8f-fd7a-4897-98bb-eb943a8f3ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c105a0-fb88-4acb-ad78-85723fa9f31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1791a9af-1972-442a-88e5-dcc0c879e69d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595a3fbe-0ca9-48a6-b74e-c4d7a022d873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1875022-e9ad-4bd0-9b5b-15dbcd1c398f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7320746-20dc-4338-a36f-5f18edcb1d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26dae313-0f1c-4d52-bb59-98b468076fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1641a78-8f87-49a4-bf6d-637f2db201cf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa047b92-969c-4cb3-841e-8791de7789e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b27f3ff1-46b8-481b-8f7a-749d02dbb231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12efd635-8e1b-44e3-8b7b-5ca8176307d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738e7723-0701-4bf4-b10c-f9400f57e1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fa26a9-9ce8-45b1-8450-27e0745a122b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb91c91-596c-4ae1-a733-bd726bca4ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d30a78f-92e6-4647-9ee7-cf23f6f0cb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf02c1b-de28-4b4d-88a1-f261f9e9f371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de9d8da-f068-48fe-bee1-1d51bf70559d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83357b0-3821-4658-bdc4-c9e5b4a20bc0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5b66f5-4224-417c-876a-39ac7aac43ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aae2bea-3269-475b-a7c3-a9da216714eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524cd08f-396e-43af-ace4-295661d37a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0107388d-9202-4b47-8e2f-fc817eb20421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06755f04-7b4e-4eb6-a7ab-00e404be8ab8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a58b6a-0b90-49f7-af4f-0c619e63a444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c40080-c1ee-405a-8404-c6f83c292645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a24ee0-10d9-4a5f-b8e1-412d66cbf340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d0a832-49d6-42bf-80a2-3421e77f3daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b2fb76-cce3-4c5d-a027-9e835558ac0b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe2d773-e7c2-4358-9b25-d31557136990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990756b0-a5b1-4da3-806a-a02e30085afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e1592c-a621-4794-84d3-3fbcc3d09852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db049009-82d0-4ba9-8a7f-8b117146ea03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3f2c50-edf0-4223-8bd4-a3049a701948",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25210e3a-d7ed-4a3d-9238-4504f1726ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51be5ad9-5c53-4dd4-9677-57ccab8e9250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d06df04-358e-48ab-90de-57f00d3f7557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d851a2-7703-4198-ac12-4902f0e76b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc0de84-955c-42f5-b135-8fa6f537933c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe9df9b-82d8-4ea6-82ef-206a2b8bd182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59c62fd-585b-4e01-b8e2-2d76701d0b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783eae15-9b25-4c27-a4fa-1471d618bea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c166da8-6e61-4f03-8bbf-5d1fbaa8e106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a53ee02-c870-4439-ba7e-588b2bc78f84",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5057b09-4f24-4ee1-aa8b-a11f6e92909b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8b1f93-4a1c-48f3-a708-389d4e6d4996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c049c4e-64d8-4ea0-802f-5bd352da662f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d0eda4-c42a-47ed-937e-640ea409933c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708f6b8c-3ba9-4ed9-944f-a96358b0f966",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33b28cb-8dc4-46d8-9fa8-f25b265181da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d8958d-2a18-436b-86e2-05781f02a17f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c1f8d1-a89e-4787-b978-b64e3527180c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40bb305-a205-4240-a72b-c64eda00f9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69896d1-389e-4e5b-b2be-b5fb4d37e4ad",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cd779b-f086-4d81-a1d4-6c80e93b3216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe2f1d5-9115-4d45-87bf-6b17d8e50d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cb5e7f-ac17-4952-956c-3a7e708b9615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4fca66c-12c5-4374-9f1a-bc972097b200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9de19d5-229c-4305-8f3f-da047cdd2f8b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc62ba70-bfea-4996-a527-8b62d6d6de24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c933bf0-8fbd-41d4-924f-42551639f0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e16470-2a9c-4a7c-8ed4-6a555be1c86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a571cd0-3c7a-4faf-a7ef-0ceb3f5b0bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70ae504-eb1a-4170-a805-fb2e678aec10",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b665b7d-3186-4864-9403-0b26f879fb5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3690738-1aa1-48c2-a5b9-725d46280c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ef1584-70fe-4be3-99dd-60c6c5287c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f345770-3971-4f95-a391-74587b2154dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dacc2d-d637-419d-83d6-c3b63142e680",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a825775-1c35-43de-9b21-6b077326f31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b8b104-d442-478a-a5bc-47f9579906e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9d3194-36a4-4a53-b1e8-b54d49603a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110fecfa-415c-4608-b244-4124dcf2b780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f808573-f480-4ed6-942e-6e61a3272962",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0d6ef5-7597-43a0-b400-febf990381cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c955172-9b16-44d4-af9d-e2ff344b19c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d4635e-fed8-4e8b-9e8b-cf4149de0d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d48699-aa0d-4899-957e-ad62f9ae9d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edbe19d-23f8-445f-83e1-cdb7a3bbedeb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b931c90-328f-4337-bd6d-ec9ad3b952bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c3af44e-a355-4dbe-8e51-8068f3f7d53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03644d45-f2c9-4c4d-9064-17e670321ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa85efca-45fc-4cfe-a463-cb1c2034b2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e841e7-9f8c-46d7-a288-03ea2def11b8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c8c8de-3e74-4ff5-9139-2310f1a3fa59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a8db93-70d8-47b4-a367-1fce5b65c769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9857de-b597-44cb-bfe4-2b7483ae02a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1defd2f4-bc2d-4cbc-92bf-822d076a52e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc094b4b-67e1-42c3-8cd4-f2752c49f042",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da56362d-8cfa-4f7b-bd92-b3c6c46afd01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f5d53d-37f2-4095-94e0-c27abf131533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f79c174-bf9d-4b94-a8f1-3ea92cde9efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fc56a0-d282-4f0e-9c69-b0e69383a4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b6f1be-1d52-424a-982e-723a941465e4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9344628-4765-4675-972e-8df643a5b681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83dbac57-9567-4ac7-93de-503007973b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0283ad-554a-4de3-8309-ad15212eb8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8ac30a-cda1-4ca5-8c1e-d438d8d28629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bfc8e9-f606-490d-a75f-be1c7f260345",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e2bb5b-d96e-4aff-a72d-03f8b36ad811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21fff9f0-ed0d-4a7d-a48b-6bb0786e7382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa93862c-cc8e-4fc0-9b8d-4298d6d83ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c348ea-2afe-4b14-b7b0-fb233a3b3d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019eea28-b48d-47e8-a02e-13c226f6f419",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c00054-b3d5-41a4-b76e-5a5e77f0c770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29d29158-5de2-4ae0-b55d-f67f0a1d8aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0c9c74-38bc-47e5-b0fa-31437aa6ef95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794b949d-fe1b-43ef-a826-c47fb89c134e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb4b877-eb25-4c67-90c8-3087ebc40fcf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116133fd-eaf3-41e4-8d26-178e862dc76b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e298531-9fc9-4d5f-82fb-3d576852810b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e465ed-0be9-4358-a1e0-5801e6357ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575a8bc2-81ea-4671-8bd0-79175df90f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6958149-9853-4318-915e-a6044af43ee3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cab6c3-d064-470a-9b60-5e026dabf81c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f10b26f3-620c-4b96-b60b-45d4a30f1b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca703da4-15e2-4633-b079-1507ad319970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b94d74-d001-4c2c-a496-3c6952db2282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602d772e-4881-4c2a-972a-2c6f33f23bff",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d3a012-d777-49af-97ba-724c3889f9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407ef8c2-4b46-41ab-b856-a520a8bb3839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0d03f8-a1c1-4633-a600-9fbe05fa9f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef684a5a-c1bf-49e1-90da-daa9bb903438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f72a547-7d2b-438c-a067-4317a0822b45",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8f2ab7-727e-4fe0-a120-ba05003c4d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2eab40-4f5a-474c-8fa5-a0a10f662e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f666363e-4a37-4f19-884b-36ae1154d1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31d8001-b03f-4b55-ac21-3053429b7cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa263540-ab27-454c-af71-b9f73d29eb62",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b995152f-6147-4acb-8a54-ed86ed430eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b7cb6d-f3df-404b-b96a-a207f5e8190b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aad3892-416e-4116-9928-16ee72225caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c283cf-4b59-4648-991a-45bf33234e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa2ac38-8099-4364-bc2e-f46c9dba9106",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa74834-cab6-4213-919b-16d71b32d497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663ca52a-e5d5-455e-8bac-365edbe0ac93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932cd642-3ebf-4d5b-b3ca-612da1ab9345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc85df7-91ab-4546-bb90-faceecac19db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e7933d-320f-4dcb-9981-573c256ff390",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b677909-0925-4197-a8f2-3d2ff6ee143d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684b24f5-a9ec-4fe6-82fd-245efcc91bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9763804b-347f-4e5f-b6b9-05a16b630667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ea4b7f-4171-4280-8da7-c5b1661602db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3e915b-0422-4904-a160-ae436ae46637",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce368092-7dfb-40e1-80fc-be3763567d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5d21b9-9487-4cc8-8533-5f2580e78476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a4af09-ef18-440c-8c9c-c2949734ebb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47be2067-167d-40c5-8813-5e2b91c57e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f37d82-7914-451e-aae6-845387807985",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669e2064-72af-4552-85d0-3ceccd559fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35aa52d7-2bed-460b-8811-4f4941f4d02e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a08fcb-f7c5-4553-9691-fa79d10585a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e44a3a6-81d6-47f1-957d-6a2a87a9d8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34feef7b-b80f-47b9-8426-0ac12795ade1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e19f72-69d2-4b79-a89f-d845da3fe33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69803bb1-7dfe-489e-9ed5-b9fb3b59e1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9ac728-68fe-49cd-9359-0d99bd168260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f5826c-2876-4037-8470-5d337f021a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d0318f-32c4-4b67-a9b3-5c34a971770f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5eda08-9584-4f08-8374-4faf1e13c905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3f8083-0aeb-43cb-b47b-f47ce56a4c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfc7161-e67e-40dd-8f53-fa6695344af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82479f2f-df96-4b31-95cb-b472980454ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2398eff-0ccc-4d51-aecc-4c2c51a5fbb6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45916999-d6cd-4e4f-ae65-db39df126b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee0d581-f6df-484b-847a-d484890d0ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46673e2b-8141-4137-9206-08190572f7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896f31ce-0286-4622-8902-c865a5d7b8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c76ea2-b4ee-4f6b-9139-a02c5a83cbae",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd605f3-922b-41e9-8b99-53cbfe1b2ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c257b833-3882-4339-98b7-4d87397243f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3311f9c1-b35b-4a25-84ba-62e01b8a2662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc2d475-ccaa-4a14-8b43-aeb7e8efbd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673f3090-275a-4ee7-acfc-ace1856291ce",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152de5e9-cf78-412c-adcb-393b44ecf594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8d8d62-ee5a-40ca-904d-99a2b3440de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae31084-26d4-4382-8f15-9672e1f32692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7dee8b6-4678-4f97-ad10-ebd91c390d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad10342-76d3-4bc2-9896-08f9df844adc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23ad49d-610e-4ec4-84eb-48e15acb2e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b77b11-e379-49cd-ae04-07ef559a4655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1a057f-e67c-485b-b5ee-228e5c6e0f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8e803a-2c9d-4d2e-88bb-cfd6933e5c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0621171c-db66-499e-af91-37a34bdae655",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7967629e-abc7-424d-bdbb-15d2f44cbd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01aa8986-48fa-484e-b988-cf4e70346679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa36c18a-018f-4dd4-b153-5cf311d128e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ff8362-f5f0-4c7f-b29f-68dc7cbf9d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdf8c70-eee7-4503-9fa6-e00d5342815c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d60494-f88f-4a59-960c-07cba0514a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012061ed-1fc5-4a3a-8487-e072eb00a5ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c957802-8c03-4a10-bd1f-3af489b95799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b1681b-2c51-477f-8fe4-b91a19ab3291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c648bbe4-cab4-4e99-9789-a7de21b590ca",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7862ce-fb4c-4fa1-8091-634ca5de93e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9c882d-d217-4b2f-9172-34328bbb9d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ac193d-e393-4798-a6a6-ad312e736980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa7525c-4856-4b5a-8eb7-af09f2c4c63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e31d7b5-a1e3-4606-9f8a-0ddcda67612a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b21320e-9db6-45b4-8c05-04c6f3ffab77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76345d6d-3a94-4e74-9b6a-dc3d8f9926e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e662196-180e-49ed-9f71-e13f98ca2e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2127b0be-61ab-4128-a5c0-a66ac07648b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c576b2-104b-4bb1-a7d3-627f4244f6a1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8eab6d7-d1c3-49b7-807c-305a4d6ba130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b8f68a-5254-4e7c-9426-24151e989c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33562a72-89ba-40f5-a70a-12cdb598cf19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d56996-dcaf-4c0a-a5c9-d5a5df4ec07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043e47fd-a5f2-4eb5-88b1-a99434aa02f4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e113014-0a25-4cd7-bfd5-c5661e5a6556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17522335-0146-4725-9a96-0e350fd0c538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4edb0d3-ccb5-4a44-9823-0bd26b4b0874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63a4fb0-9526-4435-8dcd-d80a7e0a57ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04930d24-cfb6-412b-9b90-a341e9438f17",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fb452c-c7cc-44e2-a147-947b6bddb587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d37219-df71-41b1-94f9-318acfc11b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11640a8c-5925-468e-9223-eecf01a7d18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e88a47-aa10-41cb-b9b2-4cfa0a853fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3427e895-e13f-450f-958e-cc49e3ea9081",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972ac9fe-3a90-41fe-a11c-18d5ddff40bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bf0c5d-2d8d-43b6-8441-75f866163e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63dc59b-5ec4-43a8-82b2-8e20cd8bbfb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757be8e2-f9c3-4ca8-ab40-651297ae0b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56cb34c-2721-4d27-9caa-76f8cc8f5b27",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8addc436-24c5-4b97-bccf-5b9ee55c07b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0793bd5a-56fc-41d7-acc7-c790bee333ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64f9fa3-a469-43c9-a497-c94617aaf944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d7e1fc-74c4-4954-a165-04baa546a612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ef8f21-9e1f-47ca-b779-a8fc02355a60",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5035e0-8520-41ea-ba4b-dc091ff9a74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2909dc-6db4-43f7-a20c-a314600da4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d55c28-580a-49c6-9f45-18b948e789b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582a0c33-b1aa-4a79-ac2a-1274bbb221d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff91d5f-25e6-419d-83a6-dcdc20fc0454",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dfe670-acbf-4526-89e9-73ef6b51b7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d9996c-993c-4bdb-945a-bc891bf43696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403cf412-f776-43a5-920d-1f7980ab6812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99dd8fba-34bd-470d-ae4f-09642c624a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d753128e-75f1-4070-938c-094689b8fdd4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955fc850-07b9-47ba-8a4a-2610d0c1cfb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63253f9c-b59b-4ee9-a62b-fd846ce870bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3ffe68-0626-4edf-8318-b565f69c1a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e84cc7-8d8f-4a1d-b3bf-aaba9790077f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83575aaf-0a0a-4dec-80be-61916eaaddae",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fcd13c-a041-4f81-ab62-3e87bb6fdeed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2814df16-ca33-422d-a053-96b75fa4640f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e042e263-4df0-460c-a2a9-918a58a761bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89d7d36-ea89-4000-954f-c31d4529fb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b163df-973c-4e4c-bf7b-f1d883b21747",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a278d3-6783-42b4-ba9e-633cfe5ae639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d31faf5-eb5f-4b37-a025-7cb7578102ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca11fc3-6ab3-4de9-8d6a-2532d8718585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70185cc7-e7cd-471a-be3c-efb1a1205da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5714cd6b-0aee-4a23-bfc3-8463c059b9b7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b46e34-254a-47e0-882c-c2292c3010d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc89859-b41b-4208-8086-b606bbbc8aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1974b980-d707-4dae-a43b-1e083caa757c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4f2422-fc98-466e-9d79-e94f8972a85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2257f6b6-7447-4964-b76a-27bd1c2a5fd8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ffea36-29de-4458-9de9-8aabfe788bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db4617e-f462-424b-bc81-68b474032ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9fa308-2013-4e61-905e-b22a6418b746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31e7f9f-9cc4-41de-9531-dea7333f995a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1705c673-4dd4-4195-aad1-b3e854145520",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab02240-3eac-4102-9415-9300e05ecb3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f45d0340-19bf-4d9c-a2d7-08448480938d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f331d66d-f0e7-4973-88db-24ecfd698003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c691da3f-dc22-41bb-8443-8f6424d0158d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fb5877-4912-4f6c-86bf-48933db30b60",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8e6db7-c122-4a8d-8207-728cd985bffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2ef3a27-22e5-43ab-a250-ed6fa8e2fb43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5520b925-c159-434f-8adc-3e5fc4a03048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2652f77-3474-47d8-91f0-fed2ccaf1b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c3295b-dbaa-465d-a9e1-ffe65981d59b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d977ee-9598-45f0-9441-08588cab1b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5afdd008-5daf-497a-8761-08a0f72044c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567648d9-b60c-4f34-9308-6a3d7defedce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e474cb-9000-49fb-9d40-2a7355772157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73b9036-ba3b-4bef-9273-527ea54f67bd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e30250-a736-43f5-87ff-3dc6a12a7997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0afe101-a59b-401c-8a3f-3e9e5305601c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f173c7b7-600e-453f-a10d-c7e345bff5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399bca5c-6388-4ca4-9438-b0d958f65430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b89d8eb-b586-47b3-b178-cff8eb75996c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054eef48-c29a-4a7e-adcf-36a841031db2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9218c49f-d9bd-4e42-8485-993dce15a758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17baa176-34ae-4320-881d-4eab77494fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e225cec1-a315-458f-832c-3ac7ce5d8129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049656c0-5d9d-47d3-b7c0-3b5e9c5f22df",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55eef8f-e589-43d8-945b-68a1803847d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39f91289-83ba-4759-bb80-359fd4f4145e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b18655d-c5c8-408f-a903-f24f79042001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4218cff-8dc3-44ce-87a9-8d2e460821e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e776574c-c429-4875-ad51-fcc6d5a5137a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73390770-0429-4e31-87d7-bac04a161d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75a39200-ddf5-4f78-8caf-e29382bbf381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4664ebbc-280e-4264-b8de-b6b635b21615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba78064-2845-4717-a2a4-f276bb1de3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8b16ab-a7c5-4855-b695-c3e343b90851",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d065dc90-124f-4b41-8a58-006bebfa990e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b122b16-dbc2-4a7b-86b1-92adc566ab6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6eb3ac8-e43c-4e8f-8897-cdbd25ff5786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7cfaf4-ec4d-4b8f-84cc-666bdd7105f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07171164-94dd-4219-8ba7-43290784d191",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4534c307-5169-4512-9699-864189225189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "875ce189-4720-4f69-8bb9-b57833c01711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eb7d9a-8f6d-45a9-9037-4ec252036f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8465f85c-5888-4d44-8aff-29ca22f10122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d7aac3-cf91-42f5-b5eb-0b8fb71525e5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dca5cd-43d2-4090-bc07-86babdaab185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411c50ad-1517-4501-9483-31d6beffd52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59fe65b-c92f-4cd6-974b-51a1799c5d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def91165-990d-4310-ac73-cfa06e3cb712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafa2c5e-efc9-477e-acaa-3b471b78058a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95619268-1f9b-4daa-b306-3b246973d4ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa97c31-9b82-45fd-b083-af0f1e1028b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d1fa69-4182-4aea-94ef-d1da04485082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ca3c4c-aaa2-4065-b5fd-4ded09eda5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00215b08-cc48-43dc-bee3-5076ca0f8eb5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c656dd5-861a-4442-ba39-af47cdcc95e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f4403a0-d1a3-442d-b858-8d36e531d331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea658cb-6e7c-4786-8ccb-9b86372cfd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9afc0c4-079b-4693-9199-8ca59d46ce5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6e2e08-38d0-4eac-a5e1-e9bb6e8f8edd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e2e2b2-54cf-4458-b698-862482584a8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3918441-d41c-49d8-b2d6-98ff3e0272bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d067d0a-a6c9-4ccf-991b-c23aa8ce4de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236d71ff-abf5-4ab7-abd2-2f573b67749e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381ab02d-e7a5-4d15-a3ba-1f8378cdbb10",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1089793b-2f9d-481c-9196-360eeaa84f33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89c436b6-65ed-4c8b-9629-13af4870a590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c8a4ee-bef8-4651-9113-1a86b3842c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a1bd92-52cf-4799-9d20-f6824f9e2e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee497048-3aaf-4a65-9685-3d227c672da3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3264a2c-8f95-4496-8729-8af7b8b3dac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59552752-68c2-4bbc-924b-856a57d3fe26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38802857-142e-4f2f-a653-ce6f47c9a046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b35309-ee3c-4423-af39-eaf01d9b8733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd8acea-d7de-4e23-b693-55fe48f3067b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1617a60-aca3-4c59-8b56-7f26daacf4b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "649954bb-8e7c-46a5-9a15-31941e142053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efa0254-ee09-4c7f-9ef6-5c190db3ad4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50a554e-b7ac-4aac-98b3-98402bc42678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c30baf-0428-4710-8a18-1282c8e6a20f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9e9e52-5954-4e07-9935-9e1d4823c627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6877848-db77-448f-b9aa-798e5dab4449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5439f0b-d755-47e8-acb1-82cb05fb71e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331e337c-b821-4fbd-9ba8-170c4dcb6cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd8e145-b267-4f8d-8c29-6e88c49cc047",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdabe3eb-a779-4fd7-babb-ebebf4de6077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27aa2ddf-4730-44e6-93f1-605aa000988d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dee1ae4-bbc5-42a3-9e2b-c403cfccfd29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831ca588-03f9-47f2-aeb4-edbc5272e095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eca7671-b1bd-4a28-822c-309bd0d6e1f2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d901d8-6401-4e01-a381-327cbe24e554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6186e2a-4fc2-4038-bf8d-03c6eb47be96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293cc2bc-27f4-431e-bed4-a86841e0acc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a92c5a-6a22-44ec-8da9-63cb1d02e4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db78c1a-90de-4f67-97bc-52bb0f218d07",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6836da1a-6756-4314-bea0-f2240a6b87a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78a5f8d-4b67-4852-8c15-c9d94cb77657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3b1562-25bb-4482-bbed-60f1d6c31adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00550322-40db-4c25-9a18-de83af0c3432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d7693e-d55e-4c5f-9d97-56ca18649aab",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7459eac-19d2-413b-ad06-878b078411eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b62282-8119-4a62-815c-e11f2efcb1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4e2137-5b81-4315-b0c3-af02fe56ed2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2caa23be-6959-416e-86b7-4ec169a7ed21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d260d0-1bbb-4eeb-ad33-24b5e48db6d7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f9d6c1-7f72-4aee-b44c-a73cf939c81c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03c62398-5664-48be-b9b4-2c94fb72c9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee3cb9e-58f9-42ce-9565-d9175cc7ebed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275842ed-cbf2-4d50-b441-20e94b093ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65aa5817-1423-4a2c-a222-b7ec8a6b7346",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa950dbb-aa70-4f9f-9626-2fcda44753e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b90d5ab8-9e52-4ef2-bf1f-8c1b59ec2706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ecfb9e-42dd-4d9d-ad55-b95ca330b1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0d99d7-b691-4434-a129-deb8a2b22844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1788ad-3360-4003-b613-ff59ec341aa0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2597e24a-3a8e-434d-b68d-246dfef63f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "486cd3b9-9a4b-4896-8ed7-c3602e1903df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41cfc56-19e5-4033-b4c5-e0fca8a209a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463076e9-5032-4557-a049-55a00feb260d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0814a3cb-bed0-4376-9006-965694058228",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45072f9-4e4a-4343-aa1c-56ce74143448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f44f3033-94df-4de2-877a-3eda54dc9cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce2a8ff-8554-4dc5-b437-ad7a5db6dfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a210ef-d2d3-411e-9029-61d57d83cbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a807d6-315e-438f-85c9-817f73dd50ee",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5cc899-3d3f-48a3-a932-15f14b94ee92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33794673-8778-48f9-a69e-efc0038c3c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a675470-72b7-43d3-86cc-9a145c3509be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5abc011-28d6-42dc-a337-4ca46495c68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffa9985-04d9-4699-a501-7857cd575da9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb506a6-e4dc-4f6c-bae7-a05d13f3b4f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9939e91-7407-4f4a-94b0-ee16ead40c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03695f32-4da2-47bb-8a45-6a4d4b44e883",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64f7ce5-1899-42ec-a1ec-f103c1c72c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1407dc-6e4b-4f2a-9d1d-994f7cb4850e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae191ad-c775-4ff4-890e-f7265aa59e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9748fa28-d521-48c5-8c84-3e4a3a2446e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e9e59e-8faa-477a-ad43-16cac2fd6fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8977a15a-33f2-4aff-ae62-7a4a0a5959c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad334412-4bc6-4f24-9a84-6059a3e0006b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e81f441-dd46-4ad2-a349-5688b44b6a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "577e9ed7-b6a2-4721-8b5d-8d25ddc6dfa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fb3bb9-ef67-4257-9ff3-ef326d25b810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1dce1e-19a0-4963-96d6-a4c6f084e939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38da77c-a516-46b8-a93c-46d34c1c7b9b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f731730-8511-4fa6-b26a-956272338e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3a3393-c9f6-4cdf-a518-de0e43902c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db77a212-b0de-43d2-a3d1-26b00736914b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b664b4-d310-469e-9d33-dd4f72396841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b715cb5-b705-490a-a46b-9897cdda3b6c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d52cd04-c053-438c-a736-6e986abb9441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "013dc255-41df-456f-ab8d-3432fa84660c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9f7cac-236f-41a4-8eef-decce72a9084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef4daaa-8205-4abc-a645-67cbe501d371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f373e1-d374-4aef-bd65-111c8a1966ce",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4706fbe2-35a0-4998-bbc5-ccd898bc0387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22502444-da7e-40b3-92f9-ea104d4246a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b961b3-7e0c-4188-b84e-7cf7b0972aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8977111c-b0e1-410a-8641-22566d08495f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da55e99d-c534-45db-bed9-e969684ccb4f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69891f0-9d9e-44e2-9046-573c71cf65a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a83072c-119c-49d2-85f1-f49c41ad12c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1b5daf-2db7-4ba4-8afd-da8ae1e4ce6b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54de7bd5-2584-4779-acd4-1c4be4a9143e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270ecfcd-a296-45f0-8e56-a187cc664f5d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d51e1b-92b2-48b9-9677-13b6909ebb00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc6b6ca5-7171-4c74-9a1e-aed28d48b9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9586528d-f1b4-4b01-9ecc-a81b2a33dd8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa3435f-47cc-4b8f-8b37-dc901285b830"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cda8539a-5719-4a59-a080-1c708ff70c8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1de8505e-c362-4737-a4e3-68f8fdee3c16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01a20dbd-7b06-49ae-8f12-ffabcc329538",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e53c192-4f59-4f59-89f1-309f242412bb"
                    }
                  }
                ]
              },
              {
                "id": "65911f9f-94bc-493c-a7d2-4d3eeb3d5e89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19c519a0-341f-44c1-9bc2-36f2b19da15e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a800143e-55b4-4929-a17b-49d94672e8e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "67c48429-5ec3-464e-84ec-4cd2811642c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd03aae1-b771-40c5-a3dd-bf4e5d270de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a61c536b-738d-4354-a47a-7fd8aa397996"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31c9c90d-8a37-4516-a47b-4ac02a148bc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1e7587c-d4c8-4884-a633-aacc3ae3d729"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc06e9b3-e5c3-473d-955d-5b0b9ca96116",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "769c281c-6010-4bce-b782-63d29cf3e91c"
                    }
                  }
                ]
              },
              {
                "id": "afbe3f15-5024-44a2-871f-fb1a3eb95f82",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3633f8d7-e949-4c68-9367-f68bb967e713",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ced0509-3381-4179-8fca-a7875e43077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cd035688-e1c2-45f5-854a-bf580c5e44db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df055871-a16a-4913-9a83-145c545104a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0ae4f2-a999-4b1b-8f3d-418c745f5a6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4cabe1ea-9ca4-4703-9b62-e3c4e6bf5da3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cf6e31b-84de-4f21-9f95-dc618029ca8e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5c561cd-ec49-4ed7-9f71-a22f9127cf17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c8dcb396-c2ee-47af-888c-3831bde56d6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "639750b6-23ef-4b0a-8027-61ef2d9760cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c19ece9-c158-48d6-86a9-6e58520d3810"
                    }
                  }
                ]
              },
              {
                "id": "8402a710-53db-4e53-bcf5-07da6832e9ce",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cacc015-25d7-4d79-9ca6-d90441c0f8e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "129db683-3ff7-41d2-90d4-d4c2f7a9d13e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "699cf97a-c6a0-48d4-b2cb-c522dc1efe35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a5c1c53-647b-41ee-aee2-c6e80d90cd8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9ea27af-b0cc-42c3-b567-9cc4404eeda5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "40000932-f34d-4c40-83d7-49defca5b07e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe3bb464-a4ed-45a9-8a4d-bfd9e6350263",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a107437-36ae-49a9-b711-61f4a498095f"
            }
          }
        ]
      },
      {
        "id": "9d2cb3c3-7d89-403f-8531-5e30abbcc1eb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "53be6b62-4efb-40d9-8c91-9dce5a38fe0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "360a499a-fa93-42a0-b4f4-11445ea30b37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ca558eb-a1e7-4cf8-9217-9eb8a1c8e2d8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba80daa-e1a5-410f-9c4a-9712be33116f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1523b723-c220-49e8-9b2c-7f7db0e97ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51cd63a-dcdb-45f2-a7be-760bab696844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90f93c73-5d49-457c-8b3b-c50563da135a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fde5456-1e33-409c-aca0-6b01f7d98552",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f364ef38-646c-4ed4-aa84-f50dc511b3e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1a1f736-c6a5-4e29-88a2-75669aca13e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ef71250-28f2-4b44-b213-07b2791e17a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "702a0216-3071-4f95-8758-6629f4197f6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e1760409-0ccc-4e47-9562-6892bd05e77d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73ef14ed-4fbd-48b0-b5e2-226c5223db97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1443231b-6f80-480a-9884-138ee61f87a4"
            }
          }
        ]
      },
      {
        "id": "1f1e4d20-8419-4806-9fc2-c57f8eef769c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2c94f506-2584-400e-bc7b-745a85b9052f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cbe7c96-73d4-4017-aea4-9d280a8616d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbbe645a-29eb-4394-9ec4-dab46a1fb5bd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890e9364-77c8-4fa5-b61b-d160088f6dbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b904ca0b-e8df-41ea-b5f0-4ac39ffc16fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c761f19-e0c5-420e-a243-248b4688b424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e01ccd4d-ce03-4566-b9bd-760763e72537"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d26f9a9-a403-4678-be95-0ef30aa69c24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "024b534e-4214-4692-89a4-b90ddd54e6c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bac3acd4-f03d-43a0-8bc2-e2abbee5afad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c55b1e29-3f57-46e4-893d-eab3396e4eda"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6517bab-0be2-4084-86d9-231cce75f31f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a84c6ce5-a5b1-4254-8d59-2295186b4e26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1204c353-1fbd-4aa7-9b53-ac555e74f2b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed0aa36e-c85b-472c-8d08-4ff04154e32e"
            }
          }
        ]
      },
      {
        "id": "7e17faa7-1882-4441-a826-3fb439f8e210",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dc0205d8-53b7-4e95-92a5-329c86d466c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f657b160-0cbc-414c-a426-b9250f6e1c2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c1cfc6a-58c3-4e16-9e68-e20eadc20a3c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75f8473-5452-4370-9c2c-be24cf08d431",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19334366-1bdd-4bde-9d37-8695c7c6ba93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "174eeef0-8e27-44dd-9b77-c25799571ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09f0e293-70c5-4fb1-9a99-b4866611f868"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67964b6f-6884-4b86-bde8-dc537929db27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "215ed299-fc3d-4540-95ef-4103b1836130"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d9147ce-8538-4736-8805-c76ad9317c07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "699b3be5-0359-4f45-9de6-2c2932012035"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88fa5c2e-97b3-4e4e-8b4c-b14af5e10f67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "00bc6c09-074d-4ecf-8401-525245b05db6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d422852a-1ffa-4ad5-9c22-94ac6e27924b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f27f8e07-c01a-4854-bdc7-72857a27458b"
            }
          }
        ]
      },
      {
        "id": "dfc1f29e-0eb3-4a9c-b1cf-9d73e3c81708",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62a2b52d-8b2c-4d1c-924a-b0fc6ae1083c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72e90dd0-aa32-4ea1-ae89-939735ecb5e0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a75a355b-8d3b-43c6-ad31-1f263af17094",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b1f3da8-0a46-4ca4-b4f1-7eb8c85286d3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed3abce5-2f35-443d-9784-e4020341f6ba",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 78.05964912280702,
      "responseMin": 6,
      "responseMax": 4136,
      "responseSd": 355.5478499934497,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699058009795,
      "completed": 1699058043894
    },
    "executions": [
      {
        "id": "86e1e9ba-bda0-48c5-bb38-0ea294154cd7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e88f9ad1-d612-4bc0-8d44-fe0b60d24465",
          "httpRequestId": "db033113-4978-4984-a313-8520fdf4b2bd"
        },
        "item": {
          "id": "86e1e9ba-bda0-48c5-bb38-0ea294154cd7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "95eba6fb-197f-44ef-b9f1-26b9e4e8b6ba",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "3403eb75-e47a-44e5-9cb3-d04528bc7c54",
        "cursor": {
          "ref": "2a7b9edf-d062-4fd8-ab45-1522dcb3a12c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e410b5cc-5a30-4b7f-b204-62393b24a45a"
        },
        "item": {
          "id": "3403eb75-e47a-44e5-9cb3-d04528bc7c54",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "27a390bd-8144-4fe3-ab56-826fac75e8f3",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "89887328-46d6-450a-a084-c085184a6432",
        "cursor": {
          "ref": "c34a5877-00c8-4c1a-8901-6a0027d88e38",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dda73077-7b34-4c57-8024-d7b3ef19464f"
        },
        "item": {
          "id": "89887328-46d6-450a-a084-c085184a6432",
          "name": "did_json"
        },
        "response": {
          "id": "66e601ba-1fd0-4df4-a32e-0fe99c39e1cc",
          "status": "OK",
          "code": 200,
          "responseTime": 312,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6093345f-49e2-41b6-98b7-0f77f678dabc",
        "cursor": {
          "ref": "5e9352ed-67b2-4ded-b18e-26a7483c7e1e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b4389083-ac86-49a7-be05-7f8d02177a21"
        },
        "item": {
          "id": "6093345f-49e2-41b6-98b7-0f77f678dabc",
          "name": "did:invalid"
        },
        "response": {
          "id": "7fb9a6cc-7bbb-4227-ab77-53dd491dd1a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 585,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6093345f-49e2-41b6-98b7-0f77f678dabc",
        "cursor": {
          "ref": "5e9352ed-67b2-4ded-b18e-26a7483c7e1e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b4389083-ac86-49a7-be05-7f8d02177a21"
        },
        "item": {
          "id": "6093345f-49e2-41b6-98b7-0f77f678dabc",
          "name": "did:invalid"
        },
        "response": {
          "id": "7fb9a6cc-7bbb-4227-ab77-53dd491dd1a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 585,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca2e1a8-b83f-4182-92b1-c9603f93c8e0",
        "cursor": {
          "ref": "1504ef80-5440-4e9f-8ca7-f44f75a7ce1e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dc7a30af-b41b-4654-81c5-c37ec76fa383"
        },
        "item": {
          "id": "4ca2e1a8-b83f-4182-92b1-c9603f93c8e0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8968c5ff-3cd6-4e25-97a1-231202862a30",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8491650a-cc44-4570-a6cb-7df7fe875edd",
        "cursor": {
          "ref": "4826a33d-addd-4014-b319-a8dbd6a6f669",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0031c7ca-9d5a-4791-95e0-a74eac7ed14c"
        },
        "item": {
          "id": "8491650a-cc44-4570-a6cb-7df7fe875edd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d4a50c96-ab46-40c8-aad6-bc52ba447b71",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea76e7d7-dfd8-4a71-a846-d359bfdaf8c5",
        "cursor": {
          "ref": "af23f76d-7f99-45ad-9eae-413d0cc96b6d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d82e5d11-843c-435d-95ca-f2803be1febe"
        },
        "item": {
          "id": "ea76e7d7-dfd8-4a71-a846-d359bfdaf8c5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "14629fb0-e965-4e90-9480-d924a6d6da4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c26c0d-d50d-4b47-8de5-68f238b9a98a",
        "cursor": {
          "ref": "f00ace98-152a-4728-aeaa-df2de0723bd3",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "62be89c2-da5b-4d68-a687-4e1f57fcd5fd"
        },
        "item": {
          "id": "e2c26c0d-d50d-4b47-8de5-68f238b9a98a",
          "name": "identifiers"
        },
        "response": {
          "id": "a5b3f664-8bd5-4241-87fc-a07606187bbd",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7152d2-69d5-4187-9dd4-178228b8e48a",
        "cursor": {
          "ref": "ac67f6ec-2dd2-4f0d-a703-5be58f017080",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d447fa9c-60da-4a2b-bedb-688992abcc60"
        },
        "item": {
          "id": "fc7152d2-69d5-4187-9dd4-178228b8e48a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f28a6d98-b930-4b34-a445-cb964f84b201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad36e4d7-aa51-4468-8380-a65622e4fd6f",
        "cursor": {
          "ref": "3381a011-ecb6-4667-a1a5-886a2dd0297c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "72c3c3dc-850b-4825-b7a8-6494e0f42b5b"
        },
        "item": {
          "id": "ad36e4d7-aa51-4468-8380-a65622e4fd6f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "69973be3-bd29-4025-ba2f-ce6505e7b479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6a2833-f152-4c6a-b187-9b8b5bda3f30",
        "cursor": {
          "ref": "20fce107-aa0d-45d6-ab32-204721b01e34",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6edbdffd-963c-45eb-9de7-9abb404c9b4b"
        },
        "item": {
          "id": "6a6a2833-f152-4c6a-b187-9b8b5bda3f30",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1ef119b4-d987-4167-9e61-a367a476d311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab068ad0-b34e-4c5c-b848-84e424cd8744",
        "cursor": {
          "ref": "9c1c5113-82b4-4a28-b912-4e8d7e61f1cb",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "202d9810-3e6c-41cb-ab72-2efa0a911c80"
        },
        "item": {
          "id": "ab068ad0-b34e-4c5c-b848-84e424cd8744",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b098835c-8258-4163-9f43-1e249171a3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62e60dd-d6cd-4c29-b494-6f333bfda6f1",
        "cursor": {
          "ref": "d38a6a0e-059d-4ae8-8b63-37bf12bb34e3",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e2a54427-1722-4831-8281-d36de719d975"
        },
        "item": {
          "id": "d62e60dd-d6cd-4c29-b494-6f333bfda6f1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "50fe6773-1ea3-4757-a813-aaa2515846fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3ae479-0fa4-4bb7-a6d3-5db939a28c6a",
        "cursor": {
          "ref": "234931ac-e185-48c1-8b61-93a2863fe1bc",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cbb2ff5c-e362-4de3-8e40-a2e70a8f4b64"
        },
        "item": {
          "id": "ba3ae479-0fa4-4bb7-a6d3-5db939a28c6a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5b416a5d-d83c-4ad9-8b7e-f8c7fb51c0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85875a87-ec91-49fd-b9f0-0e923678fcf3",
        "cursor": {
          "ref": "a23fb833-8ac7-4c12-85da-cc2f4cec9083",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2c808545-9f1f-4473-9a5e-cfa052704348"
        },
        "item": {
          "id": "85875a87-ec91-49fd-b9f0-0e923678fcf3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b3bd3bf3-e99c-4506-b380-c582abc7174f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b29c01b-77b5-4aef-aed5-49495c7be9e8",
        "cursor": {
          "ref": "9dfb4fd2-152a-47d8-9c58-33c8e5524134",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "090969f5-a381-483b-9caa-c32ed3cec9b3"
        },
        "item": {
          "id": "7b29c01b-77b5-4aef-aed5-49495c7be9e8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c0641314-e36d-40d6-8a11-b23d7b5283f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3eb768-88fd-422d-919d-cf73ce5babd0",
        "cursor": {
          "ref": "0ad97bc6-3a29-468a-a548-5bf44327203e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a3f64535-bd62-4999-8012-0b3ad78cc684"
        },
        "item": {
          "id": "bd3eb768-88fd-422d-919d-cf73ce5babd0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "654424c9-f283-48f1-bd35-388945de7ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7efe844-39e5-4e65-bc74-c86a091bc78f",
        "cursor": {
          "ref": "8f314bd8-c5b4-4925-8882-e8bf8094e158",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2738e6da-09b4-440b-a839-c591325890e2"
        },
        "item": {
          "id": "f7efe844-39e5-4e65-bc74-c86a091bc78f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a0b1e709-3ec1-460f-89ca-2bfe6efd2897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573c3355-e92a-48e6-9cf9-ba31b73c836e",
        "cursor": {
          "ref": "49b8adcd-cd36-452f-a165-25f83047794d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e45302a6-2426-48e2-9eb5-67a8e757ef38"
        },
        "item": {
          "id": "573c3355-e92a-48e6-9cf9-ba31b73c836e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fd336b1b-ed44-47e1-93fe-ebbff89615e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614f4b04-5f9d-438f-b5b2-36d0ff9db3ca",
        "cursor": {
          "ref": "8ddcdc7f-5cc9-4a29-8a94-8256a6263884",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ef67c4b7-e272-472c-b0e3-660a27ed8177"
        },
        "item": {
          "id": "614f4b04-5f9d-438f-b5b2-36d0ff9db3ca",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "962bbbaf-937e-49a7-933a-3386eebc263c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e574dfd5-8dc5-4155-990b-014e5d15c417",
        "cursor": {
          "ref": "8cde3589-0335-404a-8313-c99af6dc43bc",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8dc2cb18-c694-4b25-951f-5031f00cf007"
        },
        "item": {
          "id": "e574dfd5-8dc5-4155-990b-014e5d15c417",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5beb9ddd-cb2d-433c-83c5-b6b0950b364a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00aaa157-7f21-4b9d-90a1-682e8fade3b2",
        "cursor": {
          "ref": "c71c3f3b-0043-4c23-9dda-fae92519cccb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7d7c64da-420e-4c54-a598-a71bd5a05b98"
        },
        "item": {
          "id": "00aaa157-7f21-4b9d-90a1-682e8fade3b2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d608d5f7-4de3-4717-9577-f14a010ed6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f914ec9d-b978-4204-bb89-5cfae08f72f6",
        "cursor": {
          "ref": "27b1cdc0-5cb9-4794-b43a-33ee96c99abe",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b1202f10-7a1c-466b-a430-1d3406fd9351"
        },
        "item": {
          "id": "f914ec9d-b978-4204-bb89-5cfae08f72f6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b8380e7c-9e14-46c7-b4de-e3d73416f6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3020bae0-4a30-404d-86fc-029b333c7143",
        "cursor": {
          "ref": "7eb0f7de-9e02-4e7e-b67c-39c306c1b093",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d19644a6-b221-42f2-87ec-3483abc17c96"
        },
        "item": {
          "id": "3020bae0-4a30-404d-86fc-029b333c7143",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "86d270c3-4a93-4855-928c-62d9d13399aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690acc4e-93f1-4b87-838a-1f0d8982e133",
        "cursor": {
          "ref": "ad0ed524-333a-4c2a-b3ae-fce43210d56a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ef27ad17-bbcb-4747-9fc2-c5311dcddaa5"
        },
        "item": {
          "id": "690acc4e-93f1-4b87-838a-1f0d8982e133",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "33444290-7379-4b59-873b-343ace91cb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc7ce52-acd1-4f93-a74e-b1da4f4ce17c",
        "cursor": {
          "ref": "6277f115-67d5-47ba-90de-f1ad951111f6",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2081306f-8572-42ca-a959-310d24576513"
        },
        "item": {
          "id": "ddc7ce52-acd1-4f93-a74e-b1da4f4ce17c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f8b24e4c-05a1-4b55-8c8e-fdf3951eaa98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035cedfe-3869-4e08-b6da-127043f7baaf",
        "cursor": {
          "ref": "380582c7-d676-49c0-ba06-c33657e50cc9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5a32dcce-5e44-4fb4-b1ee-6b01ee8e7190"
        },
        "item": {
          "id": "035cedfe-3869-4e08-b6da-127043f7baaf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fdc2b840-a9c3-46f2-8b91-db998e7a4c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a572859-817a-473b-bf4c-78635198a91b",
        "cursor": {
          "ref": "533c1492-cae1-44df-98a2-4bf71184fd85",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "857ab33b-2a77-4b73-92af-31c88881f1dc"
        },
        "item": {
          "id": "1a572859-817a-473b-bf4c-78635198a91b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "61867749-ade7-4aa4-9ddc-c5cfdd47639f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbac8f5c-7fda-443c-98e1-41ccf0c46d83",
        "cursor": {
          "ref": "00974386-7cc7-4dd3-8c5e-2353e076442d",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fa151629-5494-499e-9713-533d92e863b0"
        },
        "item": {
          "id": "dbac8f5c-7fda-443c-98e1-41ccf0c46d83",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "aa3b20d3-8da4-4c1d-ace0-b77bcbb43578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b4cafc-e4b2-4d8b-b239-2d86a434e003",
        "cursor": {
          "ref": "c9dc1eb0-a711-413d-9619-d8728c11ad19",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f2c0c01e-31c6-4151-9cc8-7a2f4c1c1e81"
        },
        "item": {
          "id": "d2b4cafc-e4b2-4d8b-b239-2d86a434e003",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5f6f2d03-a7f1-4e46-b281-b619a7ce3bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec6a53e-52c0-4ba2-a01f-e115e5470103",
        "cursor": {
          "ref": "37d0ad8b-be3b-4d2d-b77e-adf5902aef06",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "61780e13-c80d-49fc-8946-7cbd38e437a2"
        },
        "item": {
          "id": "fec6a53e-52c0-4ba2-a01f-e115e5470103",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3cb43d12-b8b3-4aae-baf4-6e079ba4030d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ee040e-b9a2-4661-a5fa-7a28aa6c0fa4",
        "cursor": {
          "ref": "58f9accf-dafd-4d3f-89c0-1c38d1084a3c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5ef0312d-c7a5-4313-a035-1d8e2e60e779"
        },
        "item": {
          "id": "f3ee040e-b9a2-4661-a5fa-7a28aa6c0fa4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "99a65fb3-1e47-427d-90b1-0e7d5db2ca53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc10c9d-f85b-4e2b-b4c7-6cde3f3364b7",
        "cursor": {
          "ref": "5c1494ee-c846-48f8-b589-665321e9946f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "40848501-96e9-4553-b3a7-9a9896319c89"
        },
        "item": {
          "id": "8dc10c9d-f85b-4e2b-b4c7-6cde3f3364b7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "78344f2a-8e24-4a24-ae6b-d8fc21d6f8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd4df7a-0f62-49eb-a15b-e84fe55940b9",
        "cursor": {
          "ref": "4cf1bb2c-89b8-431e-bb42-f92ac65b4f5a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cd359510-0915-4c97-961a-726568781f05"
        },
        "item": {
          "id": "3fd4df7a-0f62-49eb-a15b-e84fe55940b9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ac4f68ba-29ef-4dd6-9e77-bfe22e1b7862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d279ce3-66ec-46fe-9052-d5dfa2a27815",
        "cursor": {
          "ref": "f6c14abf-d657-4e1b-999e-1964760bd84b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fa207bfc-8748-45f1-b6ab-b3706d77c087"
        },
        "item": {
          "id": "0d279ce3-66ec-46fe-9052-d5dfa2a27815",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bec57ef0-9e3c-49ae-8bf0-6df935a3cad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac30fea4-3f64-4daf-891c-5c07776a7d39",
        "cursor": {
          "ref": "af0cf66c-c0dd-4e6f-8843-be3319810454",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9bc8184c-b6f3-4a96-8317-9f28cb5e64ea"
        },
        "item": {
          "id": "ac30fea4-3f64-4daf-891c-5c07776a7d39",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6900fdeb-8a0e-4b6e-97f6-54c826d4f746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb3f3d2-7f13-4bbb-bfe2-7478bdfc5c96",
        "cursor": {
          "ref": "d408e644-2350-4052-8e5b-af576dca601c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "06d433b0-7829-4c05-afa1-1bcd85fd9313"
        },
        "item": {
          "id": "2fb3f3d2-7f13-4bbb-bfe2-7478bdfc5c96",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e6ef0521-504f-4a14-a5ae-c7cb2565e039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e7e297-3ae5-4cba-bfd7-ecb025f68f13",
        "cursor": {
          "ref": "b40147bb-cb1b-46d1-b191-5bb13af1407a",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "338b7a66-4731-4e93-ad41-5b5128c2d1db"
        },
        "item": {
          "id": "22e7e297-3ae5-4cba-bfd7-ecb025f68f13",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "418f319b-f464-4bb5-b2e1-72fa154ac223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c39f3fd-40b5-4db2-838e-e9244ecea5da",
        "cursor": {
          "ref": "b0dd8bf3-0faf-4d1c-95e0-c1c2cebb1119",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "622d82ad-1ae7-447f-85f0-a859a9c9159d"
        },
        "item": {
          "id": "7c39f3fd-40b5-4db2-838e-e9244ecea5da",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b6b284f1-4881-48b0-99e6-76cd0242afa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a2276a-4bc4-4c53-a157-14f13a0fe72b",
        "cursor": {
          "ref": "856f5fc0-1e18-48d1-b8bf-82c9b5e9dae0",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a196aba0-0cc8-4eb9-97bd-e1f92abe40a2"
        },
        "item": {
          "id": "76a2276a-4bc4-4c53-a157-14f13a0fe72b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a80c2ab2-265b-4b5e-804c-3d151530f9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231a3fa9-e98b-4e36-9ac9-08b2bb6e9c4c",
        "cursor": {
          "ref": "10519980-d202-4268-9d29-d1ed9931b1e7",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f7d8efe5-3e74-49d0-a44b-16de163af075"
        },
        "item": {
          "id": "231a3fa9-e98b-4e36-9ac9-08b2bb6e9c4c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4c2706ab-5bba-4726-92c7-f80e6d049c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209b9ff3-1776-4e83-865c-9604d0fb5759",
        "cursor": {
          "ref": "ed024511-d059-40d3-9bca-63af945e1abb",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4791d068-48d6-4ebd-af58-2adb460173f6"
        },
        "item": {
          "id": "209b9ff3-1776-4e83-865c-9604d0fb5759",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "84cc7405-4aa4-43e7-81ec-357273ec322c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5142d6a1-8f3b-4b9e-b06e-1cd18b2d19a2",
        "cursor": {
          "ref": "e7aca842-0205-416c-b612-59fd2d25f61c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "12294842-00c3-4c5f-b42b-17f15c320d0e"
        },
        "item": {
          "id": "5142d6a1-8f3b-4b9e-b06e-1cd18b2d19a2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7bf86cb0-225e-435c-8567-383656cd9563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9450e765-e1fd-4811-9c7b-df3db2425271",
        "cursor": {
          "ref": "75e3a5bf-d412-45ce-ac5e-a7d7efce7ca7",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6cf9e243-614c-4516-991b-355c39a64f19"
        },
        "item": {
          "id": "9450e765-e1fd-4811-9c7b-df3db2425271",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "76e9cbf1-1b11-4975-baa9-32cc7cff646c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be27b68-6b20-45d8-b3ac-d1e7ac86b2e2",
        "cursor": {
          "ref": "c5cb59fc-9a77-4d8d-993f-fd5520e209f1",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "504e2fa8-0c17-4d5d-a342-598624e718c0"
        },
        "item": {
          "id": "6be27b68-6b20-45d8-b3ac-d1e7ac86b2e2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3de29111-47cf-47d4-a0aa-150931ec1671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694664ec-5a08-4f0d-8002-081b2cd9799a",
        "cursor": {
          "ref": "b25f314b-978c-47b1-adff-d6460a239a58",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "83bfe147-d036-4d76-bbd4-f30aa469430f"
        },
        "item": {
          "id": "694664ec-5a08-4f0d-8002-081b2cd9799a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f5aeba4a-4a42-4c66-93af-508b2d83f688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7343490-f717-4ab2-a14b-6edbe5257652",
        "cursor": {
          "ref": "10d10554-d950-444b-bec1-bda50e06e026",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6d8c5710-5108-4ef3-ac4c-48df5be31b56"
        },
        "item": {
          "id": "f7343490-f717-4ab2-a14b-6edbe5257652",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5426d4e4-0858-4d05-95cc-4d0127cb247c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89edef69-723d-4973-907b-5436db6d42cc",
        "cursor": {
          "ref": "4b072683-de02-4453-aa19-da40e1368041",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "edb16a24-3a56-4677-b2bb-6e4078831572"
        },
        "item": {
          "id": "89edef69-723d-4973-907b-5436db6d42cc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fd9cd337-68e5-4f0e-a694-a174f787c07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865dee20-f1df-4c5c-8348-40a2dce072c2",
        "cursor": {
          "ref": "53604670-17cc-466b-ae11-4988fbc0514e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "868f0173-29cb-400b-9603-c08ee328f54f"
        },
        "item": {
          "id": "865dee20-f1df-4c5c-8348-40a2dce072c2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "558483b5-81e2-4613-9c9b-92333879b93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371ac792-04ed-4a13-a1b7-d787ee16e594",
        "cursor": {
          "ref": "fda2fb4b-a412-4650-8975-65e80ac80f29",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "780bafd1-0c8a-4a78-8442-fc772fca7beb"
        },
        "item": {
          "id": "371ac792-04ed-4a13-a1b7-d787ee16e594",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "137cdffd-446f-407e-b6a8-f4276ab56d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8360b8d1-da77-45ff-801c-aa4819d53896",
        "cursor": {
          "ref": "44edddae-0662-476c-a387-44d4193cc900",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7e174d7f-12f8-49be-be23-67a4f7b405b6"
        },
        "item": {
          "id": "8360b8d1-da77-45ff-801c-aa4819d53896",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "aabe0856-05e1-46a7-9dab-7cdacf964b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2330b6ac-9c22-461e-8d8a-375e80b3073d",
        "cursor": {
          "ref": "8ffcdeb1-8955-4ab3-87ec-b15fb42b295b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e0679ee2-642f-4be3-9f6e-f9b04ab34355"
        },
        "item": {
          "id": "2330b6ac-9c22-461e-8d8a-375e80b3073d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "62b19f53-26bb-4cce-82fd-50b24249a654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e6fcdd-a09a-4b10-b716-07cebc17bab5",
        "cursor": {
          "ref": "164997b2-0a7e-4892-a89f-3d9812416c60",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f7ce118d-fd89-4b3f-8f27-648cc1132e61"
        },
        "item": {
          "id": "95e6fcdd-a09a-4b10-b716-07cebc17bab5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a6a91ef0-115e-4ace-bb6f-56a25f51b3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936e845f-9c7a-4396-a76c-07310469a441",
        "cursor": {
          "ref": "6bb20152-7999-42c4-98f3-7520b6d6aad8",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9f48bd24-28e0-47e2-8212-7ef122abed31"
        },
        "item": {
          "id": "936e845f-9c7a-4396-a76c-07310469a441",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c951ff3c-b1af-4966-aebb-a30337d71f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c44eba-1595-48b2-a1c1-9992ac2682fc",
        "cursor": {
          "ref": "b65932a3-9018-41c9-a5b5-c1d311251424",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e7435a7e-f6cf-4669-a75f-9aa404d95223"
        },
        "item": {
          "id": "18c44eba-1595-48b2-a1c1-9992ac2682fc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e57fa5b3-5f13-4c46-8ae7-a10c45238023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ebf486-1740-4b68-8add-e94831282c77",
        "cursor": {
          "ref": "ba515d64-6f8e-423c-b30c-f8edec28dd35",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "88c76c59-4546-4b42-9b95-cdb243a58dc1"
        },
        "item": {
          "id": "36ebf486-1740-4b68-8add-e94831282c77",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7f5b8000-0a82-4fe8-8550-60029356b0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d51fb61-613d-4eef-a365-8c499934cd96",
        "cursor": {
          "ref": "13a47214-fa54-4ff9-aa3d-e9c785f38c2b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "112fb9d2-e52c-44e7-9d43-f801621d4122"
        },
        "item": {
          "id": "1d51fb61-613d-4eef-a365-8c499934cd96",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2f34274e-b624-452c-878f-4178f2833929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09854090-5eb2-449c-9bd9-375e1ce6afa7",
        "cursor": {
          "ref": "c8dd4f0c-462c-48d5-b049-6ba88e4b0abf",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "96cb826a-d93a-48e3-92fc-f5b9c92964f7"
        },
        "item": {
          "id": "09854090-5eb2-449c-9bd9-375e1ce6afa7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8cdda580-6e5f-4fb0-9a56-8c3ef774f325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160d4ed0-6cc8-4768-916a-3ee825174573",
        "cursor": {
          "ref": "33a0f75e-6528-4d53-802f-0dcc95b5c672",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "edeaf731-0049-4a0d-afef-0d34f1a2e967"
        },
        "item": {
          "id": "160d4ed0-6cc8-4768-916a-3ee825174573",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c1ac12de-77fb-4511-a08a-ffe23ba6fb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fbca31-d7bf-42fd-b8a4-0e98673f6554",
        "cursor": {
          "ref": "d51897ed-20c0-4b06-8fdc-b46945962cee",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f09cfae8-7391-4e9e-84ce-ea84fe263313"
        },
        "item": {
          "id": "a0fbca31-d7bf-42fd-b8a4-0e98673f6554",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7e727a3e-05bd-4ef8-96a6-20adc6bfc0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edb0fc3-c527-485e-afe9-9afbc711ca75",
        "cursor": {
          "ref": "cfa05666-944c-4f28-a2a7-e59384a228c1",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b40bda2e-50e6-4600-a8c4-620e3ce8ef71"
        },
        "item": {
          "id": "4edb0fc3-c527-485e-afe9-9afbc711ca75",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "617f072f-9a8d-4578-b57f-81c9034935b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3104202b-8955-42d8-b0af-be16b28927a1",
        "cursor": {
          "ref": "dfed059c-2dd3-4ffd-aaa0-6ae9fab54175",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5dbaa78e-b4af-427a-9591-4b25ac9323e0"
        },
        "item": {
          "id": "3104202b-8955-42d8-b0af-be16b28927a1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4d04a9fb-1082-461a-9106-ff1bcfd0fab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8836fbf6-27c4-43db-968f-d0e5f86237ca",
        "cursor": {
          "ref": "46952faf-daad-40fa-8b1e-20adfe833ed4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bc864cc4-8ebe-4a9d-b555-24443b53a6fc"
        },
        "item": {
          "id": "8836fbf6-27c4-43db-968f-d0e5f86237ca",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ceec60fd-bda1-483e-9c3c-a6e6fff90cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5593b124-dd83-4270-9258-453854384754",
        "cursor": {
          "ref": "b84f14b9-93ae-40f1-98d0-cdfa621f9bca",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c25e7d40-7683-4172-a7cc-94205a05d8c1"
        },
        "item": {
          "id": "5593b124-dd83-4270-9258-453854384754",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "61cb7867-c76c-4e86-bcf7-24ab7ee4173d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dc2453-dee7-4f78-8f1e-2cd483bee740",
        "cursor": {
          "ref": "9ee5d560-6fb4-4514-b3cc-c46b070f034c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a0279484-efa0-4090-9c88-e451e2f97b97"
        },
        "item": {
          "id": "f1dc2453-dee7-4f78-8f1e-2cd483bee740",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ecc58535-0d05-453a-8343-4240dff1eeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bf1b1a-3fd7-49c2-8a57-987fe1cc00e0",
        "cursor": {
          "ref": "3bed1ab3-8c8b-4ed5-b101-901da9a0f8d1",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7266ed82-d497-4abc-8c67-e5cd1040b166"
        },
        "item": {
          "id": "55bf1b1a-3fd7-49c2-8a57-987fe1cc00e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "18a4eb6b-5a49-4143-9331-f9289c01f75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff28d8fd-de9f-492e-b891-1584faa24ebf",
        "cursor": {
          "ref": "60a70d1b-3e84-4061-9e4f-8fbbec619317",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "330f9239-f254-47d7-a57d-566dba680265"
        },
        "item": {
          "id": "ff28d8fd-de9f-492e-b891-1584faa24ebf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3c1930da-da1a-4f1b-896c-af5e1d4d7d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7ad411-54dc-4b2c-b135-4763cbf00e4e",
        "cursor": {
          "ref": "40ba2067-d885-48f4-88eb-815f5e9fd29c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6548dc32-7826-4317-aabd-e933e7b696c9"
        },
        "item": {
          "id": "9a7ad411-54dc-4b2c-b135-4763cbf00e4e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "49dcc797-c5a8-4a19-ab7f-872439225712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54291e1a-8563-4e0a-aaf3-38a8d3fd4f14",
        "cursor": {
          "ref": "aefa1168-b320-4cf3-bf97-91211d4050a8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2c4300d2-ff56-480c-bb5b-fe9af576622d"
        },
        "item": {
          "id": "54291e1a-8563-4e0a-aaf3-38a8d3fd4f14",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "99529890-a9d1-4e68-9ab0-4465e5f6488a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152ce634-771e-4807-a06d-32c4c199f982",
        "cursor": {
          "ref": "6b659400-925b-4ae6-854c-334e6fda8517",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "de41128c-2d85-4df1-937e-e685c2915c4d"
        },
        "item": {
          "id": "152ce634-771e-4807-a06d-32c4c199f982",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8283e82b-27de-4f70-92c2-bfb4c0d44a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7949bdd4-107a-4d82-8159-0cabdf604a16",
        "cursor": {
          "ref": "5018fea5-6dd1-44c9-9e00-f7a3a4d30c50",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "27433d4e-8bcd-464a-907f-93da07fefac3"
        },
        "item": {
          "id": "7949bdd4-107a-4d82-8159-0cabdf604a16",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "da4ca3e8-dbbd-430a-b894-710e6ed2551d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de8e80a-7d02-4591-9652-071fe4d98d16",
        "cursor": {
          "ref": "f8cf3026-c202-4653-a2e4-262db26206b4",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "93fd22bd-7eac-4003-b261-e1e3b95f167e"
        },
        "item": {
          "id": "5de8e80a-7d02-4591-9652-071fe4d98d16",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e95d8ca8-6e9f-45ab-aefe-5f498f467a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f25707-e6ac-4b7b-b048-e1fc3e93452a",
        "cursor": {
          "ref": "96bcb78a-3da5-4718-966c-929ce7c016e1",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "115e3c34-47f8-4e9d-bf27-a065eb7a7dd9"
        },
        "item": {
          "id": "a8f25707-e6ac-4b7b-b048-e1fc3e93452a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "20a2abb7-83fe-4e1f-9dc8-13dad489846a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68da08eb-8e0a-4cd7-b938-5fa62c747c96",
        "cursor": {
          "ref": "ad635ede-2cdd-48cd-9611-3aee24cd80a2",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5448eb60-17cc-4597-be4f-97b46d89ca6c"
        },
        "item": {
          "id": "68da08eb-8e0a-4cd7-b938-5fa62c747c96",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "40962595-a85b-4dcd-8429-cf7ac23c9ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56a638f-fa87-4ed3-871c-67d45554a848",
        "cursor": {
          "ref": "be5fd04e-b3df-4e22-8fe6-dd1f0ff968bd",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "541344ae-9239-44bb-b4f8-06505daa8c46"
        },
        "item": {
          "id": "c56a638f-fa87-4ed3-871c-67d45554a848",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ee082cb2-b10b-4245-ac19-6facaeaf022f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8651741c-dc35-4513-a578-67bd6f86eaa6",
        "cursor": {
          "ref": "46c3cdbc-26ea-490d-8350-d4dcc83784ec",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a3a11f0a-36ec-4d9f-a016-66eaea733624"
        },
        "item": {
          "id": "8651741c-dc35-4513-a578-67bd6f86eaa6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ab0ad75e-683c-4e33-b4a2-796f3b6be91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855bf424-3372-4a48-b495-d4b077601b9d",
        "cursor": {
          "ref": "4c5d0090-0408-4b05-84a7-5b7d169ea2fb",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d134601d-88e9-416f-ba92-c3ff96f2e38f"
        },
        "item": {
          "id": "855bf424-3372-4a48-b495-d4b077601b9d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "24c747fe-4369-409e-8cc0-ec327d5e27af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b2675a-828c-499c-a466-fd70b05dd0fd",
        "cursor": {
          "ref": "eee9ddd4-6da2-4a6f-a17e-15bd121cbab1",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c7f11a47-1d33-4a28-adb8-4c2ead4a0eb4"
        },
        "item": {
          "id": "c7b2675a-828c-499c-a466-fd70b05dd0fd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a41cc1af-7838-4afa-b42d-268e2c64f57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6b910c-c407-4cb1-825e-506d84dc085d",
        "cursor": {
          "ref": "5280eef5-5874-46c8-a710-ea4a30c6c32a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a31943b1-4b4d-4e32-9cfd-45497f32c12b"
        },
        "item": {
          "id": "5c6b910c-c407-4cb1-825e-506d84dc085d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "61b3e7be-4c12-4353-adb5-701158baf164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22197b0a-6aab-4c3d-9074-f204749c1827",
        "cursor": {
          "ref": "bac4e26e-3fb6-430a-ba7a-c9ab63df87e5",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3c28c403-95f1-4f1a-9788-42099a122501"
        },
        "item": {
          "id": "22197b0a-6aab-4c3d-9074-f204749c1827",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f86f7b8a-749d-4632-8425-796dec9b331b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c10e740-e28c-4fd3-b08f-c8d1e7ee8c54",
        "cursor": {
          "ref": "ab682007-de0b-427a-bc6c-84e5e56571b3",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "266c6c1d-b8e9-42c0-b5f2-c9027e07c9b0"
        },
        "item": {
          "id": "6c10e740-e28c-4fd3-b08f-c8d1e7ee8c54",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "977f5465-1c80-4eaf-bb4a-a6bc5677c4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8f03e5-1228-4a1a-919d-e47d5642f7b2",
        "cursor": {
          "ref": "e9ce2764-7b25-49d2-b4cb-76d43e83e461",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3beca051-013b-4628-b89a-e69142b9dbff"
        },
        "item": {
          "id": "fa8f03e5-1228-4a1a-919d-e47d5642f7b2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c5de381b-f2e8-4b52-aa64-8cea9d102768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb78e4a-00ff-41c7-a37e-1a92082344b9",
        "cursor": {
          "ref": "1ccf238b-51b0-4591-9b11-c68010479d81",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "515af835-2308-47e1-bf75-2aded08cdefc"
        },
        "item": {
          "id": "8fb78e4a-00ff-41c7-a37e-1a92082344b9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "69810407-c500-4f1e-9118-4347a3001172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805de26f-c1d9-473e-9e3a-df1e726acbe5",
        "cursor": {
          "ref": "f8382c44-149f-481e-9a4d-279b1f5cc302",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8979a7e6-b1e2-4c49-870e-02c51b81a027"
        },
        "item": {
          "id": "805de26f-c1d9-473e-9e3a-df1e726acbe5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2e7a8cce-80c2-4e37-895f-55f4a0d0deb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0644be-d7ca-43d3-8c07-79a5ecebda09",
        "cursor": {
          "ref": "f89efff5-8c0b-4576-9e31-ad6b12929e99",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e7852252-0312-47b1-bb7c-d14810feaa9b"
        },
        "item": {
          "id": "de0644be-d7ca-43d3-8c07-79a5ecebda09",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "039c20c3-083b-4911-8ebc-23f02f6b26fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc3921a-93f3-473f-93ec-2f71b7a8e250",
        "cursor": {
          "ref": "63d3602b-5978-4751-bc27-477dfc37e5fd",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "00054df2-5b60-455a-8c17-d78f81886641"
        },
        "item": {
          "id": "6fc3921a-93f3-473f-93ec-2f71b7a8e250",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6e2c181f-0dda-48c4-b6f5-51a293215ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a429376-af02-46e6-813c-a0c78362d629",
        "cursor": {
          "ref": "70cfd4b7-efc0-4952-b675-605471518593",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a6d324c0-a3ec-4f5e-9410-8d50681b83c4"
        },
        "item": {
          "id": "5a429376-af02-46e6-813c-a0c78362d629",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e902176e-5c70-44e2-9225-dbc58f93bfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145e231c-7aeb-40ca-b577-0f949e936bac",
        "cursor": {
          "ref": "5d95edde-26bb-486b-85dd-274f1b9874e8",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "82f47493-a53a-475d-b3b2-e4fac1b511ee"
        },
        "item": {
          "id": "145e231c-7aeb-40ca-b577-0f949e936bac",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5ce50276-b5cd-4614-8134-12f1d71181e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90b967d-661c-43ee-9037-65289b33d936",
        "cursor": {
          "ref": "7923f6fe-e8b5-4d8c-bc1f-31b41f47267e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a5ea0c5a-aaa6-4f7d-b38b-8e275eb028b9"
        },
        "item": {
          "id": "f90b967d-661c-43ee-9037-65289b33d936",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1b9bd4be-1458-462b-9d05-0fdfaaf95a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c7e77d-a493-4ea1-81d8-df82b639d81c",
        "cursor": {
          "ref": "ec3359c8-9ccf-4466-8a02-39f9ec4f2ba9",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2528fab8-d11d-4373-800f-90f750363779"
        },
        "item": {
          "id": "42c7e77d-a493-4ea1-81d8-df82b639d81c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "72ee6ab1-aa09-42ee-af90-01639406c861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75188b81-9e3c-4f34-b007-9e2ff6ccd45d",
        "cursor": {
          "ref": "97388b23-753b-4d17-9e6f-9e341a451df3",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3b550400-f6a3-4282-85e1-8854ec6bea2a"
        },
        "item": {
          "id": "75188b81-9e3c-4f34-b007-9e2ff6ccd45d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "87c1bf77-db5e-4592-acdd-d31416fe11b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428e46f9-e143-4e73-9b53-ee09b503623c",
        "cursor": {
          "ref": "4ba3f5f2-3e47-490c-848d-a9b16f059a04",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dbaa943a-bf02-4851-b047-46eb2182c8c3"
        },
        "item": {
          "id": "428e46f9-e143-4e73-9b53-ee09b503623c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "84248570-9712-40a7-a6fa-880ff3c9dadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3312fc9f-7480-4d14-9d3d-9dbc5218d31f",
        "cursor": {
          "ref": "3f3663d5-21fd-4961-b8cb-5a19ca99d1fb",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a57acafb-7b40-476f-81d2-d7193c5325e6"
        },
        "item": {
          "id": "3312fc9f-7480-4d14-9d3d-9dbc5218d31f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3ed49824-05b6-45b2-b10d-211c7e531f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee012ed2-9afb-4786-becc-62917f8028a2",
        "cursor": {
          "ref": "5bae49e2-3425-49bf-9621-e4db3b2545ab",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0241ebcd-7898-409a-8b00-4249cfcfce7a"
        },
        "item": {
          "id": "ee012ed2-9afb-4786-becc-62917f8028a2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c5706d26-14e2-4e06-9a75-abfd5d3f045f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda80e06-a39b-485a-9326-c7d18182b2fe",
        "cursor": {
          "ref": "522a9a53-2089-4029-b305-9d46f3819c98",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "41a25f40-fb72-469a-b562-c64d2b1619bd"
        },
        "item": {
          "id": "bda80e06-a39b-485a-9326-c7d18182b2fe",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "15176b17-b10c-4ba8-811e-d90c66b42c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16a792a-04e8-4bd7-b9ab-a60f1c031dbb",
        "cursor": {
          "ref": "e1e86094-4a2d-4f92-b2c0-549a44697884",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ea3e0907-b027-4f3f-afce-6a247a1ef977"
        },
        "item": {
          "id": "a16a792a-04e8-4bd7-b9ab-a60f1c031dbb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7e02699a-1df4-47fc-aa5c-09fac0510296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0c2367-2266-41da-af6d-ae7a810324f5",
        "cursor": {
          "ref": "a95d9828-a647-41d7-9ac7-e8ee787ad5a0",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e69a7f58-1eb7-4eef-a05b-533549042b4c"
        },
        "item": {
          "id": "8c0c2367-2266-41da-af6d-ae7a810324f5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6bda8cbb-e6ec-4bc7-8e45-a7715a995116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6413e0fc-9539-432a-a9ea-f21c887e5a60",
        "cursor": {
          "ref": "fd9ae811-4a54-4dc6-b7a2-ec5b5630c615",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a411e258-350e-4a4a-9c62-46dd37b49fbc"
        },
        "item": {
          "id": "6413e0fc-9539-432a-a9ea-f21c887e5a60",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "155ac9a3-e73d-416b-88af-ecae033bbeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a1534b-ccab-44b3-83b7-a2049879bbb4",
        "cursor": {
          "ref": "e3a58a05-a83b-4bbd-9210-322e035fb256",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9874dcfd-3cb3-429e-9f6b-4423e2e6e273"
        },
        "item": {
          "id": "51a1534b-ccab-44b3-83b7-a2049879bbb4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7fbfcff6-82d3-4dc6-b92a-f95d20331a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8931e68-3050-4458-900d-d35c2aac573a",
        "cursor": {
          "ref": "66de5d68-0eda-465f-b45e-69f74d6b8d2a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b7ea7cf2-abbc-429b-8368-9cde7d24a67f"
        },
        "item": {
          "id": "d8931e68-3050-4458-900d-d35c2aac573a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8c28fc0f-006e-40ab-87f0-8c8567464708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d497d1c8-bb3b-4cc2-893d-1db5b3fbbd22",
        "cursor": {
          "ref": "c8339bab-bbcc-449b-98ba-c1a5aeb93bb2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "abd26c22-e4a1-4b3e-a9c4-269916de9ae5"
        },
        "item": {
          "id": "d497d1c8-bb3b-4cc2-893d-1db5b3fbbd22",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7c460a05-2790-4cb8-925f-8f5f83e99d4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0def49-0018-4cb1-bbf1-971f4781cb65",
        "cursor": {
          "ref": "2e71fa6a-abee-4b58-b0e9-12ee55105b18",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c68ad83d-c91e-4985-872c-6928e3a07c5f"
        },
        "item": {
          "id": "ed0def49-0018-4cb1-bbf1-971f4781cb65",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b0fbe329-910f-47a6-b689-eb7d5b906c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "36ac902a-c5ca-462d-89a8-b9720cfd7df6",
        "cursor": {
          "ref": "3e3d3316-801e-48a7-9ce4-9b2fff2c77a3",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b34ff2b8-0831-44d6-9a9c-2b879d2e4a29"
        },
        "item": {
          "id": "36ac902a-c5ca-462d-89a8-b9720cfd7df6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dcbced7c-5be5-44df-9ed0-45dcb15351a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "278d3dde-7f76-493d-8570-d3f55e2a754b",
        "cursor": {
          "ref": "8c2b730c-325e-4b81-a710-0451d1c88738",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ffc63255-a519-451e-bcbb-18671b314231"
        },
        "item": {
          "id": "278d3dde-7f76-493d-8570-d3f55e2a754b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "30c4d073-d864-4572-bfac-d8fc71ece0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7462a9c4-b9cc-4ff7-ab58-c942a0e4c261",
        "cursor": {
          "ref": "87cc6540-7dd7-4572-9d31-db5a5f78af53",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4fd2b405-3ed7-4a9c-acfa-157c6392fe1a"
        },
        "item": {
          "id": "7462a9c4-b9cc-4ff7-ab58-c942a0e4c261",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "41525c3c-601b-4bef-ab0a-8922fda76ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8427f5a5-bc7f-4efd-a416-7810b7c1cb7b",
        "cursor": {
          "ref": "83febef3-f17b-4968-89a7-ca52dcab7257",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8e9af192-be05-4bdb-b00a-07dd3eb81ada"
        },
        "item": {
          "id": "8427f5a5-bc7f-4efd-a416-7810b7c1cb7b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d9599633-b4a5-4dbc-8904-e9b563a9a974",
          "status": "Created",
          "code": 201,
          "responseTime": 4136,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a451d54-c952-48e8-ac39-296d10ab98cc",
        "cursor": {
          "ref": "54a80fda-87b1-47e0-ac2e-b4a8f62a9921",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "02f66bd5-8656-46bb-bfd3-b9d186b80102"
        },
        "item": {
          "id": "3a451d54-c952-48e8-ac39-296d10ab98cc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5edf64b9-5fa9-4199-8427-e2e33940eb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e2e623da-8593-4bd7-8a54-2681de44749f",
        "cursor": {
          "ref": "a84aebc9-d596-4789-936c-15298e21c427",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "07f67920-7cd1-4cb9-9460-5ed7802eeb1c"
        },
        "item": {
          "id": "e2e623da-8593-4bd7-8a54-2681de44749f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "82073a40-7cd3-4666-81f0-f763107df923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9815ee91-a2f9-4093-883e-efa32c06e62d",
        "cursor": {
          "ref": "a8a70773-1c85-4816-a510-63e4a0f9aeae",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b22af96c-bccb-48e7-aae9-30d0dca672ef"
        },
        "item": {
          "id": "9815ee91-a2f9-4093-883e-efa32c06e62d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3ec559ee-8861-42e8-996d-8ee9cfc191d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af507f65-92b0-4454-8eb9-eccf961db292",
        "cursor": {
          "ref": "37e3623e-3d25-4a38-8eef-5bcfe8942d97",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6f708bea-c7b5-4774-a45f-f28388cffc55"
        },
        "item": {
          "id": "af507f65-92b0-4454-8eb9-eccf961db292",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f3c19dc2-7f1e-47a0-878f-ffa01d19d45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a658c1b0-414b-4bce-960b-e8ef3ab6371f",
        "cursor": {
          "ref": "5fc0edb4-0de2-40bf-9d5f-73bb5bde40f4",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fcd2f3ae-f0fc-4090-8206-e2c97623b842"
        },
        "item": {
          "id": "a658c1b0-414b-4bce-960b-e8ef3ab6371f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "21f8eaf2-3d30-4fa5-9871-43d352f39fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9393b05-bb58-40dd-bb03-445713cb9404",
        "cursor": {
          "ref": "92b1f1d4-c5a2-4a6c-b49f-2d6695ade498",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f49e772e-ef94-4a66-b5c4-766508b56e20"
        },
        "item": {
          "id": "c9393b05-bb58-40dd-bb03-445713cb9404",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2c84fe72-518e-4836-9884-5ffe5d5c0fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe3fcea-582d-4a59-a021-b5b4642ba4a6",
        "cursor": {
          "ref": "874c5486-0141-499c-9c8a-2a9ee9a98900",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5d8e71f7-1b9c-48d1-b4a4-b933476dfb49"
        },
        "item": {
          "id": "1fe3fcea-582d-4a59-a021-b5b4642ba4a6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e94697de-c19c-4820-9a55-7c217c4fdeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2c5f42-67c7-49da-8b72-47e90ab334c2",
        "cursor": {
          "ref": "670e5555-1466-4e2c-8d4d-174af9896a34",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2f6b625e-2b0b-4922-80f6-ef3723388b1b"
        },
        "item": {
          "id": "ea2c5f42-67c7-49da-8b72-47e90ab334c2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "62876756-9372-4172-907b-0b53b20256e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fecb73d-1e97-4673-8e50-93de5538a67e",
        "cursor": {
          "ref": "85fd4b8f-9e28-4d55-80ef-0b6b2f82eb24",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "95f09abe-ead5-47f0-83de-86107adbb438"
        },
        "item": {
          "id": "3fecb73d-1e97-4673-8e50-93de5538a67e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3949d04a-0ebd-49ee-9a27-0686b50e3b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ba82a5-b491-4807-854f-88b455650890",
        "cursor": {
          "ref": "25ec0acc-b310-40be-8753-7177b4997947",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ab9ef018-ca2b-4254-a43c-0994a2ae37c3"
        },
        "item": {
          "id": "93ba82a5-b491-4807-854f-88b455650890",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "408ec0bb-d244-4f99-a4cd-ef6e93880984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a46305-fab4-4418-bb4f-dc236322629f",
        "cursor": {
          "ref": "a5468777-63a2-4f6b-866d-7219de67de3a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1db2984d-611e-4432-9179-e15d98fd6d36"
        },
        "item": {
          "id": "f0a46305-fab4-4418-bb4f-dc236322629f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7cecfe77-b040-43bf-9175-a3ce89501a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00eaaa00-00ff-466f-85a4-ee711bd9f845",
        "cursor": {
          "ref": "62974d4c-c364-486d-a28e-30486242aa28",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f7845c26-1aed-433d-8914-8e710bbdbf94"
        },
        "item": {
          "id": "00eaaa00-00ff-466f-85a4-ee711bd9f845",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0856aa03-6b04-491c-a7e7-2695edf485d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35100e21-1bb9-46cf-9911-a0957da244df",
        "cursor": {
          "ref": "a74bedac-3e32-4482-b591-539ed4f18064",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3962ac1e-951e-406a-95a7-cc91e372934b"
        },
        "item": {
          "id": "35100e21-1bb9-46cf-9911-a0957da244df",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0ad8bd55-fd95-43e0-aed2-1f56e4299968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18d11b1-e7e5-4a2f-82a5-295b058f0912",
        "cursor": {
          "ref": "f1b8a4be-f289-4fe1-9f81-554f969f8d93",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8d13d338-958d-4700-bdf3-26a1a551390f"
        },
        "item": {
          "id": "b18d11b1-e7e5-4a2f-82a5-295b058f0912",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f6840b5a-d0df-4abe-b798-ce56e3635fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d96230-9f44-4c7b-9283-5e379a1b9393",
        "cursor": {
          "ref": "5001f6cb-0446-4235-8307-388e86ac0e72",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d25d4910-b64b-484f-91a6-04f27261744a"
        },
        "item": {
          "id": "d1d96230-9f44-4c7b-9283-5e379a1b9393",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "95cd91ef-b88d-40ba-99d0-0b018dcd37cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c37d388-212a-406f-a588-70a0076939d7",
        "cursor": {
          "ref": "de5a907f-4cf3-4a1a-829e-d439203e8046",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3493ae5e-3a54-430b-ba20-f1effc30675b"
        },
        "item": {
          "id": "7c37d388-212a-406f-a588-70a0076939d7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0b277eee-bb35-413c-9071-1fa9ce94eb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc32fcc-1b6b-4685-8a5e-b482fcf75e56",
        "cursor": {
          "ref": "79db88d0-4c12-4cdc-9725-6cf8d4a7b2a7",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e3778c20-c75c-46ae-9e8a-824dd78b0608"
        },
        "item": {
          "id": "bbc32fcc-1b6b-4685-8a5e-b482fcf75e56",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b2c29ab3-2d98-420c-acc3-9b6789cc0667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c10622-6783-4143-acd7-01f9557440f8",
        "cursor": {
          "ref": "bab2b549-2cbd-4f0c-932d-e9ead773bb71",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b67f44a3-573b-408c-b03f-0fca03f45bf9"
        },
        "item": {
          "id": "69c10622-6783-4143-acd7-01f9557440f8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f6402cee-145a-479b-a70c-54feb0e648fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c131f8-169b-4c0c-ae1e-95392db8bb0a",
        "cursor": {
          "ref": "4f7f84b0-659c-488e-b50c-f0c902f7fdc1",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b1c322b4-f27e-4790-8fa9-b38efa7d4ed0"
        },
        "item": {
          "id": "46c131f8-169b-4c0c-ae1e-95392db8bb0a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bbf43ba1-b8e7-406d-aaa7-22edde182f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3203c974-6449-4f3b-ac9d-389af6a39624",
        "cursor": {
          "ref": "0aa5c4f5-4918-49e8-82cd-a4e6a8aa4566",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0d4e2f69-369e-465e-afed-add0a9ecd812"
        },
        "item": {
          "id": "3203c974-6449-4f3b-ac9d-389af6a39624",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fa89e580-a4a8-4e26-b14c-61d6249ef082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e85c46-ecc6-4d44-bdb9-9dd8b12f33eb",
        "cursor": {
          "ref": "a144daec-3dd5-47eb-9d20-ccc624e1e591",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f4d8ab04-e09b-40a0-acfe-64ea0834140f"
        },
        "item": {
          "id": "36e85c46-ecc6-4d44-bdb9-9dd8b12f33eb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "41fd7aa2-f160-4493-ab15-e2a63827faed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbce6c0c-f356-4458-af1a-49a9c9e865ec",
        "cursor": {
          "ref": "97db2178-817b-4a1e-b51e-acb640de604e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "214d3ee9-f3c4-48ab-bcb0-775c03c1329d"
        },
        "item": {
          "id": "fbce6c0c-f356-4458-af1a-49a9c9e865ec",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a35b35ad-ee2f-4842-873a-af2b898bd5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf888242-4d33-4edf-ba4c-a6a3224f4079",
        "cursor": {
          "ref": "c46a9755-a449-4f95-b50d-342b64362edb",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d26dd455-9dfe-48b8-a104-6e30e1abb539"
        },
        "item": {
          "id": "bf888242-4d33-4edf-ba4c-a6a3224f4079",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ac0574c3-a64d-4e51-b344-d66280f913bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b603ac93-e3db-4706-8a36-3a0bd3fda4d2",
        "cursor": {
          "ref": "924e7846-2597-4efc-9be1-27b41d0b2c33",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4543bfef-123d-4e23-8972-ecf5dbf65d98"
        },
        "item": {
          "id": "b603ac93-e3db-4706-8a36-3a0bd3fda4d2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5ce0357b-4bbb-4ef9-be6a-5958323ae6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90050054-42b3-439d-b2ad-68b0b49c19e8",
        "cursor": {
          "ref": "b0271bc6-6d59-419f-b10e-93a8cd78eec6",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "58326d3e-fb24-40cb-828f-908d4ed64be1"
        },
        "item": {
          "id": "90050054-42b3-439d-b2ad-68b0b49c19e8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "186fd19e-1207-4db6-b9d8-d5344e347e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddb967c-4538-48ae-b9fe-e4785a5be4f1",
        "cursor": {
          "ref": "bcb0b2c1-b076-454e-b6a3-527e8d84da61",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d3fbea3f-c706-4d2e-b639-2a4374ede2d9"
        },
        "item": {
          "id": "7ddb967c-4538-48ae-b9fe-e4785a5be4f1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5e857889-8da6-4194-9828-56529b55ac3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ecfa1b-946b-4ed2-a1bc-a4faa924393d",
        "cursor": {
          "ref": "5987ac05-aecd-44bb-8ed7-0a0a4145fd91",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a233cc11-a664-4f4b-94f6-56257b064e45"
        },
        "item": {
          "id": "08ecfa1b-946b-4ed2-a1bc-a4faa924393d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7e5f9454-69e3-42fd-bb94-36aa8555f8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b1b4ca-6d8e-4e40-ba4a-078b44a5793b",
        "cursor": {
          "ref": "064cc3c0-34a1-4f44-a4bc-4a96ace6bd38",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "89942e13-730f-4fa1-8bf3-aa12dcec9ff8"
        },
        "item": {
          "id": "b5b1b4ca-6d8e-4e40-ba4a-078b44a5793b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0311d9da-1e97-4e35-92a3-30264aa639ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9ff1f5-dce6-4812-9d09-9af7e6d9e694",
        "cursor": {
          "ref": "31319bea-d141-4d2f-a802-90705ed32416",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7ada52ed-44b8-407a-8920-3c714d3f0ea2"
        },
        "item": {
          "id": "0b9ff1f5-dce6-4812-9d09-9af7e6d9e694",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "279e2529-3912-4542-97a6-fcca500d719a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca48a9e-76b2-4786-80a4-b45c58816e99",
        "cursor": {
          "ref": "789d9112-e379-479e-95e4-f943cdf8d9e6",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "945ffbb3-95ea-4bc6-9a56-12db4139a3f0"
        },
        "item": {
          "id": "6ca48a9e-76b2-4786-80a4-b45c58816e99",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fc20c7ec-e267-4e91-bcd8-41c02a5bf5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a181455e-4835-4238-8b91-b4c2166c4b74",
        "cursor": {
          "ref": "3beb7d5d-4760-413f-adfe-68d37abecf62",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "944449c3-f78d-41b5-9b41-9080d57b4574"
        },
        "item": {
          "id": "a181455e-4835-4238-8b91-b4c2166c4b74",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "34fcf0d4-4b5d-4d29-9284-327862a2916a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bf9606-2b74-4113-8029-71807e990002",
        "cursor": {
          "ref": "ee3fd853-94fd-43b1-8217-0418e47b93bc",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5080002c-fb83-4a58-88c6-fc58f7c1015d"
        },
        "item": {
          "id": "d5bf9606-2b74-4113-8029-71807e990002",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1e2828b1-b1d4-4e3f-912e-b2f86c4b2bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b6c0ed-c199-45d7-a247-da3948784c5c",
        "cursor": {
          "ref": "f455c1ea-d105-4597-a6e8-a161cfa3d17d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "54ad56a4-bf9e-43ba-b82b-122f24deb448"
        },
        "item": {
          "id": "e7b6c0ed-c199-45d7-a247-da3948784c5c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "932f4c92-d0ab-454e-83ba-b186a4c0a4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a762f336-1f9e-4a47-9c93-7314aa22a976",
        "cursor": {
          "ref": "900ee849-c751-4dfc-8b24-8c0960d4621a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d18416e1-7cca-4d30-8036-644249cf7837"
        },
        "item": {
          "id": "a762f336-1f9e-4a47-9c93-7314aa22a976",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e426fe76-8bf5-4869-b902-bfcc2fe96e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570111ab-5caf-4f20-8e56-1318b8a313cd",
        "cursor": {
          "ref": "02f4f539-5dca-4b3c-adca-17125535e049",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c9b3ffa6-5292-4437-8320-5e65db359b26"
        },
        "item": {
          "id": "570111ab-5caf-4f20-8e56-1318b8a313cd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "844d13b6-5481-4bcb-92b8-4398abb4f9cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32793c65-02d0-4fc7-9827-c1f61d0f7b31",
        "cursor": {
          "ref": "6abd7dea-45ca-48ae-9eaa-307efa3053ec",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e9f74475-a409-4075-b705-0be4b5d6201f"
        },
        "item": {
          "id": "32793c65-02d0-4fc7-9827-c1f61d0f7b31",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c9d1df95-f5fa-49ee-8316-39cc93745f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3348f68-a78b-4378-bb82-7f717a142326",
        "cursor": {
          "ref": "54593b6e-20fd-41ab-a1e6-a109ed7d321a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "50f151ff-33ef-46d1-b5b7-a99a53f4637f"
        },
        "item": {
          "id": "d3348f68-a78b-4378-bb82-7f717a142326",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c3635328-49f7-4ad2-8c6b-1522693f622e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409a1305-597e-4872-82cb-ba7b7cb93ecd",
        "cursor": {
          "ref": "5423048f-2b1b-40a6-af2f-7d2b899faf36",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5b47e75f-673b-4b21-8f14-70423b30079c"
        },
        "item": {
          "id": "409a1305-597e-4872-82cb-ba7b7cb93ecd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1ea496cf-8fb2-4918-bbfb-958c33cf4cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ada8393-92f1-4c1b-bda3-00f1703f6199",
        "cursor": {
          "ref": "9da53efc-8d28-4ce4-9df7-f6d1c4c39330",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3af527de-5fff-48b6-9699-30d70cc904a0"
        },
        "item": {
          "id": "3ada8393-92f1-4c1b-bda3-00f1703f6199",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dedb117e-0b40-4307-b608-f62ded6e39df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01849581-3b31-4749-9ddb-dabcd60aec93",
        "cursor": {
          "ref": "a8254962-b7f1-46f6-8555-24661dd5f785",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ca80bc4a-ea23-4970-93d3-7bdd43a49f96"
        },
        "item": {
          "id": "01849581-3b31-4749-9ddb-dabcd60aec93",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5ea17f29-d1f4-46bb-9851-6f849fc8042d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3434c34-3ffa-48cc-993c-b0ed2f3808ae",
        "cursor": {
          "ref": "cd1f5a0e-cf64-431c-9baf-8cd3bafa27f7",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7959ba2a-5131-47bf-8e00-e4af636ea65a"
        },
        "item": {
          "id": "f3434c34-3ffa-48cc-993c-b0ed2f3808ae",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4faa868d-633d-4831-af0b-f0e1095ba29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad03ebcf-042c-46a0-b112-a47d1ceebdba",
        "cursor": {
          "ref": "1a63e116-e1a2-4d90-87b4-3369761c8626",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b0cccfc9-04e5-4af7-a83c-91abc52d76cd"
        },
        "item": {
          "id": "ad03ebcf-042c-46a0-b112-a47d1ceebdba",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9d8e965e-54f6-48c7-ae05-1ed2c7d4b491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a36bb5f-2fc2-4f61-a09d-024161a529ac",
        "cursor": {
          "ref": "6c54ffad-9aa3-4955-8564-fcfc83dfcb3e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d38b422c-07a4-4262-9792-4c232b853de1"
        },
        "item": {
          "id": "5a36bb5f-2fc2-4f61-a09d-024161a529ac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c8dbe8de-39f9-4c68-a6aa-50911506ec34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9623e1bf-2336-4535-a3cf-d378df1e6dc3",
        "cursor": {
          "ref": "45c0baf1-ca15-4405-96a5-d077bd4a3793",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ce4c3256-c777-400f-b6f0-0e8d9c506f81"
        },
        "item": {
          "id": "9623e1bf-2336-4535-a3cf-d378df1e6dc3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "499a3173-4356-4ea1-9865-e41438fc1877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6cb5f7-4661-406b-81bf-7cc720473dfd",
        "cursor": {
          "ref": "9b102a5f-f63f-4381-8c35-80c8c0b8c7f6",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b46e9c47-b08a-4c16-92d5-14e2bdda9e18"
        },
        "item": {
          "id": "1b6cb5f7-4661-406b-81bf-7cc720473dfd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d4b95ea6-55cd-446c-9fd5-e260283c88d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf39f54-058b-485b-94f3-b14b34768eed",
        "cursor": {
          "ref": "65e6a4dc-b9e9-4b09-b7e7-1377d66ed76e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4d5827fe-2093-4f84-8c27-d1b12848af08"
        },
        "item": {
          "id": "0cf39f54-058b-485b-94f3-b14b34768eed",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b82da861-f79b-4cba-8a3a-916495dd1336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d89b9e1-5486-4a2e-910e-af7736ba927a",
        "cursor": {
          "ref": "ad3f2719-902c-4811-9eb2-fe27e5968ed3",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "06951fe8-3c3e-428a-b542-cdedd27dde8c"
        },
        "item": {
          "id": "7d89b9e1-5486-4a2e-910e-af7736ba927a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "168e4e5f-56ad-4995-a632-541f68248d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cd8464-9e28-427a-947b-69f0516442cd",
        "cursor": {
          "ref": "46bf4185-ce20-4c93-8943-be128f9bc364",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bb46dbfc-cf08-4db9-bcbe-3c5dc9466666"
        },
        "item": {
          "id": "24cd8464-9e28-427a-947b-69f0516442cd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b5804d20-dd48-4050-ae8b-146bd1d0b963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb32cc5-ae7d-4797-bed3-6abfcad1e178",
        "cursor": {
          "ref": "7742f2e5-6029-4303-b437-2734772245a6",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ce6078c1-4364-41ec-bd27-fb81f8c2c505"
        },
        "item": {
          "id": "1eb32cc5-ae7d-4797-bed3-6abfcad1e178",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5f46ea7a-38fa-4878-8ba0-5fd254c74aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f2f32b-8b9a-40eb-b4b3-b759bdd3ec17",
        "cursor": {
          "ref": "a638745c-a34a-4403-bc98-11d22e2419c5",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "44f9c91f-3067-48d3-b88a-6d43f61413d3"
        },
        "item": {
          "id": "55f2f32b-8b9a-40eb-b4b3-b759bdd3ec17",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "34575875-7415-4a33-9f6c-3b1f5e7c002d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85392da-661b-4e64-b1ff-ac25a5eed063",
        "cursor": {
          "ref": "47119672-46ab-4c76-983a-9eabd8a08f0d",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d601cf59-6d9c-4f53-8b12-c819a15ddb88"
        },
        "item": {
          "id": "c85392da-661b-4e64-b1ff-ac25a5eed063",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1d51bdd1-804b-4763-b2d9-d393d8b11d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5d16d7-8860-4e9b-ae22-809167058028",
        "cursor": {
          "ref": "3641a36d-bb06-40f9-aee8-01d473231036",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5fad5888-3149-420d-934e-4091e4014d0b"
        },
        "item": {
          "id": "fe5d16d7-8860-4e9b-ae22-809167058028",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "054ac97f-d82c-43bf-9e22-792a7bd2b97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de30c067-4ad7-4164-8c13-498ee087f9b9",
        "cursor": {
          "ref": "427c0be7-3759-4cf9-ab61-f347ff38da14",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7d3cf313-b455-4865-9e93-d19c3cf5c00c"
        },
        "item": {
          "id": "de30c067-4ad7-4164-8c13-498ee087f9b9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a9b0a5a1-ed58-449c-9f03-20575ec910b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84ababc-dad2-49db-8c7f-4e8db6418063",
        "cursor": {
          "ref": "cbf97d3e-3436-4de2-84a3-1cf91a159912",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9fca2555-ada7-4537-b55e-1ff8debf83e9"
        },
        "item": {
          "id": "c84ababc-dad2-49db-8c7f-4e8db6418063",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "eb246c95-998d-48a8-b72e-2d37b346b5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45633c41-88b5-4294-ba27-76e4c19acfa3",
        "cursor": {
          "ref": "81a1fde1-f5cc-4064-951f-3ac62465f397",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "91b17c12-ab4c-43b8-a458-dccc7be2e95b"
        },
        "item": {
          "id": "45633c41-88b5-4294-ba27-76e4c19acfa3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3da5a25f-dad0-48e3-8262-cb950e1b2d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c97f822-a38e-474a-ac43-7c69daaa13a1",
        "cursor": {
          "ref": "03ff571f-2c0e-4d8c-b47f-c46afe8a5de5",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "46f1c6e9-011e-474c-9bc6-bfc1d53f4734"
        },
        "item": {
          "id": "2c97f822-a38e-474a-ac43-7c69daaa13a1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8ce0361e-4521-44e5-936b-9ecc556dfa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95236fd5-c4bf-480d-b8b9-938e9aaeddd5",
        "cursor": {
          "ref": "5a0df561-c27b-4914-ba1b-ff987c74334d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c0602148-e044-4ddd-9d27-fcfe9f83ae68"
        },
        "item": {
          "id": "95236fd5-c4bf-480d-b8b9-938e9aaeddd5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6a814b15-5fc4-4204-8716-722d95b73252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee7a3fb-6d89-4444-832e-be0374ec2867",
        "cursor": {
          "ref": "913064b1-32bf-4429-a410-cac317bf66ff",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8c9939f1-9dd7-44a1-8578-31185b89b91d"
        },
        "item": {
          "id": "4ee7a3fb-6d89-4444-832e-be0374ec2867",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "24ec8234-41a7-4e59-bca1-4f65a1d49f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461cc566-720b-4b1e-8096-2545eb518c25",
        "cursor": {
          "ref": "68ae876b-a14b-4d56-b90f-566ee0183e53",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3675a18e-4aad-47a4-9215-06c1aed4135b"
        },
        "item": {
          "id": "461cc566-720b-4b1e-8096-2545eb518c25",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9470728d-d5a6-4085-bb33-707748455533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2c81e4-6fce-495f-9a3b-221d5b90b716",
        "cursor": {
          "ref": "ba4f95ae-641c-4015-917f-7fc9dd37b43e",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "eb002874-5a5e-434f-b45d-0e872d3e4b3e"
        },
        "item": {
          "id": "ed2c81e4-6fce-495f-9a3b-221d5b90b716",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4036a182-b99d-4b08-b04a-e13b62a83b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5535e16d-7f45-4ce3-8ccf-4d388dc08534",
        "cursor": {
          "ref": "b5b780b8-4661-47bc-a9c4-43b1fbdda048",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "df770f1b-e60b-466b-9c49-8fbd4eb9c219"
        },
        "item": {
          "id": "5535e16d-7f45-4ce3-8ccf-4d388dc08534",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cce19f08-c168-46f9-ac73-0b5b01a35a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa30f72-9e57-41eb-b93b-d6e22450bc7d",
        "cursor": {
          "ref": "496c94ce-4863-483e-a7bd-c29708d6932a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6561d497-0de0-4d2d-b3f2-4a6cd2ab0aba"
        },
        "item": {
          "id": "5aa30f72-9e57-41eb-b93b-d6e22450bc7d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d0017add-f769-4cce-a669-9cfa936ca0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa7eb80-c866-4ab0-a0d3-87da9dfd5097",
        "cursor": {
          "ref": "f0de164b-c540-45b8-85ca-3790eebf757c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "72988d39-b6e1-4492-9594-e12b7a619117"
        },
        "item": {
          "id": "4fa7eb80-c866-4ab0-a0d3-87da9dfd5097",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3c7f6fab-e222-4b40-92ab-8a9502bbb3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8942fa13-c8d4-4270-a6c2-3e192ac98998",
        "cursor": {
          "ref": "82ad9806-48cc-4aac-aa19-565d1d7f32d1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "90b8acd8-636e-499d-8d1a-01b0ce61a8b9"
        },
        "item": {
          "id": "8942fa13-c8d4-4270-a6c2-3e192ac98998",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9de33710-b2be-4f78-8d89-abd3fa866ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56b1bc6-4458-47f8-8c21-8a751f5cf1a3",
        "cursor": {
          "ref": "35a26506-3c83-4063-89f6-614c3ae7ec86",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "48a7cc21-b4f6-428f-928f-ce253e78cfa7"
        },
        "item": {
          "id": "c56b1bc6-4458-47f8-8c21-8a751f5cf1a3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "36a36b51-ad7f-43a3-b9d7-d42c6a990981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447f4b72-ddec-4e73-a3f7-0778f3ee01c8",
        "cursor": {
          "ref": "e1597372-cd14-487e-b18f-41dabe9be453",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a9e53165-5357-4f40-85f2-d9441f240917"
        },
        "item": {
          "id": "447f4b72-ddec-4e73-a3f7-0778f3ee01c8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1fe431c4-7ffe-41e1-b1dc-d8ecf456bc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d89142-0f66-49c0-b82d-5281ce247a65",
        "cursor": {
          "ref": "19483174-9a36-4fa2-98a5-6b7a33fbdba9",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e67c740b-b887-49b1-884b-e8c5b9241374"
        },
        "item": {
          "id": "55d89142-0f66-49c0-b82d-5281ce247a65",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c4e5e8a0-8e44-487e-a768-47f0e5403f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab65faf7-4834-4124-a6ad-8a14a1a59f20",
        "cursor": {
          "ref": "65bacda7-f6bf-43ba-aa66-afb999936c91",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "edd411b5-1cd6-45ee-8ba7-747da0e39c0d"
        },
        "item": {
          "id": "ab65faf7-4834-4124-a6ad-8a14a1a59f20",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b39b5002-a04d-44a4-bbcc-1b262580cbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ace961b-9cdb-4005-adcf-a362bf135905",
        "cursor": {
          "ref": "e9c313c2-ecf2-49c5-96ba-6c92f38edb01",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9df76f32-4aca-421c-aa62-38569a2a2aed"
        },
        "item": {
          "id": "4ace961b-9cdb-4005-adcf-a362bf135905",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fba9c881-fe0e-4e6b-86c8-b2f415eb2454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f9c033-53d9-45c3-a393-92511413c981",
        "cursor": {
          "ref": "8a0d8bc9-f344-49ed-b2d5-14b0eaafba3e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "392dac73-ee86-4c65-b79d-cb3b3a89b198"
        },
        "item": {
          "id": "e1f9c033-53d9-45c3-a393-92511413c981",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d1b82c41-8dff-4129-adc2-50cb854d83ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88312788-4d7e-4260-ac15-e78105814870",
        "cursor": {
          "ref": "e7c3202c-cb52-4e53-ba4b-72daae80c311",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ca4e16ef-04d5-455f-9e6f-58fa733a48e6"
        },
        "item": {
          "id": "88312788-4d7e-4260-ac15-e78105814870",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "68814a4a-b8ec-4c91-b7dd-bd550076e61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8268d73f-32af-4439-87fe-281f9b82768a",
        "cursor": {
          "ref": "8c873fa3-d1b9-4e39-ac3b-2e7bc76bd022",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "310abfaf-8b6b-448d-83f2-585341a836d9"
        },
        "item": {
          "id": "8268d73f-32af-4439-87fe-281f9b82768a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d5bd8c04-1de6-4fb2-b5e7-340ce58f14ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8a537c-16f4-4dc4-a736-519a90e54265",
        "cursor": {
          "ref": "65e81dea-685b-453e-9a68-1efd15b29df0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2159aaf0-dba1-403c-9f30-e5cb431163d7"
        },
        "item": {
          "id": "eb8a537c-16f4-4dc4-a736-519a90e54265",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "96f7ec3a-fd16-419e-af05-4002b4e919af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c4ce03-7eeb-4719-a8c5-2b56b7d8eb2b",
        "cursor": {
          "ref": "c97bb673-22a7-4eee-a229-1a30dfdc9e67",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "94ac1eac-3871-4f3f-bd3f-0c411ea7a0bf"
        },
        "item": {
          "id": "44c4ce03-7eeb-4719-a8c5-2b56b7d8eb2b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "952cbf17-c612-473d-b565-6903dbf02fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bf4af6-7e8f-4049-afb2-7baa95fc5567",
        "cursor": {
          "ref": "f9efae25-7388-4be1-97e0-c9b7a64e8a20",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6b45376c-4d4f-4bd4-ab5e-7e070cc9e938"
        },
        "item": {
          "id": "99bf4af6-7e8f-4049-afb2-7baa95fc5567",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e0d61afe-ae77-41ce-bad1-4021ca82c642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b544ad4-15c4-4d26-ae69-6a8408e92128",
        "cursor": {
          "ref": "90c09153-5887-44dd-9cae-dcf438d01510",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8b89d6d5-bd02-4396-b3c0-dd5fcee2cf78"
        },
        "item": {
          "id": "6b544ad4-15c4-4d26-ae69-6a8408e92128",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "450c2a92-5e81-45f3-9855-00bdf698f018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6500ca5-50d8-48e4-9719-f0dc02392dd5",
        "cursor": {
          "ref": "8590ba84-d3c6-4aa5-954a-3c2aa78b5567",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8a668cb3-c299-4b74-8ac9-2acd8b7deff8"
        },
        "item": {
          "id": "c6500ca5-50d8-48e4-9719-f0dc02392dd5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1dd189ab-38e3-4c3b-aaf0-4af609bee3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd8a6ae-8f4e-46fb-9452-ab81cda5af56",
        "cursor": {
          "ref": "831b1659-0aa3-4dc8-8a6a-95d0beb9cae5",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "34a05b56-cdf7-474a-8daa-2cb2df2ee868"
        },
        "item": {
          "id": "edd8a6ae-8f4e-46fb-9452-ab81cda5af56",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "14b85dbc-38bb-4265-a211-5f00a8d60e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec92b1ea-519c-4ba4-805b-08df768a3db0",
        "cursor": {
          "ref": "481af323-21ab-4ab9-bef9-59b775536397",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "838199ff-4b08-48d0-81af-97594624e0d4"
        },
        "item": {
          "id": "ec92b1ea-519c-4ba4-805b-08df768a3db0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "49c23ae9-69c9-4825-9541-20e5bc45012f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e204fb9-9028-4bfc-8d66-8ee41b45572f",
        "cursor": {
          "ref": "b0bbde25-1268-4a81-b2af-f352be67f613",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a9c6efb6-904c-4a50-99de-84e3c215dd0d"
        },
        "item": {
          "id": "8e204fb9-9028-4bfc-8d66-8ee41b45572f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6d74543a-ed57-4727-acd5-b9b182043a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67da2d04-0214-40c8-8b35-9746e5b19924",
        "cursor": {
          "ref": "939477d1-5fcc-42dc-a56b-2f39dcb64ed5",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "25b238fd-6f63-4e53-baab-aace67a2032f"
        },
        "item": {
          "id": "67da2d04-0214-40c8-8b35-9746e5b19924",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "56d32e77-1387-4221-993c-710f13ffd16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02fbf34-edd6-4a2c-955a-81f422b8b6bb",
        "cursor": {
          "ref": "ca51ac01-bd4c-4f30-a21b-c161c8c72716",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "41b7ca57-047e-4add-9c25-ef69bcc407fc"
        },
        "item": {
          "id": "c02fbf34-edd6-4a2c-955a-81f422b8b6bb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "091c63cf-d453-4edc-8d6b-026373e41715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5993c42a-c227-498f-bd24-744112b21ec0",
        "cursor": {
          "ref": "7f80632a-0a7b-49fb-9a7d-fe210d97b304",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e98486c6-2694-416e-9ad3-bb0bd44ed0d4"
        },
        "item": {
          "id": "5993c42a-c227-498f-bd24-744112b21ec0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fb8eb4fa-0ec1-42cf-8480-b46d631ddcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44df133-33ac-4e0b-96a7-87cbbfee3ace",
        "cursor": {
          "ref": "a16ebdd0-f221-45a6-bdab-6dd30db45662",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "61fa2494-b241-4e14-87b7-75ec90c37f23"
        },
        "item": {
          "id": "d44df133-33ac-4e0b-96a7-87cbbfee3ace",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0485a0d4-04ad-44c2-8451-4062b663c208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1791a9af-1972-442a-88e5-dcc0c879e69d",
        "cursor": {
          "ref": "6736dc9e-0cef-4483-abe8-0619bc8b110a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "78f122bc-31cc-4806-a49f-144d4f0f4ef9"
        },
        "item": {
          "id": "1791a9af-1972-442a-88e5-dcc0c879e69d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2555f8c2-f489-4340-a58e-c3721beeb713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1641a78-8f87-49a4-bf6d-637f2db201cf",
        "cursor": {
          "ref": "b52801d4-e739-4f3f-a58b-e70450c0adf5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cc88c305-3b8d-4e4a-b901-aa5222267a18"
        },
        "item": {
          "id": "d1641a78-8f87-49a4-bf6d-637f2db201cf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b435fcdc-839e-40fe-8856-9572664ed573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fa26a9-9ce8-45b1-8450-27e0745a122b",
        "cursor": {
          "ref": "f2f7559b-1bef-42df-a95d-c77581c5d864",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "40d018af-a67a-40b9-9172-99a3f4320bea"
        },
        "item": {
          "id": "77fa26a9-9ce8-45b1-8450-27e0745a122b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8b56a497-d761-4326-84ea-6e34a0668568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83357b0-3821-4658-bdc4-c9e5b4a20bc0",
        "cursor": {
          "ref": "969a9f06-e87f-4566-9662-5d82f5f53413",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c176d22e-38d6-4264-b3c8-5bcf0040794f"
        },
        "item": {
          "id": "c83357b0-3821-4658-bdc4-c9e5b4a20bc0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "219d85b0-b662-4ff3-ae67-a334412e3dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06755f04-7b4e-4eb6-a7ab-00e404be8ab8",
        "cursor": {
          "ref": "9ffd79af-66f3-4889-b416-122dc4b1cf7b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "846a1615-5add-4bc9-8554-c65003542c36"
        },
        "item": {
          "id": "06755f04-7b4e-4eb6-a7ab-00e404be8ab8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4685e45e-82b1-4d90-ad3d-591d62e2599f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b2fb76-cce3-4c5d-a027-9e835558ac0b",
        "cursor": {
          "ref": "a7d8063d-f676-40d5-a90d-2ffb8bea718a",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6a1d5efa-9ae9-4a5d-b24a-93af2d6a3769"
        },
        "item": {
          "id": "29b2fb76-cce3-4c5d-a027-9e835558ac0b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d5b0c738-2caf-4a1c-8dce-4c5a42cbb9fe",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "3c3f2c50-edf0-4223-8bd4-a3049a701948",
        "cursor": {
          "ref": "eaa4824b-095d-410f-afff-e564a40587a5",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eb88ba31-a093-4c01-b7f5-71c168bcbf7a"
        },
        "item": {
          "id": "3c3f2c50-edf0-4223-8bd4-a3049a701948",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4ebaa105-0dee-4b32-9167-d52598d7d2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc0de84-955c-42f5-b135-8fa6f537933c",
        "cursor": {
          "ref": "8ed8316b-7671-4061-b30a-feb2499e76e2",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1a30913b-aa77-4cd7-84dc-6489926d6a4f"
        },
        "item": {
          "id": "8cc0de84-955c-42f5-b135-8fa6f537933c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e4b0695b-24b3-4ed2-8914-8c9f8086209e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a53ee02-c870-4439-ba7e-588b2bc78f84",
        "cursor": {
          "ref": "6640d712-e722-41a3-935e-896c149aceee",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f56f35d1-66bc-484c-8ae3-08714c089b7a"
        },
        "item": {
          "id": "5a53ee02-c870-4439-ba7e-588b2bc78f84",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c577492b-ee5f-4e40-bf83-68169984f344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708f6b8c-3ba9-4ed9-944f-a96358b0f966",
        "cursor": {
          "ref": "f96366c1-444a-4c65-af4d-36340d4b8c15",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "01e0cd78-8109-4031-898c-9af79c4a847a"
        },
        "item": {
          "id": "708f6b8c-3ba9-4ed9-944f-a96358b0f966",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8b281307-af60-4e28-bfba-5b821fe1cfd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69896d1-389e-4e5b-b2be-b5fb4d37e4ad",
        "cursor": {
          "ref": "ce4fcda2-481d-400f-aac8-50e908eac2eb",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "92afeef3-5324-46df-9671-345f6d5913d9"
        },
        "item": {
          "id": "a69896d1-389e-4e5b-b2be-b5fb4d37e4ad",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "48e2dc44-725b-4a54-9777-3ecb53b0a51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de19d5-229c-4305-8f3f-da047cdd2f8b",
        "cursor": {
          "ref": "f442413f-ba48-4d17-9e29-7dca03c8524d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "903c0ca2-dadf-407e-898f-520ba356b6e3"
        },
        "item": {
          "id": "a9de19d5-229c-4305-8f3f-da047cdd2f8b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5e27901c-49d1-4071-a866-1ca375ee0f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70ae504-eb1a-4170-a805-fb2e678aec10",
        "cursor": {
          "ref": "9b8ac482-5bd2-45d1-a499-e2da59fb7198",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "86dcbfe7-c880-4d2c-83fc-ed96da0a6d22"
        },
        "item": {
          "id": "f70ae504-eb1a-4170-a805-fb2e678aec10",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f9c84a05-a8f5-4287-8696-2e69fc5c16cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dacc2d-d637-419d-83d6-c3b63142e680",
        "cursor": {
          "ref": "32df503f-aff5-42a7-94b5-9d5e59a52aa3",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a101a094-5a16-41c2-8d6b-07e1a3ecca48"
        },
        "item": {
          "id": "b5dacc2d-d637-419d-83d6-c3b63142e680",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "87864d5f-ddd1-40e2-991f-fd10b7568c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f808573-f480-4ed6-942e-6e61a3272962",
        "cursor": {
          "ref": "2f7eaa05-8e53-43fe-affa-e689c6917da6",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fe5e1602-5d5c-4af1-8e04-7a32d993383e"
        },
        "item": {
          "id": "7f808573-f480-4ed6-942e-6e61a3272962",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3965e4d9-9274-4359-967f-a1b4820aec9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edbe19d-23f8-445f-83e1-cdb7a3bbedeb",
        "cursor": {
          "ref": "d2961fd2-5b2e-41cc-ac51-69fbb8fb1f21",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "15f30094-4f3f-4f38-b5ea-044c96c36cd5"
        },
        "item": {
          "id": "9edbe19d-23f8-445f-83e1-cdb7a3bbedeb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c05eb0cc-a6f2-4584-a428-921fd035a2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e841e7-9f8c-46d7-a288-03ea2def11b8",
        "cursor": {
          "ref": "fddd99ff-445a-429e-b2df-1a3376253689",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "af105421-d035-4bda-8bc5-ba8587747088"
        },
        "item": {
          "id": "d5e841e7-9f8c-46d7-a288-03ea2def11b8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5bde141c-8cfb-43f1-9ec5-bf7b947ad446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc094b4b-67e1-42c3-8cd4-f2752c49f042",
        "cursor": {
          "ref": "a91627bc-6197-4b0d-854a-a31f1bcd9e38",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "271a8314-e1ac-46f9-954b-c1e3a85f62c2"
        },
        "item": {
          "id": "cc094b4b-67e1-42c3-8cd4-f2752c49f042",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "946d430e-b20d-4f7c-abaa-3531d8e39afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b6f1be-1d52-424a-982e-723a941465e4",
        "cursor": {
          "ref": "74882701-d99d-4137-9ad1-7fdc567d389b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2776c6fe-3d67-4fa0-8697-d501257f6ff5"
        },
        "item": {
          "id": "72b6f1be-1d52-424a-982e-723a941465e4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "422aab6d-7e0b-4003-b1d1-7e52c25a7cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bfc8e9-f606-490d-a75f-be1c7f260345",
        "cursor": {
          "ref": "3d2e580f-8898-4b9b-ab6c-6e5e348d736d",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7d8e57e4-168a-46a3-ab65-b9538d3d6088"
        },
        "item": {
          "id": "58bfc8e9-f606-490d-a75f-be1c7f260345",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fc2f5aff-9bb9-4967-9e70-c4173fcdcfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019eea28-b48d-47e8-a02e-13c226f6f419",
        "cursor": {
          "ref": "0b98d5a9-1f15-4611-8645-6cf428a1d025",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ebb6ddeb-6412-4ae9-bdfa-410c4942d72b"
        },
        "item": {
          "id": "019eea28-b48d-47e8-a02e-13c226f6f419",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "550947bb-f42d-426a-9fc4-696d7f3b9e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb4b877-eb25-4c67-90c8-3087ebc40fcf",
        "cursor": {
          "ref": "d3e589ee-4531-4238-b4e7-0857e9ec7245",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3f2b8622-3f54-4fd5-8ddb-aa5ea99c1ede"
        },
        "item": {
          "id": "dbb4b877-eb25-4c67-90c8-3087ebc40fcf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "643c961d-61a7-4467-b3d7-4f0bb424fa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6958149-9853-4318-915e-a6044af43ee3",
        "cursor": {
          "ref": "24c71ef5-16bb-4457-b084-34523446b34d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1c4fa3cc-1002-4923-8892-36d33015c313"
        },
        "item": {
          "id": "d6958149-9853-4318-915e-a6044af43ee3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cdc9e9c7-dbee-404a-b48e-3d3dafc4544a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602d772e-4881-4c2a-972a-2c6f33f23bff",
        "cursor": {
          "ref": "c1fc5ea0-4e98-42cb-8bcd-2c5d3f800d54",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f6878f44-c2e1-4f9d-bdd7-cff03568239b"
        },
        "item": {
          "id": "602d772e-4881-4c2a-972a-2c6f33f23bff",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3ca80a12-84fd-4302-b32d-265080a8f6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f72a547-7d2b-438c-a067-4317a0822b45",
        "cursor": {
          "ref": "f1b64eb5-3956-4135-b7df-f691bcc43439",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "40f9ba1c-5a34-4d43-af5c-e2b96f1002f0"
        },
        "item": {
          "id": "0f72a547-7d2b-438c-a067-4317a0822b45",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "daf35be1-a50b-4721-93ce-85fc8715f820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa263540-ab27-454c-af71-b9f73d29eb62",
        "cursor": {
          "ref": "72b9b1d4-dab4-4465-8aff-a2af125fb8c9",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "78fbe5f7-b690-476a-ba85-e57ee46b45a3"
        },
        "item": {
          "id": "aa263540-ab27-454c-af71-b9f73d29eb62",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ef001c71-81b1-4f76-b829-8448c4939571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa2ac38-8099-4364-bc2e-f46c9dba9106",
        "cursor": {
          "ref": "c6edd114-ee2c-4aef-a073-ed6a9bd80e91",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "04682c5c-e8aa-4ef3-8fe4-9f373d4041a9"
        },
        "item": {
          "id": "2fa2ac38-8099-4364-bc2e-f46c9dba9106",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "940687ee-6418-45bd-be3b-30326ff21dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e7933d-320f-4dcb-9981-573c256ff390",
        "cursor": {
          "ref": "04e03c4c-a228-440e-91ab-d8544a47f082",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2fc3714f-e80a-40ab-94b4-2610f7d94732"
        },
        "item": {
          "id": "07e7933d-320f-4dcb-9981-573c256ff390",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ee9d4e95-62bf-4a79-8af3-f9de9dcdaf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3e915b-0422-4904-a160-ae436ae46637",
        "cursor": {
          "ref": "7e08a7ad-472f-40de-b2e1-a2fc0beb4e84",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fe192858-db5f-4337-b051-357f37fddc6e"
        },
        "item": {
          "id": "9e3e915b-0422-4904-a160-ae436ae46637",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2805f2b0-b49c-4a6e-b911-34de0c5ef246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f37d82-7914-451e-aae6-845387807985",
        "cursor": {
          "ref": "c443beb6-99ec-4df6-a52f-92280bdb2703",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8e7c76c8-1afe-4799-bcbc-884a1edba04b"
        },
        "item": {
          "id": "71f37d82-7914-451e-aae6-845387807985",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9395367e-4904-4fdf-b2b9-8ed2bc477e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34feef7b-b80f-47b9-8426-0ac12795ade1",
        "cursor": {
          "ref": "e65a58f2-7ba2-47ea-bec8-cc0fe0e305b0",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "16ca552d-e5b4-475f-86ef-b76760fe1f59"
        },
        "item": {
          "id": "34feef7b-b80f-47b9-8426-0ac12795ade1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "41400e7e-09b3-481a-80d4-35b1e63c1f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d0318f-32c4-4b67-a9b3-5c34a971770f",
        "cursor": {
          "ref": "2bbe7921-7200-4603-be32-25d2ce8cbbf0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2885cc8b-30b6-4ee4-9609-f2477a8f2d7c"
        },
        "item": {
          "id": "f6d0318f-32c4-4b67-a9b3-5c34a971770f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b29843b1-470b-4a15-b9b5-115550652cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2398eff-0ccc-4d51-aecc-4c2c51a5fbb6",
        "cursor": {
          "ref": "a0539bfe-3533-45c9-a82e-24dade47cf72",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "74c4b5de-fd43-48a2-af46-6fd406b6f12f"
        },
        "item": {
          "id": "c2398eff-0ccc-4d51-aecc-4c2c51a5fbb6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1d40be72-70b6-4321-ab07-c63541a8e573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c76ea2-b4ee-4f6b-9139-a02c5a83cbae",
        "cursor": {
          "ref": "c588310e-d3ce-469a-8a9f-8ef9e9078f5e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bb8495a4-e0f5-4156-8276-be57a88c7e29"
        },
        "item": {
          "id": "76c76ea2-b4ee-4f6b-9139-a02c5a83cbae",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ea10c4a2-2e01-4299-87ce-e65b2fd40b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673f3090-275a-4ee7-acfc-ace1856291ce",
        "cursor": {
          "ref": "7d2b0dc0-0e32-4bb8-b448-57f5b3a20802",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fad3a362-dc59-4e4c-9dac-fb47e7e7960c"
        },
        "item": {
          "id": "673f3090-275a-4ee7-acfc-ace1856291ce",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f5fbecbf-e02e-42b6-ab4c-03b823144ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad10342-76d3-4bc2-9896-08f9df844adc",
        "cursor": {
          "ref": "08e426ab-cb26-45de-a194-2ef1a6ce2511",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c9623259-d11c-4402-990a-a14a09eb3727"
        },
        "item": {
          "id": "8ad10342-76d3-4bc2-9896-08f9df844adc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1a259601-b574-4e8b-8c2f-59227b6b5571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0621171c-db66-499e-af91-37a34bdae655",
        "cursor": {
          "ref": "c1fc2d3a-20b1-476a-9ff5-b5c6b345c8f6",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4080cc22-a5fd-4dbb-911e-9e86702f86d2"
        },
        "item": {
          "id": "0621171c-db66-499e-af91-37a34bdae655",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "de23f9f5-273b-4e0d-9755-3be946e3acba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdf8c70-eee7-4503-9fa6-e00d5342815c",
        "cursor": {
          "ref": "70512f71-0b47-4a91-96b5-83881fe6c92b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "933eba1b-6c2d-4260-b6d9-f1728f120c98"
        },
        "item": {
          "id": "7bdf8c70-eee7-4503-9fa6-e00d5342815c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2014d54f-627b-4c8b-9434-a07c84fd6ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c648bbe4-cab4-4e99-9789-a7de21b590ca",
        "cursor": {
          "ref": "a8aa6494-4be7-4cd2-919d-7568d09c5a83",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6d7fdeff-d5e8-402b-abb9-15b34c152e9e"
        },
        "item": {
          "id": "c648bbe4-cab4-4e99-9789-a7de21b590ca",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "edb269d4-e6eb-4c59-b39c-7ac089f9bebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e31d7b5-a1e3-4606-9f8a-0ddcda67612a",
        "cursor": {
          "ref": "d86db3ca-0e38-436d-8b59-3d875bc83397",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "102914ae-7912-4531-b92e-a08a4c27b4de"
        },
        "item": {
          "id": "9e31d7b5-a1e3-4606-9f8a-0ddcda67612a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e97f7173-27bc-454f-887e-88f44e009c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c576b2-104b-4bb1-a7d3-627f4244f6a1",
        "cursor": {
          "ref": "f6afa988-b018-4ffb-b5ed-fd14a4ed725a",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "93934c83-621f-4576-92bd-30578cf53022"
        },
        "item": {
          "id": "b4c576b2-104b-4bb1-a7d3-627f4244f6a1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ca9b46ff-5cea-498d-8992-1db27aacc5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043e47fd-a5f2-4eb5-88b1-a99434aa02f4",
        "cursor": {
          "ref": "84de6936-f284-4d57-a142-5ba450e4b5d6",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "97f60018-ac87-4b5b-85c1-3f2403fd136f"
        },
        "item": {
          "id": "043e47fd-a5f2-4eb5-88b1-a99434aa02f4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "048f1cc2-b265-4457-8191-53c6dc3ff638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04930d24-cfb6-412b-9b90-a341e9438f17",
        "cursor": {
          "ref": "af8387e5-d40e-4c8c-a9aa-3c08338e587d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "35150b6c-66e7-4b2f-9885-8cad6e4cd689"
        },
        "item": {
          "id": "04930d24-cfb6-412b-9b90-a341e9438f17",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "086db561-9de0-4272-9dad-6655f68b16e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3427e895-e13f-450f-958e-cc49e3ea9081",
        "cursor": {
          "ref": "e0b66f18-26d7-44aa-a2ac-1ba3e3e02512",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d62a5088-fc0e-4d94-84fa-3a30c1e29e22"
        },
        "item": {
          "id": "3427e895-e13f-450f-958e-cc49e3ea9081",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a71ddc07-a0a1-4e75-8519-c0a0b70705d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56cb34c-2721-4d27-9caa-76f8cc8f5b27",
        "cursor": {
          "ref": "40a15952-c204-48e5-b8e1-8ac710c6c0cd",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f933731b-6b8f-4c1d-8251-3edba0f61327"
        },
        "item": {
          "id": "a56cb34c-2721-4d27-9caa-76f8cc8f5b27",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "16dc418f-ffa6-4b72-9f1f-755964ee845b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ef8f21-9e1f-47ca-b779-a8fc02355a60",
        "cursor": {
          "ref": "d5dbfcd3-97ee-419c-9bd4-ba5570aa3034",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c8d786b2-05a8-44ed-b26a-26702d60dd8c"
        },
        "item": {
          "id": "34ef8f21-9e1f-47ca-b779-a8fc02355a60",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "49d019dc-5117-4b17-9117-912cf5af2472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff91d5f-25e6-419d-83a6-dcdc20fc0454",
        "cursor": {
          "ref": "bcd4cf4f-fe19-4675-af2a-dec9d2080b29",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2295c006-2187-4973-9bf3-d9b324468615"
        },
        "item": {
          "id": "8ff91d5f-25e6-419d-83a6-dcdc20fc0454",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c76f4561-b6a7-4152-8280-1392ab609d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d753128e-75f1-4070-938c-094689b8fdd4",
        "cursor": {
          "ref": "7ae9458b-838a-43d1-8437-4d5143279cf7",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7c4f80f5-44b2-4012-a3e8-e307753e26b8"
        },
        "item": {
          "id": "d753128e-75f1-4070-938c-094689b8fdd4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5dd925d9-af81-4471-86ed-ee49aa4b537d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83575aaf-0a0a-4dec-80be-61916eaaddae",
        "cursor": {
          "ref": "3d0c7141-a454-459b-af65-a5d451b4e00d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "55473413-bf1a-4623-ba7c-bb1f56446c04"
        },
        "item": {
          "id": "83575aaf-0a0a-4dec-80be-61916eaaddae",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a7879442-1f00-4d33-b017-2f5e5c4f09ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b163df-973c-4e4c-bf7b-f1d883b21747",
        "cursor": {
          "ref": "9cb1c5dc-fb04-44bd-811e-58b207a7d242",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e3156ab6-4abb-4774-be80-12ba764c4a3c"
        },
        "item": {
          "id": "54b163df-973c-4e4c-bf7b-f1d883b21747",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5518989a-7984-4b7c-a6d0-706b757fbb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5714cd6b-0aee-4a23-bfc3-8463c059b9b7",
        "cursor": {
          "ref": "102c7b62-1ad6-490e-9e08-4325db21e78d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5fa8899a-ab8a-4ea0-ae2e-366da8a03243"
        },
        "item": {
          "id": "5714cd6b-0aee-4a23-bfc3-8463c059b9b7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dc9a62d8-77ac-47b0-93a5-683454aec020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2257f6b6-7447-4964-b76a-27bd1c2a5fd8",
        "cursor": {
          "ref": "5f5866df-32ee-4166-9837-6db13b073ce0",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b930ac6e-8a7b-45aa-97ee-dd059bf5bed1"
        },
        "item": {
          "id": "2257f6b6-7447-4964-b76a-27bd1c2a5fd8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "32181d54-b6ce-4833-a557-dacfa64e2504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1705c673-4dd4-4195-aad1-b3e854145520",
        "cursor": {
          "ref": "c95bbc9c-c06d-48db-8e32-b625ddab4e05",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "47c07d5e-5edf-47e6-8472-3e3071efda7c"
        },
        "item": {
          "id": "1705c673-4dd4-4195-aad1-b3e854145520",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fbf31c75-942f-4c30-8650-6d6df6118647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fb5877-4912-4f6c-86bf-48933db30b60",
        "cursor": {
          "ref": "cf05eac2-9978-4ef0-8307-85958ac3127d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b0b5ab02-ccba-4f44-b5dc-f2c2913ded4d"
        },
        "item": {
          "id": "e6fb5877-4912-4f6c-86bf-48933db30b60",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "259704c0-c73b-4499-b7f2-b429673dfcab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c3295b-dbaa-465d-a9e1-ffe65981d59b",
        "cursor": {
          "ref": "7723add3-b026-418d-82ed-97037d9a46ea",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d332c77c-b2b2-436c-9c8f-496e83ec6b79"
        },
        "item": {
          "id": "22c3295b-dbaa-465d-a9e1-ffe65981d59b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f606ab6d-7d02-4650-9e6c-e654bbbefe05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73b9036-ba3b-4bef-9273-527ea54f67bd",
        "cursor": {
          "ref": "9ccc1968-05b0-40bf-a951-18ff911c0945",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8f811f86-b073-428a-8363-d8b319fdb96b"
        },
        "item": {
          "id": "e73b9036-ba3b-4bef-9273-527ea54f67bd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d021ec7d-022b-4682-9378-42a2d1847d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b89d8eb-b586-47b3-b178-cff8eb75996c",
        "cursor": {
          "ref": "4cd0b76d-acc7-4874-bb0b-d199d326d860",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5a82942c-2d5d-4b7b-8f96-25f496c04a5e"
        },
        "item": {
          "id": "0b89d8eb-b586-47b3-b178-cff8eb75996c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "905e6258-2f07-4245-beff-40f98208e19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049656c0-5d9d-47d3-b7c0-3b5e9c5f22df",
        "cursor": {
          "ref": "0a4d9fb2-6a5f-4798-afb4-97920792e559",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6fbec860-9cf6-4900-bfff-96ed9b1bd023"
        },
        "item": {
          "id": "049656c0-5d9d-47d3-b7c0-3b5e9c5f22df",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "76d4e8d0-eeec-40d7-b437-fa560c7afb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e776574c-c429-4875-ad51-fcc6d5a5137a",
        "cursor": {
          "ref": "9f9f99cc-cd79-4ad2-b30e-c359b1da73a2",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b95af160-7d2b-4fc2-bec0-e94d39160080"
        },
        "item": {
          "id": "e776574c-c429-4875-ad51-fcc6d5a5137a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0506df81-5336-49ca-a676-eb8fddd0f3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8b16ab-a7c5-4855-b695-c3e343b90851",
        "cursor": {
          "ref": "954e9346-8fc6-452a-b542-d8f7fd91675b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0d40bdf8-f741-47fa-85d2-a6fca4e74912"
        },
        "item": {
          "id": "3d8b16ab-a7c5-4855-b695-c3e343b90851",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "457d39ca-6dc6-41d0-bbde-5d119b2888dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07171164-94dd-4219-8ba7-43290784d191",
        "cursor": {
          "ref": "dbe3f231-328d-456f-bd0d-4f178b64a92d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cb2e697c-e060-4064-b318-7bf211049c09"
        },
        "item": {
          "id": "07171164-94dd-4219-8ba7-43290784d191",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "953ce45e-b1c9-421c-9d59-ffc4b2b1d57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d7aac3-cf91-42f5-b5eb-0b8fb71525e5",
        "cursor": {
          "ref": "c3cbb67a-004f-49c1-9f4e-1e5c16342544",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "adfe073d-6826-48e2-876f-2b2bcfe71672"
        },
        "item": {
          "id": "71d7aac3-cf91-42f5-b5eb-0b8fb71525e5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b1876537-2f85-4885-bf4d-24662b5e9183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafa2c5e-efc9-477e-acaa-3b471b78058a",
        "cursor": {
          "ref": "a3e0c849-e7fa-4f8e-9967-c4c16062ae7a",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7d8b94a7-95f8-4120-bafc-ddb1aa68cac9"
        },
        "item": {
          "id": "aafa2c5e-efc9-477e-acaa-3b471b78058a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0c6f76d2-1616-4b3b-95e9-22726f428385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00215b08-cc48-43dc-bee3-5076ca0f8eb5",
        "cursor": {
          "ref": "34e28b2a-7e35-4bb2-ae55-e6c16267a7cb",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "44129b29-b05b-4abf-a3aa-fa3a9072894c"
        },
        "item": {
          "id": "00215b08-cc48-43dc-bee3-5076ca0f8eb5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c8aeea4d-3959-4283-bfa4-a7a2a06587ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6e2e08-38d0-4eac-a5e1-e9bb6e8f8edd",
        "cursor": {
          "ref": "dd96ec84-2eac-423b-91c5-1e2e18405915",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4300f811-1a46-462e-b5e1-a80c753580f6"
        },
        "item": {
          "id": "5b6e2e08-38d0-4eac-a5e1-e9bb6e8f8edd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ed6404c4-ee34-46ef-902b-925a47d264a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381ab02d-e7a5-4d15-a3ba-1f8378cdbb10",
        "cursor": {
          "ref": "b541a0b3-1702-4045-a1f0-e9947f5c2316",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7171c4ac-8083-4714-989e-066e5cdee132"
        },
        "item": {
          "id": "381ab02d-e7a5-4d15-a3ba-1f8378cdbb10",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b184f819-e0d7-4702-9014-c893e552a657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee497048-3aaf-4a65-9685-3d227c672da3",
        "cursor": {
          "ref": "6f6ecfa6-d91c-49de-b42b-af980ad41d5b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a426afa0-17b9-4d8f-84ba-4ed9fadd5cc6"
        },
        "item": {
          "id": "ee497048-3aaf-4a65-9685-3d227c672da3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7fa0abc7-60c9-4d01-bfda-a24097271df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd8acea-d7de-4e23-b693-55fe48f3067b",
        "cursor": {
          "ref": "c60e6188-48f5-4b49-ae0e-be1ed4bc45eb",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2b1ea125-34c8-4498-ac7a-913e4b5bc06a"
        },
        "item": {
          "id": "3fd8acea-d7de-4e23-b693-55fe48f3067b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "001e0b8d-701b-4b07-89cc-d46be7ab16a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c30baf-0428-4710-8a18-1282c8e6a20f",
        "cursor": {
          "ref": "a46357b8-e525-40d1-9019-90ec8bb9f926",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6924abc7-7c87-421e-8d0b-ba81087cabc3"
        },
        "item": {
          "id": "a9c30baf-0428-4710-8a18-1282c8e6a20f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5b068c6a-78ff-4a00-b006-9cceb83366c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd8e145-b267-4f8d-8c29-6e88c49cc047",
        "cursor": {
          "ref": "453528ac-c8ab-46ce-a265-fbad5de7c6ba",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1414c37d-15d4-4dca-8c7c-c7331b59a6be"
        },
        "item": {
          "id": "edd8e145-b267-4f8d-8c29-6e88c49cc047",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "98f1886b-9454-48b2-a36b-46c2e6be7da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eca7671-b1bd-4a28-822c-309bd0d6e1f2",
        "cursor": {
          "ref": "b31d182a-0b4e-472f-9c0d-28c86c316ac4",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f44a7900-b6be-4e66-8e70-63e358e51044"
        },
        "item": {
          "id": "0eca7671-b1bd-4a28-822c-309bd0d6e1f2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "21e6fdde-dcd3-4189-b178-74e9f2fe9e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db78c1a-90de-4f67-97bc-52bb0f218d07",
        "cursor": {
          "ref": "d9cc2b80-64b1-4934-89da-8df8d668be50",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bbe76f32-482f-4f5c-bac0-188f9a21eba4"
        },
        "item": {
          "id": "8db78c1a-90de-4f67-97bc-52bb0f218d07",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e6b06245-6bf5-4f28-a4ad-2c86ad05067d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d7693e-d55e-4c5f-9d97-56ca18649aab",
        "cursor": {
          "ref": "81d965d7-826f-4a30-adda-2ab59db18c35",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6aa4f01c-b892-4769-a9ae-ca4a803e69a9"
        },
        "item": {
          "id": "44d7693e-d55e-4c5f-9d97-56ca18649aab",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "70592867-618b-4270-85a2-e4a3610fbe6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d260d0-1bbb-4eeb-ad33-24b5e48db6d7",
        "cursor": {
          "ref": "737cc7b3-0264-46b7-99b6-25019eec8879",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7f9db12e-2231-45b5-a19b-ac94ae51d7a0"
        },
        "item": {
          "id": "09d260d0-1bbb-4eeb-ad33-24b5e48db6d7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6ba68db6-4752-4250-bdae-4b0a6786fa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65aa5817-1423-4a2c-a222-b7ec8a6b7346",
        "cursor": {
          "ref": "f00b0a6e-bd1e-4a1f-a9c1-974b96cc48bf",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ec18588a-0081-4894-bf5f-5e86e54cb1e4"
        },
        "item": {
          "id": "65aa5817-1423-4a2c-a222-b7ec8a6b7346",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6c059982-89e6-458f-84ff-0033102523f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1788ad-3360-4003-b613-ff59ec341aa0",
        "cursor": {
          "ref": "92ba6a2b-c940-40fc-ac65-53179657403e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b0d605de-f53e-4b16-8dcf-24d1748f8e77"
        },
        "item": {
          "id": "7f1788ad-3360-4003-b613-ff59ec341aa0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f04a8d3a-ac5d-4dba-95c6-ab4bb88b8a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0814a3cb-bed0-4376-9006-965694058228",
        "cursor": {
          "ref": "fc63ad71-182f-4d36-b7b6-c55b210359df",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e503e13e-d380-40be-b2e1-fc10e7019489"
        },
        "item": {
          "id": "0814a3cb-bed0-4376-9006-965694058228",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2cc8e9b6-c981-4117-b619-8e2070cce63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a807d6-315e-438f-85c9-817f73dd50ee",
        "cursor": {
          "ref": "27d016f2-1973-4623-8cba-f0b51877a104",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7b3c1c48-5a12-4c98-91dd-d1a0cbb9a781"
        },
        "item": {
          "id": "e4a807d6-315e-438f-85c9-817f73dd50ee",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "87445701-ecb5-43f2-9537-311e804639f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffa9985-04d9-4699-a501-7857cd575da9",
        "cursor": {
          "ref": "4fc160a7-a789-4202-9f5a-a9482e4d767c",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9c60b66f-8c43-4ff5-8d1f-8b29abaf3eb4"
        },
        "item": {
          "id": "bffa9985-04d9-4699-a501-7857cd575da9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0aab3e93-d26f-455e-a4a3-2103ab405e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1407dc-6e4b-4f2a-9d1d-994f7cb4850e",
        "cursor": {
          "ref": "394d277c-e7a4-4680-8c53-82ac115dad3d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1f87e67b-da96-41a7-b330-c5b609431588"
        },
        "item": {
          "id": "4a1407dc-6e4b-4f2a-9d1d-994f7cb4850e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "72dffd4b-c981-42d8-85d6-5a829c28b0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad334412-4bc6-4f24-9a84-6059a3e0006b",
        "cursor": {
          "ref": "58d6deb3-35ae-489b-af65-ed5851d7afd4",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1264cad9-5a02-49bd-91d1-7b54bcee1ad4"
        },
        "item": {
          "id": "ad334412-4bc6-4f24-9a84-6059a3e0006b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f0ad9149-d95d-406d-805f-f55047f2dad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38da77c-a516-46b8-a93c-46d34c1c7b9b",
        "cursor": {
          "ref": "529bbe7d-e6a3-42fe-9c08-d65ca65ce5fb",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a94d7a2e-e48c-4e1b-b564-ed6314718e96"
        },
        "item": {
          "id": "d38da77c-a516-46b8-a93c-46d34c1c7b9b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7316d39d-a880-43bd-b1a3-e6e65d5e4813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b715cb5-b705-490a-a46b-9897cdda3b6c",
        "cursor": {
          "ref": "675ebba1-11b8-416f-be6b-e7500172910a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ae91a7b4-41f1-4852-a84b-df0b5f1447b8"
        },
        "item": {
          "id": "6b715cb5-b705-490a-a46b-9897cdda3b6c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8a220f29-cc4f-4b4a-ad4e-dfbd15c751ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f373e1-d374-4aef-bd65-111c8a1966ce",
        "cursor": {
          "ref": "d8b16d2c-2d11-4c11-91cb-560776a81771",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d07a8709-d1eb-4e31-a379-0d96103b716c"
        },
        "item": {
          "id": "63f373e1-d374-4aef-bd65-111c8a1966ce",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "758fe87f-a2b8-4fb8-a9e7-8e821b539a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da55e99d-c534-45db-bed9-e969684ccb4f",
        "cursor": {
          "ref": "d8dce29a-ff04-4ff9-a654-f01220673fe4",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3a3341d6-393b-406a-8312-e2862f6f5314"
        },
        "item": {
          "id": "da55e99d-c534-45db-bed9-e969684ccb4f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "31611015-c969-4045-b894-ebbc1c68183b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270ecfcd-a296-45f0-8e56-a187cc664f5d",
        "cursor": {
          "ref": "66d8b7e2-e1b4-4e15-8f4b-acc8b1c2a81e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "79549916-1506-4f54-8f5e-7eae0b668d13"
        },
        "item": {
          "id": "270ecfcd-a296-45f0-8e56-a187cc664f5d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c859cce6-3488-4dd2-87c0-16e29e8b3347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c519a0-341f-44c1-9bc2-36f2b19da15e",
        "cursor": {
          "ref": "7f61eedf-0e6e-4955-b37d-b74a43d70010",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "dfb709e0-a615-40bb-846b-b78ea369d1ac"
        },
        "item": {
          "id": "19c519a0-341f-44c1-9bc2-36f2b19da15e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "78d66d5d-d937-4281-8583-e312f0e6c38e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3633f8d7-e949-4c68-9367-f68bb967e713",
        "cursor": {
          "ref": "9651dc36-692e-43c4-b157-eaf0cbf0d661",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "96ff2ce0-2cb6-4bdf-8b05-5393ebeeb8d7"
        },
        "item": {
          "id": "3633f8d7-e949-4c68-9367-f68bb967e713",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b7d7222f-6350-403c-9e55-3b16eef9d280",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf6e31b-84de-4f21-9f95-dc618029ca8e",
        "cursor": {
          "ref": "7da0175c-e2fb-4f1d-8a7f-dadb30098991",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c0c94216-9752-4460-882d-4cf30ff3e5f4"
        },
        "item": {
          "id": "4cf6e31b-84de-4f21-9f95-dc618029ca8e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "257d59e0-a5a1-4289-8cf7-df340a79597c",
          "status": "OK",
          "code": 200,
          "responseTime": 3303,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8402a710-53db-4e53-bcf5-07da6832e9ce",
        "cursor": {
          "ref": "fa123b9b-51f9-4f5f-bbe7-33afaba20230",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2f70508f-4904-4eda-b479-1d63d2a74d47"
        },
        "item": {
          "id": "8402a710-53db-4e53-bcf5-07da6832e9ce",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "aa9f7e03-cc47-4be8-8b28-baac17c4b444",
          "status": "OK",
          "code": 200,
          "responseTime": 2839,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca558eb-a1e7-4cf8-9217-9eb8a1c8e2d8",
        "cursor": {
          "ref": "05b9cb74-013e-4d21-a2ad-97f1024980d9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cd45bb9a-d38d-4da6-838d-7ca1e9efc833"
        },
        "item": {
          "id": "1ca558eb-a1e7-4cf8-9217-9eb8a1c8e2d8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a081394d-5866-484f-a755-f9c6cdb39b19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca558eb-a1e7-4cf8-9217-9eb8a1c8e2d8",
        "cursor": {
          "ref": "05b9cb74-013e-4d21-a2ad-97f1024980d9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cd45bb9a-d38d-4da6-838d-7ca1e9efc833"
        },
        "item": {
          "id": "1ca558eb-a1e7-4cf8-9217-9eb8a1c8e2d8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a081394d-5866-484f-a755-f9c6cdb39b19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbe645a-29eb-4394-9ec4-dab46a1fb5bd",
        "cursor": {
          "ref": "70381119-c5a5-47d4-b456-bb92493b1617",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "469fc857-6f1c-44b9-b14e-5158ea63306d"
        },
        "item": {
          "id": "fbbe645a-29eb-4394-9ec4-dab46a1fb5bd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "273a4c91-4f67-4e06-9891-04c10b00b83f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1cfc6a-58c3-4e16-9e68-e20eadc20a3c",
        "cursor": {
          "ref": "8c391e2b-29db-4c85-8e5c-8f069b47a343",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d1810664-07ef-4f83-98bb-6fadcb36c28c"
        },
        "item": {
          "id": "3c1cfc6a-58c3-4e16-9e68-e20eadc20a3c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "97d1d355-ca3f-4f5a-9194-e76ab2909198",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}