{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b43aca54-3894-4352-aee1-1276bc180b2a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1e0c66bd-ac1c-4265-b880-c2159019ef64",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47a95e95-a540-456a-bf53-5367f42e8174",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "25976092-0c15-436c-89fe-2bc585f57980"
                }
              }
            ]
          },
          {
            "id": "3d768801-777c-413d-bc27-e667ddcee6c1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae538504-1c90-481d-8390-9961c10f7026",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7581750f-5f0e-4b06-b394-e141a06482be"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "64ba1c85-7fb4-4343-bb85-91ea8f77c216",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ae183d32-0695-4797-963c-3d942937fd47",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0a16b170-b186-4411-ad02-3755c4fa3196",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f242ef6-1ca5-453b-9cf1-d9024ed138a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f082aac-b994-4d8d-abc4-a1b0827df01d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "803d56f5-a3a3-4194-8146-94a2cd35e344",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0589f52-bd31-4a62-9a21-d73e9005e24d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6c983055-933b-445d-84ee-8150887f1767",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "733790c4-b8e4-4dc1-9f9e-c94a60e7b1be"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22a75132-888e-45d0-a567-0dcacb26a09b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e7760c67-b050-4abb-be4a-ce41fd3a0bd6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37ac1592-1df8-4979-ad3a-2376e6433764",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd05d70b-805e-457e-86a9-aa4c30c2dae4"
            }
          }
        ]
      },
      {
        "id": "c5961374-37d8-4352-8dea-1e778d950590",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "13299eed-b73d-4cd3-a994-9504c1b946f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c68fe45f-495f-4b21-84a1-cda6a1686fff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7117418-9370-4e7b-9506-16cdbee538e6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595cf2c4-dc4a-4b69-9f77-d055e0ea8b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a2f2590-d8d0-418b-b67d-51d8771d22a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22c1d96-fb08-4635-97b0-8377eb251562",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77403f80-1888-4273-85db-8b5bc39bdd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef4c9140-9880-4da0-ad5a-cd3f5394ef8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6fad20-0302-4120-8b4f-d80eecdb4d8b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee2f974-1f66-4e44-b08a-d18a005d2dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dca6eb3-c690-48ea-b0b6-d246adafc151"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17d5dd7f-1b94-432d-b86a-fc6bde35546f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "269b26e4-9cdd-4c44-8a5e-425d3970de3d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885b08db-a156-479e-99ea-802fd6597267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f97ffe3-c322-4f1d-94c9-15e69b0943ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b89de0-22d9-4996-99c0-5ba0a75ecdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82da5211-b9b3-4594-93ec-3e772df4a732"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c4ff342b-fffa-49c5-a049-c9cbe090914c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ed35a65-127e-4dea-982e-5fec5b89de58",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98168eaf-95bf-44ee-aff9-b5a2a6372d58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "54cccea2-8401-4bd4-a76d-914a9d5264f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3238e3f9-bc6e-43f1-b80f-c7a7306cb431",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "40d7ad16-9cb5-473e-a5ba-7537185a8b51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d187274-622b-47a3-978f-bba6a463a873",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e56ba5bf-7eb5-4dee-bf1b-6081a67a41f6"
            }
          }
        ]
      },
      {
        "id": "554ee992-62f4-41eb-bc3e-37158d32247a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2b72a47a-86b2-4a23-89ae-3a44d184293f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27363f4e-4e65-4ac7-9c94-06111d2a3c0d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4cc3aa36-8c0a-47f5-ae8c-6df626a36a34",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82eac650-bda3-447c-a72d-c4a33d00bf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef27e13-998b-4133-8da7-b5939b805f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bfe523-b031-4d96-8fb5-17e1b7ce1dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f49606f-da40-4645-a03e-b68ad393c1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05d4071-fd42-4b85-8b5c-e0223007f934",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5870a9-993d-46b3-8644-169fbd89363e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5884a160-bdf4-4243-87dc-5d3fb3e8d698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a737189b-f252-4b2b-8228-928bdbc57ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3532788c-42b8-4306-9610-cff21fd3e602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a82898-eabf-46ae-a870-6abf243239e4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75af258e-8a95-45da-b9d5-663c754a7b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee06cb39-94b9-4f94-8222-a307af9d0fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9731de50-fafd-439b-9758-d4fe518a363a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeafa79e-83ab-4992-ae3b-91ea7bd559b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fbc545-16bf-4117-8073-328cb81e316a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f445b62b-ede9-4aaa-952b-53000defc599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae8add2-7a0e-4c86-8f16-e92f2589949b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efb4552-612e-44bf-9236-6dd3a909a39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0666f27-5e37-47ae-a017-f34321e6abf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13967b96-7472-4d93-b312-a25f0787e7d8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c90847-a3a8-4cea-8b1b-348c4ad52b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea27f874-0544-4200-94b7-d9e8af5e1cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164bdff8-0855-4949-8f10-8d8349cf6d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "158c6e3d-189a-4cd0-85d9-2e55a3d5d9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f79abd-60b1-4646-a464-00068a5baeea",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf767597-3c87-4039-8628-98621786aee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422c61ec-8043-4e88-857f-5ddc85c09ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc369d7d-e993-4ab7-9496-6f5a0c9fedba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2299c613-63c2-4ad5-aef4-1973e30fd9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62152a5a-33d5-42f0-8c78-fc895da96ad8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f9c0c3-2fe3-4d77-bd86-e50ae1e71b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0feb2d0-2616-4f8e-964a-47a91e896d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464c2824-da65-45dd-969b-22112c7e6a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cb0601f-ede2-4416-8ebb-01217810b3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6fc7a4-3911-44b7-a736-158bd50612c7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6403c598-56fc-4fce-86ea-030e60e85210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98237bae-dcf3-40a6-9539-d03fca22355c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05a6aca-07c4-4f65-97dc-512b53e74657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c89ccac4-9448-447b-966c-6b1462584daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b3a796-9661-4ced-bd8f-06a90719924a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51225ad-7e67-4010-8ea1-fe027dc3f010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53864d8-a6cb-4de8-91c9-f2d3452e8e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a237b7-0675-4be5-8a16-38ad207118bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f622ca86-ea07-4153-bddc-c8a09e27500b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b282f6-70eb-4e0d-916b-a8c05fb96613",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7df6da-56e2-4e6e-850f-1c561b5bfde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa452be4-045f-4585-819c-5f4d505a0967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f4f69b-cb8f-448a-9fc5-ca30a759a2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99665f36-707d-4b9f-9b1d-a48dcaf9b29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7756b09-3e21-48ed-9bff-bd67800a79d1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c009b683-11b8-463d-869d-33ef802f2a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b245b3b3-36bc-48d6-8508-83395d47620a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb08c56-ad42-4a6c-aded-3df949677923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0c4b05b-3d83-4c02-9500-4b2fcd7d03e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d983e0d7-d6d9-4462-99dc-60cb9c6471f4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9055af00-b500-419b-802c-15dc24d1bfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b250c9-37a3-4223-9cac-e6c2456df520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2512eb2b-0f7d-40e0-bc61-73b98a1972ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aab38d97-88f4-4a2e-b10c-3fd881f24824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c9b1ad-8403-4bf5-b9db-a452d149bb79",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acae13f7-4fe8-459d-be0a-db1e8b1461bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe59e9b-05ca-4353-b768-9534fb496724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fad6b98-daa1-42d7-b07d-13ca075574d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73d6b005-65cd-4769-8c00-638ab82ee145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3364df-c116-4288-b413-4bd7ff580993",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1086cb54-1097-421d-8ced-a8dc91a68f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbac3811-be1e-4e58-af21-6cec7d8e82f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f32405f-ae75-48fa-9b13-44f813b41741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d78cbcc4-6abe-4b50-9609-d86e13982f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db23ca8-6edf-49fe-af74-92a123bfe954",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f23aa7-3181-49cc-8986-ff44995595bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dde396b-a3a8-49e2-9509-011b870f37dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcba66e2-960b-4382-99ed-9e4b73dd6631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75ea09dc-4729-48bd-bff4-9ba3b877f1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f0269c-929c-4321-8ecf-58a8e37bbedc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ceac15a-edcb-4793-a717-6af32babf023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddfabfa-1d2a-4aae-8edb-0ee72fea8d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65d9eb7-b6a0-4c41-8977-0580fd31f1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb592c3d-3ef1-44d3-a989-c8df9fa0cd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36ee922-ae6e-48fb-aa55-618792c5e5aa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab3cb32-7f92-47f3-9f63-0716fdbed384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99a3934-9447-4bd4-8061-1d9bdc42bda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5392b44-b5d8-41fa-8b9a-3b793021359c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c2a0aa9-036c-4252-9e64-80445ba07a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082b8a77-a7df-4629-a992-dd6df49af7a8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63de033c-11f2-4974-bfdb-337375c41ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d619478c-4f3c-4c40-ba01-f9d1419db42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b813e0b9-75d4-4335-be8f-640e6c380292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8de50c-799e-4074-b4cd-0677aab49fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee68cc4-b1ef-4582-85ca-7c448d43db1a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d835d8ec-acdb-4694-9ab2-e0ae695cc66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cb39c8-27c3-44ac-b23f-764648a500d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b28990b-6d91-4b40-8f61-ea6c5c12dedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86e33d19-2f0a-4cde-bdd0-5388748caaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f793be5-3f00-4782-9403-ed14f3449c3d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a91c5fb-6098-4406-958c-557e2d75a413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a673aaf-52f6-404c-bbf0-263866997e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b335f10-c125-4fd0-8e81-9021e721cb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8eb1dd-cf13-448d-8d04-64a5c866851a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129dcd42-da0b-426a-be44-6becbb6a0054",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9380dbb3-3682-43dc-bf10-93128df27fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884e1e5c-9317-40a0-bf39-c71cc4cf9687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1df923d-b985-4c9d-bd02-5b4921d152c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3583b44-d6e6-47ad-aee5-433811d58553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323f4a53-d08f-4a42-b7ec-327f68e161a9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf0a455-f87d-4ee5-8b2b-da8f19cb4f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952e723a-eb8a-44c0-ae95-acd4321efc16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2fb44f-6cf0-40cc-b761-b5644e09262b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dba5467-e24e-4cdd-9b58-5d6af42ffddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359ba708-2ef9-42ae-afd3-9a06883b4b9c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0788b80-4d40-4e65-9834-ed9bfa319214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad56769-4391-4b2e-b16b-f7b85d0a4c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a825938f-7207-47e4-bf4b-82abc7f7012e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b71b5d-36b8-42a7-9d73-2ac04b3d623a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0bf6c2-0c77-40bc-a87a-b9f38985cc45",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6618454e-d613-4f0f-a6df-271fea1f425d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d2f1cb-3994-48fe-86cd-9331a71565ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86e6361-cdc7-4e5b-905f-fc4bbee8d0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "21036ff5-f596-41a3-a98e-eecb632f3eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb214630-a59e-4968-afd1-9bee370409d2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8db4d3-df64-4de9-878b-d8045d3a4310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e1c80b-f003-4b29-afc4-c6a793375618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a692b814-fbe4-42a1-9213-786dd9fc799a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad744ce-ca34-4546-90e4-04fa90ac316a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2217d95-cd97-4dd1-8e1e-a676d8b650dc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903aee53-9073-42c7-84f8-1be80a277567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f5f348-2e65-45cf-ba54-f513ffdad13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d46035-d1f8-485d-87c8-16c0c04e20b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a402d64-606f-4342-ae0b-0eeb88584e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29cc767-73b7-4a7b-8d46-edc0ea1be3e1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcb2faf-45b3-4476-b3e1-ae3a0c26c493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b34200a-6a87-4f52-98fb-4a64e7ee5cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779a178b-885e-4e67-a330-b8a3d1c83165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93081350-7e1d-42b4-a030-a7216cf28f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b74be0-84f2-4c48-9740-4c575e7c100a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e685d65-89cb-4834-9fc6-5820bff18800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3953f54f-ed81-4264-8f7f-9b7a4841c11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824421b6-2946-474e-8482-5036dc51b989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb635285-eff5-4a7e-8250-d3f3e05db029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d9559b-1b25-446c-8a46-09c599e01064",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef977933-93f3-42e1-b759-f871e41d51df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b7e542-465d-4897-a9e8-5ace5bf39d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7e0288-e3b2-4074-bd2b-59a1b20ad155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13454669-0610-4ade-89f8-0b940c891879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467faf8b-3f2f-4e5c-b2b4-82533ed7e5d5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e715bdf4-7c27-4a86-982b-6ba1baa6c5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3b0a88-b5e9-42c1-9dd2-9242d5499be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55ee6e6-a7b2-46bf-bc8a-c0a887dcd4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7baac02-bfdc-4290-b2fa-dbe11ac39851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec6eb23-41a4-4601-802b-a4c21b35abe8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bae988-f14b-4630-aa60-b57cc4fbe4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6940669e-786d-40ef-956f-33820804f98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786d1d54-79ec-4141-b213-b1f7925c6a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c176e8bf-b655-4d55-b311-ea032b3c080e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e674923a-e2b2-4f88-8cba-c230ded40c06",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd9b3e6-5e4c-4322-abe2-5e34ecc053f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e4c10f-cdee-45e1-9543-3eff98cb722c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306cf56c-1faf-4d62-8cc8-0e1e2ae7ab55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3a92af-78cb-4aa9-a8e9-9a6714a92437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b8ab24-4054-45a3-9d0e-6649b728175f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb1a000-3f45-40d9-97fe-2a7ca9f9b754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536e3439-75fd-490c-b912-39a972713fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad73670-7652-42cf-aff9-988e5e9d75a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18a94ce3-a850-4bb3-91ef-9c6bed839ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba1ea76-3f29-4df6-8bf8-bb27e2d86c6a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c054513-6f7c-496b-8057-e18a3c4425db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a60080c-0304-4de1-9746-6059e1ea7679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a973d5-c5a5-4508-b5bc-f8bb0911fd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7389a947-bee3-4267-9087-d5e345b32ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733de92f-8cd1-472c-bd64-5a2118ea8cbb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2757b46b-6bb8-406d-b41e-ed3dc54ca2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fc4d79-d454-4bfc-b7a4-9d3c41c2bed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ae60b2-d450-4290-a9a3-2b7576860c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bc44e9-9943-4f2f-a0e8-6a4b1c181b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c134a41b-9c02-4b21-ba16-2b3fd9ccfe98",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401e98ec-a066-4c24-a4ec-3e7036c9c3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8414f168-acb5-482f-b6dd-7825bc241e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e73d9a-8100-4fa4-b748-e085bed5b5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4e528a-a333-41f6-9268-23e4d55b62b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999537cf-c868-4d05-81e9-4f854ae16084",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98651a3-01c1-4628-b57a-79c850023ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff3da63-b90a-4e2f-b73b-95789428e719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528860fd-cec6-4ebc-b93a-2cc41bc79532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e864b52-aa92-4b4f-94dd-105b62d3ddf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2fbc89-4013-4ce4-98cf-6bd9194cdfa8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9795a328-f91f-4545-8cb6-9489755a1499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79e3fe2-8227-4d40-bf7f-a0a8bb7f0b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2bcf47-e9c2-4e44-8273-2aeed88e3bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8f5707-c889-4c0c-92bf-91c7a83ef073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f771a1-2357-4221-ad3b-296ccf167043",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1669c94c-e543-4f32-bb01-d07c02202da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ea6c8c-72fe-4ee9-962f-1babcb74b96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3373f64-f20c-4297-a153-6f6587eed749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c47e9645-ae9f-4e62-a317-2a83c347a66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903fa199-16a9-48c4-bace-b6c927c2844b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2e8453-05c8-4ef1-b266-38a6522afb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f604cfa1-5e2d-4c83-a5b2-2a98892e5dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94275f53-67f6-4ecd-b7ea-0189fc63013d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3b7811-2e60-4519-a568-92ef1910b653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f66bff6-8415-4dea-a195-a7731f3fff63",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda18a71-7ab3-4960-a8e3-f392c935176b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d01dc26-6508-45d8-9cad-92dc40708b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5dcab7-4a8b-4605-bc79-3d8bbea73ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "139aa3c6-ff57-46f8-b64e-c732ece360f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fb0595-f1ee-4b65-8f71-4938992597b6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8238cda-7aa4-48ef-9b39-f84cb867350c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f145edcc-4318-493e-b74d-862e2c7aa05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc65f3ff-9335-41b2-8580-77c74531d4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c5622d48-7c7b-4a18-bb1c-0c7f2cc7327e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbc573f-b86a-4e61-bc97-c0c023a5f959",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b34df1b-5f49-469e-b707-203bc5b6dfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49251b6-3f3c-44d1-9636-fb13c89327df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23568045-fd9e-40e4-8fa5-4113dd03dd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3379c2fa-9fb8-4de2-9c14-8b08d6e2e475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dd4ac9-627d-44d6-98fb-347c47d3899e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cbe8ff-f43c-40c4-a173-318a4f8101ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9afb123d-dd31-4d00-94e1-78bd1d673eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d902f34-321d-48ba-9370-1e31aeefcbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ded01df6-f7ec-4fa8-b81f-e5c70f787749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951a6c5b-7c02-4384-8a41-a54f7af5f9bb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25d36b4-3396-45ec-b741-ff0f9f071341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf59b916-7bf0-45a5-93f9-28496b0ae793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e741196-9ee2-40c3-828c-e8f687eba93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "343bd2a2-ecc9-497c-aa49-0d757817faec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afa7cb0-ac44-4db9-8ab1-6cc5429d48c7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18be97ab-3079-412a-a0f1-56e4b5eed100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10291682-59e0-4eb9-a467-218fe056dc5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a55d8cf-fb74-47a6-af59-5349f07f0366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "215bd8a7-6cad-4bc8-9963-f602c9e3e10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0945883-1774-42b3-bb56-f80ab38229c0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e395be29-b586-44cd-955c-c349eb4ded64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041da86e-0b39-489f-8001-be14228bdabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ba71ee-dae7-4e12-8ab2-ebe1ec981ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dea2186-b678-49a2-801f-865ca17d0617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55c5853-6e25-4e73-b361-e64f6d556489",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68036a6a-7dc9-44a1-bf92-b42bdd2dcef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e288d4-1e2c-4b2d-8d4d-30733cc0facf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f91216-6bff-4a7d-8a6b-918330fc5a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34e2410e-78a3-4ac6-9fb1-74e8d0817e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46394a7-1e1c-4dc5-9c92-d1b9fdd31727",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed2e3ca-bc4b-4ce4-a987-d7704d1bd0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7500e2-8069-4cc7-a33b-a2c957ab17a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd8c32e-37fe-4f90-813d-5273f2280e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bce2ac34-6b46-4cdd-9bd6-ebffdd9c2dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98026e3c-047f-4063-8d89-fb416fb1f854",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b0b20c-45eb-4f62-ad67-34c8a007cca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76bde0dd-1c0b-448b-b7cf-ed11b286b244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc9dc2c-51cd-47c9-a67f-4387a26d245f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38b80904-bb0c-46b6-931f-7e8435632f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8974375-7ffc-49ea-a63a-f2a127c46ce5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974415ff-48ba-4edf-bae8-420a7c0fa599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf75e79-8171-4f03-8945-87e3090223d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f26d7c-5dac-4f8e-862b-3c716f5b7114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "67da7619-0fb6-48ae-9d11-7154afa6a47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d768aae6-cede-4af8-88f9-9cba9ea1e5fd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d245be-a303-4bfe-8bec-83bd3b2d9f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de1d14d-6819-49eb-9957-07283de893c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5892fd5b-50f9-48fd-af9a-87b6a06288ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11895389-46dd-4227-bc27-48d3c52470e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fadba4d-aec1-45b0-9904-6a2b1a661d67",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca87d8d1-cfb7-43b7-ac60-33fe2af812d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f85509b-09a2-474e-921e-a2634bef1b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c81843f-3d5d-48fd-ae43-a094ed7c6da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfccdd26-34a8-4750-81ad-cc021cfb2744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c26c93-759d-43da-a463-29eae5b4a278",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e287d3b4-e4af-4831-ab77-db8457fb63af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4288af8-4d4a-4a35-a4f7-bc014d164741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d17176e-265b-4f35-8f86-3570d9b370bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d73e394-06a9-489b-8ccf-9bfb1a6e04b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc025706-e411-47af-96b4-5aebb5ff17ea",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d29986b-31d0-4623-80f4-840ea7ef3564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fadb6576-ace7-46a7-9438-372ecfa8a50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4999375b-a737-473a-9649-6e181edbef88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebb834e-dede-44fd-8c2a-616b98a00c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465fcd3a-f598-4b36-bd10-d17a29841212",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c66cd6c-5717-498d-8ac3-fef6e20a226c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ecc3c47-8ffc-4cdc-906f-c161bb9872ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a363aec-dbaa-47e7-804a-d00d3feebeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "813fa60b-7eff-44de-8a9f-a5ee5bb83cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4856d21-8e86-40ba-8c0e-5900e393ec7e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50f4e48-2538-47d6-8189-76b6f5d05093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0160d4c-3fa4-4609-8e2b-6bb468865f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e21c357-b183-40ce-bfa8-0f550d7d266e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc11b97b-a518-48a5-ae8d-3dd2c2afc56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6511bf8-0b6f-4f93-b400-c448d06c3a2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b48def-4879-4684-a70e-578fd56f7e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed59e64c-886c-4c7d-9c55-23400815de97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf37d77a-bc42-4812-8246-db88da934af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d96ff8d3-a1e3-4cf0-90d6-dbbfeba1a1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a53c17-207c-4bcd-aed7-8e2675a694bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5cf2dc-aebd-4d8d-86a2-218995455e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13bc34e-9a36-4ac5-a56e-f652d491c115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fca183-d1d7-4d2f-94a3-c489f71ded11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "be9ea0fb-8e3c-413e-a526-87c111fb4f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3604d2a-571f-40a9-931d-bb7d80dde907",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c43286-fad4-4671-b877-c5c8d1eec1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c1223f-701e-4d5d-9b86-8b7e43c8adb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead77b8a-7e71-465f-877f-768855853088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad787131-3e9f-497d-87c4-f2a73c620bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e84ec1-289b-4892-9deb-ced8b3aec74e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7b4a84-815e-4766-a9ef-284c9deb64f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3b1f9d-a563-4f31-b183-651c94bc92ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686283b5-bc96-474b-b39a-aaa3a59c3c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "01f87cf3-c803-45eb-9d2c-23d810c83032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d187a86-73cc-4b11-8276-b757d9c56baf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af1492f-9954-49a9-a93c-f355468df666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3f8e0c-4969-44ed-8e5c-ed3b29b4d79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63f947d-6aeb-4e41-a8a9-54468b68cada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86efa68-8a14-4857-acda-3fdf8ffa49ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a88caf-d2eb-4c04-9983-5dd0fea973a1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9baefd-3792-4ea3-9b4b-04629d72bb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc14f29a-a58a-4d62-8dfb-3fd8123b2c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a55bf6b-498a-47e2-8b5b-8d9a26766442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4afd3b-0e57-484f-9c8e-0c6f1c518994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b533d30-9c1f-441c-ae8f-57c4790ef116",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fd1467-2b7d-47a1-8216-1cf0311d9318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2431b8-038d-4849-9be9-4c6adac075aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938fba10-1123-493a-8c83-a79f45a5920e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "941bf17f-2794-42bf-bb67-a6b34f4bf49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23224ab-4712-4401-966e-7e4422ab8d65",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c1d804-1197-46e8-94a8-95235e34e80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628e6bf5-43f2-4bd0-b336-f5c257f3c474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71dbeef2-298c-48c8-b3bc-06e6213b0240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "902557d4-6715-44f3-ac93-caa05f5842ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd6c662-5e9e-469f-a154-3a1e5abd9519",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f54b334-7300-4f21-9ff1-10371ef2f9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13496ba-1219-407a-bb81-ba5b8425df15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edeb878-8732-4f48-9674-54da950dd287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8edc6f-4810-4aa9-8691-758363a71731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e387af1-1850-4c58-828b-c9adbf917519",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da6571b-ffa5-4081-8e76-e7a0fb9407d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3af8a87-3434-4f24-a925-6b7896629bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251868fc-3903-4d90-9928-8d9bb88d073f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e81a3118-f6da-4d77-ad4d-f8ed4dafb435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48e3cd7-a9b9-45d1-943a-63e3031abf5a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87a0b84-42d5-4754-9b25-033efb1ca8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f514128-53f3-49e1-991d-d3a10df13926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7643a224-c241-47bb-983e-3ab73f2087d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a061d48f-823c-4e1f-ac19-ff3aadfdbec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848f8d0c-1391-4def-aca2-9eb654a18289",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2677b7-535c-4515-9eea-de72b826c249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fd3ccd-b1b1-48d3-9d01-99ef3e22ebad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72fd9e0-60f2-456c-a01b-249b44631247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9536f050-7710-4bec-a09d-240f44a5bfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7d0724-5b7d-4b91-8245-84cc3e163468",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36d08cb-a309-4b9f-af25-5d9976b4c355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874b962f-a895-4e8f-a580-1e96a4fbd7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ff40e2-d40c-408c-9fa4-2b657a554c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1719267b-e59c-423e-82bd-85da571fce6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f18c65e-59a2-457b-986a-c77cf96f3a4d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8c4b13-6aa9-424e-97cf-bddd112427b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ccb1e5-2f1c-4105-9126-8496b7f6cf35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d4e100-da4c-47ac-8a44-11ba953282ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f039fc87-d608-4c01-84d5-2893b59827d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d72db60-b3e5-4ebe-94d3-47ec9f0178b4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b001d40d-da80-4742-9dbb-fc589d23b331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c1625a-bc83-4b96-981f-4901de6fb7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b23097-4b6c-4dd7-b24b-515c025b099b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19541953-042e-428a-b2a1-c629999f6f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c9c6fb-4ab5-4877-b569-3d7e96752669",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b1db40-8edc-4f5f-85f3-fe287cf391c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad37938-c425-48f6-bdb3-7a8d9c627a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7328dff-608f-4cf4-a01a-2790e9066d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41541158-a17f-4bdc-b1fe-55065fcf9ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672e56d0-c266-4b9b-95a2-cbae5f16ac5d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efd6a4a-c35e-4720-83aa-b9d0fac098e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3560c85-d456-40b7-bc2f-f6b15c14bf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e8ad61-6ac9-4626-8128-96fcb0dea11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52461e04-e049-47d4-8097-97e4a029375b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553ab447-1101-4d3c-89ba-677c288b64ca",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548cee10-9081-47a3-9f8a-7fdfe7812263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00537505-f467-4f9f-9ffa-40c335042485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25f0809-feac-41db-ad1e-02dc3b6ae7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a0af32-721a-4fd4-97cb-1bec23382d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2aea25e-d2b2-4d85-9fa4-3b18d3688ace",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8106770b-cbd8-4191-b580-252d027e4e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4460eb82-4855-4be1-9413-cdc29ea178de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61882b8e-aa51-4948-80c6-67a43b60c13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f77cbe5-d6f8-432d-a8ab-bfaca8d82fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33db60f-ec99-4445-ba49-9c92467593e1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e163d257-ea9c-4f25-8664-5f803d2a5b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96a0fb9-1206-4dd2-8221-097059c2f151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a54fcc-e745-4879-943c-a9205f374bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c00ebc78-8d48-41fe-b1da-87db5b10826f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c13185-62fb-4ab1-a95d-3a5b2edd3394",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445edba4-bc44-40c0-9906-63c82b135560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e0cbc2-5f9e-47a1-83fd-530662776273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53afdf12-f5ea-4a90-9f0d-b0dc623e6a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a17d13ca-fae3-45ad-9f82-7c4d18864b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96efcdb6-fb5a-4086-9a6f-6efccdfbc23b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6081881-e1f1-473a-973e-7694501e87ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9281c43b-a29d-48d4-8aa6-a5da5a56ddea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d0ddff-f212-4c1d-b9fe-3854dcb513d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af40ef41-e1f3-4025-9535-6bc0afcb17e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00710b69-c0f3-4761-b790-1c53c86f8792",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22a3f6f-37e4-432b-938c-1d81622f5a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffde47ae-392c-4edf-8301-357c1a3ce811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6baad4-0dbd-4150-a664-a751ff693f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18dea615-a05f-4c1c-b2cc-df13fbd8d1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591a0ffc-6f14-49fe-9052-bbfa2b60b693",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab85f81-b246-41de-9a17-6726e29094bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018ca0e6-4fa5-44e9-ac66-aaa094da8636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9362d993-929c-4a82-972a-f8969fed7fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44f2d1d7-8ce5-4b38-b024-2e8aad721284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dcd4ee-38dc-4953-887d-540859ce6af9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faa31eb-851c-40f9-9998-ccb2ecd737be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7556b1c2-e472-4413-b135-833ab21ac82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf61eb1c-b6a9-43fd-aa6f-06ee07b32852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "939d1f93-c48b-4cf2-9b5b-428f19ce43f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd13193-c761-45e3-9a2e-ca21c76f6dc4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d2563e-ae4c-4b0d-aa11-dbc03d70ef5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2256ba35-e34a-4b39-b2f2-86297b93ed1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad206216-5d77-41d9-8e25-ce2a5504030e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3620b10a-d002-4d8c-b8cf-c4aeea9275d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb3e9e5-c158-48f6-8b66-7381e13ea399",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e087085c-2a19-4c22-a4b2-0fc7a7935ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c765be-5dd3-4112-b64d-e0522f2e78e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7aed949-5791-420c-8d9d-f4aa1739806e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdd8f9d-be85-493a-bc28-860e916f0920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6dda9ff-860c-427a-93f1-658ed91c1d88",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd01b5a-0c48-41ab-be66-9a2af4f78cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1cebe48-15c7-48aa-8e31-a0523a13b82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee86e85-6fb8-449f-acc5-0f0bb5bfe2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "614f8066-1729-4de5-988c-305dc38a7d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1b72fc-a50d-4ab9-b6d5-b6c1ea8e46b1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd18810-ffdc-4315-90fd-dd13f4047028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37a3793-0a76-447b-93b5-9dc917676e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c96261-700a-42e8-b098-bd955f942afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1013636c-a11b-4a43-b43a-4857e974e9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23604ee-a65c-4017-844b-fa7397fbcec1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cf2bf9-48b8-4745-ae5a-c0eefac2e7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94768587-540a-4bf9-8db6-26127528073c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9363fc-921c-4b4e-9e04-2b082576187e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9a9934-b7a8-47f5-9364-079919454b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2140a25e-7da5-4444-a3f0-f80fb594e01c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2ad3ba-58fd-4ada-8d02-ea14a587711c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd6a745-34a3-4dc3-9055-583b65ed6630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee923e4-921a-4de8-9762-c4912ca1fdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "029e86fb-0076-49e7-adac-281eb5f8278e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762dc64e-d6e1-4f51-ba6d-ea1faca8fce7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8680ce9-8660-4da5-a2fa-e8be0d79c59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59faf88-adab-4be1-90a8-60a934e2dd9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73879c3e-c033-4eab-ac8f-3b7b213557fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "79e4e8a4-0d0a-4c3e-a0a1-72886f5b6b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c99b9bc-3856-40cc-b5ce-13db841f60ad",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1453b4b7-ba32-4129-8c80-0a4e090dcaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a9db60-b796-4321-83a0-2bb5b63685fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9f617d-c77f-41dd-b27d-e0d539648755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "08dd59fc-3e13-45ed-8936-d42b5377ddb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caddc874-3535-4275-8a99-7345aad619b3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57f80b3-ba40-49c8-a832-eea0dc5e434f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521c2bbe-a7e8-4312-83e4-8249050358b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec251d6-330c-49d5-b83b-085e96d23749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5dcee9d-f56d-4f3f-97e3-666b90da7b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ceb21c-67fb-4dfe-ae7d-7081e57d8a09",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a27c304-cb61-4d95-911e-d22f17324223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "771cbe4e-2105-40c3-b18f-a1548d792301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4b1c0c-c990-4879-b4d7-6aed35680d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d96ab02-d74b-4773-a0c9-ea3ec81cc05d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f17404a2-8082-48f4-94b7-e4f81efa8bdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4d7b006-b028-48f8-a882-7b58474dcdad",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b18093e-0b5c-4726-9538-db2728def8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "343f7093-9374-4126-99f5-a24ce584a4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d127b910-1979-4909-a936-54fc9eadde73",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92a3dd6d-efb5-4f26-8e9d-7f30851f64cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbeb96d3-532b-44a2-af7f-583ac56abf41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81ad0d02-e795-46c7-b414-2a0730310843"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27aad764-f390-4224-81b0-99e18113b974",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ecdab53-7ab3-478f-96d1-b9305cf33d29"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67881f92-01b4-4df2-a2b2-bd01018f2f29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "950e9b7e-2b6b-400d-8b42-ce8cffe76b7a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32f3cc81-8f7d-45d3-8f7f-66c3c8ce9fce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6210e3cb-0812-4f0b-b43c-2bfbc21f2de1"
                }
              }
            ]
          },
          {
            "id": "e1274cb7-d54c-4d82-9768-7cf0a79a044f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea7c938e-53d3-4f68-a558-978231b28666",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e506004d-3635-460c-969e-2456720d0192",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "483bdb36-3288-4ebd-b78c-3f666f11b128"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61fbb884-5f39-44b1-a2bf-ea340af17588",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f87b0c3f-e42b-468b-90f7-55e5f2ca0e26"
                    }
                  }
                ]
              },
              {
                "id": "66b1143b-ea6b-4df5-b68b-11fed7cfadd0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a10132f-0a15-4b39-b797-483449f18e38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fc24381-4a19-4a9a-909f-c937d970e23c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab4dcba8-a4eb-4f2b-877f-1d9162e7796d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e6334b1-512f-4d7f-8dde-9c95f8d0ac2a"
                    }
                  }
                ]
              },
              {
                "id": "0cf9e899-2a47-4e4e-a907-fa2b9a2b4ec3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e6aa3ec-670e-4083-8de4-4a3508006b02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "120e5968-4d57-4eaa-8ffe-3a2d2d51a80b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da1575b2-5281-4a0e-800e-0a22005daeb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "17ae2d9d-c08f-47f2-8739-a10820cb55f1"
                    }
                  }
                ]
              },
              {
                "id": "b1a78009-b473-4c9c-8f95-5fb676c9ea83",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f21383f8-5a7f-49aa-a927-59cd6d84e5d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d998d4ee-8fb5-43ca-8bb8-ac026ed63b61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddf88207-5102-446d-931c-37ffba1d8df3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c4355192-a5fd-440c-92c4-1b8755e050ce"
                    }
                  }
                ]
              },
              {
                "id": "dc8f23ab-5623-48c0-8a9f-067337c706d1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d0e4091-00ec-4bca-b855-83b1c99c63c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b09e1cce-063a-4bb7-83d7-23c409c2b91d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48ed82ab-8301-44c0-9828-41d7111e085c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4386aaa7-9d2c-466a-b6b8-5b037fb8e86f"
                    }
                  }
                ]
              },
              {
                "id": "43752254-36c8-48ed-a15d-3955562e96d0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84ee207a-c807-4ce9-89a2-a59d2726289c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cffafe00-7d2d-4d23-b69f-cc90a28a8f81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cdc61ef-d6e6-48c4-b7cc-761d8aab9d78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "07482e25-c715-44a2-9470-ba1fc8ceae30"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4edbd112-c5c1-470d-b4b7-451b80e6fc85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4948c42c-dbd5-415a-b5ba-d23c2f8fcaa1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0c4fa4f7-2f22-44c5-b488-349031feb072",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "397661df-3b25-494a-b896-b154bac9ca12"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e2c7f68-4918-4fa2-80c3-3a259b3780a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7b99948d-3dbd-420e-9ff6-f859a770bd0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa530436-7f34-4613-bf94-39f598993350",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32686c75-228f-45e8-8a00-8b90059a640b"
            }
          }
        ]
      },
      {
        "id": "f550527d-f04a-4845-85bd-0c9578807150",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1a80693c-fe6c-426a-8efb-770bb180de61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52d6b6a3-a694-46fe-8a5c-89e15b42ea1d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa63a3d8-e01d-416b-a22f-ba597c1c6d7d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec66a61-4404-4cbf-b0ad-a33197f7b98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd7ec31-d001-437f-887b-ca3b4ad2cc31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23e8032-618b-4028-bb77-bed8c0fe8b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8be21f2-91dc-471f-a743-95b6cb3286c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d13a72-2bbc-42cc-807c-0e45925ba082",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9c89ae-30b0-4819-a150-12ce4c9d8140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d118eac-252f-406f-808b-b714d7b14e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272da8c0-c7a7-4733-8a29-7550d3a1ba9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f55defad-8e12-4f89-aece-25bdaf3d8023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8847664-94c6-4fd8-9d61-e86dd01aa19a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40b7205-84b4-40d7-9992-1a8d17b1c0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d39b3d6-6415-4359-a935-d4a27a94b89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26230339-3703-4602-be62-5d12ceb3aba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0bc058-ec96-499b-97e0-12f2bb4b3ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90316c5f-7dae-44e7-9892-77f115407fc1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ceeb949-f035-4d0a-903a-7d8267b3c91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352e78d2-41d5-4216-8a7d-9588c97ccdf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8377d4-028d-4c5c-be11-2ecf1d66ab38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "533c9ef6-f59b-42e1-99e1-9ac393ecd300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16aad18f-90c5-467a-b831-3d7d30664e4b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5a652b-3369-430b-a60b-07fee38425a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7f33d8-d8d2-42d7-88f6-196e4146c5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a38362-b208-485b-907c-d85ee95a24eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c02a683-bc37-42fa-b4ae-d42ba3ce940e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a06d2c-c430-48ff-8c67-33d660ec06e3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad1d544-31a3-4f31-b3cb-429ae7138dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18005627-7adb-4e6f-80b1-eeb16317c5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb349f4e-753d-4769-ae17-8636c3a0e428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15fabbc7-4ebe-4185-b169-20e657dfdbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5aa2d0-d8db-49d7-97c0-e9c77ffc01bb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ff323f-7ef7-48d9-8dd0-629acafd5f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a885ad66-2c77-4619-9d36-c100f2978896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946c84b0-4bc5-436a-b45e-72eb48792c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "21536dfb-0029-4be2-b509-a15d9e074f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4accf530-74df-4239-914b-4d3ce31f310a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87c5088-2e10-4f26-ad04-92719780fd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e323ca86-cbd4-4608-8425-5443d221412a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bd6e70-4dff-48d9-9196-ec4a07d306cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95f9436c-aea2-4d7c-bd31-cb7e5521c8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6c2f5c-84c3-4374-be39-83b2f25223a7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552db4ca-3c91-42d5-8a31-7bf1fb477b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ebfab8-132c-4670-833f-31341ab3eb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c47aa2e-9417-4c25-adcd-56edbc459e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17233d59-2b72-4338-9895-ed35398d64fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442b0efc-51cf-4ead-b6ae-c42dbbf398e9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9967405d-de6d-46fb-8871-15db57b576a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a582fd7-3999-4f6c-86a6-6506d20bc77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774fc51d-7cab-407e-af15-38c311e9d551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cce2ad4d-1798-45dd-8d44-8c57ca9f8d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb6eb0e-5dd6-4cd5-9072-664f7b8b7f5d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7497233-4f28-4640-8947-6b08b5a54dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8233bc4f-fa80-4fb1-89c9-15a3d1013c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b6b0e1-3a30-4302-9a64-52125df96f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "543384cc-46e3-44fc-94ba-c59e65257221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff0e4e5-5efb-41e6-b404-e9efd2e0cb87",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f58711-1ca9-4409-989e-2522b9f7baf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9c6d26-5e55-47c9-bc27-2983d767147a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5a42fd-b1d9-4419-b889-83328fe56c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8eac9c58-cf6a-48c1-8feb-961834c2c79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2201689a-0b14-4ee0-91b8-39583be18799",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a204276b-dce8-4b28-9e8b-1b0135285bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fab5dd-9daf-40f5-a6ba-a7b3ea1a3863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd77f35-625c-49ae-87eb-160c609a1656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3458d67b-a5d8-4440-8566-288d4451c469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbdd6fd-fb1d-44a1-b040-54f5d0ae578a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6768b37-02d5-4757-918e-8d0d6c153b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03eba40-6369-411e-b801-465a39907de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feebf02e-1653-4d52-9154-b3a4c36a8adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e97f4058-749a-4e0b-ba03-6c05ec6cf626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ead7b6-4385-4a97-8b32-7824f9644ef4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854f8dfe-3083-4ab2-99d9-908a2f89a5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140b69a2-e8fa-4984-8035-499da6d31907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e58e8c-2c9f-4b46-b5a6-3d7e38e0ab94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "38116de3-7c50-4486-93e9-8a8b7e0e82a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5decf7-684d-45d9-b9fc-b28840864ad6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82716a12-b53a-41d6-9d01-8d59d623e947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2742c86-9316-4293-9f43-27c406e45c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04791e81-ee6e-4049-9782-0a2bb23c1d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "403eb43d-2b82-4f97-901f-456a275eecb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b0415b-0279-4cad-b388-84df64986329",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493dd47b-93b2-4f9e-ac15-5188a32963c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f5914a-5ac8-4369-bd21-19f9401ebf6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0c0c70-9c55-4894-b92b-a35cad582c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "158216b9-2c23-486f-b15d-19b07e07491d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94a6522-9595-4a1b-8e42-e1b695d8698b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0be4d23-ac84-46a1-aa7a-974fc326e397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633766a3-9cc5-4c27-a22d-b1dfeb934b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d40b9c3-60df-438e-a42d-4c6c99fdcec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59eab04-0714-48af-b4c0-8e3f2689ba92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e978902f-0648-4705-942d-d92a73eb875b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe88be2c-a946-441e-af6d-2620cfec6703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7e166d-63a9-4ec2-a0d8-9b94b248c59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0903eb57-9a0d-448f-a723-023560cd6224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "251e33f3-f675-4392-b860-490ba0dfd3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc338484-9c19-4c0b-a72f-1e43cb6fe9da",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0adb41-f641-4dc5-859a-17f172742b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a520a2-7b1d-4386-b9d8-49edae39a7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a886a4e3-caca-423e-87ee-c8b047e68412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9739d461-7c2d-4bed-9769-b6b866398ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da9cb46-2f67-4cef-af2f-0a944ee55363",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e28af2e-7c9e-440d-b5f3-78387a1a1c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e2d00c-12ca-4a13-9115-669748bfad02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10aac8e7-83e9-4b9f-b16f-84c7eb429282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b755dfd2-d7c7-4f97-afbc-59db7247d511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d974d14-d599-40e5-ab1f-7e53bd35a30e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4326274d-43e1-4542-9296-309d8cf79182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6645dc-8656-437f-871f-a7db5a4c0e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0983051d-7ebb-4e0e-bbfc-c7475562f2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a43e4ff-b8d3-4cfa-b6cd-0b5ea926aea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f204446-4416-4371-b4a0-25289f6393d2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97732f92-6266-4ab3-b512-4b4a7f06a290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f7d270-985f-4975-bc2e-a734f54212da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8754bad-ec44-4640-b3b0-bdaf27426c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d93ff9a-5c75-4639-8d7f-6cf18875f985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b337ac3c-bdd7-45db-a292-9cee5a68a260",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499c0744-7c94-4916-9094-d5af39a77acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0432853-73ac-436f-bce8-4628f1f002a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce66bf4-691b-405b-87b4-508a139dc34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7912382-1ed3-4606-9d73-828a8b59c0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f8c67c-faba-49a7-8dd9-80baced1afd8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e61b8b3-a946-4b8e-86d1-6755c76b3deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2c2c93-e2e4-48f9-b16d-07fd38fb5be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67efd030-e73f-45a1-866b-46ce08295860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6ddb59-89e8-4294-88fa-4cdd5df11734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ee4055-a5c1-412b-aae9-54ecdc9c4b4d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735d0adf-2da7-4b8c-9d53-64198cbb2bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef17b4a-6831-44df-a042-2df60f3dc7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ab822f-ca44-4acb-affb-d735dbc3d124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "078f946c-aaa4-4fbb-b6c9-56be94e95cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc890808-1095-4436-8f09-a72038b23d4f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335ca932-8e2e-419a-8cc7-810c6d460430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe94578-5094-4a73-acf2-7bed5884145e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7946c1-5cd7-429f-a4e7-eec077c9689b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a1e84c-e7ab-4051-af0c-63d7366957d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397b3427-5c2b-4b52-9c6c-b811e2b76e59",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17be5c11-84fa-4766-b4b3-91079ef68c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82c67d0-4776-4cf5-bb78-53288e6ab498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49878d31-c74f-4cf7-b67e-45e2530773af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f5367c-b836-4461-b2e3-b23a294d7edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ed9ebf-ba31-46ca-bfb1-3f8a789f9592",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e570ae6-d6c7-4596-8466-337a48d364fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98dd3db-97b8-4ec0-9fc6-def5c2f9a9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4775db83-ff7e-4abb-8ef0-cdc60bad9880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8e92da-2c4d-4f17-adfc-15ca27ab91f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d605b0-1054-43f7-b5aa-65f957ba2ff6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c95e5e-a1fc-4664-928b-b4264c0b09e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed49ae6-b886-4c97-b3b6-9b89334aa3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64eb27f4-a559-42e9-824a-96bf6fff7685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0aaa8a4-1d05-46a1-be01-40eb0592fb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e53610-be90-448a-9677-f8d3f4fe34a5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75a3716-81dc-4b68-bf09-869481fcafd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd8c7f9-66f6-48e3-89a4-0f7dd8ff6a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388e550c-fede-428a-899b-37721cdb1a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ce7958-b2a8-4fce-b823-9767695b9f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e97612-21b4-466c-be47-c7a7ccf12b4c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b7aecd-78a8-42b7-ab7c-d47e4d472787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89a6bb5-401e-439a-9880-2ad5bdeccac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b96a15-c2e6-49ec-9901-205dc13c47be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f586858-bf6a-42cd-88e7-0ab7933ead45"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f98fe591-52f5-4530-957a-dbb4b45f6ff1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b157474-0b16-4b3d-ae86-063356f85648",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7835b259-5ab9-42a5-880e-bcd483e02c23",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ef913dbc-678c-4bf6-a17a-bd47b50057d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd460cb-83c1-4f23-a579-4b5967db764c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a61713d0-4e22-4927-8b71-7f05e6cd1404"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bd44a51-e5cd-4378-9b5a-986d7dc2a333",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f43045a3-3290-4969-81e6-d2ab3d3fe8c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63725426-4ac3-464a-abd8-9d2dba496f35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0138cff7-8d74-4222-87a3-1fadddb21dcb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "083dd00e-6712-4118-b89a-08c031c93394",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67deac64-1cf4-4d51-98cf-6a16e1d758fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04e2bc7b-d822-47a7-b38e-78ddd333c3a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "286fc8fe-7b16-427d-85a6-9eef43f23dfd"
            }
          }
        ]
      },
      {
        "id": "00a32391-5cac-41a0-af32-5bbf31b475fd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "12aa7afa-25fa-4336-a773-931b937003b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "862e4c16-f2e8-4121-83f5-457ec556ef9b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "774c7941-06dc-448a-a34f-f51b9fab485c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ab0acc-d5ad-453f-924e-e80dac50d758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d72b6e2-e026-4517-8457-ce1b02cc33a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94824e8-937a-4161-b6fd-29f774619d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9d925e-0be5-4e18-a4d6-09218a918739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3c49cf-52b3-447d-959f-53730c10ccad",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3167c78-9d7d-4c57-967c-c1eec7139159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407512a9-3a23-4131-ba1b-6aa5ee6c5f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c9d164-1177-40be-a8fb-58c84f1998e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "466ec62c-e497-42ee-979f-f5952696dd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad3264f-28b8-450f-a37b-c46e37227ccf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836696bb-20ee-4e05-947c-7d9be2a85bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae74877-4025-494e-b9a4-8597a1822fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f327f76e-2294-40f9-b5b9-31dd65c87dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2efe7231-6272-4af9-823f-aa74f2ef7c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d706183c-9660-4a7b-a0a6-7bb6a60459e3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e54348a-c0eb-4f67-b9d7-4fec61de11d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026527ed-46a3-42c6-aca0-ecbb911f8a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd6f515-c573-45f4-80ab-98b9bd173d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a312052b-4604-4dc8-bc49-f190de5f75ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15aee3b4-81dd-4d25-aeb1-e4ba68dae803",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd18d201-be52-4292-9471-c1546b3088e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8fb95a-185b-45cc-a8c4-729009684ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcbc206-5a61-4876-b110-2f9546b6dcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc92b53f-3e92-48bf-859b-65e4480fc8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313149d2-bfab-4c79-a6e1-fbed1995dc17",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134a5495-8d58-450e-b6f3-4fac76a0858f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f55763-7255-4fc6-929b-0b0b4cd84e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4f8057-8a54-41a6-83b9-ae58b8d26af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f8f7ad-5947-489b-96c8-e7f9876ca0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5310e748-541f-446c-aa8f-007f394b5090",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e09d217-23e4-42cb-aaa0-0fc9b21b56aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f94759-787b-4992-8210-34746396b406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57402c7b-1160-4443-bdca-940f7766e38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e90d363e-d769-4681-95aa-96ce060f1d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c9b517-037b-4964-b5fd-56618e134853",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992e498e-f566-40d9-8d1a-964681e336d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090467c8-56b3-4c5c-b2c8-f95f2a8af0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fbb6fb-a5a2-4b70-9702-369985d765cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9e69ac-b72e-4fa3-99d3-91569f99556a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfda210a-de00-4e0b-8b7c-a341b2043507",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d04d31-3ab8-4b0a-88fa-02e2d3e7439d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d28f32-f009-4c0c-b302-2f3ec156d881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4899805a-3e82-4557-908d-15c50357ab6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a6b616-8c5d-47d1-9b53-19b7a5dfacb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9135b868-ead7-4369-9945-b57f241eb645",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f768d8-d652-4aab-8870-1332efbdece6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63eeecb7-0641-4f74-b9e5-a8791448d102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bd6c11-5ed8-4921-9a18-65038d9d221f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99958280-f92b-4dc6-81af-a43e5d3fd314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb75029-9f6a-4bfe-a8b6-a3fc5cdc33f2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0d356d-258d-472c-84ee-7fb33a90699f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5265e465-0f30-47d4-8545-f3948fd61492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043c9a33-7c6d-42da-9497-03d587ee2583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bc78dae5-2c3d-4e56-ac1e-bdf7bed1ae35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36904bb1-8b02-4762-9fde-b1e9b92d2b86",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cfcb34-eeee-483a-a0ad-d180ac968cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e63553e-6e0e-4159-b416-4631449f3ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f594f4a-09d9-4c1d-a37d-ec0c16c5b06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6d6122-1854-48a6-b2d8-fd81467024b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da43f6ab-0f1a-478f-830c-63110ad88b36",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f98afb-476f-4094-a72a-bad4413dbb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34ede95-531a-438e-846f-0babaa01429f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de705dca-f1fb-4daf-9a56-1b0083316076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0ae58e-4adb-4c45-92b0-b96490fbdc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccd6e23-0669-4d0b-bdd4-a90e1352fb9e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64b5638-2591-4315-95cd-56bab634d6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f4a177-4d8b-42b3-ab3b-abd97a5c84a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e04c5c6-2e44-44fe-ad19-0868e63fad03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe65405-c729-4b18-8a93-736c8942591d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993029ba-ac87-42c7-a47f-3472e32648ba",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7fc70b-5322-4b44-a091-7d8959f2af87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1d0f65-54fa-41b7-b119-3d1ed31594ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62449379-99bd-4924-8cba-e9174f558f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b6eaa9-e50f-48dc-a43e-d8c8cca2d750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d8e361-1031-4fd4-badb-2dae58cff4b1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a999db4-15c1-4ab4-a13a-3baa2621c659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f71aad-13bc-40a9-bdde-194980abf4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebfc795-eb5e-4d8c-9781-3ff8cbd275bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f17013e7-cf90-4bf8-9dce-1a77537325eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50696787-adbf-4d88-b044-b0c8f6dd6fbb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7de6c82-e78f-4d76-8548-b273badd99ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded3e399-3c72-4269-8e62-c61168448f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25364388-4eea-49e6-a1c5-e889b559958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b97b41b-8be8-4522-b348-f3b9919c4ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3b7667-82c1-44a3-a0db-bf5209dc1ed3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b8d9b0-64ba-4170-9d37-affa344ab885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b7a256-cbd3-4369-b8c1-0b6ce749a1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe6b02e-23f2-403c-80fc-b3879cb27ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d2824f-6183-40a0-bb30-301931299405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec9328e-90d0-4d3e-a961-1071230f5b44",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ead4cf-217d-42e4-a1f2-2eba051f635a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b231934-e752-4511-8cec-4a1d052cedd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10d0cb8-4937-4e17-a5d0-bf05f4fa82d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4aeae70-c217-4826-8618-039d5583c53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc74085-aabc-452b-b12c-ea0c598e22de",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c56c91-d6c8-4495-a767-401f60a007f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b32aff7-344c-454c-adfe-d75260c11771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f5288a-1b10-4eac-bce5-8d9c38b2b5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bafb6146-be77-4330-bf84-53b119bb33ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d9ccf5-1d1f-4778-a110-ab44113dc281",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e2dce5-fa7f-4ce7-ab91-d7a6b5bbde11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6898f126-c735-4d3e-a3bd-a0eac175ed90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0500c4-7b20-42b9-aecf-1e15d7647e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3561ad7-f775-4b3a-9591-b5dc5e3086af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc76d74-00d0-4e5c-b5fb-736a617da194",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d8e171-bde6-4fc5-a6a2-f1047174a038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d52d87e-b723-464a-9a26-cfd415398794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c56498a-6455-4f1e-a426-b66a41a84547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c861fdb1-95f4-456e-bcb6-4af043d52a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d88c456-783d-4988-9b74-5a5528ce0ddf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e795d0-53f0-4d34-82cc-069e8046fbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd77ebf-6b5c-458b-96e8-f617ff8c7eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99ac94d-d777-4e1c-ac3b-623f80f230ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67789346-4c16-490d-bb8a-f9cc27e76568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78618071-02a0-42c2-b700-cc39eefe73c3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5f2a6e-aff5-41b3-9682-7887b9ad53f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b4c692-fc02-4941-9ba3-74f29bf79e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd9b28b-0529-4e89-988f-f02b621c2fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7ee667-8a41-4271-9385-1083e74ed9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4eb4fb-91e8-4185-844e-97f4c409d0b6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e67506-5144-4da0-ae3d-3adfbbc32cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a3b718-245d-41d5-afb9-e94f4ebd32d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4890a1e5-7931-4520-9c0d-edd09b6d8bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40d01509-379d-469a-8f5d-d8b513164ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230a25ad-04cb-4c74-beeb-92b64cf809e2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e784e424-1add-4c1f-b403-bf39dda7b588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83e9679-be79-4e6c-b136-09a9ee0258bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca25299-5c57-41db-8281-c4e0d14ff266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d89ade-3c68-40cd-8f67-f9abd21e3894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab3d8cf-c17d-417f-acc3-231a28749c03",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0792aba0-4fe0-46c9-80c5-db3eee4f611e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1457a7-2c18-4c5b-8c57-cb00ad5a943b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64006016-9939-4049-9766-5d7231a9ea75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af13253-5239-4f1b-a185-1bc5bc960616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4b57b0-e7a6-48b6-8148-87a7428686e4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69921efc-aa1b-43a5-abdc-a09b3d30b583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88afd27-5901-47e6-ba23-12e13e689b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbe7ac4-28f6-4b4f-9990-d7f1a14db308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b62cc40-50c5-4935-8d09-3de0bad72dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa13e34a-86bc-4fdf-9a0f-d86c590bc71f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36716fbe-64ca-4496-8089-515bfcf63921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd50ae4-78bc-47bf-ac2c-8d21212ce2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d99cf5-39f9-49c4-af8a-e9e442f371fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1dffe8-7dfc-496e-9fb6-6aef30fcb50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19756801-b82a-4430-81a0-385d231e472e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08145c18-74d3-4665-bf2f-e7eee299e1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c6d181-1d2b-4fe4-b2e5-f5fc041e43d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d794331-b733-4430-9b74-24c77c11c284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0485082-8c10-4c8c-b3d9-9fa478185b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c443e09b-6077-4b60-899e-530113ceff5b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d0b9b2-ec4d-4159-a639-3181a1502849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc8dbc9-25f8-4694-869a-09689658cf77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403c0631-fce4-4fe8-953f-9a8f0d0d3033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9285ab-f4e2-46f1-8fd8-27d5ef6caf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcbd99e-1ce1-4d2c-87c7-287197ad0c65",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f531c7-539b-47c1-80ef-b05e09f1a11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efa3e8d-07be-4711-b3a9-19f7cdf12e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f71dff0-97ca-4ee2-9ef8-fde959208d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2674704a-4f41-4631-9abc-22773d1a6f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f78ab03-8e7b-4d7a-8a69-19f26292a0ec",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb573a0-64f8-4d50-8a46-2318537ec858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bf9e9e-bc73-4810-a992-7d7d30d0c81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c01160-0a4c-490b-9f31-97908af454b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de731ef6-f998-4d78-aed0-a8dec9fc551a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f641d753-1ca9-4a57-bac4-f17308635fb5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d57e8e-04c7-4b2b-a3ef-e826e7c2540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ace533-66cc-4c28-8293-76b979e0ea7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d117a6-e01f-419a-8020-4344dba72a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6bb5ca-83ea-4df0-90ce-55578284c41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494104ba-4c9b-4970-9354-76b02e06e32c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33537251-cfb4-44c8-8aa0-7dea7af1ea4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093600cd-f969-4446-911a-6457433c28cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f51577b-55ee-4b67-9b6d-69ad02679e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96b1c2c4-7b4c-4fea-a637-f3519c47e453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b11b97-44c4-40b5-9209-5ddf0b19c8f5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790adeb7-75d1-4cd7-a641-48fd9b42792f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73bc95b5-b48b-4a87-8968-c585f964674d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094fdd2d-cc59-4552-90a0-804dffc1eb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7386cf25-741a-4826-9bc9-d9b922f62ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1990af8b-5ad1-460f-be93-5a23a581a9e7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02684a15-66bc-4891-a156-16e7152807a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5c5768-d414-46c7-83c9-ca83ab6ee0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721eff30-ab38-4be2-901d-17050ca59548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcf08bb-da80-4104-86b9-99e6cc6b4345"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e71d14f1-1714-46e2-9798-74b4d6936716",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8e9f150-0166-4a80-9c55-524aec055b70",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebc2330-b209-4927-9b10-82d89e0ca1e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbb78ab-b6ef-471d-be2e-6793b18abd15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80e9e33-d773-4f0c-97f3-c4f4b94040c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33226b3a-063a-4338-86a6-742a62167de2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b649beb0-8110-4aa8-96ae-9f951e556549",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c43a365-ba19-4e46-8c1e-4de51bc096cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89bb82e7-a7b0-422c-a720-9b21d293e5a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "916968a9-a251-4fd2-9c14-e17886a9d47d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a69d3eff-6a53-4be7-b0c5-c4d821ceb232",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab377d42-6164-46bf-8fa7-b76bdee1b6ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0f5c5b2-6191-419c-b45a-41bb6d61eeed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5eb2311-27e6-4604-92c5-1207119ee5fd"
            }
          }
        ]
      },
      {
        "id": "9ba616b5-81f6-45f7-99ca-81dbec6e7c04",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "af8e7648-dd79-4aa0-ac87-63aeae63acf6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a00cd95-bba7-41e7-b503-ca14cdf2a6d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11144342-4b41-48a4-84b3-ef28955280a5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c8f2ce-8cd8-44f5-909c-79a89fe96633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7599879d-7f90-4a16-9367-a2c59e42fc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20a1554-20e8-4f46-9d5e-49776f2af656",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd80cbe2-3c3f-46b0-bb33-1f59ea147d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b296fed-4a14-4ee3-95a9-fbf2fef8baca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f908b963-a3eb-4d1d-b21b-7864ec79369e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19029458-9a7e-4c79-b615-e0dbcb32bb38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9161ec93-0282-47a7-af8f-94dfe5f06025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bceb5e20-ff47-48c9-ac61-058e2e8b3330",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a62f1f2-0018-40a2-bad3-0aa73c9981c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333783fa-5b8f-47da-95bf-64592725fa0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10855ce4-d4e2-442a-945a-33f501e0beb8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7771b1eb-9185-4194-95b9-7f1c39cf9a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3ab725-0487-4d6a-809a-0061b036ddbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14115053-a604-4c18-86fb-af2b547d3e4f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0551c36d-197d-47d0-848a-edd672ba3aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a93d21-9567-4053-be9d-128b1a2feb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed012183-5cca-43c3-92a2-c929d4f01c2e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8af9e8-5f77-4543-af6b-92130704448e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17352b5-015a-4893-bd53-78534843365c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1d2d50-e89b-4d23-b9c0-a6ebddd9288c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f6918d-34e2-4345-bb4b-ebc04c1818a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a120f53-0d38-4a05-9eb3-3cb3976306bb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3c1f69-4677-417c-93da-5f0316e23628",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c251c4c9-ed14-4fba-8e6a-b022a53aca92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430970ca-2c4a-4170-a5af-9ed1fc2a8b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbce07f-185a-4c5e-b862-8928d212545c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e765cdb-afaa-4112-a0ce-b2114862a7ef",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515ad2c5-3aff-431c-9142-3e19e72515a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22db6730-f56c-4af0-b55c-3839bf526730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cc5e79-9d7a-4b68-bbcb-38f02f8b2ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bc9f24-3ded-4234-875e-fcb506cdca56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e62d3f4-c0e9-4965-8e8d-487d828fe258",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa769ee-790a-4cbe-9fa9-d22d5cecfd10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cede8d8-cb04-4d02-98ff-a06549a2ee4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96f1147-bb53-4033-85b1-af67233a9684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f805678-f04b-4cda-91dd-16f08221dca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52546cb-0f68-4761-abe3-23a3a789484a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8b1060-deb3-407f-9275-71e0669fbe3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d81e7f1-79ca-4bf3-8dc8-39d3bfb1c032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92776c4e-6d2d-49ac-80c1-0d101be607b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d4ae17-604f-4a53-bd43-2fc69a1d1186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738f4004-991f-4039-88de-4d4762705c59",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3366e7-2a89-4686-8e62-a9c15fc2436d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5783cff0-b4ae-42cf-9bd2-b591acdeda83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799bdaad-abb8-4b2b-8c82-4803b1be88af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555560d4-b2f2-4f31-ba37-b18d9d403e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e411ee-ae0e-4c00-805b-bac8fc8356b4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d060a274-659d-4f7e-bc99-51955e54af51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40cb493d-69b4-4bcd-88e4-889aa56fcdac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dcb6c0-40aa-4a8c-bf17-0e42ac04017a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc941886-8755-44ce-a425-0a8b2c96d6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daccbcb6-d215-4f2b-9a25-5bba81985d0b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9c74be-35bf-494f-9f40-5836ff3d209a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "437d41f6-56bf-4118-a365-083285bc0f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be895f6-a1c0-432a-a2bf-d6d5acd5eb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa2bb15-2a26-4f0b-ae80-dcd7291f05aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba0f46e-cf56-4e52-a911-1bf6cd2ce3f0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0b782f-c0da-4eda-b1af-aff18a9cefe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a1ba4ce-d3c4-491b-ad61-65453497abeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8095d9b-1f68-4d6c-97d3-6e6389044dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a23b9fd-b258-4196-8115-abdfa3a41530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c07053-64cb-4ccf-9dc4-47eb7d686c3b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a534bd2-5368-487b-b2fd-3fa02f3e814b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f5f2272-e201-4a3c-937b-3cfa3b504074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a39ebc-bfb2-4ffe-8ba9-c4ec71ae7246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b4d465-394a-4f10-bc78-55c0166140d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995b9445-0a09-40e5-851a-c1f6e262d0a4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3905df2d-306a-49a8-84a7-9bd2a7ae7326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e66208f-4ef8-42ce-8836-214475b9aef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86075310-733f-41a5-87dc-253b23f3a58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db65968c-b55c-4d46-8e97-be56f5ca6079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07ab659-bc0d-41e4-a7fb-5e29e7d97ec2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aefb050-89af-4f8d-8efd-8779c7549b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1ae860-ffc5-45b4-9ac4-7183b2bc2461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ece021a-1dde-4075-a9ba-f025a79acc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce41ae6a-4009-4d5e-a22e-0a270c70540b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcaf409-2b2e-45ee-bf7a-02a965e33c0a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6eb89e2-a87a-4734-848b-6b024125c1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8391a7-dce7-4810-9349-15bb7106bf29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6e8d03-83ae-4506-ae54-622e988cf661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6398440a-cd2a-4c70-920c-823d3f42c8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca63209d-ca8b-4bf6-909f-715e257e531c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d670bc-ff39-4257-b9a2-acf707f93210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548b44f3-3b59-45d6-addd-bb308d973726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f02fd2c-93f1-4ebd-bd94-994ade6d71d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84937d99-15d3-4aad-907d-58405f9e90b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a99519f-ba05-42db-bbb1-81d2d25e081d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e72b6c-80af-4d5e-b572-7c36cf27ba7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd873436-ec0b-41d2-abbe-2ef11061121b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98cc1c0-ec33-422f-a08c-130b1780904b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61963795-1634-4014-bb58-7ecd5b6012c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28342694-b2fc-4f09-bc6a-22169812c781",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa5abd6-ef8d-4e91-a894-3f62287517ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf526d11-aee1-4d25-8c73-8ebb563f900e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe16cda1-555c-4925-bf96-62c136743385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bce0d75-4b2b-4788-8b1f-ec960ec939cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cc7526-3104-4cf3-985d-520db1f4d62d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd134ea-878d-42f7-b68b-902dd0e63921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea811ed2-47fc-4c4f-a557-b95aac46b0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ea1a03-19ba-481e-890f-ef45130de344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d54a6b7-f873-4d97-90f5-1bd3129b464e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e43d0c-dd54-4484-8c93-93679c6f177f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b7cfbb-b5bd-4d52-8bf4-769a10842cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71731882-12d3-4035-87d8-d15032c2e6d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0878ec-c231-4370-a6ea-f625047772d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684f0acc-c948-4ac4-9aa9-fcf73cb1a2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c248eb-8862-465a-b2f4-cd6989c2bece",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebb2de6-901f-443a-8870-4508edcc8692",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78cb2738-cfe3-427a-82b4-b4d2845b8526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0143167f-ddc0-4fa6-b9c6-f24461c07d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23ef59e-f357-4f94-8de7-3719c5f38a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0751aff-1123-4dd8-a410-fe6aa64628c8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2733621e-0894-49d7-b66c-4def99d5b1bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0201d193-65a7-44f4-abbb-e0e590e268dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1286525f-cf9d-4e3e-823a-5191952bfef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5c7a0a-6ae6-4fcf-8a6b-1644a18e2f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41507d25-e5f0-4298-b069-420b42b1cd94",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568d1284-e7f2-48c1-b3fd-06aad6d76adc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae86187-f6b5-420f-b26c-6576dd4b59a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00a7cdc-5db2-4496-9ce5-f5ac78f3a79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4c4a84-b160-4738-b98b-da0245b9189b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31f542e-8b65-4c4e-9a4b-3637e5eed6b1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdbb415-9253-4810-a951-18fd05fb1359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c636f71d-19d5-43e2-9e7b-261b6dce9cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe60c51-9e6d-4a30-8879-dd648acd6ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e95eb4-4dd2-4011-89f0-682600e580dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4030440e-ceaa-4815-a5bc-1a78b47b6e08",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b33afaa-f694-4a55-9082-fd230b11d467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2fc5912-d63d-42d3-b378-1e56f7c23e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e041305-11e1-4df2-b35c-4886fc0042bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7e9a79-a042-4f40-a78c-8a3c54230502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73089e66-b6dc-4338-92bc-b6e92554df74",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd065f29-27e2-455f-8ca8-297ee36cbff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18e988d6-3cc6-4e1d-bdde-71f038d2b93d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba0e067-0cff-4dcf-90cf-6a9c8bf17817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec30a1a-40e5-49b2-9fbf-1659eaec7582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430873e5-0e07-42be-987a-9f8415be8cd7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e893aa-6dd0-4ba7-b857-d11a891ec70e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7244264-285d-4279-93d0-12ef38c36b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaad8420-5691-4970-bf97-50bae6103003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91be2fe5-f841-4d30-ae97-cb7468112c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21f0c6c-318c-4f6b-a7d9-b454ec9d1bab",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49b4494-6b28-4c16-a6c3-dc88202f7aab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "412ad58c-206a-4855-bbfb-daec36155bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f910f93-dded-4839-8ab8-1939a546ddf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46dd45a-d826-4842-9d26-2d45f38393d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d769ca-5239-4315-b6e6-24973df94612",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e47522-06f8-4daf-a686-ee304c708a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "274143a7-ea7c-4511-b908-bc67c9da2659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26d3092-ce3a-417c-b7cf-da98422961b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b77b4f0-a8e1-40fb-a07f-3b3fb42f21fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1605ab2e-5e49-40fb-af6e-d453b01c0ba5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb5108a-c74f-4bda-aad5-9d56e64dae3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "684a707b-4c06-4c86-b4b1-ebc10ac10369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1d0a2a-239f-4a62-bf05-283b46842e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3d9e38-e7f4-4fdd-83d3-c9981482880f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7ffb00-940d-4d8a-be8a-59043aad339a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6876bce-e2ae-45b6-bf91-fdb203e28398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ad6fb2-2add-46eb-ae18-df2bababa843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e0c8a3-3748-46eb-96f2-5b4b4000d51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5880d6ac-79a4-4e06-8238-d322a7db94a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b447e106-6765-4534-bb9a-e5d7a8283514",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89f07e1-2020-47d3-a1b3-4b16b66cf37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a387803-59c3-49b6-8135-e0e02cdf6afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0922b37f-5120-49f5-973f-de4ab27ff1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c84872-14bc-4f42-8ac4-9fb3b22f5982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06cca0d-ebf4-488f-83da-78261af46b24",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddecb8e0-72a4-456e-ba5d-642bc26a4e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a4efd1-067c-4759-9b19-d400966b4e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418a32cf-9fab-4278-928a-30889c63bc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e5f723-e94f-4601-8a9f-93277adc77ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ba8e3b-4fba-40d1-8dfb-14d071942046",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b316b2b-f437-42a9-82e0-f11137839c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251324bb-a8f0-466c-801c-a5793287ebb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b07317-36d7-40d5-92fe-ee1d298f58f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de93f35-8f43-4e6d-89c4-f251e16b5dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae85ff6-d934-4b22-a9e4-322427a6492b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf850735-e120-49e5-b377-3799bee15a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f7d965-e9b1-4f7b-8086-6c8cdfdfad38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af20f1d6-4ee6-4ebc-b122-e850d53c876c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc42925-2e2c-4956-b47f-5290e147ca0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487c5af7-22a3-41dc-9bc1-7301a21a2938",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b118ba77-15cc-4faf-9ad0-b0bf6fafa242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd386b69-14c0-4de9-aaa1-71f719a0540c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63908931-53e3-4e4f-b4e6-5ce32737b7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8780a6-6ef2-439d-8a2b-1eaff970bf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef111060-34c4-46c9-a6d6-bf8e5ee66c54",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c41d02-968b-427d-b7d7-09f2aafb978b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ee8e5e-7b29-4b20-bc74-7efc4ef15783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab7ce24-d695-4ceb-8e8d-cb96c6435f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9de57f-c9a7-4006-b254-54c8cf7b6add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727568ac-f77d-484f-91bd-2036f5c2078f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52310844-aa5e-4abd-9dae-ab43d9ce4bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff59a25-89cf-4c91-b15f-a2396e765208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "564fae66-7d2f-4eec-80a1-0e283e0a42e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b071a1d9-c82e-4490-87f7-79c1fca9fd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa70f24-d916-4b87-a00b-5afb95053520",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c029810a-ceaa-4079-81d6-ac4ed614badd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae515517-0a07-4b87-9418-2be2ec52cfca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e89095-d2e9-4271-9593-eb0d3a993ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7c40af-a7a6-449c-bf3f-34b649a54cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ec4701-4e1a-49c5-9b40-b7123f82a775",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47ab7a3-5695-487f-b91b-404488e4e3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00d4740-408b-484c-bcec-75246ec11932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e8b587-1397-425f-9571-390a22462935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22afc43-6c47-42de-89ed-afc164c51ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00245f2-99bc-46df-88fc-488ba9030ad5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78b6b71-0327-4014-9649-53ac50e4b817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dadfd38e-58af-400f-8f42-7ef8159c241a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c79a617-830b-4634-a581-6a125a254dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bff75bc-0ffd-4654-bb53-3acec9c68e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36b8bdd-423f-474b-b54f-00dfa5cfecb4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c30ef5c-2782-4d34-88d6-ee0b6a823332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44862704-f3ca-4c8c-9076-01d77dc706a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c71db6-282f-41cb-855d-4c4a20ccb59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9807b4-7c15-4979-a7b8-63b62200e96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61477a8-44e3-428e-b67f-44ecc230697f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae28532-a513-4367-8a75-4c0f1734263e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6a4151-5f22-4fa2-95e8-3afa04598133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cc8117-7c42-404d-9506-0e002d36b6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef289619-0a1e-456b-b5c9-90893c78ce68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3919990f-8cbe-4e74-97f0-2bdd96caebbf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c25da9e-8157-4abd-9405-43d09a89d194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d12f96-7965-4e78-889b-3dbafe3956ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d880ce-3fd5-4b01-8aef-113c04996ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6871f418-c25f-44d2-b122-0499aaf8d0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15c494a-3863-41f9-8cc1-f7bf8ac400a8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b7fd23-10b0-43df-bad4-ac4ed0665e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b3a797-4e6c-4f54-a5ad-e42e861e8853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b6d568-00f9-40b2-9479-6c81bd16181e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b725fdd-0f20-45df-b370-6f3a226d7c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11886740-a92b-4596-b134-fca241adb495",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0195030-d7dc-434d-8a8f-f636f43ea44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29080f7a-ee91-4e8a-9cf8-eab3639dbb01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bae886-16dc-43f5-a7bf-975e973c48c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee562ca-fcf4-4e2d-9526-96f2f3fb5661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e5300f-b65e-4389-8848-30f6e49d1a82",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a965d5-a72e-436c-b5b6-ad813e84f9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8041024c-17e9-48d3-8bb7-05dbe5b64525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9116c8d2-874e-42c5-9d69-d443506b925b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a1b685-8d5e-4348-b0df-61ddbdd6e244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dded8da-fc43-4257-bf99-813aa03d9529",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997564ce-3e90-4165-8da7-25e35bf7d7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ddc67d-2d44-4581-95d3-8fb2612c227c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a15095-e5b3-4a7f-9cbf-1adcbe0fa935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82820388-89a0-4612-ac9c-f9ec094e5f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ba8491-8d7e-4f7f-9f5a-c535504d3f0c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772381d2-ac14-4fb0-a497-60ceb06abd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75de88b2-e6b5-42ff-85d9-c2d97ee32bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce72fe9-8370-4cef-86e5-613dd0ce0559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ea0883-93b6-441b-9fc7-425b6082dba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be3b0e1-d48a-45dd-bd55-5f63c9af92be",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfefa3e-887d-4d93-97e3-6e3ebe9353e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6167e586-0dd0-48cb-8354-3fd55c22e861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74210dbb-43f1-4514-a37e-fa2ea46a8be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa043ba3-5e3a-4e20-b312-503d1bf9152c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e906718-f46f-4e66-9141-8c53df83242a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314ba5ee-16c5-4216-ad3c-48c338c89db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bff0504-9668-4054-9fd2-d16572aeec61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f5d2ca-6ac1-400e-bf4f-13fa677c464c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d95a5e-ff05-497f-a459-bc879244272c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2cfbcd-139b-4672-9096-594ab3bf8029",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8246e6-3249-48da-aa1d-8177c42f2a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d026444-7675-4ebf-b957-9b6e10ff0cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee257d2-d22e-4627-8e45-5a0bdb73ecc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19bc36b-5404-4e20-8b3f-f50e98a3fc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92228aff-e30f-408f-a940-1227a9b95ed1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7ff3ca-cef2-4878-882a-dcc6bd19c2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c941f4c-de79-4f42-aae7-86a4b4cb431d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91be6e5d-6ea0-4633-907b-7df8d8edf128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d977fd51-2a63-4c6d-93d2-7497c787d09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b46082-0f69-4910-b48e-fdbe5c60f787",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddfccc3-823b-490b-9b56-f74467c193c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9b72d8-581d-4f4d-a550-348c8c5cabb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ca11db-be36-44a5-aab2-a6d8f9434b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5035c9d3-650a-4c70-9ac1-e506857192d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b15acf-0808-47b3-acb3-e3c6dca636bf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f5fea5-040b-478c-9c03-9ae974863302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa852a9-7dd8-4fad-9c0a-cf9462163fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc48341-9584-437d-a319-9f0770027742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20f3a9a-61b3-4950-ae15-798aa5c4983b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b846a7-54dc-412f-922d-c99a0a13cb96",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc793b4-58d5-4f04-b819-690dfdbb0fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9743bc59-ff58-48b9-a3eb-9228abc3cecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51041649-9114-4ee0-b336-146e8a13c576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f94922-749f-4e82-9b75-367614cb6852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a59db7-34f7-49cc-823a-de4872294754",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4b4557-e89a-4f9c-ad2a-5be2d35e8994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc45b47f-a5a8-4339-9fb7-e58b98ba09ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce1a395-f5bc-4e5f-9239-f81787174bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c02768-396c-450d-8705-353c161fbf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307018ad-951f-4075-bf88-cbb7d4ff9478",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0069ec54-bf6b-4266-bd2c-04d03376492d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a066d234-3e3f-494b-8a20-10f5367aa341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f369ba-376b-4194-9797-0d1c8a0e349e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd893b7-3d19-4e53-8839-987a824960bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ce91e5-75f0-4990-8c07-96220e1389b7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28837996-8e56-44ba-b265-5c1cd69d2164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995add2b-7670-48a7-825b-edddddbb708c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4f5324-3193-419b-912f-0add6c987327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6fda1cf-b1ef-4921-a9e6-7e24b96773d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994932e9-f55e-4f9b-a470-4a1f9debcf3c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86a69e1-8cb1-474d-83aa-702d742f5715",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eec78f89-322d-4208-a0fa-e0ba553a3ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899e3a08-d2bf-42c2-b326-bbab977b8f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee463588-521d-40f9-9fdc-f94542dacf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40ee6db-2ec2-4117-8210-df8a66244d39",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b202894c-d796-481f-8fcf-760d87d23693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb4882ee-9391-4696-bac6-de88f1401a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a5affa-190f-4c32-8520-e279ee0fa15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c692da4-1944-413c-8a5b-3c1d83d8f431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea567283-dc8b-491b-a023-f81d44b3edcf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb758ce8-1d16-4704-9dcd-cb79b6f9ca22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f998549-4185-48a2-b2e2-0fa39c194c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e412e2-e1d8-48c2-a391-31e9d53fd448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d521db36-cec2-4435-9ea0-34b0cde2ac18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd56a828-8fe9-402b-905b-c1ba7997d350",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e90cc31-f4d2-46c4-80b3-966ea5dca721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ffe84b-679c-483e-9cd6-92fdd9a590ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0e0abf-2190-40d2-a59e-de7d8ee5fc09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3b6728-e52d-4308-95d2-62e892c0f21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1304b1d8-4d50-4d0f-a610-28dcd9920605",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614e691b-91d9-42fd-91a8-84123e54c09e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adbc5917-866c-4493-81ea-311148224553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e53f693-bfd1-4580-971a-96fb16698197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d83ab32-a13d-423a-ae6f-a007d0d34d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cf6475-4196-4123-871f-0f5c920c0a28",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c660ad-b3fc-4fe0-9078-651a6c02d43a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc7958e6-23f7-4416-855e-ba0b19d43882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e56764b-d06b-4522-b2d5-5838dbf4cba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a54c89-6b47-4cdd-9683-e9676b32de69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896dc81c-8dff-4865-a7d5-2107a9639536",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed228c8d-7831-4ee4-9984-b5c492b22d50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2af27b7-6375-45d3-bd21-ac765c9bd450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efa5743-d0b1-4be3-bd6d-e85949cad457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a17d27-d69a-4292-bdd3-2d140ddc7069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc626482-be3f-492e-8c48-3c1b859bf917",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ba1639-94c4-4793-a153-2599ec42f07e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214a60c7-ea91-4706-99ea-539a2e4215b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f8c773-5f08-4263-8839-b72361c503de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420cea29-0b84-4f96-9176-e465fb4fb728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c33f361-e90a-4731-985e-9893edd0cb58",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e0948d-efc2-4cc7-86ab-8d255917899b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a708f4-b55d-4c3b-9741-850222866485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7dd9b5-50a0-45e1-a35b-230b339bdff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583865d4-ad68-4600-adc4-fb279318701e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f8b75c-a7dd-4d05-908d-546f5a8d2495",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3863517-7237-46fb-9bb3-1778b94f7689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68cc6e1e-c02d-4c0a-b8fd-ef9353ae796f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20639cf2-dbe3-4a2c-8271-44b736712e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e80528-5102-44e2-b520-78b20c00fb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1cec3f-b0e9-407a-8da1-b93f8baf9072",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dc67dc-9473-4954-89d5-eb0a0399cb16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8baf47ee-0aa1-4579-88ba-e78764072953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342b1ca7-3d43-43a8-a72d-7713b0f4a9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21976f8c-1a91-4915-b383-39ac320d16e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bf8ef2-ccd2-41d7-8f50-1704f8e3ab21",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001a24a3-8e6e-4ed6-8dc4-b0ae6511ae2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c756269-cb16-4762-88ae-cc8e755ffa59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46304c75-c531-467b-a712-f16b99389da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60d6fe9-0f05-4ed7-b46a-d29dce13b32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc724e39-b264-4fa0-be79-3249f0da985a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca27ff90-4201-49eb-b357-db1a33081793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449003ad-be0d-4122-aace-a39a95ef6035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d815090a-393f-49c2-92f4-f0b124cc33e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e360ef84-214f-4d56-9eb4-ccccd3557490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dba507-21c4-4cc8-aa6c-f78fbe3b70c2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bcdb2c-1bd4-4fbf-8a1b-a0068e962521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21cf1deb-147b-48e3-ac74-87b2f77712a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95463e77-d891-45c8-b892-217f26e57a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c21e22-29cf-4d4e-80ea-a85a6023a790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e55f69-ec1a-43be-9f0a-45050e34e6f4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8233a7-d452-4359-b2b1-a30fade9efd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "575cb077-000d-4d12-a84c-fd32d68ccbae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a50e3f-2190-4ed7-9236-61560057ac60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f261cf-0319-4760-b75a-4093f6b92fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573cdb78-7c30-4c66-ab58-df2e4f25ef59",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc704cc-3add-4527-b294-8db70806d00e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c956b67f-0a33-4e2b-9bfc-47d3973222e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbbb8c8-4185-4e1f-a3e2-40d391ba2dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e925933-6bc7-46d4-aa2c-18f5369d293b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188699b9-ba5a-45ed-814a-99c741a828bf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe7b76b-5388-4921-bbed-cd6076a1e02f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0780871e-1785-4a86-b15b-00d76d71dd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8e8fe3-9c32-41f5-b689-1b312e169ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12746e3-caeb-48b2-89c5-c0853874a2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d414a6c3-86b4-4d8e-a288-b160ebbc7a1e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831048f4-0684-4593-9f22-936cd967dc17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "775f8fb2-ed1c-4dac-ad10-81d2c1737dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8475969d-092b-456e-ad03-d292553fd6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f7e8b5-732f-4797-b7ac-b55be6105784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9b0182-4997-4a95-bb98-3ea7c843f7d2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee0bcb4-f8a4-4caa-86a6-dee8513abca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b9c8e5-a7bd-4ea0-ab2c-56e8dd1dc36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6461436f-d028-45f1-b644-d19a7e19bd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11585705-a2d1-4057-85ce-d4430eea664f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b4b900-a5c2-498b-98d4-18a28316f9be",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79aad831-de65-4b5d-a062-8502a4a7e9c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "093fb9f5-be33-4460-850d-1a496da80db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcd609c-58fc-4878-a7f4-86753b052416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9036f6b-6705-4246-8ed8-73134d5a7538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a98a324-c752-45ee-b8ec-e7f9ed47b59a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fe9679-0cc9-4895-973d-a06e8d818658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e86d2664-60f3-471e-aca9-bc413668baa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613860a6-c50b-4c48-9f73-dbb9a39a5756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3141d18-a567-4418-ae53-f895e1e01e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfdb7e1-fbd2-4fcb-a108-926362ab2be3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8a5304-2da4-4007-9c0f-204c73ccfe09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0311e642-6096-4a17-9200-edbeac1856d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5950f1fc-2c0b-4f3b-8d31-02148dcc0796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3765509-a290-431c-a186-32f96330873b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbe62f0-1be7-4ee7-ab7e-dbf7a76fa3ae",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83fd63e-f680-4810-b19b-85524f5838c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d10e5f2c-b9e7-4745-82cd-e799d3e82d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc86cb5-c268-4d97-a164-c377055a2728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a91a600-e5f2-44df-804d-4e464e0ea89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2badd02b-c3c3-4964-95aa-911a7763389d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7b0bb9-a85c-4427-9f74-631c49185af2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "179f7868-7879-405b-843d-aa92a0e56719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97850b6-1de8-4399-abb0-f879c11722f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2beb7b65-b77b-4ce2-9563-02ca8c0c7070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f045c644-f7bd-4e3a-8458-20d0f0e26b38",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f6bfd7-2e3c-48fe-b2cf-7953a3bff3f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7d92702-6f8c-47d7-9f44-1296a1cb707e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e7cde3-7453-40f8-ad04-66d9df951769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9be0af-de44-434e-a062-0f654d158c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32807b06-f4fe-429c-99c4-01e546123ff2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684bb0df-15f6-4ad2-830c-99306c06f4c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d92c4b4b-35c7-4cca-beef-31260ff67f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f398aca1-0000-4b41-b70b-e881ef6ffa4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e35013-4291-4073-bd21-15952ba6d22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93afc8df-44b6-442f-bcd1-6d809a3fccc6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77cd6de-b555-4cc6-b06c-8c42bc6b966a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8fbce0-3cef-43e0-920a-b399a2cd4b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bf13fc-01df-4e09-a629-ffd0323de210",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf6d637-a154-47ee-867d-866feecf64c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391ec475-9473-4aa8-9e7f-c294ad2bbac5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7dc43c-755a-4c50-bde0-12a04b5cb86d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b45feec-4eca-4226-a3d9-ac97af08a513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c93b75f-4afc-45ed-ac54-f817c14e48a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3a9120-dd2a-47d2-996d-623aaf263065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60305583-758f-47c9-99b9-efc4857ba1c7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4d334b-50cf-449a-9b56-62b7ef1ecd51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "525b12fa-8577-4f9f-854c-23a57b00fdd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4335bba2-fcbe-4650-bc93-1a6de3f77047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048a337d-eb7d-4f75-a9f7-cb310ae6b9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d12fdb4-f964-4ebc-a96e-cff13ea6bcf6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f289fa7-0e85-492f-86a1-c59273078b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "291b1c60-534d-4f2b-ab81-2f75f12d3de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218be5db-8ec8-4834-ab4d-35f63095ecda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a462a2f-72e4-45a8-801b-ec5018ae5ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb90661-842c-4f78-9ca8-4d022bef4957",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c01af8-33b3-41d8-a39a-ac0f67a78adc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "779cf754-a12a-4ee4-b8b1-e8dd8c133b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dd62e9-fcbf-453e-97e7-9b8f61c4d725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97713451-819c-4d59-b1db-26f3315ad0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b986e54-2a96-4c7f-9e55-0ad3ef87a13f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca2d45f-daa4-4189-a253-a2b9ae73c8df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dbce017-b821-49ef-a3d8-706fadf2f7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e9189f-ad8a-48d5-86bb-0f654d26638a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145803a0-850b-4762-b21b-559eece8feb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5652222e-4b68-441c-b61a-ea5e03056722",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ae21a4-5c4b-4576-ad3c-e06c6c5eea74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad5030e1-587c-4b31-b8fb-4a7e2a2e4ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3610fa3-9fe1-46fa-b7bf-1cc04cc29d95",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f860bd-89fd-4d6c-a308-374049a9189b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2990ac-8277-4923-a8c2-aeea963d9800",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755ba675-8b07-4c60-808e-68892a22b27a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c39aff85-4230-434f-9553-e90524e2d764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9872ee87-f343-4fdf-bf73-2ead6475b2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab8a80f-c10c-425a-aa1d-a3ff6922406a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5567ade-af0a-4548-aa42-a1c80594f0fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eeb396b8-5f0b-4fd2-b6bb-eeb599e08c4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62439bfd-a2f0-4e39-aec6-506f1260f3d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f554ca2-2a1f-4e89-874d-472d612065b3"
                    }
                  }
                ]
              },
              {
                "id": "4c44501c-c97a-4cbc-b07c-ce8c4cb415a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1261b296-fd25-4d7e-86e9-87e8ffe09fc4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774bd3cf-2cb3-43a1-949c-4c5aaed82c0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "21751648-f9dd-4076-9614-df90df0df79e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802d123b-4706-443f-85b9-91888966b1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83d4090b-dd4f-4847-9367-e8f76c8e0eb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d70d57f-e59a-4172-bd28-040d83d56b35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e28d1004-877a-433b-b110-e86a7d880c98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ff8e6be-36fe-4847-a168-9a8936d57c35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8271fa3d-6810-4706-834a-8d5f73f61c20"
                    }
                  }
                ]
              },
              {
                "id": "1d46c0be-7e7c-4aeb-b607-1fa23787ddeb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4fe05fc2-dd2e-421d-87e1-dc6ef4217d6d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd7e4a3-e2b9-4727-b98a-00ed2c55061e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b4e0856b-b166-4a08-9605-e20a86d94c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fbeaf0-f7ad-4ab4-9873-4050f8518da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370ec225-7d3a-4d00-9886-b63dd074ac84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e57e679d-1de8-44f4-a8c9-37295791e524",
            "name": "Positive Testing",
            "item": [
              {
                "id": "833c4938-1500-45e7-a09d-db009b2648db",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f631c1c-7cb0-4878-91a1-93698f2c84b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "686ad6af-16b5-49d8-a224-a3801101a9b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a625f2a8-fcfe-4f52-948e-9d20c9fd2aba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e57a786-9262-4999-a500-540caab16af4"
                    }
                  }
                ]
              },
              {
                "id": "52b01524-cd82-42a9-b389-a7308ec1c3c7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa36447b-2a2a-41cb-b9b4-113e56eb584d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "792521c6-40a6-43b0-ac27-77ea64b064d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "395675e5-9652-4ee0-9f16-4e27a01e5ee6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e913c89e-b003-4a49-a5cd-ff46c09788c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94666be7-95c8-4e56-a96c-8516194aacc2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "20f4827f-6258-4ed6-a66b-0570680c7298"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "897ae80e-4588-40bd-a898-be887c41b96e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "687e6f5b-6319-4305-8818-6278c8eff94e"
            }
          }
        ]
      },
      {
        "id": "54d1537e-7226-43b7-adc8-0c30f4e58383",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e016e24f-a1d9-4d9c-bd47-9f0be33c6976",
            "name": "Negative Testing",
            "item": [
              {
                "id": "455fb7ac-28ff-4d3e-be85-065e98c8bb2d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88a1cc1c-351e-4841-99aa-b4ebc42167a7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b255d10-3fa0-47e3-8549-9887b3be9ee7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c4d8316d-1512-4e76-9490-6a10da7be273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2b3b5e-7ca9-415d-a268-33513fe2df4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da93fb32-a2dc-4a0c-89a6-d65b2ab8b4fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5598ee74-16d6-4283-b302-b2b480804bbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25b6475d-6b90-40be-978a-638eec4f3e2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3d49fd2-ff21-4f0e-94f3-5620080e1286",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d572f37-2bab-4c93-88f2-fc72a3706f78"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87108107-6f3f-44d3-8878-8a408886ac6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bf350cbf-d793-453a-8c99-d154d1533ec1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8186210a-0a8b-4eab-9896-4b4f5a47c29c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3841acec-0df4-436c-a13d-dccab92ea897"
            }
          }
        ]
      },
      {
        "id": "e553e0b1-236c-487f-8272-3b4f8d1c675b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "607f8358-2e38-4960-aab3-07e59ca2f627",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1ba135b-155c-4e4e-8592-25fee73cb731",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a825f04-f06f-4044-b8c4-b7ee18b7567c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc31069c-502c-468c-adf5-9ab1689a34db",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81c89c77-a15d-48a1-92bc-ae6df9693b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c2e18e-c165-48ea-812d-7ae29f194c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8168bdab-f8e3-4cf7-861e-42c80124d021"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0764ab39-14f0-417e-91f6-e4f88776155b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d38b1910-bd15-4c89-b0d1-f9d04e7b93bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd35e483-1de0-47d1-96b7-a20ea3aff130",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79ada203-fde3-4242-b3df-5907e2e699ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b4bc3e1-0488-4863-b81b-86eb157bf533",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4390ad4a-3859-43c8-96cc-1a393b12b75b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "063f62b6-2a27-4151-95dc-ad7516ef5ccc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20a8ad9d-1c12-470a-b251-3b77ba4d8b28"
            }
          }
        ]
      },
      {
        "id": "eab256d7-173a-4d33-bdbe-d6989a790775",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7981b2df-4166-42a7-881e-2c93aca3de8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65c94d57-b6ce-4aad-ad91-9f820b012121",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad7358f1-6806-4ea6-b7f8-272e4dfc59ea",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5d6ebb-a068-4211-af5b-fc49082d4468",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31f5ea59-0a93-440c-b6f4-fc7f221508aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ad08e8-b0d0-49c4-905f-88a478c46454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39422431-78c5-4a3b-b691-948972d0f137"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32734389-ad89-44ea-a1cc-34c0e52479c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd295eeb-3a08-45bb-8c22-df1e6982f47c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db39d3a1-f44a-4e3e-b242-21720ffa5e41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42a5605f-66ca-4732-b368-90247d8ebda4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fbbf648-1fde-4ec5-adf9-16d87f10015a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "806d2fc7-69f8-4a31-941c-6dd0d8adbbc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4c6454e-2e77-4a24-9d4f-8620dc803748",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f057e62-3db5-4002-b206-51d1b08d53b8"
            }
          }
        ]
      },
      {
        "id": "79b7c0c4-cd1a-4406-846f-d52a8925b3e6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc719f63-10a0-4660-9576-5d7dbaf0d66f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9249e4b-74e7-4a40-8a7d-7f9d7a9abf04",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b264252a-d4a1-4bb8-b77b-caa8d216dbf4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca2a99f9-3ec9-4166-a464-119dc64f8e60",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "919fb2f2-e177-4783-a76f-0d402dfa4f54",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 246.5387323943662,
      "responseMin": 6,
      "responseMax": 7836,
      "responseSd": 910.303324648436,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689813695172,
      "completed": 1689813776772
    },
    "executions": [
      {
        "id": "1e0c66bd-ac1c-4265-b880-c2159019ef64",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7ef7ad8b-6fa1-4eb7-a09b-94014df6afef",
          "httpRequestId": "010e26fb-0298-4716-9278-c562d0f306e0"
        },
        "item": {
          "id": "1e0c66bd-ac1c-4265-b880-c2159019ef64",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "99ac827b-ac95-433b-ae65-946244a12564",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "3d768801-777c-413d-bc27-e667ddcee6c1",
        "cursor": {
          "ref": "c2b3fc52-be5a-475b-9124-e1c40cc2f898",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7b8a25e4-3e0e-4dce-b4fc-a7fd3e2767fb"
        },
        "item": {
          "id": "3d768801-777c-413d-bc27-e667ddcee6c1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1c8512fb-cb71-4801-9d0c-4729890fb4eb",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "0a16b170-b186-4411-ad02-3755c4fa3196",
        "cursor": {
          "ref": "12853f0d-aad4-44ac-82c0-3e0c567fc7d2",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a07daef9-0ed4-4e48-bbe4-a67d7745e117"
        },
        "item": {
          "id": "0a16b170-b186-4411-ad02-3755c4fa3196",
          "name": "did_json"
        },
        "response": {
          "id": "9e06f92e-0503-4249-864f-2dd35ef66655",
          "status": "OK",
          "code": 200,
          "responseTime": 623,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7117418-9370-4e7b-9506-16cdbee538e6",
        "cursor": {
          "ref": "4a7bff9e-4e55-4055-922f-8dca52a4a303",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3d337dd6-653d-4da0-ae03-6dd532b7976a"
        },
        "item": {
          "id": "a7117418-9370-4e7b-9506-16cdbee538e6",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a2a08de-4dfe-4480-bf00-66fc004f8c57",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1205,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7117418-9370-4e7b-9506-16cdbee538e6",
        "cursor": {
          "ref": "4a7bff9e-4e55-4055-922f-8dca52a4a303",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3d337dd6-653d-4da0-ae03-6dd532b7976a"
        },
        "item": {
          "id": "a7117418-9370-4e7b-9506-16cdbee538e6",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a2a08de-4dfe-4480-bf00-66fc004f8c57",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1205,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22c1d96-fb08-4635-97b0-8377eb251562",
        "cursor": {
          "ref": "61cb0a05-8db6-4979-86f6-e5ae48d2f08d",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "42fd0c61-e1fe-477f-a90b-b5524da02edb"
        },
        "item": {
          "id": "b22c1d96-fb08-4635-97b0-8377eb251562",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "153c918f-1abd-4fc8-819a-1a76da0d31cf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6fad20-0302-4120-8b4f-d80eecdb4d8b",
        "cursor": {
          "ref": "7d8ac0f0-8921-4aea-b3a1-a2fd757dc425",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a798271c-ddb7-477e-b82e-922bd74b4822"
        },
        "item": {
          "id": "9c6fad20-0302-4120-8b4f-d80eecdb4d8b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cd0d0244-aae6-402d-a609-66822081bd4c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269b26e4-9cdd-4c44-8a5e-425d3970de3d",
        "cursor": {
          "ref": "de6ba00c-850b-4406-ba25-84751f6e3c35",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1612c226-de43-4e19-8326-dfd2ed9f21fd"
        },
        "item": {
          "id": "269b26e4-9cdd-4c44-8a5e-425d3970de3d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "22b3bb1a-df15-4645-9ac3-f390d8994135",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed35a65-127e-4dea-982e-5fec5b89de58",
        "cursor": {
          "ref": "e52fcd64-57f1-4a66-afec-0fc83a062cee",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d8c6fe74-3b3d-4e76-9b33-aefc6a2b3ac9"
        },
        "item": {
          "id": "8ed35a65-127e-4dea-982e-5fec5b89de58",
          "name": "identifiers"
        },
        "response": {
          "id": "bfa2a966-37be-4660-be8d-05e39ead191d",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc3aa36-8c0a-47f5-ae8c-6df626a36a34",
        "cursor": {
          "ref": "35839879-17d9-42fb-9963-a28310138628",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e9b9ffdb-3b45-4172-bace-8a083935057d"
        },
        "item": {
          "id": "4cc3aa36-8c0a-47f5-ae8c-6df626a36a34",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "34377115-d80f-4cdf-a1a0-a044fb889977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05d4071-fd42-4b85-8b5c-e0223007f934",
        "cursor": {
          "ref": "c61f6439-4d36-4920-934b-e6b9378d8ec6",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0dfe4372-6dd5-4d55-861e-24b72e31346b"
        },
        "item": {
          "id": "f05d4071-fd42-4b85-8b5c-e0223007f934",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7a149106-73ed-4d11-8e83-a27de77984fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a82898-eabf-46ae-a870-6abf243239e4",
        "cursor": {
          "ref": "c4b79b57-f5bc-4434-8920-dd5cd5ab0989",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a7d4cc9a-2816-4ae2-812d-b066ad900263"
        },
        "item": {
          "id": "b4a82898-eabf-46ae-a870-6abf243239e4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "13640a9f-4c32-4500-adb2-a7892ffc5fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fbc545-16bf-4117-8073-328cb81e316a",
        "cursor": {
          "ref": "591444be-0f1b-4644-b95b-b89b61b4a67e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "181020c8-9c87-40f6-97b4-a73fcb38813b"
        },
        "item": {
          "id": "a5fbc545-16bf-4117-8073-328cb81e316a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3b9fa5b3-6441-4f51-992e-d3317367a3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13967b96-7472-4d93-b312-a25f0787e7d8",
        "cursor": {
          "ref": "57657ee0-3d87-4ceb-87a3-3ba07cc27b24",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ea3936c2-7a2a-40f8-b3b4-3f7db44c257a"
        },
        "item": {
          "id": "13967b96-7472-4d93-b312-a25f0787e7d8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1279dd2b-324e-4097-b175-77d225c8a007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f79abd-60b1-4646-a464-00068a5baeea",
        "cursor": {
          "ref": "0ca72d99-d64f-41a7-be7a-7b9ba3dc5110",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "175472db-4a7f-4486-b308-ad323bca6b2f"
        },
        "item": {
          "id": "b7f79abd-60b1-4646-a464-00068a5baeea",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e5287511-5437-4187-9133-0db31f6fcd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62152a5a-33d5-42f0-8c78-fc895da96ad8",
        "cursor": {
          "ref": "a613f9fc-a737-4851-915a-48a3ad896097",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8717bee5-eaa9-487e-8607-32a20e8bfec2"
        },
        "item": {
          "id": "62152a5a-33d5-42f0-8c78-fc895da96ad8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4b46543d-db84-414a-8003-79700e9736b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6fc7a4-3911-44b7-a736-158bd50612c7",
        "cursor": {
          "ref": "4df3194c-ab52-42d0-98e0-bda9ecad8e1c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8bf5a67b-9852-4a8c-b2aa-7eec5313c079"
        },
        "item": {
          "id": "ca6fc7a4-3911-44b7-a736-158bd50612c7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a8e05c58-c6c9-4fa6-a481-7b93a759ff19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b3a796-9661-4ced-bd8f-06a90719924a",
        "cursor": {
          "ref": "bf47f510-dc76-403a-b812-76561434eca3",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5b9f93e3-ba33-4372-963a-cbc29744cb85"
        },
        "item": {
          "id": "f4b3a796-9661-4ced-bd8f-06a90719924a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "369673b6-736d-43c9-967b-984bd5df0946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b282f6-70eb-4e0d-916b-a8c05fb96613",
        "cursor": {
          "ref": "02dbdbd2-56b2-4747-b101-f007663fe17a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "184ecb10-89de-43ca-ad7f-8d6fca17d439"
        },
        "item": {
          "id": "b7b282f6-70eb-4e0d-916b-a8c05fb96613",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e47af8d4-72ad-419d-b412-7cd30fb6a350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7756b09-3e21-48ed-9bff-bd67800a79d1",
        "cursor": {
          "ref": "8f61cb8c-9668-4430-9c53-403b1a113a7e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f8d0c2f5-3839-45e4-86d3-e6bb8901f4dc"
        },
        "item": {
          "id": "b7756b09-3e21-48ed-9bff-bd67800a79d1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b8bccece-7c97-403d-b567-bf6e1833979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d983e0d7-d6d9-4462-99dc-60cb9c6471f4",
        "cursor": {
          "ref": "d065efe4-dcc1-4d9b-88ae-98fb70a590e0",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "aecaba5e-423c-4410-9468-bc105ba59e62"
        },
        "item": {
          "id": "d983e0d7-d6d9-4462-99dc-60cb9c6471f4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9632ff17-a2b8-4270-9de0-f17c0c37f6b2",
          "status": "Created",
          "code": 201,
          "responseTime": 783,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "15c9b1ad-8403-4bf5-b9db-a452d149bb79",
        "cursor": {
          "ref": "4ce2d682-ed00-456b-beb2-b0f3e12d7abd",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "02e235f8-19bc-4199-a856-67d194efa78c"
        },
        "item": {
          "id": "15c9b1ad-8403-4bf5-b9db-a452d149bb79",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a3cd831b-d662-4ab5-b970-b0154c4fb2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3364df-c116-4288-b413-4bd7ff580993",
        "cursor": {
          "ref": "7d076389-d832-4b04-9229-7841d197ee0a",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f089a450-1f0e-43e6-bce9-7b4e3daa10bd"
        },
        "item": {
          "id": "0c3364df-c116-4288-b413-4bd7ff580993",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fdcd6cf7-659d-48e3-acc3-2d7fd5b9f4b4",
          "status": "Created",
          "code": 201,
          "responseTime": 6191,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "3db23ca8-6edf-49fe-af74-92a123bfe954",
        "cursor": {
          "ref": "20472473-0565-45ea-a028-db2c487d7607",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8fd29f77-d557-44c7-a494-b810fc37a3ce"
        },
        "item": {
          "id": "3db23ca8-6edf-49fe-af74-92a123bfe954",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "847adea9-be6d-48b5-8883-75ecff2d2cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f0269c-929c-4321-8ecf-58a8e37bbedc",
        "cursor": {
          "ref": "ba16a5ab-669c-4261-b286-b5e30d3fcab3",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a52353e2-3117-486f-8217-80cc17178150"
        },
        "item": {
          "id": "e3f0269c-929c-4321-8ecf-58a8e37bbedc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6d46da9d-6865-4ce7-b277-68a7f1835908",
          "status": "Created",
          "code": 201,
          "responseTime": 3690,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "b36ee922-ae6e-48fb-aa55-618792c5e5aa",
        "cursor": {
          "ref": "e50b7cbf-bdf8-4c40-881a-b3d0980e4f0f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ca6147b2-be89-4db0-b6cb-c8cda56a06f4"
        },
        "item": {
          "id": "b36ee922-ae6e-48fb-aa55-618792c5e5aa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "afd10193-472d-44a1-953c-c9aae956fe54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082b8a77-a7df-4629-a992-dd6df49af7a8",
        "cursor": {
          "ref": "926cdb2f-9afb-445d-8ed8-69b7f70da723",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "152e9700-9a46-4436-bf9e-2b11b99be03f"
        },
        "item": {
          "id": "082b8a77-a7df-4629-a992-dd6df49af7a8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5c17ceca-d55d-41a5-9373-97c67223496b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee68cc4-b1ef-4582-85ca-7c448d43db1a",
        "cursor": {
          "ref": "b2355d01-e0ea-484a-9eef-11e41eb59c32",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c4eb87f0-881f-4aff-bc8b-740e8434c1d6"
        },
        "item": {
          "id": "0ee68cc4-b1ef-4582-85ca-7c448d43db1a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d9814b3e-6700-49f7-921b-40b6ecca6353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f793be5-3f00-4782-9403-ed14f3449c3d",
        "cursor": {
          "ref": "f303d309-eefa-4752-8127-9dd910a23cac",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "24b526b3-6218-450c-9fae-3b12a16c1778"
        },
        "item": {
          "id": "5f793be5-3f00-4782-9403-ed14f3449c3d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "20c58b5c-c2ff-41b8-8f8c-2d5effaa0cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129dcd42-da0b-426a-be44-6becbb6a0054",
        "cursor": {
          "ref": "30373de1-43b3-4f3c-9dc7-722c15c88457",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "43e05e5f-994f-422a-81b1-01c6f49bdc38"
        },
        "item": {
          "id": "129dcd42-da0b-426a-be44-6becbb6a0054",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "357bc945-7cf6-436d-aff0-13895e1233e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323f4a53-d08f-4a42-b7ec-327f68e161a9",
        "cursor": {
          "ref": "61e127db-f785-47cf-9e72-97a396dd35b3",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f085b53d-ee6c-4a14-ab61-a045960ea4d2"
        },
        "item": {
          "id": "323f4a53-d08f-4a42-b7ec-327f68e161a9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2cd16fab-818c-4cd1-b811-2e74dacae0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359ba708-2ef9-42ae-afd3-9a06883b4b9c",
        "cursor": {
          "ref": "6767cce6-d4c6-4668-b90d-aa7b34baa71a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8d71a116-081e-4454-ad30-2d43e8c99723"
        },
        "item": {
          "id": "359ba708-2ef9-42ae-afd3-9a06883b4b9c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7d5a44ac-6619-49d0-bf07-9378443bc075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0bf6c2-0c77-40bc-a87a-b9f38985cc45",
        "cursor": {
          "ref": "2ca6d600-8d6d-41a0-b7f2-9053678f814a",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d96f8e9a-c57f-4efc-a763-10208f9bbb07"
        },
        "item": {
          "id": "cc0bf6c2-0c77-40bc-a87a-b9f38985cc45",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "59a70dc2-a8a4-4c23-96a3-342b244ddd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb214630-a59e-4968-afd1-9bee370409d2",
        "cursor": {
          "ref": "9828c48f-f395-43fa-8467-cadfe63c2435",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c8d1646d-bc1c-44b6-9394-49722e86b3d0"
        },
        "item": {
          "id": "fb214630-a59e-4968-afd1-9bee370409d2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6f08bb09-d336-464d-a877-005198ac1bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2217d95-cd97-4dd1-8e1e-a676d8b650dc",
        "cursor": {
          "ref": "597f7970-c5ae-41c1-9ca2-8019f5455d45",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b566dabf-b79f-43ab-98f0-712be7084fbf"
        },
        "item": {
          "id": "c2217d95-cd97-4dd1-8e1e-a676d8b650dc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "466b233f-9298-497a-a635-eaefe9b49776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29cc767-73b7-4a7b-8d46-edc0ea1be3e1",
        "cursor": {
          "ref": "7d75d74e-592c-4ae1-87e7-aab61b16b9d9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3456a14e-b631-4a12-8601-a0befdea51ab"
        },
        "item": {
          "id": "b29cc767-73b7-4a7b-8d46-edc0ea1be3e1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "be719a2f-7547-4abf-a53c-d34fa93f431a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b74be0-84f2-4c48-9740-4c575e7c100a",
        "cursor": {
          "ref": "cd5963f3-2dbb-4d18-93a9-ccea7e7b60bf",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dce9a9db-14ce-4efb-b7d1-7ce98337197a"
        },
        "item": {
          "id": "e6b74be0-84f2-4c48-9740-4c575e7c100a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "67f98bdf-54da-4d71-b14a-ef5aa4657211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d9559b-1b25-446c-8a46-09c599e01064",
        "cursor": {
          "ref": "4d31b286-3b62-4eff-b1c9-2fdda9ea9c3f",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e5129425-b27d-44c3-9d55-20abb340a436"
        },
        "item": {
          "id": "16d9559b-1b25-446c-8a46-09c599e01064",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d5351e1c-04a6-4eb6-9c08-720dcb76efc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467faf8b-3f2f-4e5c-b2b4-82533ed7e5d5",
        "cursor": {
          "ref": "fa23bf21-e734-4aba-a0cf-58ce4f969259",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cb839e32-9ea1-4377-8340-fe06e2d2b2a0"
        },
        "item": {
          "id": "467faf8b-3f2f-4e5c-b2b4-82533ed7e5d5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4c4213f5-28a7-4ff5-9f53-b8e277422cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec6eb23-41a4-4601-802b-a4c21b35abe8",
        "cursor": {
          "ref": "1b5d86ed-60a6-4cbf-ba26-0068a9709615",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "74764ea7-88c7-4222-8aa8-8c4d38b59eb6"
        },
        "item": {
          "id": "dec6eb23-41a4-4601-802b-a4c21b35abe8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d99ce679-fa40-4d9f-a402-4d91d9731c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e674923a-e2b2-4f88-8cba-c230ded40c06",
        "cursor": {
          "ref": "d64cde04-2334-48a8-8bdb-252fdb51b370",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "13bd9f95-d0d8-445c-9d19-21eee99ce754"
        },
        "item": {
          "id": "e674923a-e2b2-4f88-8cba-c230ded40c06",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2605886a-3055-48de-bfa3-83dc517ed94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b8ab24-4054-45a3-9d0e-6649b728175f",
        "cursor": {
          "ref": "4cba678e-8672-4b8f-b584-e6c41357e602",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fc4cb6b6-3dab-42b9-a231-47f23d1535c5"
        },
        "item": {
          "id": "02b8ab24-4054-45a3-9d0e-6649b728175f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7a7a1e75-98c9-49ea-b458-b9cf661a7dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba1ea76-3f29-4df6-8bf8-bb27e2d86c6a",
        "cursor": {
          "ref": "5d2c16f3-d6e8-4be0-bf4b-2f7f9dde3c05",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "57d82ada-1606-4293-bdcd-d08d94405c22"
        },
        "item": {
          "id": "8ba1ea76-3f29-4df6-8bf8-bb27e2d86c6a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7761fe43-95d2-41e0-9ac7-2c013b9f030a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733de92f-8cd1-472c-bd64-5a2118ea8cbb",
        "cursor": {
          "ref": "da28e12b-0a41-481a-86cf-ac95957dac92",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "358002de-cf77-44b3-bcde-6d0606adc2cd"
        },
        "item": {
          "id": "733de92f-8cd1-472c-bd64-5a2118ea8cbb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "67a9de6c-41dc-4546-b76e-b62a86b84e90",
          "status": "Created",
          "code": 201,
          "responseTime": 2774,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "c134a41b-9c02-4b21-ba16-2b3fd9ccfe98",
        "cursor": {
          "ref": "514466a2-24cf-42d8-8dc7-1f1d4552d460",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3cc22e23-e852-4f23-b302-ec607d75591d"
        },
        "item": {
          "id": "c134a41b-9c02-4b21-ba16-2b3fd9ccfe98",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2fe49d1c-d0a2-4c29-ae46-03025f52ba7f",
          "status": "Created",
          "code": 201,
          "responseTime": 2898,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "999537cf-c868-4d05-81e9-4f854ae16084",
        "cursor": {
          "ref": "328c7c54-e3fd-49b5-8021-b1bcd938c950",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8fbe16a1-931d-4e72-bf21-488284b9ce38"
        },
        "item": {
          "id": "999537cf-c868-4d05-81e9-4f854ae16084",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "21ac6127-b481-40ec-989e-4b60551eaf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2fbc89-4013-4ce4-98cf-6bd9194cdfa8",
        "cursor": {
          "ref": "7cecd264-37bd-4c09-be00-f7c9f0a3687a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3eb847cd-36ec-4037-8c85-4f3183639060"
        },
        "item": {
          "id": "6a2fbc89-4013-4ce4-98cf-6bd9194cdfa8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "af750efe-d08f-4a3b-9387-500724799352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f771a1-2357-4221-ad3b-296ccf167043",
        "cursor": {
          "ref": "84b24ac9-d17c-4ae9-8b2a-73103d872946",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cd7ea3a4-0354-4f55-932c-0820755a0897"
        },
        "item": {
          "id": "e4f771a1-2357-4221-ad3b-296ccf167043",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "61b68394-9ff3-48b7-9a81-031142b12720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903fa199-16a9-48c4-bace-b6c927c2844b",
        "cursor": {
          "ref": "a084bea6-56da-434b-a33f-253103ea7e03",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "00474224-2f89-4c2c-b625-9cac449492d2"
        },
        "item": {
          "id": "903fa199-16a9-48c4-bace-b6c927c2844b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "11a64bdd-479b-41f2-8053-4419c672ed33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f66bff6-8415-4dea-a195-a7731f3fff63",
        "cursor": {
          "ref": "9ab29552-f1d1-47d2-8540-852079227bb0",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8f62db8b-2885-4224-abc1-3c62186a06dc"
        },
        "item": {
          "id": "1f66bff6-8415-4dea-a195-a7731f3fff63",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ad15c644-2a9e-4193-a439-126fdc2af5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fb0595-f1ee-4b65-8f71-4938992597b6",
        "cursor": {
          "ref": "afe6e597-3341-4e0d-b886-faa2d7dad489",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7e77852b-4d41-4ff1-b667-fbc0acb71b28"
        },
        "item": {
          "id": "b4fb0595-f1ee-4b65-8f71-4938992597b6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "30c7c7d0-0b75-4d1d-92aa-ec85e237fa17",
          "status": "Created",
          "code": 201,
          "responseTime": 2781,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "2dbc573f-b86a-4e61-bc97-c0c023a5f959",
        "cursor": {
          "ref": "978b6a3c-efd0-450d-8b7e-c913ff9ad083",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b794f1d0-a086-4876-8231-a50cb5002001"
        },
        "item": {
          "id": "2dbc573f-b86a-4e61-bc97-c0c023a5f959",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f16df7d4-7180-4561-9a73-1f230b2d10ba",
          "status": "Created",
          "code": 201,
          "responseTime": 3451,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "f1dd4ac9-627d-44d6-98fb-347c47d3899e",
        "cursor": {
          "ref": "c033e297-f3c3-4a6a-a76f-3812b4a07338",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "930a534f-4473-47fd-9f23-098b8979d9b9"
        },
        "item": {
          "id": "f1dd4ac9-627d-44d6-98fb-347c47d3899e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ea1eb448-f845-4ca8-963a-ec0f4beaae7a",
          "status": "Created",
          "code": 201,
          "responseTime": 3757,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "951a6c5b-7c02-4384-8a41-a54f7af5f9bb",
        "cursor": {
          "ref": "502f8786-4638-46b5-a890-3c3613d3f4f9",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "126114dd-13e0-4136-b654-02c7bd72d6fd"
        },
        "item": {
          "id": "951a6c5b-7c02-4384-8a41-a54f7af5f9bb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "451b3c94-251c-4e58-a371-7ecaf5ec4551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afa7cb0-ac44-4db9-8ab1-6cc5429d48c7",
        "cursor": {
          "ref": "d719797b-308c-4a51-9ca1-98920ec849c6",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4f4eb20e-7656-436d-817a-8ba900b45615"
        },
        "item": {
          "id": "7afa7cb0-ac44-4db9-8ab1-6cc5429d48c7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "28a0079d-c4d0-4748-b5f4-d3bb7670871b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0945883-1774-42b3-bb56-f80ab38229c0",
        "cursor": {
          "ref": "bce2ebad-15ae-455a-aed2-f16b5c508275",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1addeaac-d688-455d-bc9b-935083f9908d"
        },
        "item": {
          "id": "d0945883-1774-42b3-bb56-f80ab38229c0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "380acbda-7398-4cfa-bd54-aab563cc3fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55c5853-6e25-4e73-b361-e64f6d556489",
        "cursor": {
          "ref": "f986a23f-544e-43ba-a234-2e8eae8475a9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3e6c9ba2-826f-415e-a7a3-efacb2f9c324"
        },
        "item": {
          "id": "b55c5853-6e25-4e73-b361-e64f6d556489",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1b73b831-3f2e-46a7-a91c-835ac84acaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46394a7-1e1c-4dc5-9c92-d1b9fdd31727",
        "cursor": {
          "ref": "37c1a1a9-f58c-4fa2-932b-dd9b039f5752",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a606085d-4bca-4026-a02a-88190dffbc41"
        },
        "item": {
          "id": "d46394a7-1e1c-4dc5-9c92-d1b9fdd31727",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e4761a80-e71c-48a7-9ed5-a8b682ec7d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98026e3c-047f-4063-8d89-fb416fb1f854",
        "cursor": {
          "ref": "e05bf648-8821-410f-af1d-cf44072a6f1a",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d19f9381-43dc-4fe8-8678-78c75745efcc"
        },
        "item": {
          "id": "98026e3c-047f-4063-8d89-fb416fb1f854",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ec92bee1-10e2-45d4-a53e-1cf70c5d2971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8974375-7ffc-49ea-a63a-f2a127c46ce5",
        "cursor": {
          "ref": "39fad334-f89f-483f-8a7a-675af73d7c2e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3515f931-d66a-4536-b82e-0117de0eb450"
        },
        "item": {
          "id": "f8974375-7ffc-49ea-a63a-f2a127c46ce5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "be7e6535-496d-48ff-81b8-06f2e23b66fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d768aae6-cede-4af8-88f9-9cba9ea1e5fd",
        "cursor": {
          "ref": "256460e1-c8c8-4886-bff1-c55dd3028256",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "99ea8318-45d6-4667-a1b5-b1f1d54bef1c"
        },
        "item": {
          "id": "d768aae6-cede-4af8-88f9-9cba9ea1e5fd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bfb7a091-de4b-4b9f-8ec1-7ed2f91b87af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fadba4d-aec1-45b0-9904-6a2b1a661d67",
        "cursor": {
          "ref": "8179343f-64ac-40c9-aed6-15a42196b81e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fd0bab46-b442-4d67-8d36-b36c77ee6474"
        },
        "item": {
          "id": "4fadba4d-aec1-45b0-9904-6a2b1a661d67",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0b40f317-baf1-4771-9c58-ffe38e8c39d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c26c93-759d-43da-a463-29eae5b4a278",
        "cursor": {
          "ref": "031e1863-20ef-40d6-8537-ea0664a4abfa",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "48879d40-2a03-47ae-8f01-5f747056f6c7"
        },
        "item": {
          "id": "79c26c93-759d-43da-a463-29eae5b4a278",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cc2f7f46-f5c8-4474-a757-c59ae052e19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc025706-e411-47af-96b4-5aebb5ff17ea",
        "cursor": {
          "ref": "9be762d5-a43a-4d15-8a99-bec32e9bc918",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7b6e3f15-7a1f-4fbe-9f52-9dfa04c51d8d"
        },
        "item": {
          "id": "bc025706-e411-47af-96b4-5aebb5ff17ea",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "31fbed22-4adb-4c3f-a74b-7f1ae22717da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465fcd3a-f598-4b36-bd10-d17a29841212",
        "cursor": {
          "ref": "317889f8-50f9-4b2f-b8f1-3a0a3867cabe",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "613f018e-cb75-4595-832a-d4d72a57646a"
        },
        "item": {
          "id": "465fcd3a-f598-4b36-bd10-d17a29841212",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "31e538e5-fbcb-4714-b066-3307599d9bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4856d21-8e86-40ba-8c0e-5900e393ec7e",
        "cursor": {
          "ref": "2548cf0c-08e1-4dcd-a588-48f56688ec8f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "be3a58ce-db36-4e5e-afee-5207e4e4f520"
        },
        "item": {
          "id": "e4856d21-8e86-40ba-8c0e-5900e393ec7e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e1dff704-b42e-48a5-be23-98f7097ea375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6511bf8-0b6f-4f93-b400-c448d06c3a2f",
        "cursor": {
          "ref": "598d3b75-3687-4e7c-a528-6f681382af84",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "877bc724-0f06-4b21-8894-5da184869927"
        },
        "item": {
          "id": "e6511bf8-0b6f-4f93-b400-c448d06c3a2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2f12cdc8-f475-4097-9a25-1ece6102b168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a53c17-207c-4bcd-aed7-8e2675a694bf",
        "cursor": {
          "ref": "3de2dc64-82f7-4806-9e1b-1755b6145785",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d3775e94-2f6d-449c-9296-e6476bd58303"
        },
        "item": {
          "id": "e1a53c17-207c-4bcd-aed7-8e2675a694bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0dde26f0-cd15-4fbc-8772-1294f93a39aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3604d2a-571f-40a9-931d-bb7d80dde907",
        "cursor": {
          "ref": "1c0d367c-b829-4f4a-a837-b10f3e45fb17",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a5e8162b-77fa-41a9-bbed-afc49c4463ac"
        },
        "item": {
          "id": "f3604d2a-571f-40a9-931d-bb7d80dde907",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "87b7de36-2fdc-4ba1-9a52-55a2b239ec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e84ec1-289b-4892-9deb-ced8b3aec74e",
        "cursor": {
          "ref": "0492bf4f-e590-4482-8280-d44fa0ec5ed1",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1827cb95-4b95-499d-8834-06be82771e03"
        },
        "item": {
          "id": "51e84ec1-289b-4892-9deb-ced8b3aec74e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ba510de9-5077-4f61-bbbd-d51c6dc7f3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d187a86-73cc-4b11-8276-b757d9c56baf",
        "cursor": {
          "ref": "9e618144-1972-4bad-931b-9d9e736b0c30",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7ee92161-ce6d-4e4f-898c-00002266458f"
        },
        "item": {
          "id": "0d187a86-73cc-4b11-8276-b757d9c56baf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fb821ce0-2f72-4c23-b14a-4d3efcfdd4f8",
          "status": "Created",
          "code": 201,
          "responseTime": 6632,
          "responseSize": 978
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "f7a88caf-d2eb-4c04-9983-5dd0fea973a1",
        "cursor": {
          "ref": "b9344d6b-d537-4d4b-9666-3b878d75bf5a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3f9c7653-2508-4ea1-bba8-a6b0cf71444b"
        },
        "item": {
          "id": "f7a88caf-d2eb-4c04-9983-5dd0fea973a1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2ab79cdb-d865-45bc-a1c3-df2eae1a531e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b533d30-9c1f-441c-ae8f-57c4790ef116",
        "cursor": {
          "ref": "9977d9cc-bd28-4b5e-a8e3-d98285aee682",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "16983e0b-48e0-464d-b5df-270295ce9a7a"
        },
        "item": {
          "id": "2b533d30-9c1f-441c-ae8f-57c4790ef116",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "564933ef-d200-4636-8fd7-8fac8cfcc20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23224ab-4712-4401-966e-7e4422ab8d65",
        "cursor": {
          "ref": "5fc7e630-1a38-49f3-862a-bcba954cc4d7",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "26f9448a-dfe5-45db-b74e-de975fab53b7"
        },
        "item": {
          "id": "a23224ab-4712-4401-966e-7e4422ab8d65",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9a14df4f-0045-448e-b14c-f7cb7e06198e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd6c662-5e9e-469f-a154-3a1e5abd9519",
        "cursor": {
          "ref": "a5eaf5f9-ffa7-4fb8-beab-32f539231f43",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3e5bcd70-7dd3-45e5-95f9-ccee13deccc1"
        },
        "item": {
          "id": "bbd6c662-5e9e-469f-a154-3a1e5abd9519",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5aea8749-5282-431a-b279-cc369807ab7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e387af1-1850-4c58-828b-c9adbf917519",
        "cursor": {
          "ref": "f65be56f-e4db-4305-8f28-04e89d4f5cbf",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2f23d246-948c-4e28-aa1c-e786bc5adb8e"
        },
        "item": {
          "id": "6e387af1-1850-4c58-828b-c9adbf917519",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8b81fdf2-73ed-46d6-b151-efe08d9bb671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48e3cd7-a9b9-45d1-943a-63e3031abf5a",
        "cursor": {
          "ref": "6348774a-4935-41d9-b321-beb1f72e26e0",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bb7aea99-ebbb-475c-a853-20572f59cd50"
        },
        "item": {
          "id": "d48e3cd7-a9b9-45d1-943a-63e3031abf5a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b7801f30-e5da-4538-b108-e989c4f1fa95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848f8d0c-1391-4def-aca2-9eb654a18289",
        "cursor": {
          "ref": "1e96a8bc-ba63-40f3-90ef-f0ef14386e62",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "05002c97-6556-4c27-99b7-d90c2925cfb3"
        },
        "item": {
          "id": "848f8d0c-1391-4def-aca2-9eb654a18289",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e7e4c9f6-7a9b-4f18-849f-93a554c56ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7d0724-5b7d-4b91-8245-84cc3e163468",
        "cursor": {
          "ref": "c23aa11b-72fd-4599-bfe6-d94f1458bfaa",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "15bd8a4d-1cd6-465b-ba5d-b9a0a4f2ab1d"
        },
        "item": {
          "id": "ab7d0724-5b7d-4b91-8245-84cc3e163468",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9dc3682f-609d-4906-afdc-00743ebc90ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f18c65e-59a2-457b-986a-c77cf96f3a4d",
        "cursor": {
          "ref": "d9cdd6c3-7fd5-45c3-859f-ddd237eb263e",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "747df84a-1e7f-4898-ab6b-37d6e034aa5c"
        },
        "item": {
          "id": "7f18c65e-59a2-457b-986a-c77cf96f3a4d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f267b539-c786-4bd2-8921-f813a8d15441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d72db60-b3e5-4ebe-94d3-47ec9f0178b4",
        "cursor": {
          "ref": "e2c021a0-8926-458b-ab7d-40d8330e9b3f",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "651308b3-e4e9-4e04-a443-35ef4130ea82"
        },
        "item": {
          "id": "8d72db60-b3e5-4ebe-94d3-47ec9f0178b4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d715b308-f2bd-4ca1-aea5-85e611c38747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c9c6fb-4ab5-4877-b569-3d7e96752669",
        "cursor": {
          "ref": "bac17c0f-db5c-47c2-aec0-c868c8ddd57a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aa53aafa-6fb4-41e7-b858-f272b37db400"
        },
        "item": {
          "id": "f9c9c6fb-4ab5-4877-b569-3d7e96752669",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c4ca26f3-759f-4910-82c4-a90ae4027ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672e56d0-c266-4b9b-95a2-cbae5f16ac5d",
        "cursor": {
          "ref": "e6fe9d6a-00cb-48b5-8f17-ce3527d7e595",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "65378b27-07d4-418c-bfbf-895d123f28a6"
        },
        "item": {
          "id": "672e56d0-c266-4b9b-95a2-cbae5f16ac5d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d4059a38-aba1-455f-9b30-80ef0ed38aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553ab447-1101-4d3c-89ba-677c288b64ca",
        "cursor": {
          "ref": "1b5c5c2b-1e55-4419-99f9-b728a90ad1d5",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "00575f5e-055c-4c31-8c9c-1e513e1ecbd0"
        },
        "item": {
          "id": "553ab447-1101-4d3c-89ba-677c288b64ca",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8ab856b5-fd5a-4ea4-9777-17ea04ebfd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2aea25e-d2b2-4d85-9fa4-3b18d3688ace",
        "cursor": {
          "ref": "4e6f99e6-4a6e-47a8-ac66-b18376c4a17a",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ad0f90e7-57ab-4b84-ae4e-2fadb91beb38"
        },
        "item": {
          "id": "f2aea25e-d2b2-4d85-9fa4-3b18d3688ace",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "79c501d3-a603-4de6-9bf7-2d31e4237f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33db60f-ec99-4445-ba49-9c92467593e1",
        "cursor": {
          "ref": "7ad3d8df-a1f1-42d6-ad2d-836a9819a060",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "701436e4-9645-4882-8b37-959dcfaaa195"
        },
        "item": {
          "id": "f33db60f-ec99-4445-ba49-9c92467593e1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1d3844e4-e051-4a4e-b84c-ac1b11116575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c13185-62fb-4ab1-a95d-3a5b2edd3394",
        "cursor": {
          "ref": "2874e8a4-4877-4b8b-ae13-c8501d480f4e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bbacfdb4-5c9d-4206-8919-e2b4e4ce27a0"
        },
        "item": {
          "id": "21c13185-62fb-4ab1-a95d-3a5b2edd3394",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a2f18a33-d292-4452-8157-efb48704eef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96efcdb6-fb5a-4086-9a6f-6efccdfbc23b",
        "cursor": {
          "ref": "7f10a7c6-f290-4f80-8ae0-5f6a20f4427a",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a0134a1d-40e7-4119-86e6-63b114b95003"
        },
        "item": {
          "id": "96efcdb6-fb5a-4086-9a6f-6efccdfbc23b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f6b9c856-df27-4734-90dd-6ca5ccaa7216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00710b69-c0f3-4761-b790-1c53c86f8792",
        "cursor": {
          "ref": "839d6efb-6adc-4a52-9151-fe6a9659b58d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6207e08a-c2f4-4997-b3de-3e080edc0b8c"
        },
        "item": {
          "id": "00710b69-c0f3-4761-b790-1c53c86f8792",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "68a998a3-b63e-47d3-8b0e-463ee808d100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591a0ffc-6f14-49fe-9052-bbfa2b60b693",
        "cursor": {
          "ref": "a891c89e-c108-4574-9829-27eb20ea76dd",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6945f513-3df7-4a27-bbf8-dc173b50dff0"
        },
        "item": {
          "id": "591a0ffc-6f14-49fe-9052-bbfa2b60b693",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "00d75677-c3b5-4d6f-944d-d4402716e2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dcd4ee-38dc-4953-887d-540859ce6af9",
        "cursor": {
          "ref": "8040eefb-2251-4e1d-87ef-d5349c6212fa",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f5b01554-a577-46fd-9ba9-36c08c5255d6"
        },
        "item": {
          "id": "b6dcd4ee-38dc-4953-887d-540859ce6af9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "111fe8d8-4dca-4dc8-82e4-d5fc298e634d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd13193-c761-45e3-9a2e-ca21c76f6dc4",
        "cursor": {
          "ref": "e3a011a2-02d8-43fb-b3b4-6d694fb6b7ec",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "723ce44d-2900-4c58-8b59-ae9426fcaecc"
        },
        "item": {
          "id": "bfd13193-c761-45e3-9a2e-ca21c76f6dc4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5d02e3ec-a4eb-434f-9fb0-8691360bdaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb3e9e5-c158-48f6-8b66-7381e13ea399",
        "cursor": {
          "ref": "f496cb38-002c-44df-b750-c4ee567c0710",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "be0d8d8d-178c-473f-b70c-4eba65578a55"
        },
        "item": {
          "id": "fcb3e9e5-c158-48f6-8b66-7381e13ea399",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bbccea87-4973-404f-9e5f-e789db9358a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6dda9ff-860c-427a-93f1-658ed91c1d88",
        "cursor": {
          "ref": "d33cf25f-4f8b-4694-8a8c-6be339a27b7d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c2f808fd-83a2-4752-9b22-29b86924cf01"
        },
        "item": {
          "id": "a6dda9ff-860c-427a-93f1-658ed91c1d88",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4e0070be-c0c9-4997-92f8-e7ea304084bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1b72fc-a50d-4ab9-b6d5-b6c1ea8e46b1",
        "cursor": {
          "ref": "bb633f44-4747-4c7a-b171-f7203529e24b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d6da7528-b038-4986-8d40-b2a6b3db95d8"
        },
        "item": {
          "id": "4b1b72fc-a50d-4ab9-b6d5-b6c1ea8e46b1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "eb9fc8aa-1e02-4f4b-a5ec-f0381c6aeda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23604ee-a65c-4017-844b-fa7397fbcec1",
        "cursor": {
          "ref": "30785209-45c7-4f6b-8202-065df719bdd2",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "14f58702-18ae-45e1-97db-0eae01274738"
        },
        "item": {
          "id": "e23604ee-a65c-4017-844b-fa7397fbcec1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1bb6f2c0-f7be-40ea-b8c7-5d308bcc8bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2140a25e-7da5-4444-a3f0-f80fb594e01c",
        "cursor": {
          "ref": "be715491-3970-44f8-b20d-5c9bcd97a14a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4e469911-bdaa-4738-aefc-9997d0fcffc0"
        },
        "item": {
          "id": "2140a25e-7da5-4444-a3f0-f80fb594e01c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "64516860-afbb-4be3-b4c6-cfe1147efc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762dc64e-d6e1-4f51-ba6d-ea1faca8fce7",
        "cursor": {
          "ref": "39c14206-bbda-4d89-a1b8-2fed07bdaed8",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3b0ab9a7-4ad8-4488-a4f3-654be8c5e4c9"
        },
        "item": {
          "id": "762dc64e-d6e1-4f51-ba6d-ea1faca8fce7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "33d29d6e-7549-4fac-b2b4-fabcf6796fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c99b9bc-3856-40cc-b5ce-13db841f60ad",
        "cursor": {
          "ref": "5746ebab-0d88-42c2-a376-2a9c023935c6",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "34cfd11f-e237-45ee-8e4f-f442fef4cc95"
        },
        "item": {
          "id": "8c99b9bc-3856-40cc-b5ce-13db841f60ad",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6018dadb-0c48-4b3a-95a2-1a4c5666a046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caddc874-3535-4275-8a99-7345aad619b3",
        "cursor": {
          "ref": "e07c0098-cc84-48a3-8fb4-aca351f7c0f5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b0c4c433-8825-48c6-846d-f7bc0b190310"
        },
        "item": {
          "id": "caddc874-3535-4275-8a99-7345aad619b3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eea00f79-4950-4933-ae23-59b58648a19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ceb21c-67fb-4dfe-ae7d-7081e57d8a09",
        "cursor": {
          "ref": "be676e05-36dc-4bd0-a75e-0f114160d8b5",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7d2de575-eca0-4509-a87b-bc5ac946838e"
        },
        "item": {
          "id": "f0ceb21c-67fb-4dfe-ae7d-7081e57d8a09",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f914b3ce-4a46-4de4-86e4-37b39296fb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d7b006-b028-48f8-a882-7b58474dcdad",
        "cursor": {
          "ref": "bc3c0e3f-0fc0-4403-ba57-c02acb220aad",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4ae9502b-f1a3-428b-9724-f67469cf5acf"
        },
        "item": {
          "id": "a4d7b006-b028-48f8-a882-7b58474dcdad",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8e75b0fe-cd2b-4c18-b7d8-592dc9c58296",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7c938e-53d3-4f68-a558-978231b28666",
        "cursor": {
          "ref": "3776c5e5-10d7-4da8-81b0-891cab1accf0",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7b9366ce-6412-41de-91e7-c3eb2eac4468"
        },
        "item": {
          "id": "ea7c938e-53d3-4f68-a558-978231b28666",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6a749272-079b-4381-9f82-4b88c209d201",
          "status": "Created",
          "code": 201,
          "responseTime": 7836,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b1143b-ea6b-4df5-b68b-11fed7cfadd0",
        "cursor": {
          "ref": "ced72f14-df0d-4068-9822-356564bf9180",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a0f3abb5-5edd-43eb-a281-f358041d8bda"
        },
        "item": {
          "id": "66b1143b-ea6b-4df5-b68b-11fed7cfadd0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6dfb8875-418d-4d32-ae38-cbfebe3fe5e2",
          "status": "Created",
          "code": 201,
          "responseTime": 2521,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf9e899-2a47-4e4e-a907-fa2b9a2b4ec3",
        "cursor": {
          "ref": "265b4417-078d-4792-a23a-89f82dfc6657",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fd1cce39-6f3a-487b-8f7e-96c39b1e639f"
        },
        "item": {
          "id": "0cf9e899-2a47-4e4e-a907-fa2b9a2b4ec3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "eba3a517-fb31-429e-b757-7324000ed21d",
          "status": "Created",
          "code": 201,
          "responseTime": 2452,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a78009-b473-4c9c-8f95-5fb676c9ea83",
        "cursor": {
          "ref": "2aecfb63-80d1-4362-ba74-8771d3fbc2a5",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f90b5eb4-a3c3-42ea-9cce-72ed8e1d43ec"
        },
        "item": {
          "id": "b1a78009-b473-4c9c-8f95-5fb676c9ea83",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c5f25433-499c-4710-991f-5290aabc2033",
          "status": "Created",
          "code": 201,
          "responseTime": 2593,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8f23ab-5623-48c0-8a9f-067337c706d1",
        "cursor": {
          "ref": "ba96c5d3-a0fa-4e25-af43-0a53eee3efb0",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1ed6c492-903f-4d39-a29c-0332f444d8c0"
        },
        "item": {
          "id": "dc8f23ab-5623-48c0-8a9f-067337c706d1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f654043c-d26e-419b-b29d-48d99a4c33ca",
          "status": "Created",
          "code": 201,
          "responseTime": 2749,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-20T00:42:35Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-20T00:42:35Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "43752254-36c8-48ed-a15d-3955562e96d0",
        "cursor": {
          "ref": "cfb7d187-2231-4b68-8dd9-fef4d85a5720",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "76f0cac0-18e8-4fac-a72e-8148a6e5f066"
        },
        "item": {
          "id": "43752254-36c8-48ed-a15d-3955562e96d0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "456f9573-fb3d-416f-9ddd-196b859034ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "fa63a3d8-e01d-416b-a22f-ba597c1c6d7d",
        "cursor": {
          "ref": "7273dda9-3bd0-48aa-8ab1-eb3a5d5587a8",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7f0ccb3a-b51f-493f-a0e1-f022a906bb1d"
        },
        "item": {
          "id": "fa63a3d8-e01d-416b-a22f-ba597c1c6d7d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "85405c87-b298-4282-9728-2e26214f2e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d13a72-2bbc-42cc-807c-0e45925ba082",
        "cursor": {
          "ref": "9028e5f2-6b9e-443d-8da3-3b6279a1984e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4e6eb220-d27c-4547-b32d-18df3a30b9be"
        },
        "item": {
          "id": "26d13a72-2bbc-42cc-807c-0e45925ba082",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "66e7ab93-47a4-4853-bf0b-ab069ce532fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8847664-94c6-4fd8-9d61-e86dd01aa19a",
        "cursor": {
          "ref": "d67bd1d2-c32f-40b7-bf00-8a7620a8d790",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1fcbfd57-a358-430c-bac4-a4f2e57195d2"
        },
        "item": {
          "id": "a8847664-94c6-4fd8-9d61-e86dd01aa19a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "46fb2a55-e5de-41a9-bf9c-a8d673bf457d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90316c5f-7dae-44e7-9892-77f115407fc1",
        "cursor": {
          "ref": "6d8d6b5a-8170-4997-a6bb-838ff48acb2e",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "127c58e5-1ed0-49ec-bb9f-b6e526ccd0d6"
        },
        "item": {
          "id": "90316c5f-7dae-44e7-9892-77f115407fc1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eaa81e92-f6d4-4783-9f6f-a1ea4186240b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16aad18f-90c5-467a-b831-3d7d30664e4b",
        "cursor": {
          "ref": "c7f1db69-dda6-4c2b-9b31-2f93f21502fa",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "98f553d1-4e0a-4808-aa37-5d961843d44b"
        },
        "item": {
          "id": "16aad18f-90c5-467a-b831-3d7d30664e4b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6ef460df-6f47-47ec-9029-f88ec62aa18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a06d2c-c430-48ff-8c67-33d660ec06e3",
        "cursor": {
          "ref": "d2e5d9ee-a2df-4d15-bfb3-6d008b4b4549",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7dadc645-e685-4382-adeb-00f8fbb5257e"
        },
        "item": {
          "id": "77a06d2c-c430-48ff-8c67-33d660ec06e3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e3f8b96f-b700-4a49-ab17-43f7291b4afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5aa2d0-d8db-49d7-97c0-e9c77ffc01bb",
        "cursor": {
          "ref": "5a7494ad-13ec-4d3c-91b6-97d31a0919ce",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "29b9006b-cebd-4cae-802b-94cc6aa873d6"
        },
        "item": {
          "id": "db5aa2d0-d8db-49d7-97c0-e9c77ffc01bb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8f676fcd-a7a0-41ca-8685-6562d2ad2ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4accf530-74df-4239-914b-4d3ce31f310a",
        "cursor": {
          "ref": "d9ec0fed-5917-40a0-8bcd-daeb41bbecbe",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1078a2d9-02cb-4844-86c7-6003b149db9a"
        },
        "item": {
          "id": "4accf530-74df-4239-914b-4d3ce31f310a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f48affbe-2263-4c75-86fe-d763e97b0916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6c2f5c-84c3-4374-be39-83b2f25223a7",
        "cursor": {
          "ref": "68914077-4e94-4aa5-bd8c-e8d47f8febca",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1479b6f7-2891-4874-a5d1-8d4f2d0c7a38"
        },
        "item": {
          "id": "ea6c2f5c-84c3-4374-be39-83b2f25223a7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8161ae52-9266-4a82-bc32-28d0d2f8231e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442b0efc-51cf-4ead-b6ae-c42dbbf398e9",
        "cursor": {
          "ref": "2d36adca-5393-4c63-9038-8452f3d2e4f4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "49370e5d-cafe-4444-98c8-dc552ed63e5b"
        },
        "item": {
          "id": "442b0efc-51cf-4ead-b6ae-c42dbbf398e9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fba07288-a9ca-4a4c-84e5-9ac713ebda6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb6eb0e-5dd6-4cd5-9072-664f7b8b7f5d",
        "cursor": {
          "ref": "9abcb79b-ab50-4f89-8fc6-83d3ea7d243a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4cae95b7-2c74-4b01-9be9-3bce8876a37b"
        },
        "item": {
          "id": "6bb6eb0e-5dd6-4cd5-9072-664f7b8b7f5d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "78e70d84-ea52-4aea-a27a-f80413f9ede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff0e4e5-5efb-41e6-b404-e9efd2e0cb87",
        "cursor": {
          "ref": "bbe76dbe-0a33-4f4d-9ddd-9c74044ba5b9",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b71244d3-51b1-47de-881e-675ee3997f22"
        },
        "item": {
          "id": "0ff0e4e5-5efb-41e6-b404-e9efd2e0cb87",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b83ec599-bae1-44ac-b393-862f4cc9280d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2201689a-0b14-4ee0-91b8-39583be18799",
        "cursor": {
          "ref": "e67f08ab-54ad-476a-9ad7-924c3a2d2278",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8d327eb6-4084-462d-b67f-7195f20a2cd7"
        },
        "item": {
          "id": "2201689a-0b14-4ee0-91b8-39583be18799",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "679f1773-ab74-4f8a-9451-c636a7f9850d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbdd6fd-fb1d-44a1-b040-54f5d0ae578a",
        "cursor": {
          "ref": "8dfcd05f-b313-46f2-b928-ae68588278ba",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a87e0475-c475-4dec-abbd-175646979ecc"
        },
        "item": {
          "id": "7bbdd6fd-fb1d-44a1-b040-54f5d0ae578a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1d9420f1-1d56-4b9e-a08c-09dce90a88f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ead7b6-4385-4a97-8b32-7824f9644ef4",
        "cursor": {
          "ref": "f78de130-2425-42c3-8031-d76f2e3b37a5",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "645e27d4-8a4e-401b-9f64-88d7cef77f14"
        },
        "item": {
          "id": "02ead7b6-4385-4a97-8b32-7824f9644ef4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e25d8b43-ab4d-492f-ad09-4ea35ba5f59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5decf7-684d-45d9-b9fc-b28840864ad6",
        "cursor": {
          "ref": "7b9d2df2-228f-49f0-8d5f-4053c4e8719e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "731ae1bb-9063-438e-b994-3f0fd1911a1e"
        },
        "item": {
          "id": "8a5decf7-684d-45d9-b9fc-b28840864ad6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "74339650-46f7-46f2-9c3c-228947ce3f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b0415b-0279-4cad-b388-84df64986329",
        "cursor": {
          "ref": "602a651d-bebd-4fe9-8650-c51a0d84cc65",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "45e88d0b-d2ec-445b-8326-fd32a430497a"
        },
        "item": {
          "id": "d5b0415b-0279-4cad-b388-84df64986329",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2d4ae257-df9a-4f39-8814-ef93177eedde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94a6522-9595-4a1b-8e42-e1b695d8698b",
        "cursor": {
          "ref": "a4cf11fa-6d79-4069-88cc-41213e36f240",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9a035d08-e082-4f93-8a94-54c296f9bdde"
        },
        "item": {
          "id": "e94a6522-9595-4a1b-8e42-e1b695d8698b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c9eb064a-7d28-448b-9356-14409539a661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e978902f-0648-4705-942d-d92a73eb875b",
        "cursor": {
          "ref": "629385dc-d854-4d7f-8524-cf95fa313531",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "203dc47a-d05b-4c49-afd8-c3e499f3a5aa"
        },
        "item": {
          "id": "e978902f-0648-4705-942d-d92a73eb875b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1321aa05-7504-4a5b-b432-2384a7f10f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc338484-9c19-4c0b-a72f-1e43cb6fe9da",
        "cursor": {
          "ref": "4ff46b6d-7d95-4ece-b124-db6199e27f23",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a11f20de-dead-41e7-a45c-9257aa06bc3b"
        },
        "item": {
          "id": "fc338484-9c19-4c0b-a72f-1e43cb6fe9da",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e4a94f93-e559-4496-987b-0b82ea59ac08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da9cb46-2f67-4cef-af2f-0a944ee55363",
        "cursor": {
          "ref": "a6d9862c-a855-458e-8c8a-14af587cff06",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1b1451df-2cbc-4b28-a34b-80cb46445c6f"
        },
        "item": {
          "id": "8da9cb46-2f67-4cef-af2f-0a944ee55363",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "64d4162d-df5c-4988-85c4-136d1e8816c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d974d14-d599-40e5-ab1f-7e53bd35a30e",
        "cursor": {
          "ref": "02ec00b0-888e-4910-b17b-e1b618c8ca4f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b0f2abe6-f2a5-4e12-aff7-49e32f42141e"
        },
        "item": {
          "id": "8d974d14-d599-40e5-ab1f-7e53bd35a30e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "972e2517-d3f0-4e46-be4d-4d832c0116f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f204446-4416-4371-b4a0-25289f6393d2",
        "cursor": {
          "ref": "67aa0840-df72-4030-8777-28657a0cc0b4",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7c0e5db8-dbb2-4b55-b418-2ace1f07f7dd"
        },
        "item": {
          "id": "1f204446-4416-4371-b4a0-25289f6393d2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ec402ee6-7c49-4f27-80dd-80464b179cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b337ac3c-bdd7-45db-a292-9cee5a68a260",
        "cursor": {
          "ref": "b29af92a-3bde-40c8-8b39-9996421ec2a4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c434656c-d38d-4eeb-9ced-3535dcc214e1"
        },
        "item": {
          "id": "b337ac3c-bdd7-45db-a292-9cee5a68a260",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1fc5ff3b-c481-46ad-8cf1-c2deb5c41fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f8c67c-faba-49a7-8dd9-80baced1afd8",
        "cursor": {
          "ref": "b2be5a84-a9c7-49fb-a31a-621da9e28eb4",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8120d831-cc1c-4a54-bcbf-59303ceaba60"
        },
        "item": {
          "id": "02f8c67c-faba-49a7-8dd9-80baced1afd8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "82972be9-6de0-4a7b-9a07-4eb4ba3ca4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ee4055-a5c1-412b-aae9-54ecdc9c4b4d",
        "cursor": {
          "ref": "fee57e47-eb02-42f4-91b8-d05d76dadafc",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e1f28764-a9a9-47c4-bc09-0927722f53cd"
        },
        "item": {
          "id": "b0ee4055-a5c1-412b-aae9-54ecdc9c4b4d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c9593477-36b3-4d00-8265-b59d8b03163f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc890808-1095-4436-8f09-a72038b23d4f",
        "cursor": {
          "ref": "d69faec4-c924-4483-9e58-674c5636a82e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "37a69596-a509-4c92-8d73-1fe7cf0fb3ea"
        },
        "item": {
          "id": "fc890808-1095-4436-8f09-a72038b23d4f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "85367609-2fb5-4134-96e0-5559ebb07a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397b3427-5c2b-4b52-9c6c-b811e2b76e59",
        "cursor": {
          "ref": "ac0efe8e-fb0f-4edf-863e-6378e72d48a1",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c0add4ca-8fd3-4c33-a3d0-622c639edbaf"
        },
        "item": {
          "id": "397b3427-5c2b-4b52-9c6c-b811e2b76e59",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c9c7ba89-248d-43b5-930d-9008d08f5be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ed9ebf-ba31-46ca-bfb1-3f8a789f9592",
        "cursor": {
          "ref": "d7c9ebdc-259c-479a-b71d-69883c8309d6",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bc203cb0-ebf8-42aa-b57d-b04d6e627949"
        },
        "item": {
          "id": "96ed9ebf-ba31-46ca-bfb1-3f8a789f9592",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b764b92e-e304-4c3e-9d75-1cbbeb6413ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d605b0-1054-43f7-b5aa-65f957ba2ff6",
        "cursor": {
          "ref": "e59659f3-a093-429d-abb2-bf712312d4dc",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2b4d8ba0-a6dc-4906-aea1-ed59a9221b4c"
        },
        "item": {
          "id": "33d605b0-1054-43f7-b5aa-65f957ba2ff6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a7517b71-f198-4a66-a7e1-e8fb8b366f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e53610-be90-448a-9677-f8d3f4fe34a5",
        "cursor": {
          "ref": "4ae8f5d7-f130-407c-af9c-806c04654a41",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1b4de560-2c52-4966-bd76-3c972aaae154"
        },
        "item": {
          "id": "89e53610-be90-448a-9677-f8d3f4fe34a5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "63b6c0a1-acd7-4727-804e-98fd11bf181c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e97612-21b4-466c-be47-c7a7ccf12b4c",
        "cursor": {
          "ref": "7b4157e3-6039-4e34-ab71-ef840273e815",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9baf3bbb-f1cb-419a-9f3e-8765fb2f2580"
        },
        "item": {
          "id": "59e97612-21b4-466c-be47-c7a7ccf12b4c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "58d0bd69-5ebd-43ce-b902-05244c7982ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b157474-0b16-4b3d-ae86-063356f85648",
        "cursor": {
          "ref": "a3c3f6d5-0501-4558-931f-1a38760a57bd",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5bcc60c7-6d18-48b1-b0f2-aca73341cde2"
        },
        "item": {
          "id": "7b157474-0b16-4b3d-ae86-063356f85648",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e84676a5-24bf-46f8-8aa1-89a594deb922",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774c7941-06dc-448a-a34f-f51b9fab485c",
        "cursor": {
          "ref": "b0f3dac4-c309-404c-a5e0-d7552cc4c8e0",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "292ef3db-3037-4709-a7d2-2db5caf8a1ff"
        },
        "item": {
          "id": "774c7941-06dc-448a-a34f-f51b9fab485c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3679bdaa-def0-46a2-b225-84b515490b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3c49cf-52b3-447d-959f-53730c10ccad",
        "cursor": {
          "ref": "aee421f7-66d2-4570-9fa8-24e579087157",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4c07635e-6952-4479-a07c-25b0d52f498b"
        },
        "item": {
          "id": "ac3c49cf-52b3-447d-959f-53730c10ccad",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "03cf731b-56c6-452a-805d-a0fbdd2bdd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad3264f-28b8-450f-a37b-c46e37227ccf",
        "cursor": {
          "ref": "8a083f16-2751-472d-856c-be4a5821aa58",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3c7affb0-59b4-4932-9a41-179f49ff0f56"
        },
        "item": {
          "id": "6ad3264f-28b8-450f-a37b-c46e37227ccf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f3bf2d9f-fd62-476f-9f2a-15150731a0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d706183c-9660-4a7b-a0a6-7bb6a60459e3",
        "cursor": {
          "ref": "b4b61e9b-6cd1-4a96-b98a-3b20dea23b2b",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "397bd8b2-5909-43bf-bd07-4354bae4d572"
        },
        "item": {
          "id": "d706183c-9660-4a7b-a0a6-7bb6a60459e3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "68cd2586-a8d0-4605-8748-3d674864d5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15aee3b4-81dd-4d25-aeb1-e4ba68dae803",
        "cursor": {
          "ref": "204bfcc8-7409-46fe-b03c-f0e00fdc54d3",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f62718ef-493d-4bed-8379-a84126221759"
        },
        "item": {
          "id": "15aee3b4-81dd-4d25-aeb1-e4ba68dae803",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "56f46a1a-15ce-431b-b614-daa95fe26466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313149d2-bfab-4c79-a6e1-fbed1995dc17",
        "cursor": {
          "ref": "d5b36812-e086-4b0b-9cf4-47ef948a9ce9",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "619c7594-5755-4ad2-9b13-9504027226da"
        },
        "item": {
          "id": "313149d2-bfab-4c79-a6e1-fbed1995dc17",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "797bb661-ed59-4360-9fec-aa24d9a1f8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5310e748-541f-446c-aa8f-007f394b5090",
        "cursor": {
          "ref": "82e540f8-8d9b-4ce8-bf6e-f4e893bff655",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c196298c-540f-48fc-86ca-e43b935c5e18"
        },
        "item": {
          "id": "5310e748-541f-446c-aa8f-007f394b5090",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6d64b65d-1b83-4949-8176-1e2045fc3847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c9b517-037b-4964-b5fd-56618e134853",
        "cursor": {
          "ref": "c098f6c6-b703-4305-9a10-058c3d866ce1",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f8802153-3e61-4c5f-b791-b75efb6719cb"
        },
        "item": {
          "id": "41c9b517-037b-4964-b5fd-56618e134853",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "40c2e19b-8fdf-4af0-9c7c-686290938211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfda210a-de00-4e0b-8b7c-a341b2043507",
        "cursor": {
          "ref": "1495ce39-1d53-4aa1-8c80-cded12ee277c",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d29501e4-7f53-4a80-97af-d6d1638d5391"
        },
        "item": {
          "id": "bfda210a-de00-4e0b-8b7c-a341b2043507",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "be384ec9-e15c-48ec-98c9-aa2d3e13da7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9135b868-ead7-4369-9945-b57f241eb645",
        "cursor": {
          "ref": "db39b9ea-fa9a-4554-868f-c2d467324648",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1b23f3ed-d7e9-4037-8553-2eaf864b8c2f"
        },
        "item": {
          "id": "9135b868-ead7-4369-9945-b57f241eb645",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5c8896af-4de0-49e9-93c2-1e02b42c3ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb75029-9f6a-4bfe-a8b6-a3fc5cdc33f2",
        "cursor": {
          "ref": "500b83f9-0367-43c4-bf0d-8c01e2aa471a",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d1f562cc-d31f-47e9-b5e4-e528d58485c8"
        },
        "item": {
          "id": "ccb75029-9f6a-4bfe-a8b6-a3fc5cdc33f2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c2184adc-687c-4bf8-9069-546ea937ac90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36904bb1-8b02-4762-9fde-b1e9b92d2b86",
        "cursor": {
          "ref": "5d99c609-499b-4de1-8958-9a3e84378fc5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3f4489c2-7ca8-4b5b-a69c-57600f1e7644"
        },
        "item": {
          "id": "36904bb1-8b02-4762-9fde-b1e9b92d2b86",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5b5d2906-7a49-424b-b4bf-44b30ffc2a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da43f6ab-0f1a-478f-830c-63110ad88b36",
        "cursor": {
          "ref": "41a0d971-de3f-45ae-b7f5-32e4b8592af0",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d04ef6f9-a977-44ed-a373-94a5e0e6f89f"
        },
        "item": {
          "id": "da43f6ab-0f1a-478f-830c-63110ad88b36",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "16413115-cdd9-4b66-b144-57ef1c0f44d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccd6e23-0669-4d0b-bdd4-a90e1352fb9e",
        "cursor": {
          "ref": "7a1327e0-5e13-4f8e-8688-0b53da94a07c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fd91313e-33ef-407f-9f4b-550a543be660"
        },
        "item": {
          "id": "cccd6e23-0669-4d0b-bdd4-a90e1352fb9e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "22066748-57ab-4f02-bbf5-0c0eddc73a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993029ba-ac87-42c7-a47f-3472e32648ba",
        "cursor": {
          "ref": "30d907e2-bc81-4c9b-a66c-3093dcc584ff",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9c7e33df-456f-49eb-ab44-8bed401bd61d"
        },
        "item": {
          "id": "993029ba-ac87-42c7-a47f-3472e32648ba",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ebfa5797-6708-4d35-9b48-e89984a9f9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d8e361-1031-4fd4-badb-2dae58cff4b1",
        "cursor": {
          "ref": "bd4a2810-0a2b-45f8-807f-deadd1022e12",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fbf10dde-21dd-4d15-8740-0b05edc04af4"
        },
        "item": {
          "id": "39d8e361-1031-4fd4-badb-2dae58cff4b1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cd543bcb-0ab7-4c52-8165-21e6e558e96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50696787-adbf-4d88-b044-b0c8f6dd6fbb",
        "cursor": {
          "ref": "694f1da0-5eb0-499b-b63e-91e25ed3c30f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f817f778-36f7-4361-bbc9-5ad6e2b0c69b"
        },
        "item": {
          "id": "50696787-adbf-4d88-b044-b0c8f6dd6fbb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "76af3a69-0b2e-46f7-919d-0ee5ebf65a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3b7667-82c1-44a3-a0db-bf5209dc1ed3",
        "cursor": {
          "ref": "5c55768e-4e92-417a-9ce8-609521f19531",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "67ace5b1-851a-4868-bf3c-1fa2812609ce"
        },
        "item": {
          "id": "cb3b7667-82c1-44a3-a0db-bf5209dc1ed3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "07b1ea00-ec72-4151-834b-f26d87e478ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec9328e-90d0-4d3e-a961-1071230f5b44",
        "cursor": {
          "ref": "a4b0e9c5-e588-4faf-b837-ea6806aa962e",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8a22472e-8238-4518-aed9-2ce812e78eaa"
        },
        "item": {
          "id": "8ec9328e-90d0-4d3e-a961-1071230f5b44",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "553cf21e-2e6f-4a4c-9dfc-837a4e7bb0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc74085-aabc-452b-b12c-ea0c598e22de",
        "cursor": {
          "ref": "2a0bbc5b-f718-42c9-bfea-f9cb7bfee0c7",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f09fdfec-eeb5-41b1-a7fb-d00d08f4f4c8"
        },
        "item": {
          "id": "cdc74085-aabc-452b-b12c-ea0c598e22de",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "be39ccc9-1084-426e-803a-40d6c8c3c60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d9ccf5-1d1f-4778-a110-ab44113dc281",
        "cursor": {
          "ref": "41e0d260-8bed-4c8b-baeb-89f8ab336ff6",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c87dea81-3eff-4461-bf63-958c11eedc9d"
        },
        "item": {
          "id": "b5d9ccf5-1d1f-4778-a110-ab44113dc281",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2a282e7a-aee6-4ac2-9ba7-4a6c4b4da977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc76d74-00d0-4e5c-b5fb-736a617da194",
        "cursor": {
          "ref": "d4bc1ef3-106a-4f72-a800-a4f7984c01fb",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "37d6eaee-644e-470f-8878-1dcdb0751ba2"
        },
        "item": {
          "id": "8fc76d74-00d0-4e5c-b5fb-736a617da194",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a87f3ded-10a2-4281-ac34-a83d4d9e83bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d88c456-783d-4988-9b74-5a5528ce0ddf",
        "cursor": {
          "ref": "c4a82a89-743e-40c2-8cd7-7196de69f8ad",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3c0578ad-b3cc-4246-8005-1838376eb12a"
        },
        "item": {
          "id": "9d88c456-783d-4988-9b74-5a5528ce0ddf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "af7fe54d-ead6-4389-9253-e0b81e722714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78618071-02a0-42c2-b700-cc39eefe73c3",
        "cursor": {
          "ref": "5ae4e808-9189-4f06-8b07-0cec8a861ed1",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8926a3b9-d9bf-4bc0-934b-50a6b20ae560"
        },
        "item": {
          "id": "78618071-02a0-42c2-b700-cc39eefe73c3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b8a53110-364f-4d48-9b92-59205fcfda28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4eb4fb-91e8-4185-844e-97f4c409d0b6",
        "cursor": {
          "ref": "ee9bcb19-b9f6-4fc8-8072-4e433bf6e681",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "77130bab-ece7-45ce-ae97-252f797c5b2b"
        },
        "item": {
          "id": "9f4eb4fb-91e8-4185-844e-97f4c409d0b6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e75e0ac3-223f-4254-9583-f6970e838494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230a25ad-04cb-4c74-beeb-92b64cf809e2",
        "cursor": {
          "ref": "8d89b318-0ea3-4de2-bf75-547ef4828377",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7d33db53-36e6-49a8-b339-ed1c83e2f25b"
        },
        "item": {
          "id": "230a25ad-04cb-4c74-beeb-92b64cf809e2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5bb3a204-f371-4de3-930f-1b41bc0d579d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab3d8cf-c17d-417f-acc3-231a28749c03",
        "cursor": {
          "ref": "72b0b9b3-d394-4727-bd14-52c1340adf52",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bf3c17bb-8657-4e98-b114-b92dfd1ac71a"
        },
        "item": {
          "id": "6ab3d8cf-c17d-417f-acc3-231a28749c03",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5610c517-7894-4f28-bc70-5ceaa361131e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4b57b0-e7a6-48b6-8148-87a7428686e4",
        "cursor": {
          "ref": "cf9d4a0d-2b55-4ae6-b99f-bc4ad0d0ef64",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9d5e0d9c-aaf0-4703-884a-5fa441e7e3a7"
        },
        "item": {
          "id": "0e4b57b0-e7a6-48b6-8148-87a7428686e4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b018e80a-1e43-4631-878d-1eb6188dee25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa13e34a-86bc-4fdf-9a0f-d86c590bc71f",
        "cursor": {
          "ref": "b6862be2-8aee-4b0e-8e3b-030ed090d8c0",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "834e5a91-0606-433d-9218-f8a8c7ee815f"
        },
        "item": {
          "id": "aa13e34a-86bc-4fdf-9a0f-d86c590bc71f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1f42f855-15d8-4ada-8fb1-8f69112bb497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19756801-b82a-4430-81a0-385d231e472e",
        "cursor": {
          "ref": "22bd9d3f-0606-4f80-842c-0ac208ea7842",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "078bc851-8dd0-46ca-84bb-b2a32cb3e6c7"
        },
        "item": {
          "id": "19756801-b82a-4430-81a0-385d231e472e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0cc4694d-0137-494a-a6c2-1d1899f87a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c443e09b-6077-4b60-899e-530113ceff5b",
        "cursor": {
          "ref": "a7916c4a-6206-4c30-9ccd-ef2f041518aa",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7dd33224-576a-4a50-a939-3ba743c554a1"
        },
        "item": {
          "id": "c443e09b-6077-4b60-899e-530113ceff5b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "296f0cdf-b026-4a6e-b67b-54e00816ec7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcbd99e-1ce1-4d2c-87c7-287197ad0c65",
        "cursor": {
          "ref": "0fcfd028-f17e-46cd-99a7-64297d126086",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0384d0a2-53fb-4df5-8dae-ea93b09ca58e"
        },
        "item": {
          "id": "6fcbd99e-1ce1-4d2c-87c7-287197ad0c65",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6ba97f21-f4fe-4177-ad0c-e890ef6f4982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f78ab03-8e7b-4d7a-8a69-19f26292a0ec",
        "cursor": {
          "ref": "e182d89e-b525-4ba3-9bb7-932fd039f076",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c23e56d1-31dc-4197-b258-f82eeb1f029e"
        },
        "item": {
          "id": "4f78ab03-8e7b-4d7a-8a69-19f26292a0ec",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d1d4a8c4-c3e5-43e0-9287-c7da2a10a03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f641d753-1ca9-4a57-bac4-f17308635fb5",
        "cursor": {
          "ref": "900fbe43-a66e-4633-a67a-4e1300274dcd",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "67fd0aa9-e2d3-4f3b-8cf9-31392fa6e4ac"
        },
        "item": {
          "id": "f641d753-1ca9-4a57-bac4-f17308635fb5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "95b48d97-7f39-4d52-a899-9a502b5f17e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494104ba-4c9b-4970-9354-76b02e06e32c",
        "cursor": {
          "ref": "0aa3690a-65a9-4fd4-8985-19480b034603",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "216e4e83-6986-43d3-8871-fa31a77e26ea"
        },
        "item": {
          "id": "494104ba-4c9b-4970-9354-76b02e06e32c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fea7bb95-7f97-4ae3-ae37-dd522d51aebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b11b97-44c4-40b5-9209-5ddf0b19c8f5",
        "cursor": {
          "ref": "57126176-d927-43c2-aac8-e5b80909536c",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "403147b0-e442-4db1-a4d2-bab74eaa5650"
        },
        "item": {
          "id": "17b11b97-44c4-40b5-9209-5ddf0b19c8f5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0674b777-86c9-451d-8951-32082404ed86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1990af8b-5ad1-460f-be93-5a23a581a9e7",
        "cursor": {
          "ref": "34725f8a-cf5b-4982-9ba4-b13623421291",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "09e1c61c-3b0b-4075-a81a-3940962ea255"
        },
        "item": {
          "id": "1990af8b-5ad1-460f-be93-5a23a581a9e7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a1d8b1c9-e3b3-44d0-bf6d-c0b6cc0bd603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e9f150-0166-4a80-9c55-524aec055b70",
        "cursor": {
          "ref": "943d1b16-725b-49fb-bda8-5c9d9e9c1a73",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3a5833b4-3ada-4a46-a399-359886b10cd4"
        },
        "item": {
          "id": "b8e9f150-0166-4a80-9c55-524aec055b70",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "98611d2f-08b6-43aa-bf33-9254c9d60914",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11144342-4b41-48a4-84b3-ef28955280a5",
        "cursor": {
          "ref": "4abc0294-bddd-429a-b109-3007644b471c",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "419585e2-4c50-407c-b0c7-31da8f8a61e1"
        },
        "item": {
          "id": "11144342-4b41-48a4-84b3-ef28955280a5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4c786523-c07a-4426-87d6-8865b5edd051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20a1554-20e8-4f46-9d5e-49776f2af656",
        "cursor": {
          "ref": "e7c71ad6-eb06-4693-a3d1-3bbf14b73a78",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c96d5023-03be-4bc3-8266-acc770408c9a"
        },
        "item": {
          "id": "c20a1554-20e8-4f46-9d5e-49776f2af656",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4fc90017-e32c-4e76-94b2-a1cdcc96d353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f908b963-a3eb-4d1d-b21b-7864ec79369e",
        "cursor": {
          "ref": "5df375a0-1fac-4caa-bba2-2da0f2d019ce",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bc9fc7af-5f82-4e32-a9c3-bfbd47dcd6fb"
        },
        "item": {
          "id": "f908b963-a3eb-4d1d-b21b-7864ec79369e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7233ada9-5ce3-497a-856f-a15748373af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bceb5e20-ff47-48c9-ac61-058e2e8b3330",
        "cursor": {
          "ref": "d08719ae-849d-4c48-9f20-6a0de823220e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "821c90e8-9f55-4fc5-90b6-a495d5c8e248"
        },
        "item": {
          "id": "bceb5e20-ff47-48c9-ac61-058e2e8b3330",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f1b472c1-e944-4a4f-be1c-1f20f16ff3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10855ce4-d4e2-442a-945a-33f501e0beb8",
        "cursor": {
          "ref": "57fe549d-ac7f-4c0f-a38a-79fa7cdc3b8c",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1b8bc634-4058-4cbf-98d3-3559dcc686b9"
        },
        "item": {
          "id": "10855ce4-d4e2-442a-945a-33f501e0beb8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f98805e6-9a66-4adf-a9c6-61b0a4a7fb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14115053-a604-4c18-86fb-af2b547d3e4f",
        "cursor": {
          "ref": "46b78038-392e-4a09-ab2d-22bbb7bb2444",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bb7cbac1-96f2-4a75-9613-afa2302e53ad"
        },
        "item": {
          "id": "14115053-a604-4c18-86fb-af2b547d3e4f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e673154d-7f72-48e5-8b61-daa98c0a7a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed012183-5cca-43c3-92a2-c929d4f01c2e",
        "cursor": {
          "ref": "5f5a5cc2-1ae3-46ae-9093-b7813700a92e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d03dfb5d-ad26-41bc-84ae-78bdc3972f50"
        },
        "item": {
          "id": "ed012183-5cca-43c3-92a2-c929d4f01c2e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f595c9ff-9c07-413e-8b2a-0e9b6217afa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a120f53-0d38-4a05-9eb3-3cb3976306bb",
        "cursor": {
          "ref": "f978bf53-198a-4f7f-90bd-0cd6059cea91",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "06281305-b9ee-42a4-a86c-f269e9adea04"
        },
        "item": {
          "id": "1a120f53-0d38-4a05-9eb3-3cb3976306bb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c011ab0e-aa40-4690-bf6f-5c897374f907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e765cdb-afaa-4112-a0ce-b2114862a7ef",
        "cursor": {
          "ref": "b8ef084b-055b-4ce8-b58c-1b7118fa3e2e",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3a574c1d-18bd-421c-a9cd-d10d0e53b1f3"
        },
        "item": {
          "id": "0e765cdb-afaa-4112-a0ce-b2114862a7ef",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "43b11386-cf37-49bf-a4ab-77c4e44e9125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e62d3f4-c0e9-4965-8e8d-487d828fe258",
        "cursor": {
          "ref": "7ca90229-ac05-4c2e-9b69-ab14ba5615bc",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "68d2ca1c-04da-4b3a-b17c-8b3fdf2c8ca6"
        },
        "item": {
          "id": "8e62d3f4-c0e9-4965-8e8d-487d828fe258",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "111f9973-04ec-4feb-96c7-479c05e3f02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52546cb-0f68-4761-abe3-23a3a789484a",
        "cursor": {
          "ref": "418f144a-446f-424b-976a-47d799bf28d4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "08537d54-0675-4348-9988-157fb6080313"
        },
        "item": {
          "id": "f52546cb-0f68-4761-abe3-23a3a789484a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "aa7c19f6-cc51-46e2-b8a0-329da6e8d82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738f4004-991f-4039-88de-4d4762705c59",
        "cursor": {
          "ref": "f90cc043-f97f-4ef9-a6eb-2d3599521b19",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a9245e33-fce3-4bc7-bdd1-df6f0cc11a77"
        },
        "item": {
          "id": "738f4004-991f-4039-88de-4d4762705c59",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "beb8b83c-fa2d-4ddb-9df8-153cbda6e8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e411ee-ae0e-4c00-805b-bac8fc8356b4",
        "cursor": {
          "ref": "66cea1b7-0e5b-461a-b49a-bc6a6a5b57fe",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "84811302-4c8f-45a0-90b4-67afc4538ce9"
        },
        "item": {
          "id": "b9e411ee-ae0e-4c00-805b-bac8fc8356b4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e127fdc5-e576-40c8-a972-57d681363997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daccbcb6-d215-4f2b-9a25-5bba81985d0b",
        "cursor": {
          "ref": "cdead991-ba55-41b2-a674-eb8823033cb2",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4b2e76b1-7bb6-4531-b0c5-8b9711b8e387"
        },
        "item": {
          "id": "daccbcb6-d215-4f2b-9a25-5bba81985d0b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6640946b-6de4-439e-8966-9412eea441a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba0f46e-cf56-4e52-a911-1bf6cd2ce3f0",
        "cursor": {
          "ref": "a255183e-0faf-4f15-82bb-71eacde20e61",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "37b86a82-c3bd-4dfd-a765-9a50c65ed873"
        },
        "item": {
          "id": "aba0f46e-cf56-4e52-a911-1bf6cd2ce3f0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2fb3af1a-c6cf-4975-81ce-7ffdae57f852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c07053-64cb-4ccf-9dc4-47eb7d686c3b",
        "cursor": {
          "ref": "1fd3123c-046e-40f4-b99f-5911c78f3994",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7cb1aae4-efd7-4538-8597-1a360e6d6785"
        },
        "item": {
          "id": "e6c07053-64cb-4ccf-9dc4-47eb7d686c3b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5b1e4208-f62c-4425-80ee-fa02150f3e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995b9445-0a09-40e5-851a-c1f6e262d0a4",
        "cursor": {
          "ref": "cf70c97f-c238-4796-a681-c29afca39db3",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "11bee675-3b39-490c-b03d-0a3f727bf30c"
        },
        "item": {
          "id": "995b9445-0a09-40e5-851a-c1f6e262d0a4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9ea581ad-9888-4bde-8051-55f5d85b2972",
          "status": "OK",
          "code": 200,
          "responseTime": 200,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "f07ab659-bc0d-41e4-a7fb-5e29e7d97ec2",
        "cursor": {
          "ref": "bf84d8d7-1423-4724-9dfc-6b4ecf1e1175",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "723c55c6-0515-4732-9e74-51117d6be53a"
        },
        "item": {
          "id": "f07ab659-bc0d-41e4-a7fb-5e29e7d97ec2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "995e0063-b420-4959-b8e6-9bae92bf603c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcaf409-2b2e-45ee-bf7a-02a965e33c0a",
        "cursor": {
          "ref": "f5e23437-c57d-46bf-a0e5-222fc8b5e49f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d61822f1-7041-4a90-9476-4c018d9e1fc6"
        },
        "item": {
          "id": "4fcaf409-2b2e-45ee-bf7a-02a965e33c0a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ecee4eec-aedd-4cef-aa75-335285f588ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca63209d-ca8b-4bf6-909f-715e257e531c",
        "cursor": {
          "ref": "fe656b3c-7891-4e45-ba52-05b4f8ede2ab",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "59e664ba-1e34-4217-b1b2-de7940014f55"
        },
        "item": {
          "id": "ca63209d-ca8b-4bf6-909f-715e257e531c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2760b29e-d834-4c40-af3f-7be5a3152276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a99519f-ba05-42db-bbb1-81d2d25e081d",
        "cursor": {
          "ref": "4a41bf4e-2ddd-4075-9876-744204b68d2e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "78ff8299-ccf3-4686-bd34-1c01cfc063e6"
        },
        "item": {
          "id": "3a99519f-ba05-42db-bbb1-81d2d25e081d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "71e40a82-a508-4c4a-ac83-d46d26fa7085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28342694-b2fc-4f09-bc6a-22169812c781",
        "cursor": {
          "ref": "3b9d63dc-1862-4f62-ad46-f0cb82b46c42",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "85513103-e46f-4ce7-8645-589d8b309acb"
        },
        "item": {
          "id": "28342694-b2fc-4f09-bc6a-22169812c781",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fad08c99-8765-4637-8fac-55b6b22c86c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cc7526-3104-4cf3-985d-520db1f4d62d",
        "cursor": {
          "ref": "f024ad7d-a6cd-408e-8a60-7f7246f846e2",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f7466bcd-3066-4779-be72-10e030ff6aa2"
        },
        "item": {
          "id": "c5cc7526-3104-4cf3-985d-520db1f4d62d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "72e83705-8c32-4f98-8058-92d08c430a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e43d0c-dd54-4484-8c93-93679c6f177f",
        "cursor": {
          "ref": "ff06694c-edb2-4c9c-b90a-b6140bf6c581",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "76350637-6d81-46cc-9c8f-490dd27cee1d"
        },
        "item": {
          "id": "d0e43d0c-dd54-4484-8c93-93679c6f177f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c7ff334d-7ff4-4951-9d1c-bae983aec430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c248eb-8862-465a-b2f4-cd6989c2bece",
        "cursor": {
          "ref": "e177c996-2a58-44ba-8a34-bfad2994b8e2",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "25c922e9-40bc-49f4-a253-da844570c96d"
        },
        "item": {
          "id": "67c248eb-8862-465a-b2f4-cd6989c2bece",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6b8d9a0f-c1f6-40b7-8100-20e2744f100c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0751aff-1123-4dd8-a410-fe6aa64628c8",
        "cursor": {
          "ref": "12c74a4e-c608-4213-8713-06d304955d81",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3bd79493-2f04-4be3-b1ed-8357b0da6277"
        },
        "item": {
          "id": "d0751aff-1123-4dd8-a410-fe6aa64628c8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2bdbc17c-c162-418f-aea1-46e0dd48dc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41507d25-e5f0-4298-b069-420b42b1cd94",
        "cursor": {
          "ref": "b3b7b694-c945-4306-bb3b-6e94534623a3",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "60ed2734-ce13-4015-ae63-90ac1731ca3b"
        },
        "item": {
          "id": "41507d25-e5f0-4298-b069-420b42b1cd94",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "db572e32-0461-4121-8e8b-cba50b7a6247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31f542e-8b65-4c4e-9a4b-3637e5eed6b1",
        "cursor": {
          "ref": "5584f3df-8a40-44d1-93dc-b4bfd29c18d9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1754e552-a519-46b0-a427-a5dbdde00c2c"
        },
        "item": {
          "id": "f31f542e-8b65-4c4e-9a4b-3637e5eed6b1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "969516ab-b5f3-443a-a28e-fe82d416cbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4030440e-ceaa-4815-a5bc-1a78b47b6e08",
        "cursor": {
          "ref": "5b64c744-86ac-4ff1-b4cb-d9bd8caa91b1",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ef332cfb-ee71-4988-be79-8b6f620798e8"
        },
        "item": {
          "id": "4030440e-ceaa-4815-a5bc-1a78b47b6e08",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2870e2e8-5d11-4cfe-a6ff-04923d18d9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73089e66-b6dc-4338-92bc-b6e92554df74",
        "cursor": {
          "ref": "3064859f-f7bb-4d5b-b4e8-8960d0f2f405",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "50c76a57-b8d1-43f3-ab7b-a42cf0b50595"
        },
        "item": {
          "id": "73089e66-b6dc-4338-92bc-b6e92554df74",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b3dfeee7-b390-4000-85fa-758bf095f3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430873e5-0e07-42be-987a-9f8415be8cd7",
        "cursor": {
          "ref": "306c92a4-946c-400a-a26d-7ea635d7c608",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7461dd37-d659-431b-bba4-d5d7f71544d6"
        },
        "item": {
          "id": "430873e5-0e07-42be-987a-9f8415be8cd7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "17710224-1e94-405d-a6bb-4246c32cc34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21f0c6c-318c-4f6b-a7d9-b454ec9d1bab",
        "cursor": {
          "ref": "1efc7a54-4e2e-4dd9-a063-90a87a2d7a97",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ccda1870-1747-43a1-8907-cb41fff0611c"
        },
        "item": {
          "id": "a21f0c6c-318c-4f6b-a7d9-b454ec9d1bab",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a15490c5-2e61-4cc9-afd8-04b1732257eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d769ca-5239-4315-b6e6-24973df94612",
        "cursor": {
          "ref": "9af742a3-7fe1-40cd-8a07-857855f97ba5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "78759aee-542c-46f2-9683-b4e75afddfd5"
        },
        "item": {
          "id": "95d769ca-5239-4315-b6e6-24973df94612",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "905b91f5-4f02-4755-9286-ac80e5e92161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1605ab2e-5e49-40fb-af6e-d453b01c0ba5",
        "cursor": {
          "ref": "7dd8540f-6c2a-40a8-8670-bd48027c35ff",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "85be3dd5-5d80-4acc-a611-baaa77c154ce"
        },
        "item": {
          "id": "1605ab2e-5e49-40fb-af6e-d453b01c0ba5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d6ffa581-8d49-4795-8e0d-5fe09853d95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7ffb00-940d-4d8a-be8a-59043aad339a",
        "cursor": {
          "ref": "28b76903-a136-487f-ada9-3372900acd3f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0d254ec5-6747-491f-a36f-e08baab82ab9"
        },
        "item": {
          "id": "eb7ffb00-940d-4d8a-be8a-59043aad339a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6a0fbb7f-5930-4c53-b7cd-75b49dcdc8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b447e106-6765-4534-bb9a-e5d7a8283514",
        "cursor": {
          "ref": "d5b5829d-3732-4751-b499-d38bc7b43598",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2d3f12dc-c4e5-45ba-b8ef-a9b2c94947b8"
        },
        "item": {
          "id": "b447e106-6765-4534-bb9a-e5d7a8283514",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cb53eab8-3c48-4803-9ade-feef5f485aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06cca0d-ebf4-488f-83da-78261af46b24",
        "cursor": {
          "ref": "48a159a1-04cc-482e-ae02-019e4eac45d1",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f3cbc4d2-c8d2-44d1-870b-e59f48a8f5ea"
        },
        "item": {
          "id": "a06cca0d-ebf4-488f-83da-78261af46b24",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c4e46d79-bcc2-4a12-b9c3-05b365f06821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ba8e3b-4fba-40d1-8dfb-14d071942046",
        "cursor": {
          "ref": "3cb659b4-8403-4b63-a477-e59f9c1a3820",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0cb3bb15-70dd-47cd-90ab-647b2d65f3ca"
        },
        "item": {
          "id": "d0ba8e3b-4fba-40d1-8dfb-14d071942046",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0403d6e8-fa0d-4598-bc00-5d7bfd10cb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae85ff6-d934-4b22-a9e4-322427a6492b",
        "cursor": {
          "ref": "0c7847d9-ce0c-4e23-a086-30077529675c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8ada7315-1be3-45bc-85c0-f027a15e50b3"
        },
        "item": {
          "id": "1ae85ff6-d934-4b22-a9e4-322427a6492b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "783604db-e46f-477f-8812-11d6fe0e66bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487c5af7-22a3-41dc-9bc1-7301a21a2938",
        "cursor": {
          "ref": "875514fd-a509-41f7-9085-b2054af711e3",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1f915705-9ed5-4066-a839-846a2670a89a"
        },
        "item": {
          "id": "487c5af7-22a3-41dc-9bc1-7301a21a2938",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3cb310a5-8796-43cf-ac05-38ef7963cc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef111060-34c4-46c9-a6d6-bf8e5ee66c54",
        "cursor": {
          "ref": "fa02ed86-fa69-4062-8f40-ac6f224f2b0e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2d357453-29f6-4d12-8e0b-06d3638d555e"
        },
        "item": {
          "id": "ef111060-34c4-46c9-a6d6-bf8e5ee66c54",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5d35c23e-7de4-4b4f-9c01-208d4ffdd890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727568ac-f77d-484f-91bd-2036f5c2078f",
        "cursor": {
          "ref": "de8a1083-baf4-4145-b089-be80a6c8b766",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "41cd2a0b-832b-4b84-943e-f8abc75c1208"
        },
        "item": {
          "id": "727568ac-f77d-484f-91bd-2036f5c2078f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0988f135-25d4-4277-8fd0-c0c62af85c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa70f24-d916-4b87-a00b-5afb95053520",
        "cursor": {
          "ref": "bdf33fe1-4a38-4a92-9365-bb05e6371553",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4f9ecb98-0d1d-4f92-a339-cb9f5c1ce63c"
        },
        "item": {
          "id": "caa70f24-d916-4b87-a00b-5afb95053520",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ad9b8a65-4eaa-4d88-819e-550a9d371deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ec4701-4e1a-49c5-9b40-b7123f82a775",
        "cursor": {
          "ref": "af143f77-37d8-4e5e-ac32-9c9e3d29f485",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3d572230-3faa-4709-95aa-5d16b943dfc7"
        },
        "item": {
          "id": "14ec4701-4e1a-49c5-9b40-b7123f82a775",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9bd49064-9d5d-41fe-83fe-eeac780e717f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00245f2-99bc-46df-88fc-488ba9030ad5",
        "cursor": {
          "ref": "8123a3d5-3590-4812-bad9-a6df3c572e24",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "859e5968-3f2e-4cce-82ac-00e7b2940c42"
        },
        "item": {
          "id": "f00245f2-99bc-46df-88fc-488ba9030ad5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f1a0ad6b-115e-4035-abae-74bee9ea4c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36b8bdd-423f-474b-b54f-00dfa5cfecb4",
        "cursor": {
          "ref": "5eb15e62-cc47-4e03-8edc-1a7cffaecc4d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ba95f5a2-55ca-4181-944c-8fb8a328a3c7"
        },
        "item": {
          "id": "d36b8bdd-423f-474b-b54f-00dfa5cfecb4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "49bd7583-f4ae-48b4-a1be-f804996d1864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61477a8-44e3-428e-b67f-44ecc230697f",
        "cursor": {
          "ref": "28b91805-0bd3-4879-aa5e-499fb3dbc170",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1f728b61-11dc-4761-b87a-cb46ce11bfe5"
        },
        "item": {
          "id": "f61477a8-44e3-428e-b67f-44ecc230697f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ab897d61-b8f3-4fc6-842b-740a8720b8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3919990f-8cbe-4e74-97f0-2bdd96caebbf",
        "cursor": {
          "ref": "77a2bfd3-a271-40ff-bcaa-3294134a8356",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d704bf6a-9606-4be9-97f0-6e98f46dd138"
        },
        "item": {
          "id": "3919990f-8cbe-4e74-97f0-2bdd96caebbf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6827c04d-552c-4371-8854-b597185d7d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15c494a-3863-41f9-8cc1-f7bf8ac400a8",
        "cursor": {
          "ref": "d5bbea63-adf8-477b-9aaf-3a5c90f2aa4f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "10da892e-6c8a-4e61-a9c8-e5b8a9fadcb2"
        },
        "item": {
          "id": "f15c494a-3863-41f9-8cc1-f7bf8ac400a8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8d209cec-580a-4995-915e-e8c029a03dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11886740-a92b-4596-b134-fca241adb495",
        "cursor": {
          "ref": "541a2ec8-9185-471f-8bee-b0fe3334093d",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "686d7533-db2d-40dc-848b-9e34e073336c"
        },
        "item": {
          "id": "11886740-a92b-4596-b134-fca241adb495",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7ca1b615-6b0a-4bd6-a25f-a419efc3ad30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e5300f-b65e-4389-8848-30f6e49d1a82",
        "cursor": {
          "ref": "44ce5648-f659-4409-83bf-ea1c8e5cbef1",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f97b6493-7525-43b3-9b1a-77b3dc66c66f"
        },
        "item": {
          "id": "d4e5300f-b65e-4389-8848-30f6e49d1a82",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f4189458-0e17-4652-8a64-f7049a150751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dded8da-fc43-4257-bf99-813aa03d9529",
        "cursor": {
          "ref": "7f36a253-5d61-495a-acf2-be610c8232cb",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "39402cec-ea80-433d-a9b8-9c3e26b26b6a"
        },
        "item": {
          "id": "6dded8da-fc43-4257-bf99-813aa03d9529",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4aacc46a-82e5-4ff2-a0b4-31eb269b09f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ba8491-8d7e-4f7f-9f5a-c535504d3f0c",
        "cursor": {
          "ref": "e724d02d-336a-4375-8fa9-5407e140e1ad",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fc9628da-4cbe-4291-a181-98d4552a4a04"
        },
        "item": {
          "id": "e8ba8491-8d7e-4f7f-9f5a-c535504d3f0c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cc0c60ac-07ee-448b-81e5-ad96104e3cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be3b0e1-d48a-45dd-bd55-5f63c9af92be",
        "cursor": {
          "ref": "e4f702cb-faaf-41c9-90f4-1f19d714f9ee",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f9f6e108-8440-4902-acfc-d9dd9be09858"
        },
        "item": {
          "id": "6be3b0e1-d48a-45dd-bd55-5f63c9af92be",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c75c63e7-60e4-416f-ba76-0a29cb16e87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e906718-f46f-4e66-9141-8c53df83242a",
        "cursor": {
          "ref": "a290e377-8687-470a-895d-89743a88e0ee",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c7322439-01a0-45bc-b9af-ec619952e7bc"
        },
        "item": {
          "id": "0e906718-f46f-4e66-9141-8c53df83242a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dd66314e-7b06-4d7c-b411-ead34e9da1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2cfbcd-139b-4672-9096-594ab3bf8029",
        "cursor": {
          "ref": "4ef7fefc-6cd4-4996-93f3-ffec30e85545",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "749b055c-8cfb-49d9-8651-02ad309593b7"
        },
        "item": {
          "id": "cb2cfbcd-139b-4672-9096-594ab3bf8029",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "26454cd3-8b6c-4076-9950-c86508f838f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92228aff-e30f-408f-a940-1227a9b95ed1",
        "cursor": {
          "ref": "09529abd-f1ea-4b4b-9be0-9902eeefe5b5",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "69583846-890d-4240-8a7f-cf1064aca98f"
        },
        "item": {
          "id": "92228aff-e30f-408f-a940-1227a9b95ed1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d0c9962e-a885-4ed6-b9ab-568cfccf4030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b46082-0f69-4910-b48e-fdbe5c60f787",
        "cursor": {
          "ref": "0fe77027-11d6-429a-beae-e774665dbd76",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "01b9d157-e939-41e7-8d79-26586671bb0d"
        },
        "item": {
          "id": "89b46082-0f69-4910-b48e-fdbe5c60f787",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2bdfa6a8-d1bb-4712-a083-2b33fee7855b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b15acf-0808-47b3-acb3-e3c6dca636bf",
        "cursor": {
          "ref": "1feb312b-646f-469e-b39d-2d98e3713e22",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d9ce1afd-5476-49a2-a7c8-2d9eafd6e4f3"
        },
        "item": {
          "id": "e8b15acf-0808-47b3-acb3-e3c6dca636bf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "aa1625b7-a0b7-49db-9ea8-3a7315d0c96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b846a7-54dc-412f-922d-c99a0a13cb96",
        "cursor": {
          "ref": "c088c95d-6295-4fc9-ad3b-8841ed4a2bcb",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ccacf391-a3e1-4a1c-b328-20ec47108069"
        },
        "item": {
          "id": "46b846a7-54dc-412f-922d-c99a0a13cb96",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f88e34e4-4838-4af1-b264-f04a580db2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a59db7-34f7-49cc-823a-de4872294754",
        "cursor": {
          "ref": "0b1cf178-df78-405f-a3ea-da018b17782e",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b7a54fe3-5fc4-4483-870d-00ab531e52c1"
        },
        "item": {
          "id": "41a59db7-34f7-49cc-823a-de4872294754",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9044bc5e-259c-4541-b6f9-bed5c55b224c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307018ad-951f-4075-bf88-cbb7d4ff9478",
        "cursor": {
          "ref": "b6c598de-600d-4808-95d3-e3eff97cb4fe",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "34b9e663-e904-4639-87b8-05ddd2d9151b"
        },
        "item": {
          "id": "307018ad-951f-4075-bf88-cbb7d4ff9478",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e2f4d1b9-d1f0-4e28-839a-6f448d21e44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ce91e5-75f0-4990-8c07-96220e1389b7",
        "cursor": {
          "ref": "2ca8ce57-27d7-46ae-9144-73e13b983e6c",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d1204354-0d87-4393-b9dc-e1382cd41116"
        },
        "item": {
          "id": "83ce91e5-75f0-4990-8c07-96220e1389b7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "447506d7-6be5-4fad-8bf4-8aa78323e232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994932e9-f55e-4f9b-a470-4a1f9debcf3c",
        "cursor": {
          "ref": "0caec4ae-742c-4b6d-ade0-132d90cd76e2",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a72eb397-ecd3-4bb2-a4c7-88816c087144"
        },
        "item": {
          "id": "994932e9-f55e-4f9b-a470-4a1f9debcf3c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b0f2f422-da3d-4bc7-afe2-fa79d832eb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40ee6db-2ec2-4117-8210-df8a66244d39",
        "cursor": {
          "ref": "68ba12d6-1362-4021-a9d4-72870852b391",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "98c62f90-f516-407b-bfed-3f29537632b1"
        },
        "item": {
          "id": "e40ee6db-2ec2-4117-8210-df8a66244d39",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c66a2366-9646-44f6-94b6-afbec4c7f8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea567283-dc8b-491b-a023-f81d44b3edcf",
        "cursor": {
          "ref": "a81943f2-7079-489a-8dfe-c033a35b303c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "47130e67-0a67-4a7b-b6cd-8e0356c24a78"
        },
        "item": {
          "id": "ea567283-dc8b-491b-a023-f81d44b3edcf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9718c856-616c-4ab9-ad6b-2e574c43a7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd56a828-8fe9-402b-905b-c1ba7997d350",
        "cursor": {
          "ref": "8de0f187-52ec-4e66-8da3-9ea5d308aaad",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "02c85c36-dec7-4a45-86a9-5fe27face964"
        },
        "item": {
          "id": "fd56a828-8fe9-402b-905b-c1ba7997d350",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1c8f07ab-5298-49f5-9a3f-c31c0e9619af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1304b1d8-4d50-4d0f-a610-28dcd9920605",
        "cursor": {
          "ref": "2ba3cba3-673d-4c13-827a-a68d0a241dbb",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7f3d6cf4-c65b-49c7-9bfc-c4c6d14f17a9"
        },
        "item": {
          "id": "1304b1d8-4d50-4d0f-a610-28dcd9920605",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6c815333-ec6a-4a92-a73b-f76b327b1070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cf6475-4196-4123-871f-0f5c920c0a28",
        "cursor": {
          "ref": "b5727466-c707-469f-9c32-d78d162f6255",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "436b306f-606a-484d-992c-40ed67475031"
        },
        "item": {
          "id": "62cf6475-4196-4123-871f-0f5c920c0a28",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1bc5de15-54ad-4d44-a116-ccb67da7d294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896dc81c-8dff-4865-a7d5-2107a9639536",
        "cursor": {
          "ref": "21e35817-3edb-427b-a00c-52d52d8119d1",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3480bb48-e60c-4a11-889b-7a409b895f03"
        },
        "item": {
          "id": "896dc81c-8dff-4865-a7d5-2107a9639536",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c36399b3-27e6-47e5-a607-9416561b6f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc626482-be3f-492e-8c48-3c1b859bf917",
        "cursor": {
          "ref": "770cacbf-27df-4874-8fd8-3ccf2fd2883d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "57609bbc-7f1f-4ea3-8605-4fa3f9dac766"
        },
        "item": {
          "id": "bc626482-be3f-492e-8c48-3c1b859bf917",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "683f2df7-29d2-499f-81d1-d09885108f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c33f361-e90a-4731-985e-9893edd0cb58",
        "cursor": {
          "ref": "0ae57cc9-6c36-41c1-8c21-adfa37465ef9",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7de27290-a8f2-4c05-a6fb-54cb5a56e38a"
        },
        "item": {
          "id": "5c33f361-e90a-4731-985e-9893edd0cb58",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "849f24ce-5500-4ae1-a263-41b6e4251477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f8b75c-a7dd-4d05-908d-546f5a8d2495",
        "cursor": {
          "ref": "8217cee9-f20f-4501-8d86-de449a193f16",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f507504a-f175-4ef0-bbe2-16231e7623e9"
        },
        "item": {
          "id": "73f8b75c-a7dd-4d05-908d-546f5a8d2495",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7a4e8ef5-0500-42ac-aed1-1870534405be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1cec3f-b0e9-407a-8da1-b93f8baf9072",
        "cursor": {
          "ref": "02811913-85ed-4592-aa88-9e9cb8a0693c",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3728bb33-d4a4-4162-921c-5e8fcd37ca27"
        },
        "item": {
          "id": "6a1cec3f-b0e9-407a-8da1-b93f8baf9072",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8c7c3edf-fb2d-437e-a24f-cb3853adc692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bf8ef2-ccd2-41d7-8f50-1704f8e3ab21",
        "cursor": {
          "ref": "13c6522d-d06f-4d82-bac6-8ad4d9b61e7d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d1ed2ea3-cd18-44d3-9590-bc6bd5c8b957"
        },
        "item": {
          "id": "60bf8ef2-ccd2-41d7-8f50-1704f8e3ab21",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "12f9acc9-52af-435b-8786-0e785c8b2fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc724e39-b264-4fa0-be79-3249f0da985a",
        "cursor": {
          "ref": "8186e957-96bd-4d40-aaff-16dbe128a44b",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "106c4af6-adc7-4a6b-ad0e-479163c63751"
        },
        "item": {
          "id": "bc724e39-b264-4fa0-be79-3249f0da985a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b95c06b7-0261-4121-9c42-63e481ebc904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dba507-21c4-4cc8-aa6c-f78fbe3b70c2",
        "cursor": {
          "ref": "7ad7e4aa-6bfd-499e-bd57-46738fcbf752",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "66cf8ac9-337f-44bd-835a-d1f7f548e78b"
        },
        "item": {
          "id": "b2dba507-21c4-4cc8-aa6c-f78fbe3b70c2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a5c5807a-ebb3-475b-bfd8-740f5c517449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e55f69-ec1a-43be-9f0a-45050e34e6f4",
        "cursor": {
          "ref": "f3d5213a-d2e4-4953-bb47-16a5bebbe5c3",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1eb7f979-e98b-4307-a27e-6bfcf320d15a"
        },
        "item": {
          "id": "c7e55f69-ec1a-43be-9f0a-45050e34e6f4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cd080e90-0770-4342-9957-f6724e7885d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573cdb78-7c30-4c66-ab58-df2e4f25ef59",
        "cursor": {
          "ref": "8569def6-8353-4643-869d-f09943eb9624",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "827c4ee3-e11e-47e7-aae5-770773eb37d4"
        },
        "item": {
          "id": "573cdb78-7c30-4c66-ab58-df2e4f25ef59",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "850a9fcf-db9b-4723-856f-7e2450680f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188699b9-ba5a-45ed-814a-99c741a828bf",
        "cursor": {
          "ref": "03b4843c-84c7-47f4-84be-45d79ce9158e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "76a8ce73-cf49-4d36-a5d7-96452b3c4723"
        },
        "item": {
          "id": "188699b9-ba5a-45ed-814a-99c741a828bf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "86fc3a03-ced1-442b-a65f-e15502f34cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d414a6c3-86b4-4d8e-a288-b160ebbc7a1e",
        "cursor": {
          "ref": "b1fc22de-7af1-434d-a279-b9afc16a8cd9",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7c4f8ef3-ae2e-45d7-bdbe-f37b843d3753"
        },
        "item": {
          "id": "d414a6c3-86b4-4d8e-a288-b160ebbc7a1e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "38628f84-a417-4ef8-b485-1c12baad4f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9b0182-4997-4a95-bb98-3ea7c843f7d2",
        "cursor": {
          "ref": "4d73ca8c-fe15-4efd-bdce-7e2ff05fb731",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "02c7b57a-0111-4cb5-a52b-ff8fd36af98c"
        },
        "item": {
          "id": "6a9b0182-4997-4a95-bb98-3ea7c843f7d2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b79414ab-e570-4502-8d25-48e4fc4bbd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b4b900-a5c2-498b-98d4-18a28316f9be",
        "cursor": {
          "ref": "e7324037-e088-4b78-a58e-d7a3fb1f61e8",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "71caaa79-3930-4bd1-bea4-cbedc6968bb7"
        },
        "item": {
          "id": "09b4b900-a5c2-498b-98d4-18a28316f9be",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "091085d2-a674-42f1-82ae-6b2617061061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a98a324-c752-45ee-b8ec-e7f9ed47b59a",
        "cursor": {
          "ref": "31502158-6a2d-4e49-855e-f7bb72a21c56",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7796ad43-bdb3-4ad6-8ded-9cc7a9605759"
        },
        "item": {
          "id": "5a98a324-c752-45ee-b8ec-e7f9ed47b59a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c5fc65c0-627d-4ecb-8a27-02fc94784880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfdb7e1-fbd2-4fcb-a108-926362ab2be3",
        "cursor": {
          "ref": "31cc1a7a-20e9-4fa6-9f87-10eaa830f605",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "855ce65f-aa8b-4318-85c3-4f1266e25dfe"
        },
        "item": {
          "id": "1bfdb7e1-fbd2-4fcb-a108-926362ab2be3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "75142cc8-4042-4469-8209-ae046417ef68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbe62f0-1be7-4ee7-ab7e-dbf7a76fa3ae",
        "cursor": {
          "ref": "dcb5d773-5f05-4b08-8881-c708bd26bdf5",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9621ed6b-0ad2-497a-9d58-bc5ae8fc188a"
        },
        "item": {
          "id": "0cbe62f0-1be7-4ee7-ab7e-dbf7a76fa3ae",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "381bff80-baf9-4152-a771-b11bcd764c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2badd02b-c3c3-4964-95aa-911a7763389d",
        "cursor": {
          "ref": "508eb5b4-4739-432b-9e03-3e05dd8b2f44",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8d900df8-9d3b-460e-af32-862bda52670c"
        },
        "item": {
          "id": "2badd02b-c3c3-4964-95aa-911a7763389d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d5b4d698-a1b3-44a7-8a2f-f0f90122ec64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f045c644-f7bd-4e3a-8458-20d0f0e26b38",
        "cursor": {
          "ref": "07e9ae96-d204-4702-a140-998445c816d4",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1c28ce46-f40a-4c8c-bcf9-fa12e1760de9"
        },
        "item": {
          "id": "f045c644-f7bd-4e3a-8458-20d0f0e26b38",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7238a9cc-5e19-4f15-8a92-3facf0018df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32807b06-f4fe-429c-99c4-01e546123ff2",
        "cursor": {
          "ref": "45f5a3de-64f3-413b-82fb-c751a9c4daa3",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c3925c36-e8f6-4cd2-8fbe-53b6c8375a9f"
        },
        "item": {
          "id": "32807b06-f4fe-429c-99c4-01e546123ff2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "086a29ff-e8c7-4049-aa0a-c13ea4def7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93afc8df-44b6-442f-bcd1-6d809a3fccc6",
        "cursor": {
          "ref": "45adb803-a467-41d8-9b93-ccf193bc2873",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4b171951-b89c-4f7d-980d-ee1ba2028049"
        },
        "item": {
          "id": "93afc8df-44b6-442f-bcd1-6d809a3fccc6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "62f2b27c-99dc-4c6a-ab6d-9059c7b350f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391ec475-9473-4aa8-9e7f-c294ad2bbac5",
        "cursor": {
          "ref": "b19e6960-e5d4-4afc-9921-106a0515a37b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5deb0794-d64b-4cac-91a5-239cf4f53a1f"
        },
        "item": {
          "id": "391ec475-9473-4aa8-9e7f-c294ad2bbac5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "38691d99-0720-4b34-9326-ec4b1546bd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60305583-758f-47c9-99b9-efc4857ba1c7",
        "cursor": {
          "ref": "96a7d342-4e77-4d22-9b6c-8c605ba6e002",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "070cc4db-6c33-4007-88c4-028b6a751b72"
        },
        "item": {
          "id": "60305583-758f-47c9-99b9-efc4857ba1c7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1140ad65-3702-45bb-a7c7-323500130c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d12fdb4-f964-4ebc-a96e-cff13ea6bcf6",
        "cursor": {
          "ref": "1020d4c2-b44e-4776-bf9d-546f78870738",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "083ac851-6a0e-46ae-9c85-3c42ecca1b59"
        },
        "item": {
          "id": "6d12fdb4-f964-4ebc-a96e-cff13ea6bcf6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7b9498bd-0b8b-4035-b397-a95d2fdb8f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb90661-842c-4f78-9ca8-4d022bef4957",
        "cursor": {
          "ref": "cb0e0ce4-8493-4788-8807-55f0d1b72a6d",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a8338fe0-c2d3-4f31-928a-5e9b310dd638"
        },
        "item": {
          "id": "3bb90661-842c-4f78-9ca8-4d022bef4957",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b37c0760-4619-4df0-a48c-c1ffd675a808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b986e54-2a96-4c7f-9e55-0ad3ef87a13f",
        "cursor": {
          "ref": "56e484e4-1b66-45f3-a25a-a91404e85ee0",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1176732f-c2a5-4c59-9257-082c02fc64d4"
        },
        "item": {
          "id": "0b986e54-2a96-4c7f-9e55-0ad3ef87a13f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "74df29ea-2e4e-47fa-97f6-e310774e23e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5652222e-4b68-441c-b61a-ea5e03056722",
        "cursor": {
          "ref": "1c9e908d-2d88-4b1d-93c3-d3f153a977e4",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2645198d-f547-4117-885e-7ec5856be93b"
        },
        "item": {
          "id": "5652222e-4b68-441c-b61a-ea5e03056722",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "95f2b45c-00db-475e-99b0-653f89e9a853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2990ac-8277-4923-a8c2-aeea963d9800",
        "cursor": {
          "ref": "9cdf81a6-f1d0-48ad-8807-2ad54bff6b23",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f684fe50-761f-4e56-b36f-53ceb9bb74ae"
        },
        "item": {
          "id": "7b2990ac-8277-4923-a8c2-aeea963d9800",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a37b3635-4d06-45ea-a9ad-e3552edab5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1261b296-fd25-4d7e-86e9-87e8ffe09fc4",
        "cursor": {
          "ref": "b5406f4e-4274-4949-85ea-1a0bb38920de",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9d0fd012-964c-451a-adcc-f25d6041456c"
        },
        "item": {
          "id": "1261b296-fd25-4d7e-86e9-87e8ffe09fc4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "813b106f-8dfc-4a6e-8015-c914f7bda9e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe05fc2-dd2e-421d-87e1-dc6ef4217d6d",
        "cursor": {
          "ref": "ffe52429-b81b-44a1-a630-951c7cb98813",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "aa88a133-8d7e-4f5b-86bf-26c3b6050be5"
        },
        "item": {
          "id": "4fe05fc2-dd2e-421d-87e1-dc6ef4217d6d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "454e0192-7546-496e-8caa-e9faa4e07739",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "833c4938-1500-45e7-a09d-db009b2648db",
        "cursor": {
          "ref": "810cf45f-cd2a-4540-a12c-65a296241ce6",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b9e7db47-699d-4ce8-9fd9-b1e406d85c0c"
        },
        "item": {
          "id": "833c4938-1500-45e7-a09d-db009b2648db",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0b5b269c-ae25-4338-9b9b-fa29b8fec743",
          "status": "OK",
          "code": 200,
          "responseTime": 1820,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b01524-cd82-42a9-b389-a7308ec1c3c7",
        "cursor": {
          "ref": "c25509f8-de2c-4775-a1fa-fc13d11c870c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "fb7e975e-50a9-4b83-ad5e-5ed4d7e0d3e3"
        },
        "item": {
          "id": "52b01524-cd82-42a9-b389-a7308ec1c3c7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5800b989-a0eb-4939-907d-6794e5f546e9",
          "status": "OK",
          "code": 200,
          "responseTime": 3219,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a1cc1c-351e-4841-99aa-b4ebc42167a7",
        "cursor": {
          "ref": "94b1c8d7-9bf0-42ea-b2cd-d230726859fa",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e6a122fe-a6b1-4398-b5c7-51bfb7d2b0d1"
        },
        "item": {
          "id": "88a1cc1c-351e-4841-99aa-b4ebc42167a7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f21addc-4100-42be-8148-cba7f00ebc95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a1cc1c-351e-4841-99aa-b4ebc42167a7",
        "cursor": {
          "ref": "94b1c8d7-9bf0-42ea-b2cd-d230726859fa",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e6a122fe-a6b1-4398-b5c7-51bfb7d2b0d1"
        },
        "item": {
          "id": "88a1cc1c-351e-4841-99aa-b4ebc42167a7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3f21addc-4100-42be-8148-cba7f00ebc95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a825f04-f06f-4044-b8c4-b7ee18b7567c",
        "cursor": {
          "ref": "41a31821-946b-40bc-b002-9c52def28d9d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4fcaba7d-557f-4bd2-a64e-64638b05de9e"
        },
        "item": {
          "id": "5a825f04-f06f-4044-b8c4-b7ee18b7567c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "394ae6fe-a017-4f2f-91c5-04fae8207689",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7358f1-6806-4ea6-b7f8-272e4dfc59ea",
        "cursor": {
          "ref": "12dcc5f1-9542-4a73-bb6f-a9ed8e27c12a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6481d19f-5106-41cf-bd47-53d6c254635e"
        },
        "item": {
          "id": "ad7358f1-6806-4ea6-b7f8-272e4dfc59ea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5dfda3cf-bbd5-4cb8-b797-397e97e52da8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}