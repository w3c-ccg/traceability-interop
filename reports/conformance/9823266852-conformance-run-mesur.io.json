{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b87e6e7e-2ebe-45d2-b47a-1eb9febf7326",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1c24889f-f405-40fb-9313-2f2e82969d8b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e45f798a-1cb3-40f1-b797-2646c9b8f209",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1f33d5a8-39ed-45f6-b7a1-99c7be85ee27"
                }
              }
            ]
          },
          {
            "id": "962acc0f-f6b3-44f2-b7ef-d63e66676eb5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed3e2051-e7f2-4ceb-b6fc-5341434380d2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5e4f511f-065c-4592-b28f-797d380b4eb0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0f98b16c-f1a4-49bb-9636-ec7097b6a427",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "af82a255-841e-4cba-984c-af3e06dc1f34",
            "name": "Positive Testing",
            "item": [
              {
                "id": "acb82880-da9a-4565-a1a5-67205dbc255d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e00ec34b-6dbd-455e-b801-d98fca0f0fcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a119759a-8a73-4486-b73b-c98c5634319e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b676183-3cc7-4a74-ad11-7a5f29bb208c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b360156-65e4-4e61-8bb5-99dc9ba77586"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ec5f6bb1-ca5b-4c27-b39a-2df52db16e47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b89cc3cf-8e7a-4ffa-9cf9-4930fecc2a39"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ffd291f-577c-47f6-bc02-803d8c745db5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6a5f3805-66d5-46d8-a2d6-acb07450e269"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbcb0ed6-6b1d-4471-ac70-52f5e7f603f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fe2d42c-a020-49ad-8a71-22d0efd07e13"
            }
          }
        ]
      },
      {
        "id": "128e9b9e-104e-45f6-b2e2-9733f5337f80",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aa573050-3e76-46a0-919f-778b6a6653d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "378d79ae-b1dc-464f-8d19-5b61c09460a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf147b81-4851-4804-92e8-894342a75495",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560a710d-956d-402e-bdfa-0884ec635ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6906cf4f-60c9-4226-9f51-0d85114924e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4e3167-a6c4-4f40-816c-6e568c5df09f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e797da2-82da-43b8-ac79-55589e1cb0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfe7a49a-4c6f-4fc9-abe8-ed87699b6058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899c5217-b4bb-46b4-aa71-5623f36c3d0b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873d71c8-14d4-4ae2-b058-cb9750ff2ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a63a0b61-d00c-45e4-bced-737200079f89"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8aa67f79-c4d7-482f-9b46-e8c8a3bdd092",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92123aaa-4367-4dcd-8875-0fc14ca52bf5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ffeef5-2b87-496a-91ec-417ed98cbcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f681238-a2b9-4846-91de-fa65b1d2c010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3b6c83-3ef2-44dc-86bc-b81e9b9b5721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cd77fb-1cb7-4ba4-b72f-558a85480e47"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a23507dd-e50c-47d5-8f20-7f3666ca6b1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "549fbc93-b66f-46cd-b4f3-83a02f64bda9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87927ddf-7e3c-494b-9b3d-fc2b52d9241b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fc59ed23-6727-4b71-9de1-4573fb943191"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fe9274d-7da3-4852-92b7-11543d1b2f0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5d004f45-863c-4517-b642-5b930d047157"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dfafee23-4ea9-46e7-96e4-f8f820ab7460",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aefc4320-747d-4065-84ff-c037c237db00"
            }
          }
        ]
      },
      {
        "id": "de1e50d6-0a84-4cdf-b64b-7327a9c31d99",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1a601808-52ec-4fcc-8666-df439b41342b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa26772f-fbb1-4f91-a0a1-92d2ad59ee5e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0a0a019a-558f-4676-9266-d7f312d486a9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa940598-8785-4365-81f5-c393484b2e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a7602f-f6e2-4a95-8a6e-1e3885519450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40eec7df-ecc8-4133-b13b-2c4fd7dced26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee3c2aec-7999-4e93-a7ce-7d878733b222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3556af9d-6a31-4672-bfef-20d69625a945",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac64cc78-7ada-4ac6-816c-7426b40983e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f22bd1-0c4c-4d79-a233-6d42dcb80cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d0d74d-ee19-4007-9b3b-2415890d874b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "319b54d0-ace5-4cc5-adf5-8d09a65555a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9b3ee0-97c9-435b-bea3-860e13c38233",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efa3b05-70df-4733-8133-ce8e50ce5699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2c9757-e24b-4d3b-a87e-f9924ee817de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a76bfab-7317-43bb-9937-ea86e2f2a37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0284b71-dfbb-4d91-b202-bb8ed0784255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430cc520-d371-4a15-960f-817358126aba",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1679666b-bbd7-46d4-8705-b1e58d84afc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7aae5f2-1675-43f5-a84a-af76f93fcb43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046985b7-f647-4c7e-a490-65cfb0f3b971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fc1d51a-5f7a-49d9-afdf-bbe3c8e6cd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066dda6a-86dd-46c6-a86f-1321572f5496",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef828c87-c7c7-498b-b8f2-5f8d312cb02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a579f5c-d238-4ff8-b868-fd33dfd1afea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19961d33-caca-4a3d-baf1-f922d59a48c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5abd690d-8589-4b4c-942b-a0a006c39a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dacd473-cca4-4b9a-9db4-d27f66a6335a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73337f90-cde6-43cc-b6e7-a3f46eb15922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4dcc8b-dd7f-4035-8155-7748d7941026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b838cf-51fe-42d4-a37d-891e0fc52ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb9e772a-9124-4181-965a-cde8e62367a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82acffa-aaa8-4ecc-934d-4638fd72cea2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783c6d01-77cf-46f9-a3eb-b75c263e06b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6484ab55-45aa-494a-ad6e-349837310d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3584f0e5-5970-4c5f-bd66-5d3f9c9933f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79637226-5196-4a34-9681-f338820609a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7bdca5-b8a1-45cc-a9f7-9566ebeee294",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049309ab-101f-46af-97b1-21a64a38ebd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0195f0ff-5488-482d-b1b7-ac40806e1291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5961aa5d-3118-4996-95dc-5d59aa82d301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d75b533-e0cf-433a-acf1-acef5982795f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b7981a-8ed1-4dcd-9351-f5784a09320c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd09ef12-c655-4e6e-bdf3-0f0bc87f0ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd053c9-592e-4d3f-b8de-e9163191c735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af57ec5b-8204-42cf-8f58-5d2a93c8340c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2db863e-82f9-4937-bc0b-2aaf65dde111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85973d55-52e9-42cc-a72d-5f462e53c540",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a425d1-56e4-4ccd-a2d7-d2adac7bb63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae50111-91e3-4a07-8bcd-2e67d01d868e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0250c9-ca7c-4b62-b2b3-17ffca24ed95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2a590e6-52e5-4b8e-854f-4f12193d7198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7b6efd-b0c2-4473-82a4-2df896fd89b3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1f7fdd-e528-419a-bcb1-ab1a91717b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78dbdcd-6aa0-4d6b-980d-822010c7813a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e6aeee-abc9-4996-b8fa-2a130b488e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ec689a7-2e6c-4467-a363-abe2b6eefef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fba8d1-6993-4a94-9e99-a28674b112ac",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ec50c0-33fe-40d8-8b6b-cfb08ec12a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd258c18-3632-4403-808b-ebc5d27d4183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ecc35b-f3a4-4695-a36c-3ce898c9af6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9545c26-1e83-499c-990a-2686cd10a5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37155fd-b2b0-4222-bc51-988ad39646dc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38549ee4-8689-428f-93ee-c0cf7eb06371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5474461-e89d-4f58-a8d0-0320db73b891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdf921a-140f-4449-977a-fde53e4f356d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4f133f7-f908-4f28-bbb8-a70a62a3b4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85675666-c025-49b6-aad8-ffe9f667ef40",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354f2c0b-3fdd-4604-a6aa-af461251eb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23413c0d-e984-4c1c-be06-b89b6539b453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fa93a1-9f2e-4d02-af3d-24790bbd7512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f879b2c-f31e-41b4-a304-f5f5d5372703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0953772-e200-43f1-aeb7-89e9c1253318",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec9e0d0-6f3a-44a4-b1e6-d6918fee0277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e36096-39a3-42ff-92a2-fb18dd3a1a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f27b08-8750-43d6-b03a-0e2eb11fa65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7c8e6dc-411c-48bf-ba04-c113341c4c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93438123-fb4c-4750-99d5-799fd40e4e55",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26496f27-54a6-436c-bf51-a6476cafeaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34aa2ea-e23f-49b9-ae60-1940973e9e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b111f5d6-72a4-4c68-923d-569fb96dca1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f6fae6b-cd8d-45f4-a60b-95835c5b4c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee080f4b-6b69-4f32-887c-fead1239fac8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a6d934-5b13-4ff7-b286-0019ab2f7778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b35e0a-1063-4b1b-a762-8713e5e4a417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123bee5e-bd5a-482d-a3bb-43aabe3f2339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecf35efd-ccd2-4b88-a8cd-4bb9f48da323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2883f00b-6bbb-479a-bace-c412f301bdf7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7c230c-6abd-44c8-a469-f62e2fb6f620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac361040-80f9-4570-9362-a80f5b699c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b191a7-0d3a-4b6e-b736-413970c01f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aba098f-bdae-47b6-a9eb-899544f7d362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a66d258-3a96-4312-96d6-e2c06df3c213",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb8f209-e38f-46ee-ae7a-24139ac4c18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7b3bf3-5ff6-44fe-9072-ae248826a950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396cb259-bdee-489e-be0b-b9d9e16b6222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0fec06-c8a3-4dd3-9df8-b84760995873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6600530c-114b-4e4d-b628-8a07dd328418",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9266961c-5dd0-4d74-8e8c-a7a878230eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8f3ac9-c65f-460c-9c1d-f48cb92512e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6075c5-6b54-4a76-9066-0327e5e82556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f216294-a69d-4795-8d30-83911ad22949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a2816d-2899-48d8-946d-c3907516082a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a062180-eafa-47f4-a1b7-cd47ebb9b786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f8fc4d-075f-4fe4-ab8e-b1ce1b2a87a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a06552-fe00-41a7-880d-15ff2093c856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c05c9dd0-e96b-4a2d-8ac9-6551d78cd599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff5d387-4b85-4b6d-9c40-8f61a71d2137",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5178befe-0353-43c2-9823-d84cb41344f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d680fd3-4775-48dd-94d7-9468131fbe5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc08755-47d5-4f6b-bf6e-8ac2791368eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c524d1e9-fb2b-48ef-80c9-5c8eeabca71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415aa547-3816-4cc7-809a-fd0eb5795609",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f80676-0b96-444d-bba3-e4151628901f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e022f71-8af3-49b6-99d0-b8d71dea0d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c309d888-f0ae-40dd-b87b-339ecf0783f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "885eeaa0-eb28-464e-b737-995e90daa3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c578727-d958-449f-887b-f1043558803a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb03755d-f43e-49ac-a2d2-de5b7e74cd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d31d73-65c3-4704-a253-496401c9282c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13615c06-7a18-434f-8146-c4bbe0004187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f58da6b-892c-45b0-8b76-efd8a9325209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc0cae0-e569-47a4-a385-0199d3e9af57",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb378788-9b42-4de8-a709-bbb9b9e66fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f54019-c3d9-48a7-beba-5866f4d4761c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d07bd23-96a2-476b-b588-6634216cada2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8080d06d-e987-406b-928a-a61a1c1befbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d06953-9a38-4afd-9d42-42133e431508",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808a54de-3ee6-40ec-9c3b-dc9c9023b61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018c8242-ac40-4c76-a646-81c47d77f2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccf2b9c-4376-4537-87e6-b33358524533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "200898de-b06f-4b7d-9c15-549bad372774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7474fc-8942-429e-bb2b-6937959e2aeb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c9bdb4-7d9e-4c3c-a9b3-d98ae8da4093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8025478-1fb2-4ff2-82c4-98a184ab2eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e07ca7-aea5-4045-912a-31b2b34b2adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad964638-3054-4ce0-a27e-423c1bd44b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b635bb3b-b091-42e4-9535-6dacc8083da5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e846d000-676a-488f-8329-49b1bd1b7ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebd5406-80e2-40dc-af16-b4071ba172c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b7f293-86af-4699-b869-2fa24f786d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d156f4-c29a-4e02-804e-a95bab017e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef54999-b3bb-4ddb-922c-82d062be757e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a09ea1-0acd-40b1-9304-1b28dc7fc547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdda8065-01e2-49bb-9af3-883c7b07cbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef22936d-391d-4380-8ab6-b44322af7c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1749403b-2b9b-45a7-aa48-b6498445216c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b7e8e5-3462-476e-8d2f-ec20780d1bbb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32f7bfb-790b-4cfd-a52a-579652794230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac9b31a-072d-489f-9f2b-9d9f524c0e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67146c63-4617-4c58-975a-d4312e8506f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f64852c-7c5a-483d-9df9-6eb56e8e4b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bad233e-973b-464b-867d-c09cbca75693",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c02f2e-7134-4cef-9857-c28653b0e728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179da5eb-ce27-4d5e-9de0-a925ce7c995f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee8c0b5-9dbc-4903-b63c-ead95a057f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "beb071e1-272e-4714-8e01-3c4db4d4eda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585f3f24-9d4f-4613-813d-c55a2c1c1454",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9799dd2-0ab9-414b-a07d-0af7a481f13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774c766e-97d9-4cb0-8436-2a6df826d802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599b919a-57bb-48da-9ae1-0798e15ea533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54aeade7-786b-4571-9d4c-c9d832f5cdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e49881e-4bcf-47e2-9715-6ff6adda5b08",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe35549-7c19-40b0-bb39-12f146e3c2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7563923e-3f1b-4992-8e76-0537960d0136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d601f5b8-ca98-4bdf-8ba1-0ab4472fc71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d3fb63-9991-4557-abd0-db37f4c47f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45491186-0bbc-4eec-ba20-a2721b2a4334",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d140193-d552-46be-8b8a-8a8086640834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8864a677-3494-41d8-85de-731a73027aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caff233-976a-4044-ad69-1595ddbe8e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c410b55-03ea-40f0-b95a-43065609962c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb4434f-178b-47fd-a33a-77bae508ac3e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc3638c-9ffa-4b31-8aec-e7e5b6e0757c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22e33a7-f34f-4098-b958-5c5b998e58cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8339c570-b488-4592-8f1d-bb462bef7f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d3ef2e-f8d0-43d3-872b-f9ab07ea1a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727d92c5-741f-4f54-a862-b41a4c32bc88",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7ee1df-d8d6-4e56-abbe-c22fa0b22d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40fe6f3c-0cc2-4f87-983c-4c96ce39b196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a2c0b5-a305-4a55-8b0a-ad2681bed842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d813775-5371-492b-8db2-e431de9dbc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2531d06a-3e04-4643-9242-95dc75e9386e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a9f3a9-14f3-4fe0-bb67-ed9492428772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83ea7c5-69b0-4217-99d6-4733ce8ee79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b8740c-cb8c-423c-9625-b5255460ad0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74871392-3424-4987-9857-646deb44b46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def96b33-18ff-4d6b-a05c-a0fe2135bcb2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85769bec-f7fc-48e4-9e0a-a5201e46ed56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78dcbad-a2a3-4e9f-8146-8f736233cc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da95d07f-bab1-4acf-8978-1eedcc6f8c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d15147fb-ba61-408e-aa0a-7471ce8e4b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76cef7f-6875-4461-8ba5-302affed054e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84704dd-ced9-48ba-82e5-14a5b7b6e6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651e5adc-758e-4951-b8ac-8506dfad606e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f7cf49-5359-4c69-a5cb-91e639f71f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "125bedac-05c1-4f6e-946f-cc97cdb371ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbfcd0b-f960-44dc-9eec-465b91f92caf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58a86de-0a06-4fb2-ab31-1445f448c847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b531b9-772a-4c71-9737-20979b7a484f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5dda35-c9f3-42e3-a772-c62a954be1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7212b678-9e7f-40ab-8299-d945649c1ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a47385-098f-4e04-a422-a525cd6cbf75",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e134c46-d352-4724-b36a-8260a67ba37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74ff487-b8a8-4eec-986f-4d3093817045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b691ea27-9427-4a76-9e49-9ac60e61e678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "57edc411-7d17-458d-bcf1-b5f1abe4dc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff867df-9fb0-4fb2-8370-96aa4711cdc3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b8072f-7529-4295-b786-51d82f680151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ce1ddc-fb24-4dc9-934a-fd02fc70d699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488ec517-5757-4a3f-b820-c25354be22b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "50e6c6ed-42b9-46d7-8814-dda68bb9891e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8ef600-eb4d-4efd-84ab-671e179bc8ca",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1922f059-f09d-4350-9316-3e17acc45fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e36dea-3707-4284-b069-27d2b085bbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d59af55-02b2-49a6-a96e-81dc08ccb370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e52d2b0e-003e-4153-ba4d-2af620f0faa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dcd0be-a298-462e-8c79-72db1c699b00",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94200e88-de4b-4abc-bba2-00f47cb8f783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107f1a9e-14e1-44e5-a2d7-dc69e96a8ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cab770d-2a16-4c87-af7f-1092219eb933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0052106b-b76d-4f5e-af1d-bd51989a3e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a16674a-c90d-4c75-9681-e7f66c95b25b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03e5ac0-50c5-4d08-be80-1fb63da81b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d257646-ec75-4356-a4ad-17ed954df95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd5c5bc-7e02-4a0b-924b-ccd407465475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f16b927-a88b-4aaa-925e-5d5c9ef9b25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3e7aa2-983a-4af1-a83b-d129163f9262",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fc7c0e-5e65-445b-967a-e70fa5243135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53855ed0-5591-4c34-a944-4def10909c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9061fae-6e84-4a7a-b5c3-9ecac33ffd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d50e53f-6378-4ef6-b0a1-c5441d027fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1375ee1-2075-4600-bae7-1c8ac063fee2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8569b47-03be-478e-a8bb-a56ed411631b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4cebeb-0d25-4800-9e70-cc094ae6bfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb149fe9-557f-479c-bd27-e65fd8eb0472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcbe6155-ae22-4c4c-b80e-a68e9161794b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb3c873-b691-42d4-831e-6faeffd6a09d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad699171-4895-43c0-a5ae-d384ae55d57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da81b009-8404-4a67-89f4-4920526f78bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b080436b-1e9a-4d86-9466-a23f2ee0ed63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b68bc11-bd2c-4d06-b872-d6f98544c838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f461a29-226e-47dd-8d48-b301122f5325",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb46e101-ce62-4f20-bfa6-f1d0bb3b553e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b62927-92c0-4657-a823-0598da1cfb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e356e305-a1b0-4124-9710-d2a12ead1935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93dd0105-0489-4b48-9ca9-f503a3b9718b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04e200e-ccbb-4af3-a986-5f1e3f3a4759",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd6f4b0-e041-41f4-957a-a8c3b0edcd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98b9986-9a07-4bb2-be9b-204f52fc477a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e6ea89-3d93-4722-988a-9c0b3d555f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9d3bba-81dc-4a93-a2f1-396e51288365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d323744-4654-49a9-af25-f4d096068e3a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81b0b21-0f2b-474f-a86b-efe41116ffd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d41de1e-2654-48f7-9bfc-c7ed300a913f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2948497c-5639-4502-9ea2-ffdccb786129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "24a33a02-8dde-40c7-8719-1f31ba7d4af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa73cf4-78ee-42f2-80c5-847c629dd513",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06a19b1-588c-49e0-88a2-35abbea5e146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6005066b-d864-46be-ad7f-51ee1f2a39a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eae8a3b-aeeb-4019-9e0a-2587a9c0d57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aec00b2-921e-4332-afdc-9580a7a53ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1ac6ea-f73b-4284-87a8-9a88d0cb8792",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e0b446-ff5d-46e3-9f6c-441b292102a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f5b3f8-6714-40a1-9002-0f8b02cfb64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258b0b51-08c8-4f7f-9e4f-170665160db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "340fc187-09a1-4575-9f3e-2dabeb2682e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52869850-b897-46bb-9440-363a1b6006fb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a08dae-5e95-4dbf-825c-ecdfd80c186c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fa6c4d-8b3a-42ca-99de-7435d6b3253d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5bcee9-f88a-42f4-9ee7-f70b03b664af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee24819-d547-4d3f-b039-68f02bc21684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf0de13-7fe6-405e-b532-550411963868",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6591ddd4-d01d-4490-a4cb-31151411c7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f9395b-ffcb-4509-961f-b8396b5fb80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda64288-2b96-418c-b17a-24d2ff6afcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "273f529f-1fd5-4bcc-8ce8-8b04f1800188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955f74fc-3f6b-44bd-b4c1-291ade913c1e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c954cc-36f7-4f9d-9a16-218af0addf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286bc017-ae4a-439f-bc19-7542600ade02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfc28d3-abde-47ef-80e5-493a74658957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e199c686-4215-4b28-8028-3b8d2ade2093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60c8ff2-53bf-4156-83de-78ca8f696033",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b977d1-ceda-4bc6-a8e1-b72adb5e6687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c060d523-eec3-4025-92e4-b8e7ada72523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f7c511-99d5-444c-afa4-eddbf3793c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "91e3f7e5-ea12-4d79-9eba-5b39d42e0eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47210250-dcea-489e-b2a3-7c78a2169fda",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff677b3-1705-46cc-929b-4148f99b4a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88a1158-64d9-46e4-8ed7-34cee34b1c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7262791b-19dc-46fd-b72b-3b0a81104d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5be770e-d621-4ac1-aff9-185bf478756e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0d397b-ff7c-4742-a362-f748f8e82f07",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65ff972-4df2-42c1-b879-b877cd782adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac602cb9-18ad-443e-9b61-3b1aa45da9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1677fa28-54d6-4739-bd9e-67fb20f66d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3e9fd6-e589-42d7-8bfe-d032a6bd6dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ab17a5-1c1c-44c6-ac55-d31c17c17cb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ac70ff-e59b-4712-a35b-60061fddf399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21575ff2-8926-461f-b73d-52aa84c56288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17120ff9-a2f8-4ad6-8a8d-acc15adcb9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "786380e8-f47e-4ee2-85a0-ca143bb124e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692dc039-8a8b-46be-bec0-d0f9aa446f32",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d729b53d-0f0f-4f01-b983-6c290d1d4595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbb7a72-83be-4c8a-b54d-a11a197f3b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f5c4dd-7347-4108-a6fc-670cdd2ef70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbb7892-29d6-4426-8ffc-9cde34551ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429c119c-527d-4fe3-b15f-154b74277c63",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d72bd57-5a62-4508-b569-76da9afe3e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed89b702-14a2-4cba-8d36-0682352db03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f36952-dc7e-4408-bfcc-bf3aa3068373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab5ece5-5089-4c7a-b164-bc1bae0b74b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaacce3-52dc-4ab4-8b37-807476f1a2e7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009fe1f0-5bdd-4f8f-92b1-3032493a64a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f558d6c0-4601-48da-abdd-989f6106cf8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767e5a41-8f2a-43e8-8267-fed2928b97c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b683d3fa-c24a-4d56-81a1-bac24a70dd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fbc7c0-c612-415e-a227-604b0b658cd0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e86165-330c-4269-afb0-e4034bbeb2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cf8825-37f7-4917-a250-2d821d1e87e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3025906b-5fe3-4037-862f-51df179a3476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "882dc60d-e311-44d0-8e18-ff28386e4758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa59a82-6d87-47fb-97f5-8afc371cecdd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6731df3f-d32d-426a-ab21-dfb9e311d88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da16542-ff21-4c80-a7c0-485fdf4fd8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2798b118-2335-41bf-b9d4-e20186e73a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1beeaaee-db39-49fa-9f95-ee7ad6d40b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b32ce23-f3df-458f-8829-2747ba51d3a7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae51d7ad-f7f7-4ada-ac24-4f762b11d0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df0b4eb-0fb0-4ed5-ab74-f5f138a56b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e4ba26-1272-42d7-ba11-c02785a48245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "713b8037-5435-4b2d-a765-bc5d981d0707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5dd403-d5a2-48ee-9a0b-83c92b2bce1d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4e23d2-b31d-4447-9dc9-ea2651d336be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f0c7f7-38b2-4afb-a532-13d560146728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389183fc-ba2f-4b57-a275-829330881750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf9c27b-a0a3-4b38-a203-94ea094ae9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72da0d7b-461b-49c0-9058-bd32142a97ab",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b91365-31e5-4c08-ab57-b2c510df5335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8892c183-9bed-4ef1-89eb-5afcdf767c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e58fb24-4f68-4956-8b75-eabb2cd7f982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "54e99948-00f9-489c-ad35-83b33cb344b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d743629-901c-4471-bcf1-09c226f44bd8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419d6393-4d75-4ad3-8869-c7a7b3d8daa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c97558e-88c8-468b-ae90-37277ca8dc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2895885a-24d7-4799-8bc7-25f1a9c25974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b46cecf2-735f-4275-a85c-bb56eb0db32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fba8eb-1178-4f04-9f3b-99642e436ea5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f32035-00f4-4a51-83ab-a1c69ff99eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95851ff-94e4-4a10-be33-c667fb0adf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea40ec4-9b42-43f2-9184-347c2ebc8b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d08437-e249-428e-a5d5-d7055d837554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8a8d0c-65da-49e0-b4b8-cbef1fcef3e0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479784a0-c2c1-4069-8e06-14b250563420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716e988a-a484-45fa-ac67-ea00c8ddee87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43956d08-bd07-4074-b438-88bf0873a448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8efdf8af-7e3d-4847-9bf3-f39d1fde1b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ae282f-2a80-4004-8386-9e5f6fb7f79c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f37361-d214-4481-86f9-96ad09eb9d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a288ec8d-adf6-49ea-9903-d77536c2ce8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659cc354-d714-4a2f-8105-01757ba8562f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e58e7f2-85e1-425a-bbf7-b492963157c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e4d4dc-265d-4ffa-bf30-816e6243e4b2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a848cc2-3152-49d9-960b-48c5ebee9fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab39f2dd-f166-4a06-982a-d48b78e5dd5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab68c45-3890-43ed-bc2e-d2a2cd95a3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4490ced0-d1fa-4a65-a0bf-cbfce73b34cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e225d20-89a6-4ce1-9fbf-0b6252d7efc6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60692c03-1459-4b74-ae37-ced54338201d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcab19fb-55dc-4bf6-87f1-77a267743e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3eb095c-8bcc-42cc-b749-7e9f085862d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb76b11-8e91-4dc0-aa37-24d716c84e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bb5074-4233-428b-8e13-1a2c965338ec",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a6093e-91bf-4936-b3fb-fa2a136ca3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36005c95-e5cc-437b-a687-71bd2b81f3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5e9ac8-5133-47ab-9004-822555a46e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "173709d0-856d-4d19-9c56-98ffffdd435e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410896c4-7581-446c-925d-7c0416fddba0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8dc7c1-6ac2-42df-8d62-74a7e8f17743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945b172d-4015-4a67-af4a-dd5e6aa7fc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d983e793-5cdc-460d-89f8-ff483995e236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2258e585-a173-4d5c-84dc-53bc3ccb8e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a088fe18-f40f-41a9-b2a1-50c9217bc383",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6a2ce6-cfd3-4125-a093-464173ee7690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8734feb1-30a2-4237-a314-1d44db009bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad954bbd-5f90-4ae0-941a-e280aba6c915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdca5acd-ce99-49e0-81ea-fcb366b0f4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c894cc6-28ba-406f-93b7-766347663f45",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d309a839-c2c5-4524-a99e-1a2a9f3c9ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41691888-dff1-4b7a-8f40-febed34a05c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d5d8f3-634c-49ec-879c-ab8627f2901a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66b3ca0c-8235-4d8b-99b7-dcf3798726fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fb49d5-2253-42f5-9cc4-9bf3024f021e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e203276-389d-487b-a437-c132619cc20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c32ce81-b488-4006-8569-96467e44b894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a0ef2c-f27f-43aa-9fb9-eb139ede93e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87953e38-9afe-45ee-b222-ba2b9bbccbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea69200-0f2d-4322-824a-2e4c0212ea59",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90577e56-7b05-469b-9b66-4aa76bb74fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3984615e-40e7-4657-bf90-006aa74570f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9c0f4f-e868-47bb-8f2d-e05c033dac3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6964aa62-570f-4009-9f39-9d56756eea2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ac0a16-84eb-4611-9266-72d08d13f7d5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf94f93-3e98-45b9-a68b-1e59c21aa857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a102533d-3bb2-4e15-a18f-6b2e96c0712f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d473dd-41c1-4a80-a553-c8c6d08a6052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8188249-79e0-479b-824b-543390ce44c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c28e40-79f9-4de4-b998-11b6b4d5abfa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fecfd9-6f17-4f29-a663-33aed50fe985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3a2178-eed3-4b3c-af04-0948e53e1c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1f8903-ca1c-441a-922d-777a83e60f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7f8547-a0de-4cc9-9260-5f9af372b67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17567d5-e26b-4d6d-8f7d-10e4c8ddaa5f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3c427b-4d1e-4557-80a2-27d27fcca8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a77e7e-5ab7-492b-b457-e6aec9102735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4a7c1b-a0e5-4761-a318-1f0abc370f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "341463c8-2dc3-4710-8748-fae9c9766da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cb3c34-d7bf-4a83-8909-acb66622f7fb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378ca4a9-f454-45d4-b5a1-25153bc607b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e05bc22-fc9f-4f56-be15-d25bc34a4b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb56ec9-a678-440b-acb4-66fd71e4bc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3faf499d-0393-4263-bdfc-57aed83a24c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced24bdd-eaa6-4fee-a921-5543655d9cd4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15b8346-d537-4def-bf5d-346dc529aec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e544111-9c8d-46f9-8636-2b8b02bdab45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44c1e5c-d120-46fa-bb18-e1d62051fece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23910028-0a50-45f9-b0bd-cf784c54a0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa6f5bb-c5c7-41cc-92b5-4595639a8fb2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9368f5-9104-4fe6-b8b5-6fa349337ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab5690f-5513-4dc8-aab2-77b5071f18ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210dd776-2fd9-4b65-81b2-6971f166ea1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d90292-32b3-4203-8788-e974aabe10f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f6e55d-0d44-48a2-adf5-e1f0b3a880fb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06189d24-64b2-4deb-a889-272cc6ca4b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3dc581f-fa91-4c66-abf8-ae80fc502c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4484a9-172b-49f7-9459-07b9c5bc67de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "416a3478-6787-4386-9bf5-0018eaeee27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a33b10-d694-4c3d-b86e-98b4d1fc2798",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5a8f7c-0f6a-4ac2-99ba-a83fa55e826d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884920c4-119e-42b9-ae9a-9ac0062d6b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809ba492-9f5b-432d-b653-51c16a12ec3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d93e40c-6373-46b6-af2d-8db93ef7f9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c10d60d-89ed-4817-aa0b-e5f692b8192f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57695ead-c647-44eb-b9db-4570478e6c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daecf998-e0e7-4aba-bba2-95deb32ee85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f96307-1589-44fc-9e89-c3e24d926beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88e1393a-1da6-4567-9b29-dec98be00003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa71c56-36ff-4461-ac1c-190d06e466ce",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc51239-ecc0-48cb-8b8c-0bc8eb84cfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcf6947-fc81-4662-a28d-722bf73d5e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31a08a4-5d87-4ab9-9c08-fe8c1ae606f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "09d20f3a-7f51-42b2-b78c-09e61208fdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fb4ad3-16a3-4d4d-9aad-a0832ae10ae7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae2c8a3-3691-4e6c-b222-ab67ec004fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920451d2-0cef-4a00-86d6-96c144b9c36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34e7223-1680-4656-a94e-24418bb904fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f089af3-ed69-4893-999a-ac3b361b8a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ca1260-f9db-48d4-84be-b9dd98752699",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8845c1ee-de5d-42f4-b99a-87c15f93c4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dd5c3617-d5b1-4e10-8d12-39a8b674b323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e577dd3-6f14-4a69-a2cc-09fce3e6aec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "44f7bc14-3912-43c7-83dc-795c6fa9bb85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42e7bb7e-e72c-49ab-8c3f-c4a5060f5453",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c1f4196-0cc0-474a-8924-7ef429594e8c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d97353-97c2-4bb7-813e-d0072577d6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "147c6033-9c49-4fe5-8ce8-91c4e377b847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3bbb3a-0300-49b7-9bbb-3563d53b2522",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "951a2f6f-dc3f-44f2-be5a-98071f3bb137"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be75cb5e-5170-485e-9326-4f13dac3c2c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa237006-a03b-46ab-9878-e8ba772fcf3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff54aa7a-34da-47a4-ad8e-223e6d9f24c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6988280-24c9-488b-aafe-9835a12a5dc1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6722d386-c943-475a-a217-7a22b4e91779",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "501cb070-a776-47b1-971f-3ef9c69e5674"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e20943ed-62a8-48d9-816e-4e27c4e766f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d217045b-2d46-44a1-a0d4-ad36bae592d9"
                }
              }
            ]
          },
          {
            "id": "70c66cb0-a0ec-4c92-8111-79ce924edb34",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ff904bec-8295-4dd4-9fe3-6f07687fd942",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8b8e91b3-e46d-470f-8820-19b28e3983da",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407ee1f7-5594-470c-b041-06be1cad2262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e2ea4bab-f01e-4826-9439-1befa08b0c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d44ad81-21bf-4088-8c5b-06d4f623e096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2fc8b54-4ec4-4b6d-99b7-a527980a7952"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad7ecf44-77f6-4990-860f-4e3c40a2aab1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60ce1479-6fa9-4058-ae42-5de8bbbe3ef7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2f903a6-fe85-41fa-9237-04e4d79e3c03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "577227af-6d51-414b-9437-b752e195fc99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "007db85c-cac7-4c3a-88e1-7bc4ab2706c2"
                    }
                  }
                ]
              },
              {
                "id": "50ff7e96-7704-4712-a761-8001281d02d6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94cd7968-65a1-45fd-9274-bbad798998bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8a80026-ddb4-4b23-92e1-b8452a0cfe2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7143a742-6111-4e34-862e-296f29ff8957",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7aa0f24f-3434-4330-bbe6-aa2bbbae5a9c"
                    }
                  }
                ]
              },
              {
                "id": "658dcba5-62eb-43e8-a1d1-f2e10d8d9a73",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cabdef4d-9b60-43a9-812c-e505dee7fcfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87b27424-0823-45ab-b523-4832792444e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5a07843-9e12-415c-8e5e-cd27270cece1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "89190077-f5e9-48ba-aabe-b38aed9374c9"
                    }
                  }
                ]
              },
              {
                "id": "08197853-ad52-4e21-9636-e6229cdb86ad",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd7045c1-69f2-46ee-a750-e745d1bd2c84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b82e9763-eb0a-4bd3-b674-8c7db1b76088"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70cceda7-f679-429b-b27f-750212251a01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7a8be84d-312d-46ec-b2db-707db1c7808a"
                    }
                  }
                ]
              },
              {
                "id": "c854628c-4d41-4cf9-9331-1ff2a9870046",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76068d77-89a1-45b9-8fc9-b9b40817912a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8152124d-c347-4443-bf0b-488a8e2424cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39fb7faa-0346-432c-9f12-60a4db69edad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ac3c155b-f722-43a6-9279-1344e902335e"
                    }
                  }
                ]
              },
              {
                "id": "c7acadfd-6cdb-4586-a19c-4a8d1120f1ec",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "637763e8-f803-4c70-97b8-d3dcdb6dd900",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85519cb7-9c03-41dd-aabb-44025ac37858"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "574cc3ae-61a0-4fd8-aa0a-1263f8203f2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "184a9645-9c8d-4938-8d67-0a1830f9aac2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab74e1ca-a09a-4877-8b1d-64183fa95ae1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75950701-ea45-4c79-bccb-5fa8f6b4a27d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2246ebe2-285c-4478-8f07-722bad8c5114",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c404b887-8153-43e4-b63f-558f2cf8760d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2abefc9-702a-4bdb-9718-3adf9fb03afb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f2298999-759b-4567-8508-55b71d676fc6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "318fc2bb-1c80-4bbc-9ffc-7c3793db74a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "958508f1-d0b8-48d4-befb-9808e6bfa82e"
            }
          }
        ]
      },
      {
        "id": "5514dc5b-d540-4ae4-acdf-2f09dfb08d1e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "35d8bf33-aff4-42d5-bf8e-7fde6a495fb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfcbffa4-6174-496e-a1e4-6c0c2458ca3a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e43047aa-04b2-49f3-8e3f-3fe564dc57f3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eeff177-92fb-4080-a6a0-ce8c4dde707b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0717faa8-375e-4c08-a4e6-9af25cba27c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac3ccab-1b11-4478-a3b1-3839a0863fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccc770f-04ef-4b36-97e0-ec79710ede4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215448d3-e2d2-48a8-9785-e9d3ee34c940",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df6ff6f-df04-4b45-8ec1-895b4ee4e3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab39ab6-14d4-4df0-8ef2-865e4df44dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4168ba-0439-42ae-9e3d-f6f5105af668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2229393f-59c4-4968-b723-e3587e4ac77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b473679-f61d-4e0b-aa52-43d7e66a4045",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbd5317-fb2c-4287-82b9-9cbac9b88df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68963c88-ef21-4031-b15c-1ab111495c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd4d213-1281-483b-bd5a-729c655425e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a957ce1-ec8b-47b6-a947-661fd2a8d7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5022ff05-3326-4f04-a00d-dec0ca889e01",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0065b0-84ae-4934-ac7c-ca12c945157f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b750bd48-2b96-474a-bbea-4784c768b680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85e259d-adf5-4617-9f07-f5413bac6c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68e29f47-18f6-40cb-9b88-996f695922d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbf5eb0-8d12-46e9-ab85-42fd005b4a41",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51154ab8-b0df-47b5-9852-2f69c6ee8d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3891aac5-c63e-4fea-9a02-aa92d7113518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdc2d62-c2ad-4d6e-acd4-deaf58f37ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb32c27-053a-4f38-9f2b-74144a9a7cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0996a43-44f1-407c-94ea-1bbab64cc14f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec2b0f0-192f-4cdd-90f3-73a3003087b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a08dcbd-26f1-4873-8a19-dc5f41fbd0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc96900-2046-4d75-adeb-b5f22ee6dc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab671b2-2e96-4892-a9fb-f31bea196263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e138c4-9781-466a-aaec-bca86e2c9469",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a7257c-8a57-4006-a65d-7edfcb83addb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee6ad69-e297-4cfe-9c14-d1caad31668a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f57d23-f0ec-456e-9a9c-fec5213b2f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0da758-3f46-4572-af59-2d75e130a3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d6c637-a425-4133-9b01-96e94ee3932b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39457dce-d0e8-4502-be68-feccb39b2ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb4a830-1d45-438a-a2b9-4fad699aba6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bcc291-e69a-4d0f-9381-d28f31ba61c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "460b1e39-4054-459b-aabf-c9b2dcafdec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831193b6-f206-48d7-8eef-6c67e95bf64f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ace021a-0ebe-4403-b212-c6b969e2f2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c57f9f-8d34-456e-a2fd-db5ffbc1cdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8a850e-90fb-4bae-9647-fcd991a916a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c8f7bbd-02be-4101-b0d1-3194acf2190f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c68695f-67f1-48bb-9372-e00672e42f44",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5abe869-dfb9-4709-98ae-f381c2119f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fa0056-86e0-4a43-945b-ce26508f5969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee78c2e9-41d4-4b22-bd62-6869e924ea07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6613f08a-ba86-4ff7-9dc3-6c49a86b38eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7395ad8a-742b-476f-a21d-82f3d1eb257e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2624dca-7adc-4543-873f-91a3fee5a296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae4bb5f-4278-4ce0-8f7c-713e1fc9ca8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a0c09e-4f12-4e24-8d18-92f140d29ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "98464858-b2f7-4235-8f1b-592c4868d9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d79bc4-8c75-47df-a7bc-f5b37b093484",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c712ab63-6716-447e-a0df-a47caa464300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f95647-b99d-4882-9a74-a8a2ee55db5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d7a784-331f-4059-93ce-efd0b2b29f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f45538-b768-428e-bb4a-10d8b1810c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9024f176-7222-408b-a1ed-87e34d9c8207",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ada27c9-26e1-4bf9-b51f-ea1fd62bfd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed81622-2d9d-4ff9-bbf5-89682562d152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba0f087-d3dc-4953-83ef-f5d07b65b5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c0a3ce-dce0-4bfb-b352-7e6192fa806e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2043ba7d-9103-4f9c-a2d6-922744f7e086",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd8e83f-d229-44df-8753-6cd1151d2ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1076cca-4a8a-42ca-837e-dc268cce780d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad924c7-02bb-490f-bc0d-24ef2b41a63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c091b5c0-27b2-459d-a10e-8bcf8ff691df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6996380-b9a2-4bfb-88e8-975cf3092b24",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d444aa3-7564-4ab1-a5cf-edcb3d326bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a8a13d-9561-4a36-8373-6c8f2fe5dedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc98e2ab-651f-4b60-a3a9-2e4f0f047cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b79f99-5674-4faf-8fdd-f4328e332421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a639b0c-77eb-478c-9f43-e8174cf4526b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6080e7bf-64db-42e2-b559-a61f6419effc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8fb06d-b8bd-448e-850e-f5aea06f9d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc727205-1894-4d42-bb3d-ac81785cc91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "57eaa3fd-ceca-45d9-b0fa-280e8ed10a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27480b13-8a38-4b51-9d74-423eb4aa4b01",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df1abbd-e39b-4d5e-9772-41df4fcd7722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e6b390-7d95-44c6-8dc2-d4d1cd9d380a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b05f50e-eff2-4686-8d03-dfa735f0ec96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc69145-32ce-4a1b-abed-ea024d75e89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c38bea-a40e-4e89-82d1-b0940514d3e4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa58e24-576c-4a2d-84dc-4c0036dbca38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de3393e-89ff-405d-b610-3f0a1b220bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa3875b-64e8-46f5-9b15-91f5a318026e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7606fb9b-7a72-490f-893c-3cac55a8819b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2625c9f-66ff-4331-89f4-0666511b499f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6221aa4-7932-4ac7-95f3-95d7c3761f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af26243-4736-4121-b88a-2fd1ba5b8a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a0f24d-7db7-4323-ab5e-268e42cefdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "748608a3-e785-443a-a525-472b30434898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58b88c2-9102-4b92-86b1-f225ad51e657",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25667485-f0ac-440a-b3be-38f2ca52f7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1258044-c989-4500-b501-1684fd11a343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7a08e0-2476-4dee-8eb2-0abd8b3f3ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a19ce4f-abc3-48a0-8f01-a3e7686f6c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26efb84e-1d5c-414f-a164-85641906ae56",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce0e2e0-28c3-459b-a9ca-661a327b66cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41c2164-c5d3-40ba-abd4-33f5ce1e1657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac8a065-1be9-42d8-8e06-7f32c8194f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8061fd-480e-4ea0-bf55-710c36cb2bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a3383f-3966-4d7c-8d97-7d2e46d0b88e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456704dc-ddfe-4495-84f8-ce803ff43308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb313c5-0be8-4ce6-a621-7b9a20b8ff2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a758b4-75e3-42b7-a078-28b4de879201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7f5b79-c24d-45aa-b1d5-70060ef549e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e854d23-2daa-4cac-932d-6f393ee860ee",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3d9cd0-af69-4ee2-b7eb-d89169d92175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ed4c86-d33c-48bc-9b25-66cc1712f4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efe94dd-e656-4560-8982-c5787a54382d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c25693b1-fad0-49bf-816c-9022cf9e59b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40abdbcf-126c-4e1d-8ea1-3a5a15ac9029",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6161a7a-7031-4b1c-b2cd-71355d8e5fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ee3e75-27a8-4af8-92df-d566565b3d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14063dc3-4fae-4c49-8c07-bf4e6762bdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d067ee-9184-4d33-84e3-4645ab23dcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74544ab9-8331-4ffa-8bf2-4c37b4dbe1d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4370ca6e-9c5f-464b-b18f-372d260e98c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203bc762-e64e-40d9-ab3c-f0dad5297a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0764c709-a6ce-4293-b16e-986f519499b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72738617-5d69-4e38-8e0b-597f22b9e597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f14745-3218-4cba-98ed-1367171498e9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6295e3-8db0-4864-8587-bbed0906c8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05d1aa5-e834-43e7-9bf1-ada873a62526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1d8aa5-66e0-44a3-98ae-c9992d227de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc2d90e-b765-4650-a9eb-b4037e39e070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd16438e-ff8d-4917-8641-0f645be9baca",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31063ce-5db3-4eff-a099-cc6445cbcee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363dc213-a3bd-46c8-84c1-a3a4c9318f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b45b23-fcd9-4d08-9ddb-5e541e527f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e70421b4-80c1-404f-ad18-ba8df1bce19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ede0172-e6e5-43d7-9a5d-fae28627b6fa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6a0816-60b0-4445-abfc-7cdcb2f821cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91502eb-56fb-4e45-b183-9ff170e6fe27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fb05ff-abff-4ea2-9285-a2058a146e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3496670a-a710-4581-bb26-cdbcaba3e137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b630f8ff-9dab-4f67-b06f-32ec7a36975f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5e6ac1-4f12-49c7-baef-8277255a4837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592c4431-98f6-41c3-ab46-38cc01527c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abac695e-1ddf-4a75-8af9-17722c52ac49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2c874a-7694-490d-a113-ba44f2e725e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3f5e61-fcaa-43f8-83da-85dce8361d5c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfe2461-73f3-4c76-a05d-e2dde945ab39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f150fa80-12ac-4c37-afa4-a66f06608b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e97d483-7705-4715-9591-8ffcc80984a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14254d3e-4ab5-43d3-a8f4-a7312a088cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a512bcb9-ea92-4cd1-828a-e2bdbdf67e21",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6a24e0-1826-409f-81e7-5b55b13a2dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264f43e0-31c9-451e-8652-2c0f66492646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c24b072-a013-4edf-b990-4f0e1979edef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d698a6d0-0806-4ec9-ba5b-25d8b38e051d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fb0c97-8065-441c-b952-a816855b18fd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb570e3a-71c1-463a-963f-4ff8123f7cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ca2f4e-bc97-400c-b1e9-e53e590dd04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afaa868-f500-472a-a891-3e7652ff6f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c51acf4-cb83-4c72-a943-f81457334c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a325fd91-33d9-4e74-a336-f47a827feaf6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683e44fc-3b0b-48fa-957c-30f912ffa520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae96ae72-b4de-4458-bfdd-256ae9c46ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4770be9-31fc-4627-8bb4-496f78c81d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd0f657-e3bd-4b8e-aef5-0ffcef19ebd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e375ea6-11fe-44dd-bf1d-3e44b3214d23",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871763d6-77d3-48ad-a309-8855addd4740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b398937-632f-4078-afdb-21a9ae94d050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb33845-42a9-4629-a32b-8533ce44eb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3783c7c4-6d81-48a6-a950-d0c46d69b633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0039f3-ef2f-4023-b2ff-c7ed36e5fdc0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febf8e7b-9742-4ffd-ae60-e0c1b6cf023a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2362ee83-c3b4-48c9-8cd0-234baa2230cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acf0d99-e517-4b1f-8179-75b411d352ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d984ef64-9fa0-41e4-baf3-f5cb5a1762c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d286f31-a050-487a-bd47-f6debec04b40",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41a5c01-90e2-4ac5-ae3d-271da4b48dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d11ef29-b8cb-4bc4-bb79-8f17f5ae886c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bf40dd-a5b4-417d-808c-d2e5729f0688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c22f9eb7-050e-4ffc-8f4c-34fcb2257aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0444a4-5ae7-443c-a727-ac35c5cb3648",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5816b6f9-154f-4c6f-9e34-56ffaa51206b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b2033d-5359-417d-8561-6327c366a550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1438fc9-d929-4298-af4e-b676d6bf3dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05fd3b3a-dba2-4f95-9311-904def5ba590"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d3b99a0c-f69c-4d2a-a402-5fb961e301ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63d2391a-821e-4086-9359-747c5f0222ec",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677583a7-a76e-40af-8be4-59538ee8b9d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "815ab32f-0212-4245-9cc5-98b52746846c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d2cd65-99ee-4863-b21d-25d05e16fdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d095fa63-327d-479a-8ce8-09630540924f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0cbff92-60a5-425f-9928-1b1e1b1f5d46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b3217b4-173a-42f8-bf27-f35588bd0c36"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1addaf4f-9a2b-4fa0-a4df-35d8cf3d1d30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8bf0d4c-b89f-462c-b592-914273b4467b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ca2ca12-6c88-45c1-a740-adbb216771a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eba128b4-6909-48a0-8dad-46085d03d890"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6366c825-427a-4d46-9239-6337a0a0c9e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f919e83-c0f7-4d60-be22-68f61528264e"
            }
          }
        ]
      },
      {
        "id": "417cd654-1aac-4ed1-9025-49de309694e4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5ea9c9fe-2bfe-43a3-bea2-74030cd76a40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "412895c3-f3ae-49fd-93a6-4401f1688a95",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cbf943dc-8624-40a1-82a5-97fdb41478ab",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a90a3c2-922f-4dfe-ab5d-474fb7508e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2aaad09-07a6-4a97-9f25-9c15614ee218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf995217-e691-4688-bb75-29dc62d4bf33",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa291b59-fa33-4151-82d3-90a0d3425d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a3a0b1-809a-4200-b52e-5e6923eb3ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70750f6c-bff5-4177-a21d-46a0e9214db2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad460dcd-7599-4a76-9768-a55c924c76f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab44680-854b-49f9-b463-34959c9182bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbe57e0-8f97-4424-a804-513b215bb926",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2013695-b3d8-4269-b3ed-458f1e911069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042c7ed3-3943-4263-8f62-db37654d6b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc702de-4e2e-4e96-af8e-e04a804c94ae",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2557ed2a-3df4-4eff-8de7-821c14614f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede2408c-b87b-4676-837a-ba9ad97006d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8748d6f9-fa5c-46fe-b264-1aa4ce8d77e8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b129ab-7f44-465c-a86f-a9a97930de7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261ceb8e-7ce5-46ef-b466-69f0a9666f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edecc56d-6cc8-48b5-a2cf-74c906f49cb6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71480da-69ee-437b-92d5-f0fc308d6ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c478fe26-aac8-40f6-a4ef-26e0415e0123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e93936-5461-4e27-b489-910c467b11d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31340f61-7774-4640-aee9-c0cf75261ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e31206-3bcb-4d4b-8beb-7e592859a607",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27db65ed-c2a6-4ad4-9c68-b0859a756f04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "435a2c7d-30f6-43d9-8897-3f0c18fe1096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90c2eb3-fccc-49e9-b59b-58c070c37e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202f808e-277c-4306-91ee-fe56ac1dbc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97095e39-8e13-46a2-963e-17a78bc1e25a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1606c75d-0bcf-42c7-a27d-fd6ebe21207d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab45fc8a-b0b7-4f49-b357-4907ff5412bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45691bb1-ffd5-4458-b476-0ddd3ba64506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0da9a3-6ae1-4179-97a6-59e7f7d56e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6183f2f3-6eec-4cba-9f24-60f40b21624d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534c3797-dc62-439b-8769-b6359c8c8764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff253041-2f77-41ac-89ae-334b2e5f2e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c4d12a-7596-4458-986d-08920f743ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d187f1-9688-48d1-840e-1c7ac0530ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2997368-089a-4613-9573-3f2a8c4db7f8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6888e5-120a-4d6e-a01f-412713ec1cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c084c9e-c6e7-425f-b797-b035c8b640a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6186d9e2-25e8-4157-b8e9-827e0ab0bd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd000875-23c6-40a1-b4b4-45d03bb64f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8c365a-b8ad-4c8f-87ab-f00badcaa736",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbb0a4f-5052-43cd-8bbf-fb91d11e52ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a89daef-2017-4b93-88e9-b8e858686063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e887ce-e33e-420f-9b85-db85ba9b5376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a933df9a-d31b-4a13-bc76-3e522050ed8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2055f81e-3a33-44e1-a7f3-66319ac10498",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56584b77-6f78-41dc-b4b2-6691b7d10639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d0b81f9-e646-4df1-9316-af644d6ca066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c0c8c2-ed67-4f78-bf6a-fa0c7ee19c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d8076b-51ba-423f-80d7-f72faa869a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a01e5d2-f6ca-4db3-b945-047ed0e2e871",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e11214-c228-4126-ab4d-3ff7828ff5d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bf914c0-eb7d-44ea-a0f0-c6312ecacf41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84118156-c48e-4af0-81eb-b75063229400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa92575d-c27d-46d4-a5c1-784df1418c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07d9d3b-17c5-4d7e-9d6e-f33501bca981",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee75ccf-2c2c-44df-b1b7-e6ed03b35163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9c4b952-7c6e-442d-ac39-6c9d7333e3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed9a273-dbef-48f7-9ccf-8840b600842b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2181a0-b865-4bc0-95af-73bf6fbc747b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2713e6e9-e1c1-4227-bc4b-cbb1cd6a01cb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c321d98-6424-477d-94ef-d323ba9f1e04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959dfff0-514a-4240-869e-45eaceb9d1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e977ab0b-5c10-4a6b-9094-6cec311eafd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1066159e-ac3d-4d32-b837-7b1a6272fc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f286b6fa-645c-4748-ab01-e9b06789c509",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a557103f-6208-4b84-817b-4d44498ba069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f60b3e6-a4b1-4770-ac86-3b522cc62525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67520e4-4667-4807-a7cd-f4680b3b12cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16381748-b888-4d37-b4d0-c96109b1a61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f38d4c-e379-46e4-9c71-c58fa30b8706",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c7e618-b004-4042-84e5-4a42f26e5557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a07a58-1c00-4780-9576-574c68225a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340a848c-f76b-4ea3-908a-607c3e2cfe13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c994f0b-21dd-4deb-93bd-6401782f99b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05d23e8-f6e1-4239-b9b3-fa7dcc2c780e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdbb75e-0957-44ec-967b-d9a5cd3c8a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c639b99a-efff-4d4e-b2fe-455a4a1b7545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cbc562-cf9f-4655-a1ca-6d6eb6bf480d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6a2cd0-e969-4520-98ed-0f9d123a7198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2958acaa-20f0-44e3-9b39-63e94aa97726",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61170182-46fe-4d91-a266-4471089a4bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312a5aae-abf1-48c0-aeb5-b979909f62c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4561c593-44c4-4bf2-9112-2f91fe04f769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf1d7d9-394f-47ca-8e72-3fecf7e2b1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3da392-4bca-42e8-b0dd-630e4bce1ffa",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee569a49-7b04-4b06-90cf-21fc3e2575b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ceee47-735a-4dce-9c51-bf4400614dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d802aa-6fdc-451a-a0b1-ba786c6b2248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ccc8efd-4711-48f3-b50c-efc840182f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77dcea8-1147-4882-8e60-a1a41126cbd3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0eaa6d2-b77e-49ed-92b6-ca2fc4ac09c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24758297-8c72-4ad5-95f9-5a16bc35d09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb1d5d9-a736-42f3-a23e-a92e84476cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99ff10b-04a2-4efe-8f05-20dfa0148ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc20061-56d3-49f2-8597-6628aa602af7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306af303-35ce-45ae-a54f-df6645a32048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8160967d-374d-4b47-8de9-886d617d2a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206bb31c-ebc0-46a5-b205-df8bdee2e19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c489599e-ff46-454c-b821-23bb6fc8204a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303071fc-bbbc-4d94-bc0d-0de0ba2f6be2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f8ddf7-9cd0-4e46-beca-c3b29d8f5abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1375d643-d583-4fc3-b95a-76614dfc8fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ec4637-ba73-45fc-88ea-c676bc556489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acea999-d8fc-497d-86e6-f06b629b2378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7a2c0c-59db-4042-9fd7-ceecf1598624",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0bcff3-afeb-4880-891e-06469c961d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bcd48e-70eb-4df3-8395-fe261fb87abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9a13db-670f-415b-9f4f-c69882d51395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d36ffd-76c0-443e-8039-c8a57687cf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323f9e7c-5c9e-4403-8362-8e2e6b232fb5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff25145-f757-453e-b805-7fc82031c43e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03fa6ddf-6242-402c-8a4c-e6535ccfb271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b4292a-10d4-4612-99df-b86b089d9d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34f1b9c-53e4-4ee6-9456-0923f33d0e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573ec9d4-c8cb-44e6-b8aa-62e6b11be75c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e33eb9-8f7d-4954-9f47-22cddce3c7a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c64bfd6-7a83-4e30-bc91-2e61afbeb766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb38ad2-93af-41cb-94af-4a57fcbddeb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531abc32-28a2-478a-a8c5-bf7a8601e717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df986a6c-7da2-4c17-b2d2-f34632a2293e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85016f10-d490-41ff-8042-5837a3cadfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887c49a1-72be-4aa4-a453-a46a4d393ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4f5379-d5f4-4ed7-ad55-9279e439b8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2facc5b3-6719-4a39-bff3-1c9823920f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80133b2-86fd-4a1c-8cdf-4390ac71aee1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14aaf2bf-f814-44be-a713-2a253f46a133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec230816-8baa-4fe3-b291-419ca120cc08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc93967b-42a8-43f8-9845-5e47335d7a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a11ae7b-fbc1-4c3f-b61c-ed7464c34fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e61c81a-b30b-476c-b818-684148737be6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bf740e-69fa-48f4-922d-5dfd97d861cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eb92b22-6326-40f5-9b75-1ef10cf2e5bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920d9806-caf6-425c-9a73-f62b30c46a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51eeb29-290e-417e-b7b7-ed1eb8f45711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7290d22a-2d29-4eea-9d66-a814884d5458",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba56874-8e2a-41a7-a726-f50cb18af41c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe69bbb-93e3-4909-bf26-b0ba0ffb61b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d557348f-2b65-4d1e-85ee-d18c75764d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5af513e-2645-4d65-b306-60d848d061c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2ca316-8ffa-4293-ba03-b6ae0c6bb2ca",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c9f2d6-ca4d-42bf-88df-207048e3db54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d873677-ec2c-4507-a516-29bdcd5d9da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0983c6d6-d1e2-4972-ad98-656ba08e4e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162d78d5-e7cf-469d-b8bd-b4d9d327668c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521ebca4-a0ea-445b-a212-d28ad0bde89b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd8e87f-37c0-48d5-a162-8ea2951bc2a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4946332a-1d99-488b-a6c1-5de2108e0796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d46e51d-df4f-4057-8738-a10876eb33e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a17105e-6e3c-4015-9f8b-895f8ff0b06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f7bb75-97a2-413d-b27e-8c54bf390034",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef224e3e-2e6a-4bc9-ad7e-65faeb950f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b43f5e32-fcd3-4f26-a66c-a3e0a9e0c371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81315f51-8310-40fd-9ef4-5e12de495ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952ea404-8bcd-4e1e-a5d1-e0de6ee5d8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d843e852-2d4a-4bf1-9982-8bed9c59f044",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9831e1-e207-480c-8004-74eb2e9c70b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b87ab5a-0934-47f7-a4e1-6fd621060f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fb1121-ba94-40ec-ae77-c58c6b564e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522dc0df-2dd9-48fe-bbf6-0b243cb23f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe05d3d7-beef-4110-a0a6-89affc31f7ad",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79104b2-0c13-4593-97eb-8a5519bca021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e281574c-21c1-416c-b875-112454cc3b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "641fe73e-b701-4606-9f02-ca0057b57f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69063775-8c48-4a56-9324-6f09cb5778e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c345472f-37b8-4b75-8b45-0b72cfd0437f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a673c510-0b54-4eee-b962-c7e6cae9bb8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b51a589-ac75-4379-96dc-b0df386faa8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365d29ee-a424-4b43-90e0-71db06114577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8173d8f9-7d7e-4969-b2cd-98f2655d646f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95831331-6093-4834-93c2-b2f3f6b87c3a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dc30ab-febe-466f-aa5c-8032d62aff39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c95c418-c00d-448e-84d8-5692e87cda37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a38a93-1a16-4030-a711-235cc9b99317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8a7f2a-8a27-4194-a1fc-534362aaf02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc08337-f6ab-419e-825b-03d0422c12f1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1485bec1-9f0b-4a2c-91c3-b9a853778096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d1fbe0-d4df-42c9-a0d7-d5068ebfbed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7107246c-702e-44e8-a8fd-2ea327fbb2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256759c9-9008-4507-8810-f774eafbdebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a45eca1-80b0-4427-a1c3-932c6b309111",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274c3a55-9bf2-47df-9657-c62efb4d6635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3682c0-1713-4023-b629-3152d7ce5c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545610c3-12b0-4926-982f-7d15eff2bef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ea7550-c34f-4360-ae75-28bf813eb3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca29fcc8-0d2c-43cb-afc6-26521282b847",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f48dc57-8960-4e7c-9e12-d92cbe890863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11693fc7-5ef4-481a-9f76-5e9492d75ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ad52db-9cae-4f4e-bed0-9a909c8e20fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c7c24c-0d4c-483b-aa09-0accf6bfc388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609b74a0-5f21-4db1-862e-c4aef3fd3004",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76660499-3f8b-4370-8ef3-b707e9404e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6241dacb-b9f5-4af8-b228-b6cf500f0cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5a91b3-2dda-4037-937d-a6caa7f61455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937cde45-a33d-4b9d-aa22-a688e168fde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2521603b-f252-4e1f-9f16-6825abafea58",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228c494e-5bc4-49f8-8c0c-f16e2ac1fbd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ceef1f-d795-4037-8868-65d2ab0b7042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7346f0-762e-4c5f-9ef8-f82c820d7276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787fa97c-2104-42e7-bdcf-5dd6ea4ce755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8404aac5-366b-4a6a-a576-3c912b41b11b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abaddf4-ebad-454b-bd59-d6d91551257d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae9966d-d538-4a7f-80b5-47457f19eaf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a59f1d-df23-47e9-af56-b99cbf9b4cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5dda67-14ca-4a9c-be7e-d16bbc41caba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58689b08-6473-48b2-b8fd-7e91d43bd9c1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5423ed15-eda8-49a9-871d-404d44f81709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a8f6fb-e135-409a-843b-1cfc6e32ef33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b360246-7f4a-41b3-8a24-ca02411b513a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b41f2ac-b8b0-4365-bd30-7a6dd79f08c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5ef9d7-9842-44f5-8de5-a267bd089cdc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4395122-4a20-48a1-874b-323e16d3affd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c657ec69-226c-4c2a-85cf-1fa089962e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be81d97-7712-4271-b05a-98ec29f66aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8344bf34-9b6d-41c2-a4a9-f5f3616492aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c170f205-a11d-4da7-b3f8-464ec8f63617",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c213d70-1790-4f20-b317-8a508827f12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68405ad8-2f12-46ac-bee2-c7372df84bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefe43f5-a664-4c28-8a90-4a4c6dcd5222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ea800d-7adb-4861-b109-40927f6ffa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390db26e-65c5-409c-ab01-76875c4b4043",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46218c41-f59c-4e94-8cb6-8b87a552234c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda504fe-9445-4711-aad0-da7632d356dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9cac80-c0ad-443e-a95d-7284e166082e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a8bbee-cb4c-47fd-ad70-4f4c074e3477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dd341c-ff04-494c-9a4e-3f5ef545cb05",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1ed1c4-21e5-4093-bae5-194b65b5a10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d928f1-0197-4af4-a590-256760b29b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8581622d-fc6a-4674-9756-38a62a7c97d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f2d069-285e-4190-9d19-97ad4ce5d4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f206fd06-077c-440a-9e4a-d77a5c87536b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca88e71-dd9c-4e1e-9520-4984b1125257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1571552-af6c-408c-b2f5-323fc0e15c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa50068-2945-45dc-bc2b-e02d52680a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41840e79-2d45-4a12-9ff5-b4ae1955e51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d149d19f-3c3a-43f8-ad56-8f55a0a6b401",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc6f919-9f3d-45f3-898b-7439c6402323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99e5079-f498-420c-9557-a1578fa5fd07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d9a10e-eb3e-472b-921d-eaac9ce06b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19c4605-2b50-4451-8a08-6a152b650071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cb8450-23ba-4eec-be66-d1432ad0a58b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a754af51-c73f-4add-9f43-8fd94074fb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39a3772-eef3-434a-bc79-307edf323db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975f3d54-6281-44bc-b1c7-c41594a14c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544b157a-2639-4ff2-8a4a-c049d16501fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687abe75-d140-4e45-a477-f5fd14731fbb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a598d718-aab4-4a79-864d-83af5879c464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c626de10-ff3b-4524-bb75-0e80e5789b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e44b78-9357-4991-bcc6-8233a50ba39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43bcbe9-ae93-4658-bd03-6c6ef74dd9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d58c92-5e53-4ea9-87c2-bf16e1541c09",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cfe57c-014c-4691-8333-71627422c277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017097ad-840d-4c53-842c-618d784be660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c3272b-e413-4e12-9b30-857584a18495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2086acf7-e046-4e72-9639-a189bb57293d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7777f3-4cd1-479c-802c-37304cfd4edd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a7ddb2-64d1-4e45-b516-9dc85796bdab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c65a30-03ac-41ed-bf52-dd855a882f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73250a18-d5d9-4cd4-91a7-c07f8536d48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7624b85e-87a5-434e-861a-ade9a7735543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9a68b8-982c-4a88-b509-1fff264bbd0b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf12f64-7484-4c99-aaaa-900c4f44904d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937a6c86-fae1-4703-8e38-8c739c32ac58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b1c972-722b-49ef-a6e9-1911b3b9d667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75cda0c7-4a0d-43c0-bbe0-27239f062016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1ef9f8-c460-48ba-b7ed-550c5411916b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7820dbde-77d5-472c-a00d-cb5f1ca4f103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9e60bc-ffdf-4246-93ea-2a7b3830d008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44259105-3ed9-420b-9ddb-35540427a572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f200ce6b-55c4-4206-9935-3fa3161f5daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f344a0a-c235-47bc-8062-f070b411cb95",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ece071-e190-4c41-979d-be25f2f70d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f8fe7b-b78a-4a09-944b-d713b23fbc15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980141e5-2957-444d-966b-2ebcd224f254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c1192e-2c19-44ec-891c-2772f8349f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d687bc-23ce-4a7f-9a42-3f7d67afe765",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9df6e5-4d0c-40da-8699-a89edf5ac971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9200a9a2-dad0-42c5-89b6-0eef7364ff75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7e8142-fdb2-4cc1-81f2-ca82f436e875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d11cd8d-7759-4879-9d4b-8e67ef4077f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebb7e29-aef9-4213-b19d-a2e0689f198e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42274941-611e-4d79-a603-68054e8f260a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd4fe87-45b3-4b7d-8e4e-6f0e01ef42a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7c921a-7081-43bb-bd20-31c7c4cd8f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c32d05-00e7-4ea9-91c9-9c099ed971ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec07d6e9-a5bc-4f09-b1cf-853d20f2ab11",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bc5d36-9a3f-4a6b-a86b-4d3ecb865b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f57507a-0372-4de0-91d3-c27966b3999a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96c637e-8053-431c-b9dd-9e380963333a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d0dddb-7088-460a-a863-9be510964462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d745e1-cc12-473e-bac8-12196a56dcf9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84873415-be7a-439c-a0c7-00ab0c0cf78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6602c0-b0d3-4aa4-9b1d-e0b57a59c72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3379c0-e45b-4009-9572-05457157c4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bf8e56-f0e7-4508-a63c-0ea54dfc5d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8286d9-6472-4d9f-a62f-e7a7a13291ae",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a48a3f-a14a-40e8-9fde-1159511480ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b33709d-4383-4934-a45b-0e099c8e8054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b027e9-571d-4e01-9df9-faf5441147bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dddfaa2-12a0-4b36-9684-3e80a270658f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65f246f-14e5-4df9-a6cd-66cf7f5e9ee3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e23509-2631-4fba-a1bd-d32dbda49108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f7f5165-7364-43d7-a30d-9568973b051a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aafbab0-74dd-4031-ba0d-4d7f188c8381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc800b09-5d67-493d-8d7c-74e64599b294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03481176-a442-4edb-9658-e5fab6881a79",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09986fde-b954-4fa6-9e3e-0d6584f63d2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e794f9-7c05-410d-a9b8-c2cfea7b7282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01bffe7-394d-4633-817a-f1e24f7d7b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a367e980-209e-4fb1-9c98-05688e8bc936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ea16cc-cb8e-49f4-b211-54f29c1b4410",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d66f341-79ec-424c-af06-6fc34f532086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "956bdc6e-e3bf-4de4-bb45-e372ad4d6374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38cc55f-7369-4c31-84d7-130e1663437c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4cc496-0af5-4958-b8f7-506050ec56bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0083b4-fdba-4644-ae4c-d3201d55301f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc8b5ee-a15b-448e-aa8e-2ced7da89677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba4d598a-3de0-497e-8e7b-53a0dd7d9ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063b98ff-e7dc-4fe8-94b6-01009e9fcfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057094f8-c499-4c9b-a120-7ef7e88a9c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d1ac85-138b-40dc-8181-99a303d4f7f5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997e3344-8a6f-47d0-a0a6-af605b7305fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a77ad23-f392-4f76-b5e2-cc0153f23cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855d5a2f-f341-42a6-af51-4427e1934d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0251a4a5-5b9d-40e4-8c61-638df3fbd6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a3ce7a-a432-49cb-b6a2-184dbb7cb060",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dd0490-4986-4e86-97fa-d8fc5145d31b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99701fd8-db57-4070-b8c5-2996c465bada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1170940-8445-4e0c-81e6-533e433dad01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669651d0-6a24-422a-8116-c0c271e974f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edd7676-67e1-42b0-8f32-a6c8df714d7d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a62c27-4fa8-406b-82c5-4be27802096a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e798040-e3ea-4a96-9bc5-9a6643254a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f4e07e-851b-4a0a-9ac3-38e93b0e3b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac4cdee-21a4-49e7-97c5-c24c730c55b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0ec824-1c81-454d-a0fd-26a3fed49e4d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6788d4a-bd5b-4662-885a-7043a0166732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dd12d3b-7d60-45cf-aec8-201b59ac64e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4e4ec7-ccd1-4667-88df-b7a5f689ca8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01305f5a-0494-4b12-8368-cfdc686e403c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05c2fcb-36e4-4f8f-96b8-a69647d5e3eb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66011d2b-7a7c-4414-8c66-b1b01082f40f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "799a2398-5ead-438b-b4da-4c7cc07fc298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30806fe5-6056-4ca4-ab51-4c78e542d5c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01af8ad9-5abd-436c-a620-2c629ed0d115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025455cd-6696-402c-99bd-052e89c1a859",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65037d9f-5ebf-4be6-b156-80635d989eb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66fed6b2-34f9-40a9-b243-b288e35f5eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af76c28-aa04-47f8-8d57-3bbbe6d3dc31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf88b642-5161-45c6-ab38-e114138ce476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4dfc52-3f06-405e-b14a-9b46924131c9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972be944-10b1-4b0b-af1d-94382ac07658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d171ef-7052-4bcb-a188-5de09c65a38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01025ec5-e3e4-46ec-867d-81cd68a0dfa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea8a4ad-1e7d-4768-b44c-1aabc4a04937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01edbe9e-13fb-4b53-af41-5779fb05f5a2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4aeec25-0020-4463-b1f0-3da557d10640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe7c418-3782-49c2-a19f-05ba5233977a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ba3d72-1400-45d0-864f-2523c979a74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c321f9f-dc15-4036-903b-12436fe1799f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea922c0d-ead3-40b7-9e4f-fe99b0c4c9dd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f9fb25-6053-42f5-a7e8-05dd517da299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0536a083-0d1d-426c-88b4-ef704e4a87e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e066d640-8b8c-456b-a8d1-7e500bde2009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b231ffc-24c5-4047-8fa3-da71bb39f673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55ece8a-9e9b-491b-908f-f1cea5fb45f6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ef6e77-a52e-483a-b0de-13a5cd2480f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "682f9b6c-bf8d-4a35-9419-8be4f1572ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaffee0e-59c2-4ed0-bdd5-5569f74b385b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178055c3-adec-45d9-b5b6-c78990472799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d3f0ff-a549-47ee-845e-2063205ca6ba",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c862c21-b83f-4f03-a588-24c02d574848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0091992-4d8f-4762-ab72-b3e298c566fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed0e2c2-bee3-435f-9f36-022195c977cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695890fd-82db-4b2f-9fe8-9374c348d158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1804edc-93c5-4b27-878b-39cd1fb81993",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d190cb8-151b-4ff5-9b55-edd82f25c215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aacaa83f-a2a6-41cc-9137-13e9419f8a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057f52c6-78f2-4069-a03e-51cd27669934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b74cf4f-6b24-4bda-91f7-8fe470a9d131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90b84b5-1731-4623-bed0-b4e232e0913c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2287fc6-20b0-48d8-8f32-b788ec9ba718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d92cce3e-4954-4069-b962-dc9c29ed0998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2902f2a-7755-47db-8fb3-4c32025843ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d609f5-2dc6-48cd-8543-b78fe7ee8bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01c4877-c6bc-40d0-a49b-29ac2bfd7698",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3018379d-ff92-45b7-ad89-902a78ba4c7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ac5469-97c7-42df-ad75-36c355eb05c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ea5595-d360-4dcd-8c4a-5ff539370f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0296cc6d-ef91-4025-8942-2dffb8755310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9dba70-21be-4037-9052-73a30c963a47",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62d6716-d207-4674-804a-5579cff101f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e9a683b-15c8-407e-85e6-dac26313de20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb206f0-5947-49f2-989e-5c25ec730fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41740781-5d62-4f7c-a747-d9081657c71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828bc22f-0dab-4f4c-a7ba-7b8f85eab5fd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e46825-45d4-4da8-ab2a-ffe346d66bfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7df18fb-65ac-4325-bd9e-566ccb61cd06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50917ed1-8572-43ea-9f7c-11e0231199df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f945576f-877a-482c-9d73-c414dfc4f4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00df144d-2dcf-446c-8e78-edf33f93d061",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57016745-d840-43c7-8ed5-40c4b0424167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffbb0887-7bc8-43d1-8fb3-d42f5bf576e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3781d3a9-3560-4c52-bf50-c71ff0edc0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7fffe8-27d5-4d50-a753-37d54f41053f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86aa6572-a223-4ef3-ae97-7e727e984206",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed43dad-1501-4001-a4dd-aa59bd1abb86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8538d792-12a2-4f10-8bc7-fca35d3c554b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f116283-0174-408c-974e-33095979aa32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913af918-5efa-4f30-82b0-821571ace945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3550d993-7d34-4a40-8fc2-634bd4b82db5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949fb4c3-038d-438e-87e2-70e8b43eed2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1feb0dc5-24c6-401b-8d7a-e964e6ae1704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00df9a5-08ed-442c-b0c7-121151574d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e471d34d-7e6d-454f-b807-5e3cc94cc89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a92a59-7e6c-4398-8b39-e804e6c1d371",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2baa34d-d52f-4103-bf50-f34ec563fd88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73555b44-c729-40a1-91a7-abc7d757be59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a510dd9-a98d-4333-bfb6-ac650b50e0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29111d3-fe9a-438f-820d-6c2ee131d3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f004ca-95e7-4387-b8a1-8a07b8d6a492",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f98438-5c37-430f-a98a-4a68a817990c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8e2889f-31b2-4122-8d6b-c4254580c59f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28ab54e-0664-47bb-adc1-734dbd5a0c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56e5938-a853-48c3-bb0f-cfeda22366d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5ef345-292f-487f-9d49-0ee6ac39ec4a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15bff46-be23-411d-b62e-d99a110154ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea95171-c7f4-4165-b783-0e8deb4ff27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142e636c-2f25-4000-a3b9-4d1c70ec4c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7c8539-58cf-4873-ab43-4d1fd9d8d2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcb735d-2431-4ea1-a5e7-ed1cd8731f1c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9def304f-0784-4799-8ab7-1f7198a74c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd190444-6aa7-40d4-b034-43e3fc4da012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca0c159-4f1c-4cc3-ab2c-85339e4c2463",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc92f75-c342-40db-9419-ae3b4cbb097e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacfafd5-be76-4622-a186-d47e8b79ce69",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c79d650-bf12-4dc5-9380-8b280b9c2af2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17911371-a241-4dab-b9ed-8c82de01ec46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29b8bda-5e98-42b9-a79d-71d5d36b4390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77defead-1bbf-40a6-8d11-5affdaaefdff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4b91a6-5041-4599-bf9d-2e4829b2cea6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa82a77-e173-4444-87e0-0b1fa224b736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19add92a-77bc-4b0e-9586-5b95f4f913f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548bd60f-9732-40bc-b7a5-9584a0708c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa4418c-07ec-49c5-aa88-beada1f2f5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f230f998-c428-4a1a-9598-e550847e567b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd16699-28b2-40d2-a9fd-d60b03fdca76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d67625c-19f3-40d8-b533-7d81834b3099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de9606d-ea93-47d6-900f-365db19cfebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519172f5-69ea-4551-a0ec-32dffcc93f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0552487-ad1c-4485-b1d1-be20b88cbd68",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef993b8f-084e-45ad-85b9-2eb6bd25f562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8135871-16ff-4c92-856c-c0a4e0b1abe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbcaf54-11e5-43b5-961c-1e4179e5370a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7cdbe9-da9e-4e87-9f8e-afa396644dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5b45a3-cc69-45c4-a509-8c5045226e7b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b347e3c-3efd-41e3-aea0-4e51353790fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0477a13e-f23b-4595-9288-f9f11d7a97a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c60f28c-3104-4a48-83cb-77078dc7ebf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e995be2-bf94-4708-80e6-579d74a86584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3933addf-4305-4ee7-9410-57822bbf9cf5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fc4d72-2766-4b14-a6e5-a823d900647e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d7e319f-04ff-4686-9200-cabf77f08001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d0e5be-385a-452b-adac-3d2886c0b42b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ad8ecf-5285-488e-b8fb-8c7e4558d6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffe5bdf-5fc0-49e8-a03b-af20cf2f1b0c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e7a4b4-8757-41df-aae9-bb2cb3985c5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bd763e9-3361-434d-8cf4-9d648f682ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dd6604-067f-4979-96b5-4db97208b251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0161c5-398e-4026-bcf0-9b9b646da0ba"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f3af1b5-0c6e-452b-9f53-5f0dbcc1031b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7e95422-2bca-438c-96b4-f0c1283099f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d9a6e45-5941-49a3-9257-be55417963c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4b432e0-b282-425d-93b9-c9d875560a30"
                    }
                  }
                ]
              },
              {
                "id": "affc670d-7163-4c8d-beeb-e219a6719f17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27dabb76-0e64-4bf7-b670-209b0eb223b8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e38af8-8b23-467a-96af-82425b227fb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b95e5424-ec30-44f1-98b9-d1ee519e194f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc8d88f-2560-43a3-ab94-7faaf2627b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df848ec6-cafe-4edf-a14b-ded29b30c344"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b638a056-db09-4641-bbf5-70cd49b04fd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f6bc4ff-816e-4f79-8a89-a98423f71f03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9167ce0f-4a84-4aea-91ff-8e0a45e89419",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e251640-ffc7-41c0-8c28-8ae04deaedd4"
                    }
                  }
                ]
              },
              {
                "id": "f23f98a2-e191-4d5a-b470-c7c042137dba",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "de849c6c-0b9c-4ce6-a414-9394b4c9e25b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9dda56-95cf-4603-a78a-e897f5242722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c570add7-d4b1-4eba-88ff-1f72ba97b065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbe7b3e-8aea-4126-aff9-b10ed5bcb3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817fba9b-a1ed-4684-83ca-f18e6f8a94a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5d638845-1bd0-449c-ac78-61584e66aef9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c97942d4-6fe1-41d8-bc84-cf0424de105e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7c57dad-9860-43b7-b608-e8299f9b3ff5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a39ce212-5416-4cc0-a3e5-167d4c03ac1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e6b419c-9dcb-4e06-beab-631ab40b6bc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed4a6e73-a4b3-438c-8050-9b077b53920f"
                    }
                  }
                ]
              },
              {
                "id": "f5aedc30-dbe7-4e02-88a8-f46ea6cbb34f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa2813cd-1728-4da2-80d1-49eae96250d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "db3ac980-1a24-4931-86d8-111040d110a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7860dce2-822a-4558-8708-1ded64c55b65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "769a274c-5ba7-4693-81b9-baf4dfa3e33e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65be22d6-02a4-4db3-958d-43facbe1f13c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0d865e2d-583e-4a1d-a73f-862938527531"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5534c500-cf02-4707-a60f-3843a06b57ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64ed4a9f-4678-4210-84bc-d3438489c8a2"
            }
          }
        ]
      },
      {
        "id": "b25bbc96-0834-40e4-92de-e62e6b886467",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f77b4e58-cf86-46a3-9be2-40960472264c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3120942-2f35-4f4a-8f18-21c9a252ed32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bfc6fb0-8d4b-421e-9414-89b4dcc20799",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25b0abf-afbd-4e23-92c3-feef62e16da6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e2ccac60-97bd-4e58-a2ab-5e4d03235236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea57da62-0e95-4cf6-9e54-e52f7e97168a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c11a69ee-a1a5-431c-9856-7d0ff9868be7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fbdc26c-47bd-464e-b7c2-2c2c5ebc3cfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5efc08c9-09a4-471b-acf4-18f262d0ff3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dce9f5e7-5d6d-479b-bd22-6dc55a4a362e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76ac139e-84b6-4edc-853e-0502aec4a4b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ec2c64a-0e75-49e9-9e69-1b8fa8a8d3a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "61cc5e84-ea1e-417d-ade2-210e9353b583"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9685b142-2220-47f6-ba97-908581a2ecf1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2db41819-1152-47fa-b8ba-4879010e6e41"
            }
          }
        ]
      },
      {
        "id": "e33e5631-bbd1-4686-a549-be39f889b0db",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e3253842-2682-413d-b1d0-df71a62db63a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46f4bd2e-ed66-4641-b62b-9f93b1df3c6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccf760be-1bc2-4f18-b47b-128fba104a26",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69565cdf-9435-4b89-8f31-29223865b637",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8ba71bc-7201-442d-9abe-22a3c4892866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a44bed-4785-41b5-b291-9240635d5462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c8991bb-e466-4ec2-a8e3-d495ee50c149"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80e73f49-9710-4683-9e1c-ed50eb6e17aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "671176e2-f240-4c27-a7dc-9a87ee316d89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfe04489-1535-4715-a216-fac245775f31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27f03687-58a7-4c04-8521-c9783f895739"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2c50afc-a9f2-4b00-b0f7-5d32b32ff795",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "db49ad9f-bf0b-41fb-99ca-74151c7ae6ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37f9aaa5-6ecf-464b-ad0d-3b45788a5400",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0d7a74c-62e8-46f2-852e-718f3b146c6f"
            }
          }
        ]
      },
      {
        "id": "c735e7da-c21d-416e-b900-f6a3c914da6d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "16cbab6d-2a3b-4650-9b62-15ea09ce65ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b6e6ab6-c43f-4114-bf98-01f93ea827d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cfa69a4-7586-4be2-9374-42fea341acc5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55ab509-70a1-45d5-888b-95c3cfc38b40",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72388375-b173-4376-9552-c6e3cff03453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac34f42-9fc1-4f40-946c-ab47c9698a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "088e7f77-d475-4f35-a08d-8565b1767147"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4aa64e77-283f-40c0-bf17-edb60b83f724",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e04ee6a-f03d-44fd-b3cd-03c5f10d77a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "474e31f3-0c33-4eb6-8e3e-0153554e5656",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dea0234-4446-49cc-b7c0-064e3b295a0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e646c187-687f-4f7f-a9da-97c6ed9387fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66b1174f-1fbc-4593-93d2-92e3bdc0c4fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad4db25d-24ab-4193-93bd-b9c435cd40ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08b1ca67-992c-4744-8aaf-2b200db7943c"
            }
          }
        ]
      },
      {
        "id": "694bb11e-5cca-4a84-8462-2dac6cb59f46",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34c9b6b5-bbdf-40be-b59a-873231110665",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad88d4b0-dd81-4105-bde8-b826bf1f0f75",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ddb99dc1-e61d-4bfb-84bb-7a5b83221ef5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09976d63-ad15-4fc6-9b9c-b69260f38e86",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2152c156-35b1-4914-98a2-8c1820b9f49a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.03174603174604,
      "responseMin": 6,
      "responseMax": 302,
      "responseSd": 25.000932207361533,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720312963931,
      "completed": 1720312975018
    },
    "executions": [
      {
        "id": "1c24889f-f405-40fb-9313-2f2e82969d8b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0bd49c72-8711-4301-a81b-75727cd54311",
          "httpRequestId": "c8fcb236-502e-4031-8635-edab9be6c8e2"
        },
        "item": {
          "id": "1c24889f-f405-40fb-9313-2f2e82969d8b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "41f0e0cc-df1c-4b6a-898b-40d0860fefa5",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "962acc0f-f6b3-44f2-b7ef-d63e66676eb5",
        "cursor": {
          "ref": "5be2dc72-f8ac-468d-900a-68ef92b3d766",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dda38f43-f5a1-4406-9dfa-e871e1736c4d"
        },
        "item": {
          "id": "962acc0f-f6b3-44f2-b7ef-d63e66676eb5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "309f502e-c2b6-42f7-a116-0c2aa4d45ac9",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "acb82880-da9a-4565-a1a5-67205dbc255d",
        "cursor": {
          "ref": "b8a3e635-7417-41ef-84d8-8df345c96966",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9e735245-41c8-4af1-b9a9-092797b5eca6"
        },
        "item": {
          "id": "acb82880-da9a-4565-a1a5-67205dbc255d",
          "name": "did_json"
        },
        "response": {
          "id": "d8433b1a-4e5c-4f73-8563-2d43fcbac188",
          "status": "OK",
          "code": 200,
          "responseTime": 216,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf147b81-4851-4804-92e8-894342a75495",
        "cursor": {
          "ref": "80b4569a-33e2-40e9-8d86-38f78d27ec04",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b02f2e56-4574-48ef-8eba-f4a4fff0ceee"
        },
        "item": {
          "id": "bf147b81-4851-4804-92e8-894342a75495",
          "name": "did:invalid"
        },
        "response": {
          "id": "b3a146ee-e6f8-4e8f-9e84-23a12df23252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf147b81-4851-4804-92e8-894342a75495",
        "cursor": {
          "ref": "80b4569a-33e2-40e9-8d86-38f78d27ec04",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b02f2e56-4574-48ef-8eba-f4a4fff0ceee"
        },
        "item": {
          "id": "bf147b81-4851-4804-92e8-894342a75495",
          "name": "did:invalid"
        },
        "response": {
          "id": "b3a146ee-e6f8-4e8f-9e84-23a12df23252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4e3167-a6c4-4f40-816c-6e568c5df09f",
        "cursor": {
          "ref": "73ae7483-70f2-4f03-9e6a-b153d0356829",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e1a51ba6-4dc3-4a39-8ed4-63344ef4ad55"
        },
        "item": {
          "id": "5b4e3167-a6c4-4f40-816c-6e568c5df09f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "df022b95-8e3e-4dbd-b323-5340383d2f0a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 160,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899c5217-b4bb-46b4-aa71-5623f36c3d0b",
        "cursor": {
          "ref": "e4bd42a3-f6d0-4400-a64d-8c84672fcba4",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4687bdfe-caff-458d-afa3-c96f16bc4c9d"
        },
        "item": {
          "id": "899c5217-b4bb-46b4-aa71-5623f36c3d0b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b5fe82ed-8b63-4937-964d-063c99c4d521",
          "status": "Not Found",
          "code": 404,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92123aaa-4367-4dcd-8875-0fc14ca52bf5",
        "cursor": {
          "ref": "f137bdf9-cd60-41ab-94e7-844214306aa8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9f99f699-06f3-445c-9bff-6dc3dd82320b"
        },
        "item": {
          "id": "92123aaa-4367-4dcd-8875-0fc14ca52bf5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "990ebb6d-a34b-4990-9ea7-65583b3cc8db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549fbc93-b66f-46cd-b4f3-83a02f64bda9",
        "cursor": {
          "ref": "f8b9697b-370a-4dfb-ac9c-67f2dfce4797",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c00cd140-f59e-42af-a39f-43c61e0d7073"
        },
        "item": {
          "id": "549fbc93-b66f-46cd-b4f3-83a02f64bda9",
          "name": "identifiers"
        },
        "response": {
          "id": "1032a616-a06d-4327-9719-4354aac97537",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0a019a-558f-4676-9266-d7f312d486a9",
        "cursor": {
          "ref": "973fcc2b-75da-4081-8f0d-79e904809ab9",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "947c6ead-b646-4ceb-afb6-c914f571a496"
        },
        "item": {
          "id": "0a0a019a-558f-4676-9266-d7f312d486a9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "762f0096-befc-4e53-a04e-c5e958d9b195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3556af9d-6a31-4672-bfef-20d69625a945",
        "cursor": {
          "ref": "3f88567b-6c81-4d31-9219-033dc1074388",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "392e3bb0-bc49-44ac-a779-f46fdff2435d"
        },
        "item": {
          "id": "3556af9d-6a31-4672-bfef-20d69625a945",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2ac2efa3-0e9b-47fe-9ee0-3f18d5189365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9b3ee0-97c9-435b-bea3-860e13c38233",
        "cursor": {
          "ref": "ee22cc05-acf3-4b7c-82b0-99f802e50055",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d6efc0ad-84d3-4c9a-8750-023d3bf78419"
        },
        "item": {
          "id": "6e9b3ee0-97c9-435b-bea3-860e13c38233",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "87f95585-f292-468c-bf2a-75933e75d528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430cc520-d371-4a15-960f-817358126aba",
        "cursor": {
          "ref": "040f8e19-dd43-4ea6-a76d-07ca7bc078c3",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "927133e5-016c-4c6e-bed2-2c9bbfb34e97"
        },
        "item": {
          "id": "430cc520-d371-4a15-960f-817358126aba",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bd6df118-2953-41e6-8781-2825fff8074d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066dda6a-86dd-46c6-a86f-1321572f5496",
        "cursor": {
          "ref": "b4e9b987-a945-4701-a775-87c09b858e6d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5b0b3733-f580-4045-b8e6-d9a07af779a8"
        },
        "item": {
          "id": "066dda6a-86dd-46c6-a86f-1321572f5496",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f82dc8cf-46c4-4a12-a0e9-d7fe3d790755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dacd473-cca4-4b9a-9db4-d27f66a6335a",
        "cursor": {
          "ref": "c238c764-fbb0-46c6-99e2-f056451a2ee3",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6b684429-9bb0-401a-a6e8-5b14dd3301cc"
        },
        "item": {
          "id": "4dacd473-cca4-4b9a-9db4-d27f66a6335a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6bf5bc68-917a-4010-a3a6-7116a045a069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82acffa-aaa8-4ecc-934d-4638fd72cea2",
        "cursor": {
          "ref": "488c8b19-d494-470f-9961-7be6ba11b8b4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7d688a7b-776a-4daf-972a-50a9233f9f64"
        },
        "item": {
          "id": "c82acffa-aaa8-4ecc-934d-4638fd72cea2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "630e06ec-795b-4de7-b03e-2efed4bff04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7bdca5-b8a1-45cc-a9f7-9566ebeee294",
        "cursor": {
          "ref": "01449a41-9324-49d3-b29f-2ca1f32c7fdf",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "566c8d69-d6a9-44e6-b57f-d7732f813286"
        },
        "item": {
          "id": "ab7bdca5-b8a1-45cc-a9f7-9566ebeee294",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "446ffa7e-37e0-4f95-bfed-320d0fd5415e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b7981a-8ed1-4dcd-9351-f5784a09320c",
        "cursor": {
          "ref": "99d3fb7b-73df-4b69-81df-63093b090753",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8cdab2fb-80be-4c3c-998f-e116042c8d50"
        },
        "item": {
          "id": "45b7981a-8ed1-4dcd-9351-f5784a09320c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "18d30429-56fe-45c0-926a-e7c5ac379b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85973d55-52e9-42cc-a72d-5f462e53c540",
        "cursor": {
          "ref": "4ce76aa5-360c-4246-9747-392ed72d748f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c52c7e17-2421-4c66-b510-6e9c3c079742"
        },
        "item": {
          "id": "85973d55-52e9-42cc-a72d-5f462e53c540",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cd2dd9e2-d208-443c-93be-2f9c3ecfcd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7b6efd-b0c2-4473-82a4-2df896fd89b3",
        "cursor": {
          "ref": "124f06e6-a008-4b82-89f1-ac17831f32c2",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "20a6df07-9ca5-4774-9a18-89ebe739779b"
        },
        "item": {
          "id": "be7b6efd-b0c2-4473-82a4-2df896fd89b3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7e62f3b9-1e30-4ea3-b2d8-168105872c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fba8d1-6993-4a94-9e99-a28674b112ac",
        "cursor": {
          "ref": "e8ae92f5-7f67-45e3-9e86-8ed69deef7c5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7ab3f18b-07f1-42a0-ad64-f94323c98626"
        },
        "item": {
          "id": "33fba8d1-6993-4a94-9e99-a28674b112ac",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cdeb3022-c00b-40e8-b2be-d53865203d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37155fd-b2b0-4222-bc51-988ad39646dc",
        "cursor": {
          "ref": "9cc5303b-ef7d-468a-bbf0-4256e460d69a",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e7cc3694-5e1c-4bb1-8d37-3cb65d9bf859"
        },
        "item": {
          "id": "c37155fd-b2b0-4222-bc51-988ad39646dc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3e716a04-0963-404a-b8e5-4367644ab475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85675666-c025-49b6-aad8-ffe9f667ef40",
        "cursor": {
          "ref": "ca504e67-6a9d-4f26-8b4a-f63ff57d6c4d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a6006dc6-e210-4ce8-82ab-9c00fba56858"
        },
        "item": {
          "id": "85675666-c025-49b6-aad8-ffe9f667ef40",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5f6a0e09-d6a2-41c7-a721-fbc10562df08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0953772-e200-43f1-aeb7-89e9c1253318",
        "cursor": {
          "ref": "f92420c3-233b-4bde-b1f3-2c425376a40a",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ef3139f3-6a7c-42fd-a46b-9b95470cea57"
        },
        "item": {
          "id": "e0953772-e200-43f1-aeb7-89e9c1253318",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b4af0315-4867-4ce9-a06f-4b50dce60a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93438123-fb4c-4750-99d5-799fd40e4e55",
        "cursor": {
          "ref": "6a694266-7874-4cf9-bad9-6f5a07c37beb",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "765fe3cd-ee8e-4661-a022-c8c3b070f99c"
        },
        "item": {
          "id": "93438123-fb4c-4750-99d5-799fd40e4e55",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "096aef5f-a1c2-4a9a-a799-0e7b26a881d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee080f4b-6b69-4f32-887c-fead1239fac8",
        "cursor": {
          "ref": "7d7765be-8b31-4acd-99c6-d72fabc0d86e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8dad9a44-f1a7-4818-a68b-5bf741b7abd7"
        },
        "item": {
          "id": "ee080f4b-6b69-4f32-887c-fead1239fac8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1a310e61-9372-4960-94a5-2998699d0d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2883f00b-6bbb-479a-bace-c412f301bdf7",
        "cursor": {
          "ref": "b689b5b3-996f-468c-b563-101e905287c4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "81434dda-1b67-45c1-810a-59b05ef403f1"
        },
        "item": {
          "id": "2883f00b-6bbb-479a-bace-c412f301bdf7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f2eb6a49-97cb-4284-99fe-a933dd0d5336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a66d258-3a96-4312-96d6-e2c06df3c213",
        "cursor": {
          "ref": "6bc3364e-4c5a-4c86-a221-76accd3093f8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2dd0c1b3-84e7-45d8-9aab-2125aaf25a9e"
        },
        "item": {
          "id": "4a66d258-3a96-4312-96d6-e2c06df3c213",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "32388dbb-c382-45a8-a13d-434914bd06c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6600530c-114b-4e4d-b628-8a07dd328418",
        "cursor": {
          "ref": "de026beb-e59e-44ce-99e9-92c806cfe968",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f7503646-8510-45f1-b61a-749950e605e1"
        },
        "item": {
          "id": "6600530c-114b-4e4d-b628-8a07dd328418",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bdfd5096-aa39-4901-a358-bd6acc592a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a2816d-2899-48d8-946d-c3907516082a",
        "cursor": {
          "ref": "fa2fe175-0649-4b6b-8a98-077a329cd160",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a0623056-d96b-4adb-92d7-a54a5f09f7b2"
        },
        "item": {
          "id": "27a2816d-2899-48d8-946d-c3907516082a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7d50c964-7fce-4f3b-9599-3def0fc26844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff5d387-4b85-4b6d-9c40-8f61a71d2137",
        "cursor": {
          "ref": "e93276f3-ecba-477d-a65d-6f429d1cd9b6",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "38edab25-dfba-4b15-a964-d789c64ed622"
        },
        "item": {
          "id": "cff5d387-4b85-4b6d-9c40-8f61a71d2137",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7f4054f2-1539-41bf-aebc-de8ca567897e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415aa547-3816-4cc7-809a-fd0eb5795609",
        "cursor": {
          "ref": "fb72ad3a-d5f7-4fc1-bb4f-f1aa2bf7ebd1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bb316842-dd07-47ce-b92e-c4c669181500"
        },
        "item": {
          "id": "415aa547-3816-4cc7-809a-fd0eb5795609",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cdf4017c-c2c5-4114-b8ef-72c87774d7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c578727-d958-449f-887b-f1043558803a",
        "cursor": {
          "ref": "afbaad04-ebd9-440a-8cd7-eebe5ca33062",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d1db4990-a76d-48cc-8ffa-8c36881da21f"
        },
        "item": {
          "id": "8c578727-d958-449f-887b-f1043558803a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1f15f7ab-81c3-4aa3-a2e5-d007731ab74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc0cae0-e569-47a4-a385-0199d3e9af57",
        "cursor": {
          "ref": "c0424eed-b847-4948-b7fb-0ae151d12fcf",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f1ef4acf-4748-4c5e-8539-d1a82eed0bda"
        },
        "item": {
          "id": "adc0cae0-e569-47a4-a385-0199d3e9af57",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7b53cbf5-2970-4887-84fd-e91a8fc2a2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d06953-9a38-4afd-9d42-42133e431508",
        "cursor": {
          "ref": "1d4267f0-a405-469e-9b3b-f9dedfc02e04",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "16c3b729-dda1-4207-87d5-ff0b18cfabd6"
        },
        "item": {
          "id": "e0d06953-9a38-4afd-9d42-42133e431508",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0f0622d7-d690-43b7-a5c8-298c8fb5bab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7474fc-8942-429e-bb2b-6937959e2aeb",
        "cursor": {
          "ref": "f9810298-8df7-48e9-9a8e-6eb3c244b2e1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "79668cd5-4f1d-474d-8081-3e0ac552969f"
        },
        "item": {
          "id": "5b7474fc-8942-429e-bb2b-6937959e2aeb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fdfb8436-1a06-4953-a1ba-e71f9bde6ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b635bb3b-b091-42e4-9535-6dacc8083da5",
        "cursor": {
          "ref": "49b70aa4-1adc-48d1-9df9-20a3d2eeb5ac",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fb332ecc-26f2-4903-b9f8-68d4f6a7231c"
        },
        "item": {
          "id": "b635bb3b-b091-42e4-9535-6dacc8083da5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cc458978-22c5-43ba-a7c3-16336be4aaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef54999-b3bb-4ddb-922c-82d062be757e",
        "cursor": {
          "ref": "780654e3-ac9f-481f-a293-84efd95d7702",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9c1158d0-7840-47ca-bcb0-9f7c11711d22"
        },
        "item": {
          "id": "0ef54999-b3bb-4ddb-922c-82d062be757e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c97c0870-3e70-4a95-b0b9-86b847e1edb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b7e8e5-3462-476e-8d2f-ec20780d1bbb",
        "cursor": {
          "ref": "b3160caf-3492-43f6-841e-83c0d72d70b9",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dd071a2a-ed5c-461d-bad2-6d74bf88532f"
        },
        "item": {
          "id": "73b7e8e5-3462-476e-8d2f-ec20780d1bbb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4df01c09-d6e7-4345-aa7b-36dd3dde761b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bad233e-973b-464b-867d-c09cbca75693",
        "cursor": {
          "ref": "8ed2c847-7360-4936-9816-e5889de1fc53",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "13b307fc-ce12-44b4-a472-14143bee7cd1"
        },
        "item": {
          "id": "2bad233e-973b-464b-867d-c09cbca75693",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "eeb7ea4d-576d-4a2e-b470-8efc8a4be46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585f3f24-9d4f-4613-813d-c55a2c1c1454",
        "cursor": {
          "ref": "b393b2d5-e521-478c-934c-767064b26aea",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "77ef3ed6-e1d2-42b3-8177-89052fce9732"
        },
        "item": {
          "id": "585f3f24-9d4f-4613-813d-c55a2c1c1454",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9e438a1f-913a-4c15-8f38-6d954575e59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e49881e-4bcf-47e2-9715-6ff6adda5b08",
        "cursor": {
          "ref": "01d29e82-d7d1-42fa-9fed-584647a1b8af",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "96bbc4f4-0f69-4d1f-a8f9-586da4cd1b75"
        },
        "item": {
          "id": "0e49881e-4bcf-47e2-9715-6ff6adda5b08",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ac5206b4-4382-437b-bf71-c04705bf7dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45491186-0bbc-4eec-ba20-a2721b2a4334",
        "cursor": {
          "ref": "344c8855-f56b-4f97-9f26-1d52f4e3472c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2a3c8593-9927-4eca-85c0-03ed60f37d4a"
        },
        "item": {
          "id": "45491186-0bbc-4eec-ba20-a2721b2a4334",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8d14c260-d529-40fb-a710-94635b0a085d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb4434f-178b-47fd-a33a-77bae508ac3e",
        "cursor": {
          "ref": "ed667e4a-8f6d-4c12-8a3d-08c2bab868ab",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "53b6d637-05e7-4a83-87d8-828b2874528d"
        },
        "item": {
          "id": "5eb4434f-178b-47fd-a33a-77bae508ac3e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0b8517b4-a9cc-45b0-867d-47a06e383470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727d92c5-741f-4f54-a862-b41a4c32bc88",
        "cursor": {
          "ref": "fc4286ea-b915-4618-98af-f5ff87b565a6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ad6c7e38-d94b-4f14-90aa-0c64ed2d8293"
        },
        "item": {
          "id": "727d92c5-741f-4f54-a862-b41a4c32bc88",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c2d17acf-6774-436b-bba7-788f9a296f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2531d06a-3e04-4643-9242-95dc75e9386e",
        "cursor": {
          "ref": "abe1d0fe-7d85-41bf-a327-2f7bbf10f8a3",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3abad484-bb7e-4988-88f9-581d0fb7e24e"
        },
        "item": {
          "id": "2531d06a-3e04-4643-9242-95dc75e9386e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6575e5d7-ebc6-41fd-a8d8-6ef3918d0249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def96b33-18ff-4d6b-a05c-a0fe2135bcb2",
        "cursor": {
          "ref": "cb49841d-32b0-47fc-96d0-3a8c0fc1a71c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7e2cc1fd-186c-4618-91e6-4da9195f49d4"
        },
        "item": {
          "id": "def96b33-18ff-4d6b-a05c-a0fe2135bcb2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "15d33472-3522-4eaf-a3fd-666344e3604f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76cef7f-6875-4461-8ba5-302affed054e",
        "cursor": {
          "ref": "fbfb118f-4fb2-41df-927e-2825c7a12b1b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "61fb9ebc-b93a-44c0-b615-af4e4ab5d091"
        },
        "item": {
          "id": "b76cef7f-6875-4461-8ba5-302affed054e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "75e4abb6-c9fa-46b1-a377-594b7b1d1a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbfcd0b-f960-44dc-9eec-465b91f92caf",
        "cursor": {
          "ref": "dc1a9c35-c84f-45aa-8072-9ee0edeae3cf",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ab0b6b3e-15d7-438c-951a-3b1070a01d99"
        },
        "item": {
          "id": "2cbfcd0b-f960-44dc-9eec-465b91f92caf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f60bf349-684d-4f22-b336-bb28199940d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a47385-098f-4e04-a422-a525cd6cbf75",
        "cursor": {
          "ref": "0ba22312-f878-4e9c-86c2-8b02f54cf375",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "683a7509-c7f3-4f1a-8a70-c6a10a0e4e5e"
        },
        "item": {
          "id": "a2a47385-098f-4e04-a422-a525cd6cbf75",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7ae8687d-71d0-4b93-986e-d8286e6787d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff867df-9fb0-4fb2-8370-96aa4711cdc3",
        "cursor": {
          "ref": "6b7c8b4e-a754-4012-938d-695fa85d1817",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7d95ba90-2dab-4b85-942d-75c2854bad1f"
        },
        "item": {
          "id": "cff867df-9fb0-4fb2-8370-96aa4711cdc3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "56cc80e6-159b-4c7f-a5ee-32f9470ac0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8ef600-eb4d-4efd-84ab-671e179bc8ca",
        "cursor": {
          "ref": "b5062568-f1f8-495c-8f8c-15f28016366e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3009ec4f-3048-4139-a953-a3cb32870af7"
        },
        "item": {
          "id": "8c8ef600-eb4d-4efd-84ab-671e179bc8ca",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1c8229f3-c23a-415b-a733-de79062e4298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dcd0be-a298-462e-8c79-72db1c699b00",
        "cursor": {
          "ref": "5d36b5d0-0823-40a7-9669-ad2cb30f2393",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "95e965a8-f882-419b-8372-17f1af5fc902"
        },
        "item": {
          "id": "c7dcd0be-a298-462e-8c79-72db1c699b00",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e6e5c136-658c-45ab-abb6-501a325ada1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a16674a-c90d-4c75-9681-e7f66c95b25b",
        "cursor": {
          "ref": "9583895f-ae42-4abb-85c4-8b7b6dfc7381",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "876886b1-8dca-428b-90b5-27faea6cb1bd"
        },
        "item": {
          "id": "6a16674a-c90d-4c75-9681-e7f66c95b25b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c6537522-544c-4d91-89ef-79f438928903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3e7aa2-983a-4af1-a83b-d129163f9262",
        "cursor": {
          "ref": "0ab31dac-106e-407d-bf9a-2710282cbbd5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1de4c30b-201f-440d-a582-064148a683e0"
        },
        "item": {
          "id": "5a3e7aa2-983a-4af1-a83b-d129163f9262",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b4902890-d931-430c-8614-f0e89cd3964a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1375ee1-2075-4600-bae7-1c8ac063fee2",
        "cursor": {
          "ref": "41b99be9-e861-4939-9a61-52bd2abefaf7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "546b99fc-22f2-48b2-bcd7-d4b44c22d398"
        },
        "item": {
          "id": "b1375ee1-2075-4600-bae7-1c8ac063fee2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8ad3b1df-2f19-4e78-88f3-c22d46393267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb3c873-b691-42d4-831e-6faeffd6a09d",
        "cursor": {
          "ref": "93e0ff19-e782-41db-99d2-4fa80a4be4c4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "330ddcc4-1ade-416e-9e62-603341d2aa28"
        },
        "item": {
          "id": "5bb3c873-b691-42d4-831e-6faeffd6a09d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9f9013b5-eb2b-4960-ae76-53621f178136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f461a29-226e-47dd-8d48-b301122f5325",
        "cursor": {
          "ref": "02fd79da-7e63-42c9-ae31-d5f4fe75e661",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d130ca7f-5579-4d23-8448-bf7bbaca3de4"
        },
        "item": {
          "id": "7f461a29-226e-47dd-8d48-b301122f5325",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a7b6603f-1ef7-4c8b-b9f4-1f7e6be61219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04e200e-ccbb-4af3-a986-5f1e3f3a4759",
        "cursor": {
          "ref": "a1cb1a9a-ca60-46c0-a746-593a528ce0b7",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3cc9dccf-cda3-45fe-8804-290317ff84fc"
        },
        "item": {
          "id": "f04e200e-ccbb-4af3-a986-5f1e3f3a4759",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9c26a43b-025f-41bd-a8b0-449c518d2568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d323744-4654-49a9-af25-f4d096068e3a",
        "cursor": {
          "ref": "58089c15-a758-4cb4-89e0-28714872d3e2",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1c664158-a55a-451e-91e2-011b53d47ca3"
        },
        "item": {
          "id": "4d323744-4654-49a9-af25-f4d096068e3a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bb95a046-2554-42ca-9497-d0a7aea58e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa73cf4-78ee-42f2-80c5-847c629dd513",
        "cursor": {
          "ref": "0d201d5f-7de1-4eb9-b233-73bff21e96cb",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2b16aa66-7b94-49b1-b63d-c6b828bb8f77"
        },
        "item": {
          "id": "dfa73cf4-78ee-42f2-80c5-847c629dd513",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "53944ab0-0f8e-4afa-ad90-64844c85f9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1ac6ea-f73b-4284-87a8-9a88d0cb8792",
        "cursor": {
          "ref": "ca6e68db-c3d8-4fc6-9060-ff7c9669919d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7be290b5-8f1a-4996-b520-23b29323190a"
        },
        "item": {
          "id": "fb1ac6ea-f73b-4284-87a8-9a88d0cb8792",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5b2fd6ce-5a95-461d-b1a9-98bb6a78bf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52869850-b897-46bb-9440-363a1b6006fb",
        "cursor": {
          "ref": "992e8af2-3384-4c56-b310-be59c67633e6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "456f81bb-0bb8-4609-a035-f0277c113c84"
        },
        "item": {
          "id": "52869850-b897-46bb-9440-363a1b6006fb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e43b5563-a3bd-4c70-a2bb-548080aaf96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf0de13-7fe6-405e-b532-550411963868",
        "cursor": {
          "ref": "9554804f-dbe8-405c-afae-1fd6ab7f3e56",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4e94b05e-fa11-4a85-9692-13d91451a266"
        },
        "item": {
          "id": "8cf0de13-7fe6-405e-b532-550411963868",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e3656263-733e-4f70-b52e-525d2cbebf90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955f74fc-3f6b-44bd-b4c1-291ade913c1e",
        "cursor": {
          "ref": "a6dc59f7-2b3f-4adf-b782-968a32795e14",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d0370cc7-7880-44af-a0f1-2cb66973e227"
        },
        "item": {
          "id": "955f74fc-3f6b-44bd-b4c1-291ade913c1e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d43f0d3a-a7e6-45db-9547-eefa707349ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60c8ff2-53bf-4156-83de-78ca8f696033",
        "cursor": {
          "ref": "ceb41296-cc71-41d3-b4bb-e7794cefb93b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7b87b8c6-b91c-4545-b173-f05ede6b664e"
        },
        "item": {
          "id": "f60c8ff2-53bf-4156-83de-78ca8f696033",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "29b380a8-612a-4836-9b31-351ce60f11d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47210250-dcea-489e-b2a3-7c78a2169fda",
        "cursor": {
          "ref": "d57631ea-8eb6-4718-8099-c71eb0d38fee",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9cb46de6-c6c2-47f4-bbf5-385c0af96b4f"
        },
        "item": {
          "id": "47210250-dcea-489e-b2a3-7c78a2169fda",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "59c65822-3b6f-40e2-ae08-14ff9ea38b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0d397b-ff7c-4742-a362-f748f8e82f07",
        "cursor": {
          "ref": "8773c68c-f4fd-47f6-bc99-7698c69c395c",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b9f44fe4-5f2e-4c85-b5d1-1af481630f04"
        },
        "item": {
          "id": "1e0d397b-ff7c-4742-a362-f748f8e82f07",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "68705180-d5b3-4c85-b06c-4971003c8b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ab17a5-1c1c-44c6-ac55-d31c17c17cb4",
        "cursor": {
          "ref": "90180ed4-5ea3-4306-b73c-fbe98f952338",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9f610224-4786-4dca-b79f-bac0a0652ad4"
        },
        "item": {
          "id": "a3ab17a5-1c1c-44c6-ac55-d31c17c17cb4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8b15e4b4-89bb-4dd3-bb43-947fc0b8863f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692dc039-8a8b-46be-bec0-d0f9aa446f32",
        "cursor": {
          "ref": "78c6ec99-bb9f-4cd2-85cb-a4743b8a5e9e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f3e71224-b83d-43d8-a1ec-03aecacdd5ea"
        },
        "item": {
          "id": "692dc039-8a8b-46be-bec0-d0f9aa446f32",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "44155df9-0088-48e1-8f0e-0b28a0084dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429c119c-527d-4fe3-b15f-154b74277c63",
        "cursor": {
          "ref": "56aeafa2-57ef-4899-87df-99eb4b078aab",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "10d32279-2432-478d-8dfa-6959c3ee3378"
        },
        "item": {
          "id": "429c119c-527d-4fe3-b15f-154b74277c63",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f7b4cc17-5e21-4495-b75c-46cc1c156a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaacce3-52dc-4ab4-8b37-807476f1a2e7",
        "cursor": {
          "ref": "00601db2-1a00-4620-806e-acb2325ef82f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "210191c7-6630-4e42-aa7d-f020e92c599d"
        },
        "item": {
          "id": "caaacce3-52dc-4ab4-8b37-807476f1a2e7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "432c3ad2-b177-415c-a421-c924ca11a41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fbc7c0-c612-415e-a227-604b0b658cd0",
        "cursor": {
          "ref": "05fc5c1e-ee0f-410e-a346-fb28d29336b8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2d1e05c3-89b3-4bef-ac94-0ff94c752e16"
        },
        "item": {
          "id": "05fbc7c0-c612-415e-a227-604b0b658cd0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9c1b79dc-d782-42e6-9f94-aaafb5e58f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa59a82-6d87-47fb-97f5-8afc371cecdd",
        "cursor": {
          "ref": "c0db3523-ff1e-4195-bea2-6f9eacffc387",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "410bb9a0-34f1-48d3-a3f0-19eaed0ebe3a"
        },
        "item": {
          "id": "0fa59a82-6d87-47fb-97f5-8afc371cecdd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9dd97164-8686-45f8-bd55-69c9041679b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b32ce23-f3df-458f-8829-2747ba51d3a7",
        "cursor": {
          "ref": "1abf178b-acc1-4124-98e8-e6e311ed43e1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "47f0cc16-19d8-4d69-b1fe-9bd44c9d2ac3"
        },
        "item": {
          "id": "9b32ce23-f3df-458f-8829-2747ba51d3a7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e1491147-3112-4d09-a978-f6ae7cd6455b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5dd403-d5a2-48ee-9a0b-83c92b2bce1d",
        "cursor": {
          "ref": "d9707fe4-8f21-47e6-b214-aa5758988b0f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7b6e3279-bd4b-403b-89ff-b4c642c53bef"
        },
        "item": {
          "id": "ab5dd403-d5a2-48ee-9a0b-83c92b2bce1d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e6232456-f5d0-4a51-96af-0f06613c5f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72da0d7b-461b-49c0-9058-bd32142a97ab",
        "cursor": {
          "ref": "5a089165-df9b-423d-aea9-0ececf2968aa",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8b2f5cea-587b-40ce-bcc4-e8f58fa187dc"
        },
        "item": {
          "id": "72da0d7b-461b-49c0-9058-bd32142a97ab",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "27f955d3-b976-4f48-9aa0-5367139d9431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d743629-901c-4471-bcf1-09c226f44bd8",
        "cursor": {
          "ref": "a65c78a2-c365-49b9-90d4-7e8400499f31",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "31b38dbb-c859-478a-a896-e47872ebe328"
        },
        "item": {
          "id": "4d743629-901c-4471-bcf1-09c226f44bd8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c0ed030f-641a-45e3-8da0-ec98a4250ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fba8eb-1178-4f04-9f3b-99642e436ea5",
        "cursor": {
          "ref": "b81db19b-83c1-4687-951a-c2e8ac16a86f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "eae04d5b-2230-4907-810f-76bdf93be191"
        },
        "item": {
          "id": "a0fba8eb-1178-4f04-9f3b-99642e436ea5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e4a28531-8bd3-4bf8-a52c-85c417ddc791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8a8d0c-65da-49e0-b4b8-cbef1fcef3e0",
        "cursor": {
          "ref": "d6048904-ebfa-45ea-930f-86ffaf0d5368",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7a186985-bc46-4001-9684-d9e69c64d5d8"
        },
        "item": {
          "id": "3d8a8d0c-65da-49e0-b4b8-cbef1fcef3e0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8b6713a5-2425-494b-9312-b42a268a9bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ae282f-2a80-4004-8386-9e5f6fb7f79c",
        "cursor": {
          "ref": "4b8fc040-0b88-49e5-a52d-67b93aa8c82b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0c16aeb5-3403-4c89-bcc1-0aa5e6578862"
        },
        "item": {
          "id": "50ae282f-2a80-4004-8386-9e5f6fb7f79c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1281791e-ecbf-4317-adad-36fab24cc5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e4d4dc-265d-4ffa-bf30-816e6243e4b2",
        "cursor": {
          "ref": "e07fa255-cf4d-410e-a055-5052c317f600",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a25e47a0-f854-4481-8183-47f5d8644e1b"
        },
        "item": {
          "id": "e8e4d4dc-265d-4ffa-bf30-816e6243e4b2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0d4ce4e3-6ad7-4bf7-a4f7-29fe0c060d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e225d20-89a6-4ce1-9fbf-0b6252d7efc6",
        "cursor": {
          "ref": "1e2bed8f-ff52-4b20-93fc-da3afdeb0de0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "45b5473a-a7c9-46be-bda6-2970e7b5fde2"
        },
        "item": {
          "id": "6e225d20-89a6-4ce1-9fbf-0b6252d7efc6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "651b038c-1609-42b8-9c0c-5bda4620d7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bb5074-4233-428b-8e13-1a2c965338ec",
        "cursor": {
          "ref": "c3c9a1e6-a17f-49ce-acdb-5feaa054b5ba",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "244b9786-2f0e-4672-a26d-d990c9a26293"
        },
        "item": {
          "id": "b1bb5074-4233-428b-8e13-1a2c965338ec",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a9a127b8-70d1-4d68-8d38-49e1d8c55ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410896c4-7581-446c-925d-7c0416fddba0",
        "cursor": {
          "ref": "50f9e303-872e-4f8e-9cdd-d742821a916d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "96e1cada-cb08-4d5e-a926-67da256192c6"
        },
        "item": {
          "id": "410896c4-7581-446c-925d-7c0416fddba0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "99297976-db84-4941-9e0b-e65d37dac008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a088fe18-f40f-41a9-b2a1-50c9217bc383",
        "cursor": {
          "ref": "dc721a06-5c81-4db1-a5f1-0b0ff0876ef1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "89baf9be-10f5-45b7-b735-ea790f7f6e02"
        },
        "item": {
          "id": "a088fe18-f40f-41a9-b2a1-50c9217bc383",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ec833b0c-45ad-49b2-9a07-a25f7db7433e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c894cc6-28ba-406f-93b7-766347663f45",
        "cursor": {
          "ref": "7e5f1f39-2c32-4bdc-8bf9-5281af685afe",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7f9a2346-81ea-4cf3-b0ac-1590a7c1264c"
        },
        "item": {
          "id": "8c894cc6-28ba-406f-93b7-766347663f45",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f77f4d4d-817b-474a-8ea8-4910b5135d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fb49d5-2253-42f5-9cc4-9bf3024f021e",
        "cursor": {
          "ref": "137fb2ea-3b6e-413b-88ca-775fbe90e043",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "be340499-4b1b-403d-a8db-2226849a9233"
        },
        "item": {
          "id": "36fb49d5-2253-42f5-9cc4-9bf3024f021e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f6e6951a-a885-4c50-998d-ba9f1cef1f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea69200-0f2d-4322-824a-2e4c0212ea59",
        "cursor": {
          "ref": "f06e1fce-a94f-4140-bce1-ff84acc32bf9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8cef23f9-2480-4a09-a789-77bfe0b0aae4"
        },
        "item": {
          "id": "7ea69200-0f2d-4322-824a-2e4c0212ea59",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f1ba20a2-91c8-4bd3-88f6-408efff01f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ac0a16-84eb-4611-9266-72d08d13f7d5",
        "cursor": {
          "ref": "0c3b3dee-cdfa-4a9e-98a5-4a6da257a631",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dcd21e7f-c251-4f2e-aca9-21037fae9d6d"
        },
        "item": {
          "id": "80ac0a16-84eb-4611-9266-72d08d13f7d5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5cbdd434-2824-4759-a04f-1385c70bed72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c28e40-79f9-4de4-b998-11b6b4d5abfa",
        "cursor": {
          "ref": "3d529164-c9cf-4822-b4b5-798cfd9b8180",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "346d4ca4-2e09-42aa-a0cd-0062ed42e690"
        },
        "item": {
          "id": "f2c28e40-79f9-4de4-b998-11b6b4d5abfa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8195cac7-a16c-4bd1-822f-14a1f7303c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17567d5-e26b-4d6d-8f7d-10e4c8ddaa5f",
        "cursor": {
          "ref": "fc6cc6cc-3538-4186-968f-3abe31455423",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7c0c5c92-9048-46c8-b089-ee459e17826e"
        },
        "item": {
          "id": "e17567d5-e26b-4d6d-8f7d-10e4c8ddaa5f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4e6a4189-ef01-42e8-9187-7750dac74fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cb3c34-d7bf-4a83-8909-acb66622f7fb",
        "cursor": {
          "ref": "1ccf37a6-748b-4d81-a02a-bcf8608e4517",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "50245287-4e15-4989-b027-d25502b47822"
        },
        "item": {
          "id": "22cb3c34-d7bf-4a83-8909-acb66622f7fb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0cf67be4-318f-4373-914b-027633ea8bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced24bdd-eaa6-4fee-a921-5543655d9cd4",
        "cursor": {
          "ref": "17ab79c3-0c66-4708-af4d-778e9f49351e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fa177f00-abaf-418c-afe2-4d1ca312ad68"
        },
        "item": {
          "id": "ced24bdd-eaa6-4fee-a921-5543655d9cd4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "87771b98-69d5-4626-8a5b-2da38ddef5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa6f5bb-c5c7-41cc-92b5-4595639a8fb2",
        "cursor": {
          "ref": "414f2ad5-e4de-428b-9edf-5587f9004c59",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4040ad89-53df-4100-8bbd-bfa205d38b48"
        },
        "item": {
          "id": "dfa6f5bb-c5c7-41cc-92b5-4595639a8fb2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "69a77f34-8264-4a61-bfec-899ba9323934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f6e55d-0d44-48a2-adf5-e1f0b3a880fb",
        "cursor": {
          "ref": "cb738f9c-ca71-498d-8b6f-5556fa893a36",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2710bd7b-4f79-40d6-937e-9424bfe765aa"
        },
        "item": {
          "id": "21f6e55d-0d44-48a2-adf5-e1f0b3a880fb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "61df7220-f351-440a-8195-7a8c7560338f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a33b10-d694-4c3d-b86e-98b4d1fc2798",
        "cursor": {
          "ref": "3b3b0633-bc56-41f5-9045-a2d61b22322a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "349a90b2-3363-428f-a5d5-8bdfd2228f50"
        },
        "item": {
          "id": "a3a33b10-d694-4c3d-b86e-98b4d1fc2798",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e94b077a-7c3a-4873-a40e-19f8f4cb753a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c10d60d-89ed-4817-aa0b-e5f692b8192f",
        "cursor": {
          "ref": "9694e16a-63a6-49bf-8019-14f317365d99",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "99df8e60-d02c-4330-8f99-bc7041df733f"
        },
        "item": {
          "id": "2c10d60d-89ed-4817-aa0b-e5f692b8192f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c00329a7-baf1-48e9-9bc3-cb190ceb52bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa71c56-36ff-4461-ac1c-190d06e466ce",
        "cursor": {
          "ref": "dd1c0e7e-4539-4cc1-a8a8-d65fab2a0ef1",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "93807afb-2d5e-4072-a547-27cbd11f4774"
        },
        "item": {
          "id": "0aa71c56-36ff-4461-ac1c-190d06e466ce",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "66893da6-a721-4748-b4ca-d0dc93fa486e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fb4ad3-16a3-4d4d-9aad-a0832ae10ae7",
        "cursor": {
          "ref": "603b746a-d39b-4f8c-bd16-e0bf303dffdc",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ab56c264-28f2-40f2-97bf-fabd782e12f9"
        },
        "item": {
          "id": "44fb4ad3-16a3-4d4d-9aad-a0832ae10ae7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "dd433372-1b21-4f51-a46f-1c62473713ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ca1260-f9db-48d4-84be-b9dd98752699",
        "cursor": {
          "ref": "37412de5-1b58-450f-9375-a11e33965690",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7f66df79-2449-4ac1-8e6d-01fd06868562"
        },
        "item": {
          "id": "b2ca1260-f9db-48d4-84be-b9dd98752699",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f3389459-a422-407c-9487-ea2add8dd7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1f4196-0cc0-474a-8924-7ef429594e8c",
        "cursor": {
          "ref": "7f39ff90-5995-4efc-8d32-021d19693200",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "80894c03-5f75-4108-823b-a57530a1eec5"
        },
        "item": {
          "id": "3c1f4196-0cc0-474a-8924-7ef429594e8c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "510b5cd6-31d6-4431-9a3e-d4ab5b469d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8e91b3-e46d-470f-8820-19b28e3983da",
        "cursor": {
          "ref": "989c9a20-8d00-4685-9445-a847ae81fd30",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e05482af-a90c-4f39-b744-d2eb71b23638"
        },
        "item": {
          "id": "8b8e91b3-e46d-470f-8820-19b28e3983da",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ee0d75b1-61f1-48ca-9c78-2869f047b33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ad7ecf44-77f6-4990-860f-4e3c40a2aab1",
        "cursor": {
          "ref": "a7e6c0bb-ae5a-4d08-a74d-761140971f43",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6144069b-9ed7-401a-b84e-7c578a923d80"
        },
        "item": {
          "id": "ad7ecf44-77f6-4990-860f-4e3c40a2aab1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c3d56017-1a81-4d39-9ce4-c71ab49b15f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "50ff7e96-7704-4712-a761-8001281d02d6",
        "cursor": {
          "ref": "7d604abe-4972-4675-8479-c1bfa4df4748",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a1918d59-3120-4705-aa14-100b5fed9b56"
        },
        "item": {
          "id": "50ff7e96-7704-4712-a761-8001281d02d6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d64f0ab4-7b62-4fe7-96ac-3def1d70d01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "658dcba5-62eb-43e8-a1d1-f2e10d8d9a73",
        "cursor": {
          "ref": "28a39c94-140b-4828-a4d6-024e5855c410",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "129f1165-18df-42aa-a42e-b59bc2cb5a4b"
        },
        "item": {
          "id": "658dcba5-62eb-43e8-a1d1-f2e10d8d9a73",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f31e9e3b-25c1-416d-8c77-6df0fcf0c1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "08197853-ad52-4e21-9636-e6229cdb86ad",
        "cursor": {
          "ref": "665890c4-8d30-479b-ab1e-a1173beb2b41",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9db2ffd0-2ac3-4537-a975-16e56575e24a"
        },
        "item": {
          "id": "08197853-ad52-4e21-9636-e6229cdb86ad",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7f06dd69-b1b0-4773-b330-3f7a82d0e640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c854628c-4d41-4cf9-9331-1ff2a9870046",
        "cursor": {
          "ref": "fc1c343c-edff-4a38-800d-73682bb68c55",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ce37b61a-23d3-487e-851e-a57f6b30c192"
        },
        "item": {
          "id": "c854628c-4d41-4cf9-9331-1ff2a9870046",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d9bb4ea3-f575-4aad-a76a-2367be88a81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c7acadfd-6cdb-4586-a19c-4a8d1120f1ec",
        "cursor": {
          "ref": "3e65e548-5b61-4a16-a42d-7a281e221c6e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "209dfc0d-cab6-471d-9cbc-0e99e4521dc9"
        },
        "item": {
          "id": "c7acadfd-6cdb-4586-a19c-4a8d1120f1ec",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0cfa2c0e-9346-445f-b355-f16196e994b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e43047aa-04b2-49f3-8e3f-3fe564dc57f3",
        "cursor": {
          "ref": "01022ab1-1ed6-4b10-a5a4-50f780a93434",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "69448a19-c1ee-4476-9a96-7062f6d2c2b7"
        },
        "item": {
          "id": "e43047aa-04b2-49f3-8e3f-3fe564dc57f3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "901d7df4-0bed-4710-a46c-c613e4d2154f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215448d3-e2d2-48a8-9785-e9d3ee34c940",
        "cursor": {
          "ref": "ee9eb6e7-8e6f-4a33-942c-74de7363c5de",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "206a5239-2cff-4c3c-9e1c-3a7de2386583"
        },
        "item": {
          "id": "215448d3-e2d2-48a8-9785-e9d3ee34c940",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0733954d-c0dc-40ca-a9db-c9a07e6e68cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b473679-f61d-4e0b-aa52-43d7e66a4045",
        "cursor": {
          "ref": "e6b7b13f-7cdf-43df-88dc-2edc6ee72e5c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5347d052-9d9b-4e44-9b91-cc00f7932bc6"
        },
        "item": {
          "id": "0b473679-f61d-4e0b-aa52-43d7e66a4045",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5d3fd10e-e5de-4be5-ad6a-523d5881948a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5022ff05-3326-4f04-a00d-dec0ca889e01",
        "cursor": {
          "ref": "c8721c69-02f8-41fe-9ccd-82c3ca81b6f5",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "59491da2-8bae-4194-a06c-0d9178679b60"
        },
        "item": {
          "id": "5022ff05-3326-4f04-a00d-dec0ca889e01",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d4eb2d32-ec56-455c-b302-adf650b90623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbf5eb0-8d12-46e9-ab85-42fd005b4a41",
        "cursor": {
          "ref": "1eb2a43c-3b28-4607-94ab-40b657322df5",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a6541df8-b25b-4981-947d-607bf227332b"
        },
        "item": {
          "id": "9dbf5eb0-8d12-46e9-ab85-42fd005b4a41",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "05befe12-0a11-4634-9119-de6cd202618f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0996a43-44f1-407c-94ea-1bbab64cc14f",
        "cursor": {
          "ref": "2a4d4248-abab-4723-9630-275cd8046c6b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7d2fc58b-69d4-4207-b9f7-3256a1ae8e2c"
        },
        "item": {
          "id": "e0996a43-44f1-407c-94ea-1bbab64cc14f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e2a3a907-7e70-4b6f-9be6-c17eb9db39fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e138c4-9781-466a-aaec-bca86e2c9469",
        "cursor": {
          "ref": "3add4efb-d169-47f8-a21c-514d98fe98b7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b2ad5638-ce33-422f-8ba3-387d3919366e"
        },
        "item": {
          "id": "23e138c4-9781-466a-aaec-bca86e2c9469",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f5adef24-e66d-4996-80f7-b596b5fd7d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d6c637-a425-4133-9b01-96e94ee3932b",
        "cursor": {
          "ref": "317e5914-bfc1-41e3-ab83-3b941a7609a9",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "13ee684a-5f7f-460a-a4ee-e45114371b34"
        },
        "item": {
          "id": "10d6c637-a425-4133-9b01-96e94ee3932b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0bc177b9-d262-49cf-b01c-6062c4679335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831193b6-f206-48d7-8eef-6c67e95bf64f",
        "cursor": {
          "ref": "72f12143-e32f-40a9-9358-a8943832d100",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7dbff59d-b945-4085-a896-b5851c552a1f"
        },
        "item": {
          "id": "831193b6-f206-48d7-8eef-6c67e95bf64f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "51f0de66-a8af-44ab-beb6-fd116e630ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c68695f-67f1-48bb-9372-e00672e42f44",
        "cursor": {
          "ref": "cd383705-7404-425d-876b-07b1a0eae3a3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "893b4953-1166-4ac8-9c6e-e711beceb1c0"
        },
        "item": {
          "id": "7c68695f-67f1-48bb-9372-e00672e42f44",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c157783c-4aba-4532-847f-5a8569834e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7395ad8a-742b-476f-a21d-82f3d1eb257e",
        "cursor": {
          "ref": "38017d6b-28a0-49de-88e3-ddd359a5c4cd",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1eb9a45c-dded-4e54-a2ec-2d2b3bd92af5"
        },
        "item": {
          "id": "7395ad8a-742b-476f-a21d-82f3d1eb257e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d7d140ec-69cf-4402-82d6-83ec916573d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d79bc4-8c75-47df-a7bc-f5b37b093484",
        "cursor": {
          "ref": "7e2e01fe-4954-43d3-bc4f-9913f6934f4e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6aad6e9b-5fa6-4f31-9416-f731a159d543"
        },
        "item": {
          "id": "b1d79bc4-8c75-47df-a7bc-f5b37b093484",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "75bc968b-fb74-4789-8701-6e6e73a14987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9024f176-7222-408b-a1ed-87e34d9c8207",
        "cursor": {
          "ref": "eb81a586-879b-4f26-80bc-dc4e4c066b8c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "83ecf735-e81c-471e-a3c9-9d89962e10f6"
        },
        "item": {
          "id": "9024f176-7222-408b-a1ed-87e34d9c8207",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a05da57e-0b58-4aed-a479-6352fd554c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2043ba7d-9103-4f9c-a2d6-922744f7e086",
        "cursor": {
          "ref": "20e03615-1b41-4439-9bb7-870ea61f4b49",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "102af1e2-0496-4463-b228-a8ad92142da8"
        },
        "item": {
          "id": "2043ba7d-9103-4f9c-a2d6-922744f7e086",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "edaa9664-448b-46eb-a157-ff6e7a4a039b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6996380-b9a2-4bfb-88e8-975cf3092b24",
        "cursor": {
          "ref": "602f82e7-49b6-4458-aef8-308143623580",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "792462be-e821-4881-b183-1c6b6feec774"
        },
        "item": {
          "id": "b6996380-b9a2-4bfb-88e8-975cf3092b24",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d79da3bc-9678-4875-af09-771651c9ad88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a639b0c-77eb-478c-9f43-e8174cf4526b",
        "cursor": {
          "ref": "795a58a7-a268-4213-915e-a4362241fb5b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ba1c3438-12fd-4320-8b86-02902b633e7c"
        },
        "item": {
          "id": "9a639b0c-77eb-478c-9f43-e8174cf4526b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8e7a42be-a6bc-418a-b9d0-0fc35c3e77e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27480b13-8a38-4b51-9d74-423eb4aa4b01",
        "cursor": {
          "ref": "9aafd35b-5908-4b59-b14e-f36f2fee713d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "93011a53-b7ff-4038-b5c6-cd39871eb8cd"
        },
        "item": {
          "id": "27480b13-8a38-4b51-9d74-423eb4aa4b01",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4758bef1-12e7-4ce8-be03-fc0ccf690b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c38bea-a40e-4e89-82d1-b0940514d3e4",
        "cursor": {
          "ref": "eca5f7b5-ffc9-4033-89fe-83231c4027e4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "29772c12-97bd-44a2-ab28-c57226649821"
        },
        "item": {
          "id": "75c38bea-a40e-4e89-82d1-b0940514d3e4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "73dbae3e-a79c-4952-bee9-b219aaea4920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2625c9f-66ff-4331-89f4-0666511b499f",
        "cursor": {
          "ref": "361f1e52-0be9-43a2-9b8e-8774d189e6dd",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cde5f5f1-b504-472d-9014-ae1ee58f8ae0"
        },
        "item": {
          "id": "a2625c9f-66ff-4331-89f4-0666511b499f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "42a79337-5d06-4b0c-9b1c-97af5fc26adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58b88c2-9102-4b92-86b1-f225ad51e657",
        "cursor": {
          "ref": "0c2b9b2f-e49d-48c0-a8ed-b300a421f8e7",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "60ab27f7-2f0e-4660-9fd7-22eced697dae"
        },
        "item": {
          "id": "c58b88c2-9102-4b92-86b1-f225ad51e657",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "003d7f19-adcb-43d2-b36f-51018884fbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26efb84e-1d5c-414f-a164-85641906ae56",
        "cursor": {
          "ref": "dd0013a5-0dca-4948-98b9-2e22c06d72bb",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "db98208e-845e-4971-85ee-6e2c731ee91c"
        },
        "item": {
          "id": "26efb84e-1d5c-414f-a164-85641906ae56",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d925fef3-f9ef-4e7c-9693-4174b129486a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a3383f-3966-4d7c-8d97-7d2e46d0b88e",
        "cursor": {
          "ref": "11d099e5-aa77-4c9c-8c84-55488e321a5c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "51a97600-4c01-4ff1-959c-ab2a1b9649dd"
        },
        "item": {
          "id": "08a3383f-3966-4d7c-8d97-7d2e46d0b88e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dfd05fb5-f9e8-47a4-a752-b079b24aebe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e854d23-2daa-4cac-932d-6f393ee860ee",
        "cursor": {
          "ref": "9fe59b70-05db-4034-9c59-b91eb86f6237",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4263d486-8414-4107-903e-6f5d01e50b88"
        },
        "item": {
          "id": "5e854d23-2daa-4cac-932d-6f393ee860ee",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c8b56b1c-a7cc-42bd-9e35-308576bf99d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40abdbcf-126c-4e1d-8ea1-3a5a15ac9029",
        "cursor": {
          "ref": "d958aff1-0b3c-4ee4-ae41-dcec85828b4a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "db71de90-48b8-48b8-afdd-0ed3b06f8c99"
        },
        "item": {
          "id": "40abdbcf-126c-4e1d-8ea1-3a5a15ac9029",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "146a07a0-ffe4-4209-be6a-213cfe00b661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74544ab9-8331-4ffa-8bf2-4c37b4dbe1d3",
        "cursor": {
          "ref": "d7fe971a-3b61-4e01-9c45-3435951381cd",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a5b3bf2a-77ac-4e54-95b0-f1405b226476"
        },
        "item": {
          "id": "74544ab9-8331-4ffa-8bf2-4c37b4dbe1d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b1fcd545-4c62-4b01-9d67-14c32e20daf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f14745-3218-4cba-98ed-1367171498e9",
        "cursor": {
          "ref": "03ec1183-b23b-4ff2-a167-026c8a940f7e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4a7e2bda-80ed-4c2c-bc7a-43286e7c60c9"
        },
        "item": {
          "id": "13f14745-3218-4cba-98ed-1367171498e9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d063cd82-a0db-4e12-bfd4-abe072cb04e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd16438e-ff8d-4917-8641-0f645be9baca",
        "cursor": {
          "ref": "5d274084-508d-4a32-bb5b-6eb94c55b5cb",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d3716660-118d-4fd8-9917-49d2cc84483e"
        },
        "item": {
          "id": "bd16438e-ff8d-4917-8641-0f645be9baca",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0a784723-73e8-4731-a919-8cdabc8973cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ede0172-e6e5-43d7-9a5d-fae28627b6fa",
        "cursor": {
          "ref": "5d008ce7-4869-41b3-a4c4-4953c668fe39",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d069cd88-3320-4f0c-8cc5-8c70dbfcac29"
        },
        "item": {
          "id": "1ede0172-e6e5-43d7-9a5d-fae28627b6fa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d7d20d34-944c-4bc7-82af-2fcd05cfa8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b630f8ff-9dab-4f67-b06f-32ec7a36975f",
        "cursor": {
          "ref": "60961eac-47fc-4aeb-830b-b263dafd953b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "85aa3ec4-62b5-4773-a91c-b62bee57b86d"
        },
        "item": {
          "id": "b630f8ff-9dab-4f67-b06f-32ec7a36975f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fc6a3c07-12dd-47de-9535-2657b038646d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3f5e61-fcaa-43f8-83da-85dce8361d5c",
        "cursor": {
          "ref": "c8009484-c294-45a9-a085-ffd2b9bc3f12",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a402bc90-4682-4d29-970e-4f0d12dbc8e9"
        },
        "item": {
          "id": "2c3f5e61-fcaa-43f8-83da-85dce8361d5c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "93d4852d-bafd-4ed8-b1bb-bbd5ef1cd3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a512bcb9-ea92-4cd1-828a-e2bdbdf67e21",
        "cursor": {
          "ref": "3d9b2312-4c23-406f-b860-f0b2b722e6c9",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "392c4322-b519-49ad-9915-eedd1d31c260"
        },
        "item": {
          "id": "a512bcb9-ea92-4cd1-828a-e2bdbdf67e21",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "865c35c5-2c68-480f-962c-a1b2b2061fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fb0c97-8065-441c-b952-a816855b18fd",
        "cursor": {
          "ref": "c7c0dc4a-42bb-4781-8ae4-c2588cbcb477",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e10b5aba-e327-4ca6-8c18-299bef189285"
        },
        "item": {
          "id": "13fb0c97-8065-441c-b952-a816855b18fd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "520cfe03-f489-4c4f-b8f3-cf77d1864bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a325fd91-33d9-4e74-a336-f47a827feaf6",
        "cursor": {
          "ref": "12cd06b2-fbdb-42b8-9fc2-9d9d72128bd2",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fe5bca2a-98a1-44b0-b057-d5a2b8fb8b91"
        },
        "item": {
          "id": "a325fd91-33d9-4e74-a336-f47a827feaf6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "235f2c93-2810-4c63-892a-9046bcd8aa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e375ea6-11fe-44dd-bf1d-3e44b3214d23",
        "cursor": {
          "ref": "f42ef7c7-2521-4265-84f3-d94c99769c89",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f587a963-6b6c-4136-86dc-fd251acbeb0f"
        },
        "item": {
          "id": "8e375ea6-11fe-44dd-bf1d-3e44b3214d23",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "805aa0a7-57ed-477d-8052-1214cb5643ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0039f3-ef2f-4023-b2ff-c7ed36e5fdc0",
        "cursor": {
          "ref": "2c9b5b86-64ee-452c-a17b-53d0104fc172",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e7bbb975-f582-492a-a6ea-dbe9c170ecd3"
        },
        "item": {
          "id": "2b0039f3-ef2f-4023-b2ff-c7ed36e5fdc0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "35a7bbcc-7776-4837-ad77-3e5d7e00cd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d286f31-a050-487a-bd47-f6debec04b40",
        "cursor": {
          "ref": "ce1b8d27-ebdd-4767-a36c-2362883a9c98",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "44400408-f828-4469-8b28-03b429305771"
        },
        "item": {
          "id": "4d286f31-a050-487a-bd47-f6debec04b40",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fd74f50d-0852-4bb5-b2dd-9dab2d47d5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0444a4-5ae7-443c-a727-ac35c5cb3648",
        "cursor": {
          "ref": "c2119454-c6b7-4cbd-a934-7592bfc98e72",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "482e8c19-77c1-43ae-a36c-b700ef3b0c26"
        },
        "item": {
          "id": "2b0444a4-5ae7-443c-a727-ac35c5cb3648",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "109b61e2-0491-4fb2-81b3-f45cb5042718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d2391a-821e-4086-9359-747c5f0222ec",
        "cursor": {
          "ref": "d1e6149b-66d7-4681-bfd7-05e6fbfb8d32",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f7947e36-2b26-4a28-a1ab-54f639755ecc"
        },
        "item": {
          "id": "63d2391a-821e-4086-9359-747c5f0222ec",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1ce8c1b2-5a79-4539-b6de-fcea82e44307",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf943dc-8624-40a1-82a5-97fdb41478ab",
        "cursor": {
          "ref": "ca0bbe6e-de69-473b-ab32-3dea2d3776e2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8ea716a6-079d-4d72-88e3-c451d217d407"
        },
        "item": {
          "id": "cbf943dc-8624-40a1-82a5-97fdb41478ab",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6de812b8-b3b9-4635-8d80-cfc082e95a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf995217-e691-4688-bb75-29dc62d4bf33",
        "cursor": {
          "ref": "be463d84-2596-454e-9688-f7a0e99114c3",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e9b24917-66ff-438e-9ddc-3503ff145449"
        },
        "item": {
          "id": "cf995217-e691-4688-bb75-29dc62d4bf33",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "92438072-3872-44b6-a232-8e26086ffc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70750f6c-bff5-4177-a21d-46a0e9214db2",
        "cursor": {
          "ref": "ac046724-e20e-47c2-88d4-5bdc1a331a00",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "218cd136-bff6-46a5-9ea8-605e6ec7b22d"
        },
        "item": {
          "id": "70750f6c-bff5-4177-a21d-46a0e9214db2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "33738a81-9c0c-469a-8966-5d2c6439d8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbe57e0-8f97-4424-a804-513b215bb926",
        "cursor": {
          "ref": "8b889cd7-8530-4cbf-bfa8-32cefff2b453",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "46c23267-22c4-49c0-aa87-72e52a631f7d"
        },
        "item": {
          "id": "5bbe57e0-8f97-4424-a804-513b215bb926",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c047dc84-d801-45af-a9a2-5ef0af1298ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc702de-4e2e-4e96-af8e-e04a804c94ae",
        "cursor": {
          "ref": "9c69023b-eb14-44c0-954a-df8cc4805044",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0bd8aa10-1a59-409a-a5ad-d71a430e5d10"
        },
        "item": {
          "id": "2dc702de-4e2e-4e96-af8e-e04a804c94ae",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a11969cd-e90b-44a6-9eac-f26c76229cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8748d6f9-fa5c-46fe-b264-1aa4ce8d77e8",
        "cursor": {
          "ref": "61b586e8-2da8-405f-b175-a8d9abe56ac4",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4c37c439-2e6c-476f-b83f-f9e4d0686fd7"
        },
        "item": {
          "id": "8748d6f9-fa5c-46fe-b264-1aa4ce8d77e8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b9b6b200-6f36-4351-a473-f27708b81ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edecc56d-6cc8-48b5-a2cf-74c906f49cb6",
        "cursor": {
          "ref": "063f5a60-f9d1-45f7-abd3-ce89b509b64a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0322c5a8-6019-457d-9eb6-c157b9b1a412"
        },
        "item": {
          "id": "edecc56d-6cc8-48b5-a2cf-74c906f49cb6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "45464ea9-554d-41db-a283-e0bba0410c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e31206-3bcb-4d4b-8beb-7e592859a607",
        "cursor": {
          "ref": "18f9987e-ac66-4180-9364-32b4449f8b91",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "16cd105f-0e8a-4d92-a4b8-0579f34bb83c"
        },
        "item": {
          "id": "51e31206-3bcb-4d4b-8beb-7e592859a607",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3f6f1cc6-1383-417d-b46a-c1e322c617d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97095e39-8e13-46a2-963e-17a78bc1e25a",
        "cursor": {
          "ref": "019cdca7-dcdb-4ebc-a094-faf334e33e15",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8c3e7802-4460-4bc9-b39d-41df81f0f722"
        },
        "item": {
          "id": "97095e39-8e13-46a2-963e-17a78bc1e25a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a3632d80-d3ed-40f9-83ba-f50dce85bc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6183f2f3-6eec-4cba-9f24-60f40b21624d",
        "cursor": {
          "ref": "ee789307-9df0-4f4e-b5db-8e9e26bacfdb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d176aa22-ad0a-4f7f-ab84-0bcf1bad0be0"
        },
        "item": {
          "id": "6183f2f3-6eec-4cba-9f24-60f40b21624d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a1fbce4c-2e86-4fa6-ad4a-ff04eedd65ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2997368-089a-4613-9573-3f2a8c4db7f8",
        "cursor": {
          "ref": "3719362c-2c8c-42db-8f36-383e82d92a13",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "30ba6bc0-147c-4d3b-afea-d186f66e437b"
        },
        "item": {
          "id": "c2997368-089a-4613-9573-3f2a8c4db7f8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "34561915-eff7-4704-b8d6-71f682dd7bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8c365a-b8ad-4c8f-87ab-f00badcaa736",
        "cursor": {
          "ref": "fbeaef43-bd9f-4461-8ca1-367e87d9a1b5",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c5419a0c-c470-43fb-aa44-a9dc120798d7"
        },
        "item": {
          "id": "cc8c365a-b8ad-4c8f-87ab-f00badcaa736",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ef2e646b-ae37-48f9-b13b-20fae7bd3e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2055f81e-3a33-44e1-a7f3-66319ac10498",
        "cursor": {
          "ref": "f4d70b55-b815-435b-ae8f-8751a07b4168",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e5dc1c65-2234-4099-98bf-41bf3ac7e829"
        },
        "item": {
          "id": "2055f81e-3a33-44e1-a7f3-66319ac10498",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9cee1a22-524c-4336-a1c0-a28a5e161a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a01e5d2-f6ca-4db3-b945-047ed0e2e871",
        "cursor": {
          "ref": "2d6974a8-84d5-4992-970e-e7a664b3399e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9796a00f-55b6-4826-96ed-752c9d4f1d51"
        },
        "item": {
          "id": "1a01e5d2-f6ca-4db3-b945-047ed0e2e871",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "58367124-1c34-400b-92f1-09471c8a5b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07d9d3b-17c5-4d7e-9d6e-f33501bca981",
        "cursor": {
          "ref": "71d4b66b-6ac0-414c-8bb6-a6ed801bba7e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1b0ef9aa-b273-41c3-8384-82f0c8c1e5f2"
        },
        "item": {
          "id": "c07d9d3b-17c5-4d7e-9d6e-f33501bca981",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "01ccbfa3-4745-4b1b-960c-2b69bbdb8f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2713e6e9-e1c1-4227-bc4b-cbb1cd6a01cb",
        "cursor": {
          "ref": "5012c690-1279-411f-94bf-aabb57b45732",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5796d309-87f4-4247-aad6-b125d0c2a825"
        },
        "item": {
          "id": "2713e6e9-e1c1-4227-bc4b-cbb1cd6a01cb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8ec509da-3081-48fe-b7fa-0d9a7205fde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f286b6fa-645c-4748-ab01-e9b06789c509",
        "cursor": {
          "ref": "8dc67bba-683f-4186-b4bb-b08549e308d8",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "43c9ac80-b5e8-4a42-95cf-50a8711b4b8a"
        },
        "item": {
          "id": "f286b6fa-645c-4748-ab01-e9b06789c509",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "dc637763-1b1a-4c7a-8321-938310e140e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f38d4c-e379-46e4-9c71-c58fa30b8706",
        "cursor": {
          "ref": "54fd0171-f7b9-4046-854c-458421111821",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "97870509-602c-4767-a5c6-edd0384baad0"
        },
        "item": {
          "id": "c4f38d4c-e379-46e4-9c71-c58fa30b8706",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c7d5991e-66d8-44ff-ba31-1239f395bde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05d23e8-f6e1-4239-b9b3-fa7dcc2c780e",
        "cursor": {
          "ref": "018b9e46-6b5c-47b0-9d8c-eb702721f0bd",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e66c6818-ed37-4ad9-afe5-38c8618ccfce"
        },
        "item": {
          "id": "c05d23e8-f6e1-4239-b9b3-fa7dcc2c780e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ec90eb2f-7c3c-4488-9403-34cd9a3a36fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2958acaa-20f0-44e3-9b39-63e94aa97726",
        "cursor": {
          "ref": "b67feb8a-5229-4fc9-be7f-3cefbaaa4d09",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c5fa8141-6be9-4ac1-a6de-4be3acab9fa1"
        },
        "item": {
          "id": "2958acaa-20f0-44e3-9b39-63e94aa97726",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c70bd894-c75e-4e9d-bb7d-8ae14e690afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3da392-4bca-42e8-b0dd-630e4bce1ffa",
        "cursor": {
          "ref": "722edc8e-1f40-4d3f-96b7-98a31a49479d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5dd85f3c-707a-4bb1-9367-f02a07f50725"
        },
        "item": {
          "id": "bf3da392-4bca-42e8-b0dd-630e4bce1ffa",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "96c5fe1a-2564-4c82-b256-91eed6438e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77dcea8-1147-4882-8e60-a1a41126cbd3",
        "cursor": {
          "ref": "17219a23-c9f2-4403-98d2-666b427c72de",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2080c50e-2a83-4483-a374-97f3d44010ac"
        },
        "item": {
          "id": "f77dcea8-1147-4882-8e60-a1a41126cbd3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "05e11be9-f759-4bbb-bc24-4639f1516c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc20061-56d3-49f2-8597-6628aa602af7",
        "cursor": {
          "ref": "3aa8c77f-86da-4252-baa7-8ea36cd5cc05",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c0ce9a01-9b00-4e85-ac95-7a98619c7782"
        },
        "item": {
          "id": "7dc20061-56d3-49f2-8597-6628aa602af7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "157a3941-c8ee-41a7-9bd7-05122bf51921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303071fc-bbbc-4d94-bc0d-0de0ba2f6be2",
        "cursor": {
          "ref": "7e1770af-a3d1-4210-a647-eabeac20b13d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2aa5548a-3d54-4d5c-be77-dce12a8e50c0"
        },
        "item": {
          "id": "303071fc-bbbc-4d94-bc0d-0de0ba2f6be2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d1f64d81-655f-4804-8352-7521faaf98d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7a2c0c-59db-4042-9fd7-ceecf1598624",
        "cursor": {
          "ref": "0432a4ea-3de1-426e-9877-dd81cad10958",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "23b8943e-0157-4ec5-8fc5-872cec0529ca"
        },
        "item": {
          "id": "0e7a2c0c-59db-4042-9fd7-ceecf1598624",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "089da4b5-58e1-4727-877c-2691b5cedaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323f9e7c-5c9e-4403-8362-8e2e6b232fb5",
        "cursor": {
          "ref": "630f2a4c-f50e-4885-9b12-8597fbad9299",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "77574aa7-8fb2-4052-823d-319de7aa8c2b"
        },
        "item": {
          "id": "323f9e7c-5c9e-4403-8362-8e2e6b232fb5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7022f589-f26c-49ab-959b-cab974c3f941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573ec9d4-c8cb-44e6-b8aa-62e6b11be75c",
        "cursor": {
          "ref": "4912dd0a-307a-4318-86bb-8dd497301cd8",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3e5c417e-2275-4a0f-8226-57cd87d55c86"
        },
        "item": {
          "id": "573ec9d4-c8cb-44e6-b8aa-62e6b11be75c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ac86260f-79dc-4266-b437-b0b20b83c738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df986a6c-7da2-4c17-b2d2-f34632a2293e",
        "cursor": {
          "ref": "cfc1c453-44aa-4ad4-afd1-ae709f3afcd7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cb83286d-baa3-41d4-9766-a6beacf536cf"
        },
        "item": {
          "id": "df986a6c-7da2-4c17-b2d2-f34632a2293e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cfe68b4d-dfce-4087-952b-641234735422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80133b2-86fd-4a1c-8cdf-4390ac71aee1",
        "cursor": {
          "ref": "33942fc6-c9f0-4acb-a82f-5ccee6bcd64d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "71f120ec-2f15-480e-9b36-58f22e136a03"
        },
        "item": {
          "id": "e80133b2-86fd-4a1c-8cdf-4390ac71aee1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "372807af-8b56-4864-8a5b-3014f430483d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e61c81a-b30b-476c-b818-684148737be6",
        "cursor": {
          "ref": "e27589f4-e7ae-40e1-80c5-ba9df67cdfff",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b20c35b9-f4cb-4aa8-8804-805e79b2426f"
        },
        "item": {
          "id": "2e61c81a-b30b-476c-b818-684148737be6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6efa4121-5fca-46ba-912f-05805577d70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7290d22a-2d29-4eea-9d66-a814884d5458",
        "cursor": {
          "ref": "8d57b675-28e8-45af-bc1d-c55843e97f2c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8853d3ef-d10f-4ebd-bfff-4148c962df8c"
        },
        "item": {
          "id": "7290d22a-2d29-4eea-9d66-a814884d5458",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2fa2ed26-d4c7-413e-a6a4-965b6fc8a6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2ca316-8ffa-4293-ba03-b6ae0c6bb2ca",
        "cursor": {
          "ref": "26ec95fc-f9ae-4053-aad0-d15b0fd42b6b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f12c9fe7-799f-4cdb-8e57-b7afa08dfebb"
        },
        "item": {
          "id": "3a2ca316-8ffa-4293-ba03-b6ae0c6bb2ca",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "482b941a-c024-4ea1-99c4-3a80a7937ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521ebca4-a0ea-445b-a212-d28ad0bde89b",
        "cursor": {
          "ref": "cce8191d-46af-406b-9b22-e0ccca90a9cf",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4c367049-30dd-475c-bb76-344a49af842e"
        },
        "item": {
          "id": "521ebca4-a0ea-445b-a212-d28ad0bde89b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a98996be-ed40-45bd-aa6d-443c04802d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f7bb75-97a2-413d-b27e-8c54bf390034",
        "cursor": {
          "ref": "68706ef4-08fb-4ad2-bd9c-3fe36076b6cb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "265ecb13-359e-4777-aa05-a51cb6665b21"
        },
        "item": {
          "id": "86f7bb75-97a2-413d-b27e-8c54bf390034",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0cb90b1a-c116-48ef-8f44-ef9477c3db69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d843e852-2d4a-4bf1-9982-8bed9c59f044",
        "cursor": {
          "ref": "8a2f0f92-723a-4279-a0af-1ec6917cf30e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8cb1f689-357b-47cc-b023-5da7018fce82"
        },
        "item": {
          "id": "d843e852-2d4a-4bf1-9982-8bed9c59f044",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c4e1c52a-1dba-4310-946a-ac5f94be47a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe05d3d7-beef-4110-a0a6-89affc31f7ad",
        "cursor": {
          "ref": "b0c43f5e-24df-4717-b9d0-67e076c91582",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "602e29fc-0055-4093-be45-eb3b18622c13"
        },
        "item": {
          "id": "fe05d3d7-beef-4110-a0a6-89affc31f7ad",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b970362b-eecb-49cf-b8aa-f118457d50fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c345472f-37b8-4b75-8b45-0b72cfd0437f",
        "cursor": {
          "ref": "fc06aa90-a162-4728-9798-16eef53ece95",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "872888aa-6569-490b-90af-07841327ccf4"
        },
        "item": {
          "id": "c345472f-37b8-4b75-8b45-0b72cfd0437f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0a110049-e7f1-4bc6-99fa-3815b5ac05dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95831331-6093-4834-93c2-b2f3f6b87c3a",
        "cursor": {
          "ref": "fdf0a371-76d8-44e2-8d80-dd5807f961b8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e3e316b1-9b81-4489-8223-580c1edfdec2"
        },
        "item": {
          "id": "95831331-6093-4834-93c2-b2f3f6b87c3a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "128ed9c7-4802-431b-a5e9-113586b5c37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc08337-f6ab-419e-825b-03d0422c12f1",
        "cursor": {
          "ref": "327be373-668d-4386-a8ea-e7ac66e6665e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "05b25926-a491-4cc5-9e3c-0dd807bc46c0"
        },
        "item": {
          "id": "dcc08337-f6ab-419e-825b-03d0422c12f1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f791d985-8186-45fb-a259-a181272d1d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a45eca1-80b0-4427-a1c3-932c6b309111",
        "cursor": {
          "ref": "d28b1c3f-a155-43e3-9621-648ae9e6c94f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a1c97dee-7b5d-412b-b968-e0563b30b674"
        },
        "item": {
          "id": "9a45eca1-80b0-4427-a1c3-932c6b309111",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "038295dc-05fd-433d-b62a-921169793e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca29fcc8-0d2c-43cb-afc6-26521282b847",
        "cursor": {
          "ref": "6cc3fc30-4e90-4b07-81be-ee3ddc1c41f7",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a8ccd06e-238d-4d4a-91d4-f9c1cfd8eece"
        },
        "item": {
          "id": "ca29fcc8-0d2c-43cb-afc6-26521282b847",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fbb55afb-7600-4fd4-8a97-bc12ad784f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609b74a0-5f21-4db1-862e-c4aef3fd3004",
        "cursor": {
          "ref": "efad6b03-a76d-4d92-875a-8986507b20a5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "abc798e9-6fed-4423-856d-2313171e12cd"
        },
        "item": {
          "id": "609b74a0-5f21-4db1-862e-c4aef3fd3004",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a072188e-9c67-40aa-a960-55203ca1958f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2521603b-f252-4e1f-9f16-6825abafea58",
        "cursor": {
          "ref": "ed8bec17-a92a-4827-94f0-0685db4f27a4",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2831c70e-37d6-4494-a0a6-5d896e7f34ce"
        },
        "item": {
          "id": "2521603b-f252-4e1f-9f16-6825abafea58",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2b31944f-600f-48dc-a118-b8468fb22462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8404aac5-366b-4a6a-a576-3c912b41b11b",
        "cursor": {
          "ref": "bb2607ec-0a74-4d5e-9e4f-5529a7b94183",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "26dd09ae-2b13-40f4-8f5e-782a9f9fdda7"
        },
        "item": {
          "id": "8404aac5-366b-4a6a-a576-3c912b41b11b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9f79ae65-8b9c-4c90-bb3c-d68059e5456f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58689b08-6473-48b2-b8fd-7e91d43bd9c1",
        "cursor": {
          "ref": "26eb3381-cf0d-4920-8559-39356b81a356",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c30c2ffa-c5a3-4a68-8a93-5bffee9a8951"
        },
        "item": {
          "id": "58689b08-6473-48b2-b8fd-7e91d43bd9c1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f4cd394a-9529-4d4f-936c-3b44c60d4209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5ef9d7-9842-44f5-8de5-a267bd089cdc",
        "cursor": {
          "ref": "013bd6e5-8bd7-4ae4-b82d-8b9e1ac2cc85",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6c58878e-b848-4cba-a404-e5199907305c"
        },
        "item": {
          "id": "4c5ef9d7-9842-44f5-8de5-a267bd089cdc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "74852329-1ca7-4448-bf46-816dfb9e7648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c170f205-a11d-4da7-b3f8-464ec8f63617",
        "cursor": {
          "ref": "205753ed-f2d9-4a75-98d8-a8c3ae0fe6ba",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6d112eb2-bfb9-4785-bea9-b4cc806d03da"
        },
        "item": {
          "id": "c170f205-a11d-4da7-b3f8-464ec8f63617",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d882a760-7f70-4a13-b896-beec60a1f1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390db26e-65c5-409c-ab01-76875c4b4043",
        "cursor": {
          "ref": "e70bf9ba-95ec-48e8-be43-04d7bad08708",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9df1cee2-2033-48f3-ac16-0c1be3de3eb5"
        },
        "item": {
          "id": "390db26e-65c5-409c-ab01-76875c4b4043",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6e999284-b540-4926-91b5-fcac777d0234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dd341c-ff04-494c-9a4e-3f5ef545cb05",
        "cursor": {
          "ref": "725d0d09-3855-46cc-bbb4-6da06d61cc50",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "de9877c8-c8c8-4e7a-80a8-600aafe3f753"
        },
        "item": {
          "id": "c8dd341c-ff04-494c-9a4e-3f5ef545cb05",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2c2c3c79-0b34-4876-bdc5-069996fa8b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f206fd06-077c-440a-9e4a-d77a5c87536b",
        "cursor": {
          "ref": "b5ad9f54-56b6-4ea3-9066-883f9d2c8f41",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7926051b-8a41-405c-8a78-e9f77f26b2ff"
        },
        "item": {
          "id": "f206fd06-077c-440a-9e4a-d77a5c87536b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6858522e-3951-46eb-ba69-ce4ef06a1282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d149d19f-3c3a-43f8-ad56-8f55a0a6b401",
        "cursor": {
          "ref": "38063050-bf49-4447-abde-754673320782",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "25a38701-af98-448b-8f1d-918527a30d64"
        },
        "item": {
          "id": "d149d19f-3c3a-43f8-ad56-8f55a0a6b401",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "746c843d-96ed-40ec-bd23-847d1b17c179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cb8450-23ba-4eec-be66-d1432ad0a58b",
        "cursor": {
          "ref": "b7eb7425-7984-4e5f-b0bd-d2f028d333c6",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "32019404-9390-49a9-a5ba-b74f9f736fbf"
        },
        "item": {
          "id": "c5cb8450-23ba-4eec-be66-d1432ad0a58b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8518561f-f8b8-4eb8-9d98-eb5c2727183e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687abe75-d140-4e45-a477-f5fd14731fbb",
        "cursor": {
          "ref": "246e8a78-55ef-4d50-8751-6ba6625c1f03",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6d4c0141-eb05-4eff-92e0-9becef298f12"
        },
        "item": {
          "id": "687abe75-d140-4e45-a477-f5fd14731fbb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2c54db53-098e-4ace-8cb5-6b8bdf11075d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d58c92-5e53-4ea9-87c2-bf16e1541c09",
        "cursor": {
          "ref": "635588f0-d9e7-4b43-8914-6d3cb652a15e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "544af2c3-1b7d-420f-8b9e-1e42f990d9a3"
        },
        "item": {
          "id": "d4d58c92-5e53-4ea9-87c2-bf16e1541c09",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1c13e6b5-73a9-4e5c-b9ca-2fc541ee892e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7777f3-4cd1-479c-802c-37304cfd4edd",
        "cursor": {
          "ref": "f8fd0ef3-f643-486a-bcd2-596bfad819ab",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9ba6ad68-03c2-40f3-8838-21381ec2cb9f"
        },
        "item": {
          "id": "9b7777f3-4cd1-479c-802c-37304cfd4edd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4a35d690-852b-4e04-83b6-5c020adfb9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9a68b8-982c-4a88-b509-1fff264bbd0b",
        "cursor": {
          "ref": "5f9b9893-0cb9-4e8a-8cd4-9d9fda09eb10",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b34dcbe6-0dfe-4044-b647-1b05259c2693"
        },
        "item": {
          "id": "5a9a68b8-982c-4a88-b509-1fff264bbd0b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3e1121be-e2d4-481d-a3d2-57e658a486d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1ef9f8-c460-48ba-b7ed-550c5411916b",
        "cursor": {
          "ref": "265b9bc6-fc40-4896-a7e9-f27066f1be12",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c2828b15-9a56-430b-8c93-147b6a5a1c4a"
        },
        "item": {
          "id": "7f1ef9f8-c460-48ba-b7ed-550c5411916b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e33a0f3d-ea18-42d8-b4c0-ce64c5a1c70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f344a0a-c235-47bc-8062-f070b411cb95",
        "cursor": {
          "ref": "ed2a693c-136f-4f61-98d8-47c1c67d70e6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b0a3e6f8-d679-4218-a51e-d91e085ed53b"
        },
        "item": {
          "id": "0f344a0a-c235-47bc-8062-f070b411cb95",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "879e86d8-9f81-4e58-ab19-49ef2ff7abab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d687bc-23ce-4a7f-9a42-3f7d67afe765",
        "cursor": {
          "ref": "1076a264-c838-4ab8-8d3e-ad6884231eb2",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "99ead8dd-b8af-4f40-9c63-f5f0f2502c6e"
        },
        "item": {
          "id": "46d687bc-23ce-4a7f-9a42-3f7d67afe765",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "aa919418-b08b-45a8-a8d5-54ec9a4b48aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebb7e29-aef9-4213-b19d-a2e0689f198e",
        "cursor": {
          "ref": "0a214e79-fb19-4544-9795-911d5d6d6921",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5791dc03-1db5-43fa-88b4-859f6184b31b"
        },
        "item": {
          "id": "4ebb7e29-aef9-4213-b19d-a2e0689f198e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d8702571-b39d-4739-83cd-669eb3b1560a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec07d6e9-a5bc-4f09-b1cf-853d20f2ab11",
        "cursor": {
          "ref": "049ddc9e-2270-464f-9ac7-0352741e1e56",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fb68e349-3a7d-4498-9578-45a7efe32f60"
        },
        "item": {
          "id": "ec07d6e9-a5bc-4f09-b1cf-853d20f2ab11",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c7198924-8278-4fa2-af62-9bc31231a148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d745e1-cc12-473e-bac8-12196a56dcf9",
        "cursor": {
          "ref": "e3ad37f1-4600-40e3-aee3-db1ba163210d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e7e0a456-a926-4d0e-8876-dca2e4744d1e"
        },
        "item": {
          "id": "d6d745e1-cc12-473e-bac8-12196a56dcf9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "40b72691-18af-4b3f-9e4b-3c82998f854a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8286d9-6472-4d9f-a62f-e7a7a13291ae",
        "cursor": {
          "ref": "16771bdb-3e8b-408b-8f9f-773720bfc517",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "75300d76-244d-4dc9-9a90-4142f0abb416"
        },
        "item": {
          "id": "fd8286d9-6472-4d9f-a62f-e7a7a13291ae",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d203cd2a-771a-4f61-8c05-cf7d146cdfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65f246f-14e5-4df9-a6cd-66cf7f5e9ee3",
        "cursor": {
          "ref": "3090a58a-68db-4eb6-aee3-4b77805cc58c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a6f33b68-d1ab-462b-a664-0af55779271c"
        },
        "item": {
          "id": "b65f246f-14e5-4df9-a6cd-66cf7f5e9ee3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c1ffc7ab-2d13-48d0-81df-a302706c980a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03481176-a442-4edb-9658-e5fab6881a79",
        "cursor": {
          "ref": "b0889a05-8071-45f8-9876-d71e6c7adfcb",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6ca70b9a-c7f0-48f1-9bb1-916529eec292"
        },
        "item": {
          "id": "03481176-a442-4edb-9658-e5fab6881a79",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0fc969ba-41b8-40dd-bf8f-e7439c3a305a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ea16cc-cb8e-49f4-b211-54f29c1b4410",
        "cursor": {
          "ref": "70784142-3d3a-409c-9eae-8f469514bb76",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0d0ce4cc-ce8e-4fe6-a4ea-2ed51b4f5893"
        },
        "item": {
          "id": "f4ea16cc-cb8e-49f4-b211-54f29c1b4410",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a175aec5-7365-4588-8e6e-bb71c6d9a094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0083b4-fdba-4644-ae4c-d3201d55301f",
        "cursor": {
          "ref": "a01daea9-f0f6-4902-b00a-f387f9890d6a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5cd960dd-2c5c-46f1-9e10-4f62802d4241"
        },
        "item": {
          "id": "cf0083b4-fdba-4644-ae4c-d3201d55301f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "30a07396-2e33-416a-abaf-d5e11343f494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d1ac85-138b-40dc-8181-99a303d4f7f5",
        "cursor": {
          "ref": "562ddb84-2873-4dbd-9bca-191ac297db0e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "34a5831f-cf7c-4f1e-bab8-55dbb2a2cf86"
        },
        "item": {
          "id": "d0d1ac85-138b-40dc-8181-99a303d4f7f5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3ca790e3-4cec-4a99-9203-b56aac3bf98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a3ce7a-a432-49cb-b6a2-184dbb7cb060",
        "cursor": {
          "ref": "36c1773a-b302-4072-9aaa-37102baa7dca",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9320dfca-d7d4-49ef-b942-ad038d11409e"
        },
        "item": {
          "id": "81a3ce7a-a432-49cb-b6a2-184dbb7cb060",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9219c2f1-67b7-43cd-bc3f-f4e723bc77ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edd7676-67e1-42b0-8f32-a6c8df714d7d",
        "cursor": {
          "ref": "981f43c8-f93f-42ed-ab35-467e69bd9c58",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ea60a904-8df5-4962-a924-57284778631f"
        },
        "item": {
          "id": "6edd7676-67e1-42b0-8f32-a6c8df714d7d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "442be45c-4571-4ae5-90bf-40ec3aaed696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0ec824-1c81-454d-a0fd-26a3fed49e4d",
        "cursor": {
          "ref": "b832873a-d177-438c-91bd-623ede827731",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cbf9d3d2-b068-42f3-ba0a-6bad7026b456"
        },
        "item": {
          "id": "0c0ec824-1c81-454d-a0fd-26a3fed49e4d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "36858b45-d713-446c-8c31-735d8495cc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05c2fcb-36e4-4f8f-96b8-a69647d5e3eb",
        "cursor": {
          "ref": "a87a106e-80ee-4ef8-8737-b7251e816bd0",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c06d7393-d0f7-46f7-8a62-47f3c01b202d"
        },
        "item": {
          "id": "a05c2fcb-36e4-4f8f-96b8-a69647d5e3eb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "af05310d-b663-422a-82dc-8ef5622ca6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025455cd-6696-402c-99bd-052e89c1a859",
        "cursor": {
          "ref": "54940d15-185f-4be0-9c85-ea7c02e22589",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "99b2d785-9283-49a7-acb9-d2694e965df8"
        },
        "item": {
          "id": "025455cd-6696-402c-99bd-052e89c1a859",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a1f825f3-a8fc-4796-87d6-1f8a033a7bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4dfc52-3f06-405e-b14a-9b46924131c9",
        "cursor": {
          "ref": "e7c08212-9df1-42ea-84a6-c3db0b71b952",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "986465e0-cc95-4cc0-87ac-4776e03722a1"
        },
        "item": {
          "id": "dc4dfc52-3f06-405e-b14a-9b46924131c9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e805ef2c-0ba5-4f28-8f08-23373a1b16ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01edbe9e-13fb-4b53-af41-5779fb05f5a2",
        "cursor": {
          "ref": "2331968e-8efc-4594-b019-027ca1ef4f0d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c8512bf4-45ae-4b7f-9364-4573a3239fd4"
        },
        "item": {
          "id": "01edbe9e-13fb-4b53-af41-5779fb05f5a2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7d7916a4-e9be-4cbb-80b5-fdd5fa766e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea922c0d-ead3-40b7-9e4f-fe99b0c4c9dd",
        "cursor": {
          "ref": "f857e199-7816-4bab-8371-2a88f2e46782",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0211582b-6363-4fb5-9710-fecb91418e77"
        },
        "item": {
          "id": "ea922c0d-ead3-40b7-9e4f-fe99b0c4c9dd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "210041dd-df35-487f-b733-56ad398ad713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55ece8a-9e9b-491b-908f-f1cea5fb45f6",
        "cursor": {
          "ref": "a719725b-0cfa-4198-a65b-58f972e3ce2c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "09a374bd-98b1-4000-b6a2-9659a474b785"
        },
        "item": {
          "id": "d55ece8a-9e9b-491b-908f-f1cea5fb45f6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "49bbbd6d-c04a-48bc-9d43-a531e22f11c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d3f0ff-a549-47ee-845e-2063205ca6ba",
        "cursor": {
          "ref": "b826dc54-d13c-4f09-828e-7b1b29b989aa",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "17085aa2-b562-4653-88b5-2839e44ad35a"
        },
        "item": {
          "id": "d3d3f0ff-a549-47ee-845e-2063205ca6ba",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6f168877-35ce-498f-ad62-1380646d81ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1804edc-93c5-4b27-878b-39cd1fb81993",
        "cursor": {
          "ref": "4cb129d4-90c7-48a4-8d65-85070d8df9a7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9970f8cb-d77c-41e3-aacf-967ba4114c96"
        },
        "item": {
          "id": "f1804edc-93c5-4b27-878b-39cd1fb81993",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0663b650-85ba-4456-9406-a7a8c1894460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90b84b5-1731-4623-bed0-b4e232e0913c",
        "cursor": {
          "ref": "3383e88f-e17c-45f7-96df-b727fc0d3a49",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1072c074-00a9-4bcd-ba83-2d5b8e1f8339"
        },
        "item": {
          "id": "e90b84b5-1731-4623-bed0-b4e232e0913c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a053a9b7-3004-460e-9071-4f9e609f761f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01c4877-c6bc-40d0-a49b-29ac2bfd7698",
        "cursor": {
          "ref": "296f34b3-1582-457c-aef1-0d6017dfe47e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "81285e7d-1d16-4e60-994f-0dbbec79790d"
        },
        "item": {
          "id": "e01c4877-c6bc-40d0-a49b-29ac2bfd7698",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "be06ab18-77cc-415b-a0fa-8a083f947ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9dba70-21be-4037-9052-73a30c963a47",
        "cursor": {
          "ref": "f1086804-7702-4a30-9bcc-8beae81df21b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a7f98fd1-6736-498a-9a84-781d485cf858"
        },
        "item": {
          "id": "bc9dba70-21be-4037-9052-73a30c963a47",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "947efbfa-520e-422a-bd7b-1868b2bee5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828bc22f-0dab-4f4c-a7ba-7b8f85eab5fd",
        "cursor": {
          "ref": "2bd61dcf-9a5b-4c6a-9ea5-aa4347ae9e7e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e5895542-4799-4bfe-88b9-ae495b3e717f"
        },
        "item": {
          "id": "828bc22f-0dab-4f4c-a7ba-7b8f85eab5fd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1800405b-d0e5-4745-86a6-e8afa4b94560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00df144d-2dcf-446c-8e78-edf33f93d061",
        "cursor": {
          "ref": "94786d72-06bd-4edd-a1ab-b8ae3f994c14",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e149d187-328f-4516-a2f7-18fe9858eec2"
        },
        "item": {
          "id": "00df144d-2dcf-446c-8e78-edf33f93d061",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d7ed874f-2152-4ec8-8c60-e6915dd5b0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86aa6572-a223-4ef3-ae97-7e727e984206",
        "cursor": {
          "ref": "20fc49d8-43ab-4be3-8d80-83cb1674a77a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "148a025c-1a00-4baa-9318-ac42de982f98"
        },
        "item": {
          "id": "86aa6572-a223-4ef3-ae97-7e727e984206",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "485ab562-38cc-4727-b93a-b135040a2658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3550d993-7d34-4a40-8fc2-634bd4b82db5",
        "cursor": {
          "ref": "ab48f44d-20e4-453e-bd1d-5ab7405ed080",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "af02ed39-67b0-4ee7-9803-99f72fb60db8"
        },
        "item": {
          "id": "3550d993-7d34-4a40-8fc2-634bd4b82db5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "56a14d1e-5011-4021-8bfb-1701447c8f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a92a59-7e6c-4398-8b39-e804e6c1d371",
        "cursor": {
          "ref": "036f5d45-d90f-41b8-92c0-21e8575d0969",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ed64a6f0-fdf7-43ef-bf40-440cb0923f67"
        },
        "item": {
          "id": "f5a92a59-7e6c-4398-8b39-e804e6c1d371",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a15f4a41-fce7-41bd-a593-768d88b8cdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f004ca-95e7-4387-b8a1-8a07b8d6a492",
        "cursor": {
          "ref": "d005aa85-e284-43c1-9c05-c1ba62692a78",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3cf503f1-21ed-4185-b427-ef6ffc9430d8"
        },
        "item": {
          "id": "05f004ca-95e7-4387-b8a1-8a07b8d6a492",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c78494ec-c021-4581-8d9c-94f4b6c5f026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5ef345-292f-487f-9d49-0ee6ac39ec4a",
        "cursor": {
          "ref": "9253a845-1e34-4823-9a2d-da53aae16bf2",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8718ffd2-3815-4ad1-8832-588f393be14a"
        },
        "item": {
          "id": "1a5ef345-292f-487f-9d49-0ee6ac39ec4a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0d384fa3-f31c-4337-84f8-e04d0083e45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcb735d-2431-4ea1-a5e7-ed1cd8731f1c",
        "cursor": {
          "ref": "3546046d-6178-4cae-a016-a76f5013a35c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9b632a9f-347d-4647-b58b-6871e0fcff67"
        },
        "item": {
          "id": "6dcb735d-2431-4ea1-a5e7-ed1cd8731f1c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c05cbc58-3a27-4a4d-9363-d6aa13b2af31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacfafd5-be76-4622-a186-d47e8b79ce69",
        "cursor": {
          "ref": "73d968d4-a6f6-46cb-a51e-853e8b17f068",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d83606cc-e745-4889-a250-33d2b5b92be6"
        },
        "item": {
          "id": "dacfafd5-be76-4622-a186-d47e8b79ce69",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3f8c4fbb-c21f-4d30-b5d9-6eb823855bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4b91a6-5041-4599-bf9d-2e4829b2cea6",
        "cursor": {
          "ref": "f3833e22-598d-4dd9-99b2-85e4b017b149",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f86d9f11-a16a-4443-a28f-49a6a2276e91"
        },
        "item": {
          "id": "de4b91a6-5041-4599-bf9d-2e4829b2cea6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "504d1844-baca-4d20-9fc0-a0af8a203af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f230f998-c428-4a1a-9598-e550847e567b",
        "cursor": {
          "ref": "c92a64a7-7a67-4e15-aa21-1c243b2fe118",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fbe5ab5f-94f2-48d1-952a-e59f8100fb8d"
        },
        "item": {
          "id": "f230f998-c428-4a1a-9598-e550847e567b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "905757d1-bc98-495a-a881-704c70613d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0552487-ad1c-4485-b1d1-be20b88cbd68",
        "cursor": {
          "ref": "e3fcbbd6-d032-4667-8565-cde2fe95dc17",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1ed1469d-c609-4845-bc0c-47ecf22eb4d0"
        },
        "item": {
          "id": "f0552487-ad1c-4485-b1d1-be20b88cbd68",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "10534ecd-7314-474d-930c-27d911dbad87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5b45a3-cc69-45c4-a509-8c5045226e7b",
        "cursor": {
          "ref": "c73ea03f-8f48-4972-95e9-a5a8e19a66a8",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8fcc90e9-36e7-4e83-9449-3ee555973527"
        },
        "item": {
          "id": "ae5b45a3-cc69-45c4-a509-8c5045226e7b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ef1a7648-40a6-409f-91b5-dc6f7a34f524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3933addf-4305-4ee7-9410-57822bbf9cf5",
        "cursor": {
          "ref": "8dd0499d-7e1d-4f4e-856e-ed35b8864b10",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "06f73eca-5d6e-4eba-979a-8c7763642111"
        },
        "item": {
          "id": "3933addf-4305-4ee7-9410-57822bbf9cf5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "81ede96c-a4f5-480f-a019-5545633240c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffe5bdf-5fc0-49e8-a03b-af20cf2f1b0c",
        "cursor": {
          "ref": "45ee93c8-b230-4840-8c44-3638648c95f8",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6e1e1205-4da8-494d-8501-21a64c5e770b"
        },
        "item": {
          "id": "6ffe5bdf-5fc0-49e8-a03b-af20cf2f1b0c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ea0e3d08-e110-425f-ad8a-c73cef974f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dabb76-0e64-4bf7-b670-209b0eb223b8",
        "cursor": {
          "ref": "4b54758c-9cad-415b-b6fd-2e2b1bcc6bf7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eeb43419-19eb-4d1e-93bc-eaa86141c24a"
        },
        "item": {
          "id": "27dabb76-0e64-4bf7-b670-209b0eb223b8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e09c54eb-2069-4415-982f-e376a5159555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de849c6c-0b9c-4ce6-a414-9394b4c9e25b",
        "cursor": {
          "ref": "c744a9bc-17b1-4de3-ac62-4c92f77d8b6c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3dc1123c-7b94-4979-856b-07ec98d7c162"
        },
        "item": {
          "id": "de849c6c-0b9c-4ce6-a414-9394b4c9e25b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9583bd74-4b59-4ca0-a34e-72541153f956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "c97942d4-6fe1-41d8-bc84-cf0424de105e",
        "cursor": {
          "ref": "05d3d8be-833c-4b1d-8552-84c9ca7ebd52",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "86274133-5179-4226-8d8d-7f5e4c574ce5"
        },
        "item": {
          "id": "c97942d4-6fe1-41d8-bc84-cf0424de105e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9e9e4a34-ff6b-4dc6-a6de-e9a4bf6c2c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "f5aedc30-dbe7-4e02-88a8-f46ea6cbb34f",
        "cursor": {
          "ref": "57c290b8-3b72-4136-a908-c987cfd771b6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "483d1f2e-853f-449d-afa6-c8b2b41b7a6d"
        },
        "item": {
          "id": "f5aedc30-dbe7-4e02-88a8-f46ea6cbb34f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fd55d7f2-9c12-435a-b565-9647737912b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "4bfc6fb0-8d4b-421e-9414-89b4dcc20799",
        "cursor": {
          "ref": "2ca1c312-a501-4c11-8cfa-3efdb8960c11",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e03db629-6d72-467a-acae-ec8b03d78480"
        },
        "item": {
          "id": "4bfc6fb0-8d4b-421e-9414-89b4dcc20799",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e05b3534-0370-43e2-a061-473b44be5015",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfc6fb0-8d4b-421e-9414-89b4dcc20799",
        "cursor": {
          "ref": "2ca1c312-a501-4c11-8cfa-3efdb8960c11",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e03db629-6d72-467a-acae-ec8b03d78480"
        },
        "item": {
          "id": "4bfc6fb0-8d4b-421e-9414-89b4dcc20799",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e05b3534-0370-43e2-a061-473b44be5015",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf760be-1bc2-4f18-b47b-128fba104a26",
        "cursor": {
          "ref": "45e6b2e1-012f-4ccf-8ace-2ba7fafd19ce",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5c78638a-5952-441a-8f46-9feb9820365a"
        },
        "item": {
          "id": "ccf760be-1bc2-4f18-b47b-128fba104a26",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "67f81c67-d5d2-4268-90be-bd99e0e45746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfa69a4-7586-4be2-9374-42fea341acc5",
        "cursor": {
          "ref": "49bfdf8b-3fa2-4c69-88d9-f7200884b111",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f3d76b40-4003-4264-b36d-1a6a8ca01520"
        },
        "item": {
          "id": "8cfa69a4-7586-4be2-9374-42fea341acc5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9f5ae650-ea9e-4bf4-bdf1-fea3d40cfaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}