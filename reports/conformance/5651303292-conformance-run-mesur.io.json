{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "aa7cf4da-9efc-4584-add4-c149722892c7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "062ff0c8-f036-4338-ba2d-7f643a541cc2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "785f642d-1f26-4178-867a-f5ca342c891a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7b8bdf55-e890-4675-b8f5-626650e0e2bc"
                }
              }
            ]
          },
          {
            "id": "c27dad36-ecf7-487c-a909-442168570381",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "daafebe2-199c-4ff3-8480-7afe09318721",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3cf70fff-feac-4272-96c5-bddbf5b49260"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "da6f2494-abdf-4bed-b0ed-ac3cc6fe2a3d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5e3acdd9-4800-4535-9ec3-844dcf126adc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d06cf526-0f49-48c5-8ee4-c16b8baf62e9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e9a8d56-57ae-49ea-8e78-1414d3ac99db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9db23837-fb6d-4e37-85e5-47d359be88d5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6852fa83-8bba-49e6-9744-983c0ec757f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74505f90-2f80-4851-baea-91158625c5c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "08b6e8ff-39d8-4d26-86e9-4bbc0f5be069",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10131b04-99a1-47ad-9459-eea9ea69b3cd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dcb3beb1-fd25-49ce-9ed3-08b8f2b6340e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5427b66c-4a4a-4273-8e9f-5e635fdada92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13b33245-565e-4d48-acc8-deba84398557",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a05c047e-e22c-4888-a7eb-20b13ff3963e"
            }
          }
        ]
      },
      {
        "id": "71225260-5da7-4391-b8ab-f810120ca13f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6619a0ca-c7f8-4023-8890-c4aa581a2237",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4787528e-7072-4684-98eb-3e380a8d5711",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a5f888d1-0ce4-4f97-919c-d3ff0be88241",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06159eb7-3de2-4cb4-9a54-ba89dee5c808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a920e5b8-f698-4b8e-ac64-c1d6bde8a303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87de5f6-5792-4dc6-904c-c01d4831bd7f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9243ae-baea-4e6c-ad4a-0d607647a6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d1a165d-ded4-43e0-af7e-500f8b84617a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5e0554-319d-4ad4-b678-fe6fe2c30632",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1cf332-ef9a-46aa-b9a8-994ec54f3ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fec481e-e206-418c-9b99-2d986f0988cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3639936b-ef14-4521-8bf2-cfc0ba75457e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ee1eee5-f1bb-4215-86c8-0118fe01fd14",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d99a56-98a1-416a-95ee-1088de1c661a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d0355e9-5416-4c9e-a7d1-12a5760ff7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fb86f4-9f68-4660-b530-13ec28e5f1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61d5846-5dcf-45d1-8e3c-00a1df9871a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0e9360dd-33a9-4089-b58f-9a0769e858a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e5c8823d-8cf8-44f5-a4f1-4572c3bafd1b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1f2379c-2982-4f6d-aa21-f8baf3149006",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f628cab0-4d2c-42c2-8697-4b8c1a279851"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3cc7415-1b62-47a6-b4b9-7329ae448fc5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d009389c-bba0-403d-b69b-5b1ad96b9bc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2dea580-dbfc-41b9-8d9f-90b0ff8dc105",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d78b26c7-c2c4-4aec-a004-2616937afa4b"
            }
          }
        ]
      },
      {
        "id": "1f3f67ed-1a98-4bed-9cfb-c9bde42eb446",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "aab1506e-44ab-4bc2-b05d-321eb3ffbdc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63360dd5-8e40-4c24-8cb1-183369ed3e60",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1e4a9263-9bfc-45a9-ac0b-6ab661a20161",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a92640-2fd7-46b9-b490-68dddfe678a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2461feb-4a84-467a-a185-7a8b07403171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c672828f-7007-46c5-98ec-b3c227e8dcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb9ba6da-997e-422b-afb1-5fe8010f8521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c09835-9577-455a-8240-b8eaafcc0b7f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1560209e-aa19-4ddc-88f7-c6745cea5203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3aed2ad-c228-413f-8dcc-7cb7f7514147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9999128-586b-40db-b0d1-78e551a45d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09e9083b-2aee-4991-a08c-c1029f7effaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee96c12-1152-48f2-9493-8486613d7cfb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b131e3cf-1294-4848-8bf2-5e0a07050642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecdea4fe-a803-43b6-b505-d4ed9f4dd632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49428d45-6e2b-43b8-bc61-b91f50278240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0da45799-a0aa-4f28-9fac-71740fd85554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adad2c5d-69e9-4010-9cb3-32ff96165d87",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5b30e8-a5ed-4121-814b-2b88d17179fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadb0c6e-2d18-46a5-85d7-317a5700234f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d79ee9-a4d0-4060-b4d9-1d01369cd841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "503035a2-4da5-49a3-948d-2e930c56643f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985a6d75-c0c3-4f97-9732-e8f49dabf239",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a6d155-13a1-4968-81bd-76a7bcd33b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199768ed-2519-4900-9172-a54be51ec532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b408e692-7a29-44d1-b230-f849e40c5d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5db47372-9712-4693-82c8-63bf5af719d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b78344c-e6e9-45b9-ae3d-1b1c16f82374",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cd7d6f-dea3-4a1c-8fbb-3ea5f753bc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c3d795-88fa-490c-bae5-2cf95333488d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf1fc94-b49d-46a0-a808-89d75d4754c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab284f16-cb9a-4540-9215-1d3312ffa8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885cd253-9800-4817-9134-31d5d14ab63a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697f77a6-ee15-4e2c-b954-f281ac7c0438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247151c1-f0d7-4e3c-80a6-e57dbd5ba266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f4bf77-fa42-4472-b3c3-379f027e573a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0f60f01-66d4-400e-9896-69f450765ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b957578b-d7c4-453c-a3b9-4f30174a7a09",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf372a9-9254-43c9-ba5f-9cd753af70b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df26d04-5ae7-47ec-bc97-baa76ee83afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d122fc-cbe3-463a-8039-7ff66e271452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "354bea6d-f48a-4504-9a59-03613725b3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75586950-6543-4f58-a18f-da99c3cb5e2d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ef88cb-539a-420f-b45c-7d73882b83bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a076e3-3714-4e58-a81b-b0d79a5f1580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c926c04-708b-46f3-934d-03815309bda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9725cab9-1add-45f3-825d-f2a7b55fd9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6c003a-c7b5-49c1-8022-7bed4466670b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb108da1-96b8-463a-a636-91f7dc6cf136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a364ff-23e7-40f7-a1f6-68de8553e47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cdc89f-ca5c-46a3-b122-5d4423c7f91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dfed280-c679-4de3-a259-b38eb416b5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5898438a-46c0-43dd-b742-5f98c8e674e6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63518ca6-698c-454c-818d-0aca3bb9b3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e991c25-e5ed-476f-8ba4-5c19e87a2349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dc9702-17ee-4d7d-a848-f02f4a99d3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d687a011-d9dd-4c5d-b53f-e100188568b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3b0665-013c-46d5-a7f8-e4b53bc1111a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c967675e-302c-4ca9-bfd1-57d60d7cda7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6053e4e-4940-4fcb-8479-b2575cab3983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ab8b25-30e9-4cab-8b64-079293a85132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bab16996-a943-46b8-a8fa-813d6320e4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed500ba9-f69b-4bdc-a3ea-9ed7d553a977",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ecc51f-847b-42b5-b023-3e5d1a870e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc43006-670b-41f9-a196-03ce57ac1a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd77ab95-c1c8-477b-b4df-0f4ca3b710b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "037144db-7cf8-4212-9ea1-c18d1d102a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94217ca1-38d4-4ba4-9250-44422f6f3723",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021218a8-01d9-437c-b077-2da0ceb68448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafbf89f-6f20-45be-8675-96d8f36b874d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e2c2ae-9331-4e39-b4ea-002c8f225574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "161386df-2f6e-4bff-a2d2-773458723577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f8ca61-8ae3-4d9f-94c6-0476f0954f9e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33f51a9-f27d-422f-bd6d-7dd9fec6151d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a23f78d-3a49-4473-90b0-2df1ab2f947a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9da826e-0c2b-4090-bf91-ea983521373c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35d24325-fc8c-474a-aa09-a5a942ef020d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c17bbf1-8a35-487e-b97e-54619983414c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c576ded9-f4c6-468b-a2de-44bfc63c3182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff334e31-1e52-4be3-b3ec-7cfb12ab1d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b85ab1-64ca-4b9e-9c49-8d552eec96c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b5c36bc-edc8-4013-b6c9-02a83f840bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8889fef5-44cc-4239-acbb-d28ab45c0835",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c21e96-c392-42c8-a5ca-4b2fc3d41ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47278df-10dc-43cf-aef6-119f9d294ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdf7588-d4c7-4298-91fc-04ec59eb5497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f89a3b5f-2169-41aa-8ab3-5dadf096b0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef717569-57c5-45eb-a2a7-3aac15dcb9dd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840efd2c-4c52-4a63-88e8-25a0dce72d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca39657-24d4-47b0-bdfe-697bdeb5ea23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f61986-54e6-40c9-b46f-91bd4e0aed2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "249f8ffd-5ea2-4c72-b00e-678da2f8c124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adee096-02e5-4659-951f-5266ada60622",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab37f616-1010-4025-ba67-929e979130b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3446e5ad-26ba-44f3-b642-78686a99e1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0550156b-7e0c-4778-89bd-a0af84dd86ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b06d591-3bcb-4f44-b0d8-7e1396173162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17490a2-44bb-47b3-9391-190a47a23bdd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2795f00-eace-4e2a-b8e9-3981902efe1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63a001a-a07a-4e9e-958b-d84e5558368b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60613e82-12db-4fce-83bf-d4cb1823f740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9c36a9-e7c7-4a2a-8a81-96f2ece28c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af03e00-6b2f-4320-9d51-3e69e5bb7308",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86df0d1f-3708-4f55-b4ae-af5a22ef52ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be74faa-fea8-4fac-a792-cc96c30e1c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c748f834-9adc-4ed6-b862-9073357fae27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd687ee4-a317-4e34-9d06-0714921a701e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fde1df-4ecc-4e33-95cb-3c8a9375dab6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ba05c7-2954-4ff9-86d2-460ff5ad8589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c84f19-aebc-47e4-9e81-ecf8958a0303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88481f1d-1f1d-4467-a2b6-6fcbad718358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2954309-ca21-40ed-b717-96bd2ef56e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56da86e-b004-4123-9c8f-f73e9413f48a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c4a55a-bebe-4caf-b5fd-39d5e8483aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2d0c9f-033a-4c9e-99af-9ee4f671ed36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9241c52f-c452-4c51-8c29-92c0e05d115b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "149b01da-3a44-49e8-bb21-1f92a8262e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6606b796-fb98-40c3-b71a-7a1b13e431f0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b0edc9-b9d3-4e6f-a867-0d6cf561fe20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5e43e2-d4df-4944-b95b-38f231a2d449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d01044d-7ebb-4030-9260-634377ac50cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "709a62a9-ad4b-4c96-8bb6-d9751c111aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b284ec6-8648-4e25-9b75-665a0b443c10",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bc20e2-e49a-4cbf-b5e7-6dbe1fb2e317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6de0fa-bd29-41f4-8ab8-535119933001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1b704f-9b9c-4e8f-93e1-330bbba9990a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "257f6468-699d-44bf-b03a-bf58d742f75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b47bd1-1de7-45b1-b439-ff9a4f558f67",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb17186-d737-48ed-9037-a05bc6d4652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0033d52d-ec8e-47d6-81c6-24ba49cdc460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1a1c2d-878c-427e-ad97-ddeb7ea60086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45fa8c9b-dc9a-401e-bf4c-f187868ce6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85db6767-7f59-4fe9-bffb-acf03bf099f6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9c5e7f-ead5-4a6c-886b-127a6069091e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8b05c3-1549-45d2-a8d6-d1309327fc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f51ec8f-2c49-43fe-8e7d-8cef53e83edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6410060-8cfa-463f-bd08-ba401d51e8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac59f4b3-d286-4a6c-9908-7d279e7033be",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17ffd66-1a3a-4938-a119-cbca7b8d4e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a8fd62-582b-4bf4-802a-d8b9573b58c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65a0fd3-bc99-413a-bab6-a47ac9b58c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d8aa57-8b68-42fa-83ef-703aca0a3e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2699c5-f97b-4bc0-bca5-45b40fbd2820",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e84ca31-c5ef-40f0-b7cb-21a06a8cefbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0e7bde-115a-46e0-ac79-c52acfcedb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914ff0f8-4801-4ca8-8900-bb8bc9ae6072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98bd64b4-6404-4a8e-a910-0c483cc91e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1a9168-4d79-4060-952c-274ef2cf9855",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b9c548-da26-4af7-9581-df441c5c6112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ed5c51-a3c3-4a20-9f37-09be64f6852d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de884955-3399-4f77-aebb-8f1235d19955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab50ab6-e85c-4979-bc20-6777553c0369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129a0531-da95-44a6-9c5e-54bd811f272a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337e55b4-4735-44c2-a708-df61966464e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd8cc44-2862-4e5a-8537-60f17f7464b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ebcd3a-5f05-4324-b83a-451542d9d852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bbde80-32e6-4c76-88c1-4895739ac2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c12082b-2de8-48e6-91aa-f251d8b452ce",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba878d38-a0df-4e34-a4e9-14710df46954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea773934-1126-448c-84d4-e64adb4f4bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4abbeca-2044-4e65-b4d7-16021c591936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd6acbf-5d35-447a-9b94-e4dea00d7b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d454401a-55a8-45c1-9078-562f94294423",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6440130-9fc7-4988-89a7-0608e590911e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22920e32-7af3-4124-bb49-b25e92a6db15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21401b0d-6739-467c-8056-5d1669899656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7073aee3-cc5d-4e32-bda3-16c7bbfa4d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af863ec-534f-4587-849e-bfe96ece901c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65e8cdb-1926-40ae-a5e1-13d12e7f7882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3562c9b-2b4b-47b9-a790-35c186799960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b1d23a-8db1-4636-85b6-7547c3876fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a228941-9d55-471c-99df-dda5b0940d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f23b05-ee0d-4302-835c-65e70d32c9b3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84bbf50-278d-464f-822d-2a176f753aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535a1a6d-2847-4ef4-a845-def49445f364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4e6014-13a0-4ddc-9d18-fa7defb41240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d46f2e-a99a-40d4-9c19-23da201c62f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b86b8d-d887-46de-b0b4-6ae9b4aaffe0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1611dd7-de84-4cce-bf8f-75e487f3f034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cde38230-bd8d-48b9-be2c-5531b06a657e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2a5d8f-2a19-46f9-908b-837578ce61f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4faddcc-8f26-4d60-9c44-e69036ecca16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11385629-03cc-4a82-859c-f8cc062bec0c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58206501-98fe-43e8-8834-fbca347bc677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e6207b-19d9-4811-a573-c92fcf772534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6b575e-d193-4611-b9e8-d7304e55bfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b81b6c01-caf4-479f-8d39-35e987d9ccf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df55100-0786-466b-a039-ec512f880b6b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474317a6-14f0-4cb2-bf0a-d822d6d6ab6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a7c895-183b-4619-8944-0292a1740a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4299d88f-a389-4ebd-9f42-db86d199b3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2ea943-43e9-4e45-aadd-9e7734776fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b8c4b9-8ec0-4407-8731-9e670bbe5b40",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6b0b12-21f0-43dc-baf0-486d433b8240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07a0318-f68b-4ff7-875d-d845acd916e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54e37e8-7fcf-4236-ac50-9014c352cbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0696135-ddd1-47e7-a929-7d3b6fedaf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c01ab5b-830a-4c4e-9d69-1001519af77f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44711eb-96d3-46dc-9441-c7c4ae562ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6666f4-c0d3-4867-8755-525b5a7c0a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116a8f41-4fc2-4673-a21f-d325437c513a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "96848c53-8287-48a9-854b-2f4ce37e82c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe39975-f7fc-4e42-8283-5076f8f54864",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fe0d1a-fc1c-4c57-9da9-b2927cfe1c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4d1c9b-27ee-4c9f-bdb8-c9f502f8a1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506a07ce-ed15-44e2-b95a-455ce301a496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "88daa6c2-4a24-4a0f-a590-be97955ade06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b719a11-3b7d-47c4-9590-9934885b4d81",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559addd7-595f-4900-9f77-056ec4cf4458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ec8163-cfe9-491b-9ba0-eeec1ca8f592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4432b63-f61e-43c3-8608-9ca7dfa0a801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d471b4a0-d42b-4483-9149-76c5ca794c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f30257-9c36-419a-be4e-416e5f68db56",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544d5817-49ea-4dd8-8c87-5f103ffec8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f5d183-b5b4-4965-aa53-a25ec5cc2561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa53ea6-1d2e-4685-a4a5-4a9ee8a3fa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa72c7b-804e-4d19-9b20-b442ba88cb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2d0e48-cd13-4548-86d5-0a43a61818b6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915b8587-045c-4469-97c0-28a3be32c638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28252836-fffb-4426-8ced-c2afd335ca15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0603a4a4-41de-40b2-9874-350c53372958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5c2f70-38d0-425e-8cde-93ed3e429cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd10c45f-4552-465f-89a2-9b26ea585bae",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5ed830-9ae9-450e-b449-3a8f928120e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c34220-d470-4fd1-b5d5-5e6eb61103c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1db90b9-e54f-49b2-a311-b7f5aac14385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc3e750-8245-40f9-861f-2f5f4f8777de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb4609d-df76-41ed-bb91-1e5b2e14c6f3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381aec93-59ac-491d-afa7-64106cae6899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d674b8-8129-405c-8b96-4a0f184b935c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307b373d-64eb-48fa-9304-c811cc6292b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22a8287d-3c05-4a6f-bbf5-385e45922635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3be2e21-32ba-497d-832f-368aaa97780b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d905edce-04db-44d8-a2bb-637354f4e8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35c80f4-befc-48ad-8513-68ca5134cd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038edf9c-5a87-4b23-a25f-754e2418fa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "835bd042-b3c6-4bdd-b102-80ccc3e251e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ecbf9f-1d71-4423-af06-3a71377aba2b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53ca862-45cd-4b82-be9d-2ecb8945a255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21838ac-2035-4fac-b445-b9164505f12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78186ae-f397-4416-b461-f43584dd9be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdd4c3c-a98f-4518-be74-0f615e447b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e1e69e-6ab4-434b-9f5c-814f6d1ff7f8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffbdaa8-a941-4cba-a839-9a5136726941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a08fb9c-0830-4e4f-868b-f8e47afdf64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9628e97b-968a-4ad5-abed-71689e493591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8854fe8d-e01e-4c67-a216-05f5a92ce2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497831e6-bb99-4fa3-8425-449cab1c9e3b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd740257-3768-4899-86a0-89db161e3d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ed546f-ecdf-47dc-82d5-da22f6652df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3797f7ea-8782-46bc-9e9a-c6b6ebf75d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3be4bc7a-7e5a-4b85-b5aa-5fc6f6775c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db43e8e8-d5d4-4750-9f29-5dbef9f1c413",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23163302-094f-41fc-aade-b38f790fbe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e2be40-106f-40d1-b101-e756a3652118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3248665d-7ba3-4bba-bf92-e5324ff0aacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "425f09c5-3253-4982-9bf9-7bce3194ca7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f97375-e604-4ed7-a153-b0a2b51e0313",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd233ab-7647-4f14-82a5-3f47bf7af794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23dd244-3021-4f6b-a962-c6e73b34e3ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ea2d70-f477-4d5b-a35d-ebfe26a2466d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5d290e-04f5-478c-a3b9-91e663bc1c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb1d3c7-4d0c-4f9b-ac70-055e2473b9a6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a3831f-922c-4f6e-b56f-310d85c3c313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0fd1c1-26f3-463e-9e3e-ec11341b5627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ba1e9e-ef4a-4eb8-a633-f98232f3d1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b10b329-a395-4f88-9cd0-4000d465e68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10368c0-f5ee-4880-9e7d-1b9aa2a1191c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edce7ca-3f61-41e3-90ee-434acc122ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d058c524-f62a-45d9-9f27-a4139f11cd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb44460b-44ca-4803-a021-bdc079cd7661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e283c0f8-ac63-4c1c-93e4-2d63da6d34b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c621be6c-5720-4b85-9cb6-144cae9541d2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba1ebce-cb78-48fa-ae95-5b2f14e7db29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa2d03f-8fc8-4d00-ad53-65dabf5ed8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424358ef-1979-4ddd-afb5-fb436fd7c7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c900c67a-7e37-4879-a8dd-e8d8db20a0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6a77d0-b151-40df-9fc3-8525ec3eaff0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86629d19-8709-4443-ab81-c49812246a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053f0f3a-d23b-4aa3-8d7e-54303630dd7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa29df3-cb94-47e7-ac3f-e69534da5d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0f56aa-f039-416c-b3be-d0cf12a71f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9043f90-b3ee-4dc4-bc18-21a274930a0d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888931d7-5d0f-40c9-a8bb-ed20ff66ce26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf245b48-9ee2-4306-ad39-8c39ddf36ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7f66d3-e16f-4d8e-8484-cbcc789287c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf717664-c869-4ddc-9058-cad9a7a3e5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8026b73d-3a47-440a-a574-5e5d224a4f01",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3191acd7-1157-4662-a713-66089ee182af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a856d43-43f2-42f5-875b-897bee4c743c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024498fe-b5e6-46b7-b075-6efd8a4484fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc096257-9a94-45cb-a917-9c027440c854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30557018-3835-4be3-8f7c-ae8372e44583",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890328c6-df4f-42ae-9b2d-866e444dae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87292871-f1e0-40c8-964d-2eff4b1b4628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a35ad0f-61ac-4628-9cbd-fe88c12a7b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "550d0843-077e-47d8-8a85-c89f2770e7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998c89ca-964d-4919-bc00-3f1af4505acd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ce092b-0f85-4604-9e3c-4caff990bd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0313a7-e1bd-4301-a5a4-1f9e74ce1c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e836c67-7bfd-438f-919b-aa3c34e1aa11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "76212fa8-4be1-4c5d-9981-a51743f0c4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68648b16-7da2-46b0-a140-fcfd6d5cf541",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74eeea92-dca9-4c44-b9ff-ebac6e35b9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae03927-1e51-43b4-a407-656ffc29caae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dc7a9a-a45e-4195-bf2d-423089bde42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d34fca26-ef38-499c-a607-301e770f7b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f45bc24-bb6d-4050-9008-730bb43ac81d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8332427-9f3f-4a3b-a60f-80392fda9d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5f4adc-7eff-4607-8b74-c14d3d2adb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fc36a9-0968-462b-9ad6-4cf2be5bf64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b40b1f-7f7c-489a-a13a-fe464524a3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad675fd-cf15-40c7-bb34-91213d1add2a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acebbfb-e3af-420b-8e73-0c1dd373acdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee7f423-8ce9-4a91-8784-2862a7250c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b00a589-0d0e-4a2b-929f-60c419c5a910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe13caf-489c-4161-bcba-edff8d330300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34839f67-d28d-4060-9861-f9a6928d0639",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8113e6-da93-4e2a-ac7c-8379e5e0566a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4f2b64-5e88-4369-b4de-3486bab7a3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db39c4b-5d6f-4655-ad4b-a70623577042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edc28ad0-01f4-4bd1-abac-620a777b1f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118b02c6-1729-4f3f-b19c-dd3b371a6bdc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cf9d48-bac2-4339-9d8c-a097032537f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16489bbc-8931-42c8-b439-6255e7eea319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c34902-ae59-43f8-8912-4743d0693750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07600e1e-67f5-4abc-974c-64885d4cb9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdeab447-1c68-4b3d-9da5-0563c09cc3d6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31673c8-8760-4646-b98b-4e06be4ae749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff0eb68-2b81-4539-8986-213881594fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf98c35-a364-4365-b161-07726f1cb2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f41e4321-c0b7-4c4d-a37d-3008aefb1fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b7e8ce-4fbf-47c8-952f-ca8843f51fb8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ae5561-3ccf-4845-a9fa-d3b0b98181b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634612c1-8685-4bc3-9dbc-461b29cd81aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0a4508-8dd2-4ab1-a20d-f4f748115f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c67d13e7-9cf5-4b87-a23e-989356ceb2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434ea451-7db9-4241-923c-e3fcf58a08b8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1fd264-2105-4917-b54b-4864304a822e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb82701c-cbfb-4f44-a98a-d9738735a6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d3d30b-1f4e-427e-8758-9e9bebe4e820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "59757382-4249-423e-b9df-c5e3be928c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db1154d-2223-439d-92f7-500737033ea3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c39fad-1f08-43f5-ae8b-302a52ad8b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f396c23b-c26b-4715-a665-f56643ceb50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2e5a63-bd1a-4d8c-9276-71aac6fa2828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "695d2238-f100-471d-9f74-43e65fc446a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb2f4c4-bfd4-473e-8c75-c9242d692dee",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027ee7a2-c68c-44ce-b3ca-ebeddd2192d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f288f75-e649-4479-b2d0-a515994396e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677d5b55-8b66-450b-93d9-dc12805dabf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb62ef88-6c4c-42c1-823e-978d402bc0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19b92aa-3d84-4c34-8916-0fd31ef4974e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfc0295-5500-4f26-8de0-1f13427fb874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c06a431-c546-4790-8e9e-95eb0e1fe92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c401af-059f-4e11-ba1f-4c2113ae71ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f163e434-64f1-4b7f-a73f-3bfe1b9c40d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cdab40-8f8d-4b05-be84-d534da943f2b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8887369b-723f-4cdc-893b-9ab9ae2db90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a63841-eb52-49f0-bd65-8858ebae6137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2411ac2f-9630-46c2-ac64-4d60e1f2ddb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "762de27f-8f68-421a-a033-e34bdb3918cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517710f6-2af1-410d-993d-256684fbddf9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7490a199-ef94-4868-858b-302d68f22d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f02361-6d2f-40d1-8330-43d789a166fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef14fea1-2e07-4388-b15e-e218e05ca521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93ff9f2e-ece9-4371-90f5-5a00d7f31cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a368ad-9d05-4464-87eb-ec41c1136a53",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cc4437-0e09-4021-ac8c-c33f88410077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42d04e8-ec86-4c70-973e-4ee346cc65f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e82e298-6467-4e1e-b8bf-45acc772228e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf93fe0-354d-41f7-82a7-4467038c59d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7132f7-1583-4ecf-9694-84c2d1d6ef4f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f81ca8-11df-4634-80f2-b1fff8364f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651fd7f5-a4a9-4ea3-be60-1d78fd936182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e6d091-39f8-4a67-8a4b-7968a30082cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc516f2-f901-4920-bcab-232953beaad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae9d39e-35cf-4ad0-ba88-d2b8b95361c9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2141fdde-83bc-4bc5-88d9-b2fa73a7d610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6862400-cd78-49e5-95e8-b8def236efc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9916326c-9a41-4259-b312-badd82b30901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c5a7a0-b491-455e-9c5f-815a51a10193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22365581-3488-4142-839e-b154d14c0b74",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fdb7ce-0d92-4705-9b30-b6bb5cbb2c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff46082-f098-47b3-a47b-72620db7b69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7805dd-57ef-417f-a7c3-4eb8ef71890b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd4652b-67f9-4c22-b468-c4aca10f50f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040b5eb1-f30f-4b66-ac4a-6e495e0169fa",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80962e82-c5a2-4285-bd35-17b94b86770c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b688a24d-432c-4572-84a6-8d3a50eba7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a538664-bfba-4995-bb9a-da3939554c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d58c8f1-83fc-47f8-9535-66763491fe2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239e5f58-2b67-44c7-b76f-b0e69ed4c616",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd7df11-84cd-42dc-81d0-534abbf3a18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f625ec-3dc5-493d-a046-06aa91a2497d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46a89d7-d9c5-4685-9703-e96f1266da3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d42370e-9e81-4977-a0c9-9e21d4d6a171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902f4c53-985a-41b0-9ccc-23b318baca1e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201e7313-aed2-4029-bf2e-509070afec55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5243085b-cd52-4681-a128-60e41eec966e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d13c8d-ece0-4868-91a2-0bae4bd498f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0382dd-46b5-4848-b211-818672f64bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9708b6a2-7fff-4ac6-b043-9d9256545a09",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6c366a-899c-476a-b7b0-1669bbe18fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be8927f-12f7-441b-b453-802fd59e4a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fa2991-01d1-4799-b76b-08cb14ea7cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4352cf5-3942-48d4-83f7-81cdee9d580b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caef265-9747-4f51-900c-22c3cf26a294",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3d2b46-92d7-4a0a-b8d9-07b04be16ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423e2ca5-379d-46b1-8f07-37014e722780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c9708d-72d6-4ef4-bb4a-661278e70931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d46a6cab-f209-4fa5-85ab-07861fa69be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab900530-8ac7-4edd-85ce-fbb4e84306d7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17ccb8c-138c-4cf1-a926-a467d3cffe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98f5ce4-dbcd-4171-a88c-0dfe8e5fb02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f6aade-6ddd-491a-a225-5293623bc195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d61b9541-0bd8-4672-be52-5fc38dea25a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1646b672-c962-4c82-bd64-260efbe2b3b2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b51dd0-bd68-4603-bc06-b1c09e770fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11857b4-764c-4883-8ef0-39244266e3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b297b30-2720-4e8f-99a0-25dd7c5b9fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9fd4f27-86f9-43c8-abc8-5ff7099f87ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88b5b50-1ab0-4bf5-9ab0-b8f7f9885f59",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03c2eb7-6045-4364-8990-b77d8f7992a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2229f26-d6e2-4682-812d-38005880cc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dd9919-017c-4be7-a25a-cf4527dc735a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01b2c347-3c43-431c-bf9c-60d9bcb5c120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08cc829-16de-4632-bc1f-f49239434c32",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ce1841-6270-4482-9c30-6829934645e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b399b11-b66b-4297-bd4b-8dbe60e39c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4d1963-0633-4038-b017-65c88b27c327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e65b086a-b9be-49f6-9d08-bed125bcc1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7574dcd8-1b40-45e1-9c73-fa0ccd43f1a9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13118a1-5362-409d-a52b-7636ea6d6cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b000c311-a8d9-4600-984a-44ea38dd8f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d9384f-f703-43b5-a8ce-87364d97457a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15d54f70-0c43-45c4-89e9-cde2106ff42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33146c1-90c3-4a14-93a7-2af8bd3ad980",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74edccd8-4ebe-47c7-a3cc-afdecdf196db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81e403b-18e6-4051-ac33-21791537ed35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a658f7-1e43-45cf-90f2-d811c1a8e5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f53c8a4-adf9-459f-8f74-84db5030afb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51f7fce-e243-4f8f-8822-0f0f88fd293e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3e1b40-6907-4fe8-a092-5b20edce4b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8f4ba3-b2e4-42ea-a7bc-b5c978440497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664236d9-59e3-4c30-aa70-8d6f009a17a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddf8ad0-76dd-4d2f-869d-78eb1922e483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af68a6bf-99fb-47b0-95ec-7867e4b5f782",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1dfc74-3c08-4389-b96c-42cc52176bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a6bdc3-9f7b-4397-849a-40f0f096da3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903143b6-f280-4465-9858-b8ba632387d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dec87dc1-837e-4e64-bffb-9613101775df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb8ecc3-23b0-4dce-9bca-f7447b855dfc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a668e9-7ee0-4c1c-98e6-3e5575d9ad10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47e0044-b3cc-4d16-a10b-556a23ebf326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42468206-4a1e-4a92-b335-50db1362909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a073d00-5f1a-4cad-8efc-6051f4976de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccd6270-f2c8-4cd4-869c-0a8f591bcf9c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63824a9-235c-43ff-a7df-22cd99bf80f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "463f9b45-0404-4248-9cde-7a4bd679f665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf13442-9dbf-496e-9cd9-25c802999a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3739b2-282b-478e-8da8-20d36e38d3a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7fde208a-192f-4252-ac4c-16a713d0ae30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a30d56f1-8ed0-4533-b851-ff957da7deec",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9496ac2a-f1dd-4f76-af20-30e4c177df4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6f92c17-4191-416f-a8e4-d8325caf34ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5493f1a1-6935-43f8-8464-6fefcb876cae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4026b2c-9c44-44cb-ac73-907092a8eb47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecf64fed-e1ad-45f1-aeb0-a3572829b82f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "853f04b7-3c69-4bd2-b756-8f7931d272fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebf2a469-b02c-43a4-880e-a64da6bef7ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3dc4d36-9f29-4ac5-93d0-30199482cf78"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0f54eea-c4bf-4f4e-845b-8fd4e5c81d33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "656bbd70-a0d9-4683-bb3e-ed99336d12e9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a320096-6538-49f5-a3f3-833a49cb8cb7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3561c92b-2bc5-44b8-9c77-444aa152de92"
                }
              }
            ]
          },
          {
            "id": "a061b6fa-6553-4e0a-8ce3-d755c021907d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6d49725-73d7-4977-9a1c-edc4daa35fd2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a42c130-3543-44b6-8eff-bdbc78d15815",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7eef1a06-1731-420a-8dae-4256f010271c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e90e96c-2200-48c0-b9c2-d00f316770d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cc04025-2fee-4afa-9e87-bed713d43bf4"
                    }
                  }
                ]
              },
              {
                "id": "937ca500-1bec-4522-8420-797c837ac6bc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff02d61c-d590-4c5f-9911-c9f11fd1504a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a40a1f92-4582-4a69-9cab-e7ff4cbb0670"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdd3cade-836f-4337-99e9-610c7efa95bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4c5b029-287a-4ca9-8f7e-e1bb6b0efa09"
                    }
                  }
                ]
              },
              {
                "id": "8e825e15-1f51-4f7a-925c-33d0456ede32",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a39b25d8-3ef1-46af-8288-a25d8c835780",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "445b43aa-71ed-4f6d-9e23-f04d22412053"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47054f77-69b7-42ed-ab8b-cc8fdb8276f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fedf5068-b60d-4ea6-ab42-4d9c0c072fe4"
                    }
                  }
                ]
              },
              {
                "id": "edcf1897-29d6-459d-9951-b04595eef366",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a77e073-7608-489b-a180-8e069c0d6fc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4997e0af-ea03-45c8-b781-ba07bc3a01dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e82815d-9f5a-49c4-995f-3f7ad34e3948",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "83f504be-2f06-4955-b1c7-80cb9828b7c4"
                    }
                  }
                ]
              },
              {
                "id": "0d6b751f-2e1d-4808-a939-ae1607469daf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57fbf237-d157-426f-83a7-8ab1016bf8de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f632c87a-8361-4bd6-b337-b9de395a69ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaedc61e-5082-4bdd-97b9-2f1113fc97d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "716f09e6-b23f-49f4-9ff5-f0403f760abb"
                    }
                  }
                ]
              },
              {
                "id": "7db6bb17-65ec-4cb9-8a4a-6a557174d1e6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41f5498f-2403-4758-a7fd-840925a4857f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4812320-8f2d-452e-89a3-7a2cb472d38d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4be95eb9-4307-4ead-a38c-44bc0cc18910",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "806ee262-7fac-4b3d-b76a-0da0913c8cda"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "070a1b7f-3acf-4fea-b477-eafd6fe98a7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4dcb6012-6860-49c7-b1dd-5fd2f77abfa2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da866f44-09d4-436d-a156-685b242cf7ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2754ea5e-5658-4135-bc09-af1121f0d895"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "144a12cb-1896-4576-a9f7-af94e893be5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9403ebd4-9543-4dcd-a833-4c6aaf376cf7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba8d4055-5043-4f69-8920-ab3029a1caa5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0dd83901-cd52-49ad-a1c6-e7dce9920b05"
            }
          }
        ]
      },
      {
        "id": "4a4e64e4-c3ea-4fa0-9965-bf045e91b7a3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "25b8a5a9-262a-4c6c-b3be-2b7655e6e4b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2275bf13-62a0-41b0-9068-e3a67bce07ac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fb8c9426-2bb2-43eb-8aef-0579abf6a5ad",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af436dd5-c984-416d-83c4-005894f2bc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30154f7-40c6-48ab-ba34-befcff5a50fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b81910b-867d-41d6-b79d-05354d47683d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ae5f4f-ec82-456f-884e-6bea4bc09ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5584de4c-3b16-49da-81b1-9ed0210a11a8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda2baa1-ad53-4669-b0b9-841de9bbc475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ee762e-b5e0-47e8-bc94-c93ae09bda33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e9e405-28f8-4067-9389-792a0fa48f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "076e2d04-b5f2-487c-9e08-24f2f82d855d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7f363f-098b-4c72-829e-abe6e6dc331d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97450171-232e-425e-b004-497c3ef7ccbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c401ff3-a4a5-4dac-ad52-d7db9398c995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e9356c-1d02-43ec-bee9-59c93403348f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc76fe5-0e37-4c96-92c0-4fd37825f012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d85df2d-0844-430f-a347-41a683719c9f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2a59f4-a019-4022-b3cb-a43e709bc868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8334e65-1fcf-463b-980f-1dbe1aaf853d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71261d0-d6a0-4ab9-bb87-ba1fa9b04dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecb4144-783f-4c1e-90c3-5e56ba5399f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b45519-e8b2-41f2-b54d-2f251e1c0d71",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194d91e6-1a3e-4e37-b978-f5f6a22498b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02399c92-d3d0-474f-9cd7-f820acae7f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b7853d-9934-4be8-b78c-3eb3e023fba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5535571-32c5-46d9-be8e-dc47bc95fa3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e007a7-09aa-4d9a-af2a-f5cef53f8b9e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff7af94-eef6-4e06-b5c0-8475e3409279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bc775c-c507-4a50-bd7a-7dd19822ed50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e3b488-a599-42cc-8f5e-ce7fc87821bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6c8819-8da1-4e96-9913-121dced980cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd8248e-f938-44b6-bb58-6a845c1587c9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f9eb57-eaf6-4665-8b67-6af5b1e37759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51252c6-ffc3-4cdd-b361-ab59c28bacfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6f1f80-59a3-4e33-a713-c90724327d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "db9f50a5-d71a-4467-8aed-1b42bddc195d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4a1dd1-8145-432e-b933-638f834ae803",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61111713-b405-4110-a779-1556da7704da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87c83ed-7cb9-4b59-be64-10b2e9026e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0cd610-7ffb-4f0a-981e-126d977e6916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4db459ea-692f-4a47-bd05-e1876cbb1763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7398b9bc-5922-4082-a809-9bda7c1d2d57",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d2c8f4-b369-4618-8067-fef27d6cf63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91772935-df34-4a90-8d19-2d2556f95b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd7b084-b0d0-4410-96d3-18f002aa7d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db7e9d5c-8572-444d-aa37-bdd0a9fa3777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6713d3-7bf1-4daa-b4d5-5776d2e90747",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28853345-d522-4ec7-b267-dca1f52a506a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ac89b1-3864-4ee5-8ef2-8ad3d4c97d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7484ec96-e16d-47db-a682-bcd7113b683d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda22225-c28b-49fb-8e49-51113176607f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd3f584-554c-442b-b7a7-20b048e41dd9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb7e1cc-c53f-40b1-a6c9-8900897d7b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9e1955-4b12-46fe-9040-067dd14198ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba2614a-891a-4def-a960-e1870378a05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f6987bcc-28fb-4bd2-bd4f-8e1525685c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eb3452-a95b-41ab-a093-2ca85a669cee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3b9f6e-4b8e-423e-af7e-34e0a765712f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafaacff-856c-4526-961e-8b39348c5e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595bf5e4-b955-4ca6-82b8-fae5c5431547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eea6ee00-1e23-416a-a3fa-305ec56c6a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bf6c7a-d88f-478a-bf70-225b987105de",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9e46e0-ed75-4c10-93ce-604b98bb0947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c700b162-54b7-491d-ba6d-7de58e507ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6d8018-5430-4cc4-9423-3b03f7734a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf29218-b364-49f6-b52a-df512782a3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25b6e3f-19f0-4b1b-8139-7fda0f44db39",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4fa6b6-c04a-4779-843c-00ed827c91c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59bf65a-525a-412c-9ca6-e23af0b7f115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d80d2ae-816f-4ce9-9eaf-9fe2059f216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e2f216-05b5-4cf7-899b-297980e053d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a02f79-2069-4a25-b187-ed947f6585ca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6273cfcf-05fd-4c00-bc69-df14efcee3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdb5bcf-d124-4444-82c6-c16a7a440b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41d143e-cf94-4c06-9bb9-bcbb5c25e930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "00bafb44-ff5a-4b11-8c75-733221af264b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5848fc46-5157-45f2-9939-8f0bfdf57e69",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845c9bda-85fb-4c11-996f-e699e2565cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2acc8d-2f0a-4d1f-8b29-b085bd0fcafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d91f38-c88c-4d0d-a7ed-57d05f6a0129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1e10ba-a4a7-406f-bc59-291dfdf015cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f764a0f-aa7e-4951-8c85-4c6cdd9b4434",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0502242a-5b6b-4c39-bf43-d2fc3f409984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acf0a0a-3fb3-4b77-a4d6-47cad014c929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e474fc8-c5fc-4218-a05c-3ceb149b213b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "91dbb2d1-e703-483b-8f7c-9dca89e0ec37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e673af-61bb-42fd-995c-2a0ccbb119fa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690302b8-b297-4d7f-82fc-6c949f3f0969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df85fd3-00db-46d9-8d8b-ee9392b10b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748a705d-c8aa-48d2-ba6c-19b946a36885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65ae5d40-d2c4-42b8-bb59-cec12879b17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6035a7a-7bea-4bd4-963c-d70f78ad873d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39daa10b-77aa-4bed-b46d-015f118c1043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2e0543-7d7a-43a3-905d-7243637395c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e00e89e-67c7-4598-ba1b-2305610b361a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8af688-a097-4c75-890e-0caf18c6950e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75da158b-8d49-4402-ab71-6c4c7738f43f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21836416-5107-47fb-b2d1-6ada7a71d23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa18005e-8988-45ed-b096-41d6984c0c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b402efa9-c8b1-4c3b-8dc2-14696bbf2dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c910d0c8-8b32-4ca9-b523-5c028dd40378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b05dab-6da4-479a-8248-e6e34c66c6f8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e09015-f63d-468f-a456-012163f472d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15aa93a6-8adb-449e-a90f-73741031d448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3a8e01-261b-4492-9d98-a94df4569aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "514fa0ff-c6ef-46e3-ac2a-a1bd6a9cad7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15994ed-1a57-467e-a3d3-2f9e04e429fd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7c6c1b-d3fa-4bdf-9c3b-f47fae2750a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c71275-6de8-44c4-9d4c-6604392fd3e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5930bb3-79b4-463a-8997-29508ad41d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e000320d-6915-46ff-b318-a1dc0216724c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73736b23-6cda-4bb7-a016-cf946f51175c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaebe88-6189-4972-926c-6f93f2922b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11a3350-dd81-4e5e-8029-5a16c238f072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f048186-2f7e-4901-b227-acecf3cb2bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55d7a15e-f51e-403e-8c40-eb143bc74b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b962c719-9da2-43f6-88f9-ed044a098a1a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0d8edf-16b5-4753-ad63-370315a3d978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4189679-6cee-4c2d-b7b9-bebd5eefeaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9d3aaa-4332-4521-9205-64bf88176b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "256c2a24-ae07-41dd-b787-42bc3d56f864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675b474c-047e-4338-831a-016dd0cc5333",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005cda19-58e9-4587-a3f0-40f8481f7437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77fd968d-8e82-4e2a-906d-d2e3aa2c60aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df674503-547a-49d8-8612-26d2f3f30bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37acce9c-ef04-423e-a5a3-684fdbeafe60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd2f240-aa76-4d03-9002-2843f42ecb9e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f467c7-4043-4d6e-97c3-f8be839e6abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced5f3f1-bcb7-4d9c-a398-603e27bb6bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ba2060-dad2-41fb-831a-f4fece2f3797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0db8a318-e664-407d-83b9-aef02ad27534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce095ce-e553-4b0a-8822-3fd592db5a50",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec8b620-e1b6-4db9-82f2-56834ea5e876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dd0c98-312f-4ea3-a0a1-368eb6d643a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269b7dc6-0765-4397-a6f0-13030d10cdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d2feda-deb1-404e-a1ae-602e6b91c98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a503b19-0105-4017-8d09-9979e24a4527",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44597857-e9fb-4d33-b995-01ec94fecdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b4a91b-b9b4-40c0-8d39-48b73654dbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e0c0e2-0758-491f-a64c-b03c19382bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2936091b-a744-4718-a9e6-cbeb6a49c8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10ff175-3311-427f-9412-720ce7c829ad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af5d706-31b6-4319-a136-8be4df9bc525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39c0f38-312a-4d22-9002-f0ba34fd93c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e79958-d5e5-43b2-9cee-c1c3a52243f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e82d3f7-7feb-4a69-a368-4f22f525649a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ca652f-d597-4b28-9b53-ffa6a4fb1ebb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3112ba76-e65d-4493-a99b-c4b35420e71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b24c956-d834-4ce5-ac7b-cee6e46c00ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed68292a-1660-442e-92b8-65b5fbde506c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6836bfef-242a-4a1d-aa7e-92b590180ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9ca0f0-e194-4a6b-a593-01f6a7897c0d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbebf707-cfaa-49a7-886c-f99eea81df10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53db50b-ec85-4606-8f68-d4a6cc36f710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c767dec0-1c70-46d8-b3d4-f84418000649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc25b021-2716-47cb-b964-e866d37b5538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d527567f-f9e0-4f94-89a9-ebb71c4a541d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badc1e03-9e21-48bd-bf42-076cca647af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9bb698-4ce3-47eb-94a4-4d3e22a72b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47389b7f-e7ca-4a81-96d7-a266d1bf85b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10221ae0-6066-4e5e-a3a4-d911fa72db50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3ee87ce-8096-4550-a87a-7e7145821bc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4988bfe6-814c-4257-b94d-1751b50f7624",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbd1a74-d263-4000-a28e-01813c61b3ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2a7248-fe00-4378-bc28-c9b5a7dc2e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bc37b0-4c4c-4571-8f18-ede637aceca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c166fa97-f059-451e-a239-c25fa309db88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bf4124c-0f57-4cdd-95f1-73bea221ab31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf9e66dd-33c1-40ce-8c73-8f7664b47475"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b94177b-7c7c-4107-81be-862ee17fd1e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b7ceec4-fc51-4da9-970b-46fa4ccd10f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cf10db7-4e20-48d9-97bb-7b5c91892fee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "01ce1222-f308-4f65-96b8-de29d112ea69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a04973b-f213-4325-a79c-c62c1e79a200",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9081ca1-0228-4025-a54a-cbd139c53285"
            }
          }
        ]
      },
      {
        "id": "08c0ae53-45b9-477e-9181-16f7a195b112",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f1bc2f6e-8cfa-45b1-82a9-7114e0eb182a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cee91d74-2ffc-46f7-a029-49633ce16185",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "31404744-0504-43a4-92d0-d3acc5e88034",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc518c5-b455-4c86-a67a-77df07c1b4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267965cf-7e52-4e2c-b1c8-ffa2e9774e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f179117c-d125-4ffd-9588-84fb486bf2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b73236-254e-4a0d-8903-418a02c6badc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b951ce1-5369-4851-86f8-f0f3805f99d9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd7125c-438a-4221-a434-4b543d52f70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4847a55c-c8d6-4281-85e6-7f63d3c4163e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2711347a-42e2-4f83-95e1-7ca947df28a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f46893e9-f670-4131-9f2a-83c7064f6d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbc5c1c-531a-4c71-9baa-e045e4bdf9cc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7983e8-c899-4f2e-bb7e-8de9dc9ff022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954f7de8-e331-4825-8d53-ead0baf57e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1df162b-f13a-4788-bff0-e67153b47196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebeef1b7-271a-4e17-9892-efee0dde67bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc37307-f652-41dd-82ad-7eba1789ed89",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade2dd7c-7125-4b64-9aa6-8ab0002e948e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77773317-e38c-4beb-ab02-4fef2c060617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b125d935-f709-4d76-9d88-d99ad59351cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86362813-ec41-4d75-8dc4-b291884990b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba510030-fabf-4e6b-932d-39c0ebfc27d3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c85e902-e068-4130-a926-066231a9d2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16b800f-872a-4b12-a451-56ec4bd8d9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cc8937-0452-4897-b9e8-a66f961a7ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ecc0337-edf1-4aaf-8219-2c1ef67a20f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd9829a-0770-48ff-b959-e0b2730cdf0c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7128a1fc-9b03-42f5-8d0f-a3f27e5e9649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849a2b44-ac26-4f60-9585-7f46db977f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffb416c-0b8e-49d6-a9d7-b455931bd96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71ec2613-66af-4e51-b8d1-9b7c68e18b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cc52c2-f8ac-42cd-b249-dbdda53c319c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635aafdb-6d0d-4eab-8ecf-0633bb34c4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da63c5f-b9cb-45e0-8393-37eedd78842e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86389af-d584-4826-ba9b-25541d64a5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6f4a04-c1f3-4999-a594-23ea963040f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a5b8b7-d1be-4e71-ad64-1f36580af0fa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73329a22-814f-4149-9d5e-ddbd1e62f8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b4010b-9e80-4cb8-84c2-603509419fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c915bf-4911-4366-abce-7b4beb4193c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca468f37-bbf0-49ea-9cb1-c0dccb8c57ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bdfb0d-2c66-4cfb-a2e9-ad0d2a765684",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533b7e6a-248f-4613-9003-ab5b61a3d83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca58ba1-1273-406b-b653-fc6960f705d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f97109b-db04-4361-9298-4df1e53ae8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4de67e-d340-4e4b-ac66-c7c4a4b8ee85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53121272-4589-4501-8f95-92366bc266a7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3a8aee-e3ca-4697-9a05-7f15a6b8274e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34561216-a0dc-498d-a084-780259d17d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808ac3eb-6e82-4cce-bfba-19a0382644b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "254989a2-2c55-4fc1-9e0a-076b305603fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4563c52-4f08-4adf-ad2f-5eb9d0fd7c54",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3e1d3f-fc8f-46d3-a189-2a92102436ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d285709f-84ef-4414-b3fa-52c0eb74d8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5b7874-0623-450d-8950-3e085e70533d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "54a75099-e199-4b09-9e33-e58b49c96d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc96016-07b0-4b97-9c65-f72e5e78b166",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92d680d-c2f8-4dfb-bcab-170d88a9567e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda94a95-3010-4f20-8777-19dabc40be1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d06ae87-41fc-455c-b19e-9214bcc58034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75341435-0898-4a12-9fb1-cf8fdbf3870c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369f45ed-1be6-4b22-9a98-472a04ef82b3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c660b5f-dec5-40fd-a020-420c24ddae5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd94fbd-3a07-4cbb-ba4f-d9e375150a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d41c4c2-be0d-4e1a-8609-9348308537c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c038fc17-4284-433a-889e-c827d50a66cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c55a0a7-432e-4957-9a5b-ca035e0783d9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31893c77-1155-4f2d-8e06-1e90f540fa2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05108cb0-b088-4ac8-9bfe-bd5f1fd0e282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69ad8e2-dae8-4aed-8947-059108fffa1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6ea452-102a-4119-bcc6-b2ef3883f9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5663dff9-7d9a-4e36-b621-31b4b18bf491",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5ab1c6-7b53-4154-b300-f074b1868fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903832ea-2d35-4fe0-a5c7-9bebc23d6358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90aa19fa-9926-4c3c-b4d4-5648d09529fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b8b412-6b74-488e-98e4-4b0da08c96ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1535abc3-5c3c-4fdc-9ef6-b6a2e3547ab1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d872850-9859-453c-9586-1558b82c038f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a19c520-b96a-4c69-a313-78991beec258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964590bd-1458-4465-bb99-c99019fcab40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "80410517-7569-497d-b42d-a4adeed18286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a13e35-5cb6-4528-a6a9-3cc727e6daae",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629e39ed-9c5d-481f-8c8a-03eec43ea173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065540e9-4226-4f27-bcea-48e3612c313b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fdf0e6-50d7-4fdd-ab19-d50fd0949a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9789264-45a3-4c59-be20-00e36631bfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0c1398-2b3a-4fe7-83c7-22528b38e389",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeaf46aa-a52b-4a3b-b5b5-53d4bef4799d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c385ced6-820b-49c5-89bc-bd157314b00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ee0854-7d6a-4962-bcc3-a3e1bddc7a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdf80d8-7c50-4a63-a3eb-3d2d397310f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee831da-0a08-4f88-aecb-bef10fab7ec9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b797ed96-5ab4-45c1-8223-1ca417bb8c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d363adf1-3eca-4877-b57d-9effa188896a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1f4e65-292a-4c17-8da7-ba6342be8474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eab50094-e298-4297-8ac2-ad98bf1168bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b0871e-be29-4134-a393-55cb46736db9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c299d60c-92d7-44ee-a3ee-cd6f1a055cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811935b8-5ade-466c-89be-0695485a1508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e704961-8239-48c9-9b5f-cb041aad21ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4572ff-a3a8-4d86-aefe-df0a36e7c33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e6555e-636d-47dc-9704-6a97617da7f0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61fd3d1-f626-4f91-96aa-5ca4cc62a219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21da188-e585-46e6-882c-81f8bca28fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacc2fbc-472a-4b5b-9387-0c1520c806e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a560cc9-4317-4dba-9556-a6219ad6ad43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c620ec38-83d4-4983-85d6-b1820786e913",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f4931f-9d98-4b6a-8fe6-0937b2a067d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df2662a-8249-4478-b760-4bccfe88037c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77486231-4b6c-4a77-8dc8-60f970444d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3128a31-7b42-4622-a8a4-64c62e0b9ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bae5b3-a4ce-45a0-ad07-62667e525d60",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594cb8c5-af99-44bd-b140-644561790cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994889e0-dfe2-45cb-ab1d-0f30abef40f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf000e7e-bfce-4f72-817f-a94910b95e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05884120-a3d0-43b9-9f39-bd7cceb2c04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54e707c-6964-4e90-be9d-f7d2d56cbe1d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c58c2c-cb5e-437c-a279-514184c5d76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e800ad7-336b-4bcf-8d4e-4ccdbe8ddc0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b6b476-1aa5-42d8-a90d-373e01e3c8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fce886de-9523-4a25-8815-1253a298b633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e06a080-7d99-4c4c-b9a9-856a4c587e0e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d41a97-6547-46d7-ab25-0721ef248e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7306ac82-e52a-44fa-864d-8d9bce04a138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c00e35-3957-4af9-a19f-3dbc75bd1cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "626110bb-e43d-47f9-b410-e1ef98e29d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53eda90-c102-476b-a521-0dadb8e8bf06",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96336c13-4afb-4691-9380-92975e739bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396e19a0-f624-42d5-b7a1-9c6b5ae60a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace64a86-97dd-401c-8d61-266a858f98b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "071781e9-4497-4ead-a264-824c887d12b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f964966f-00b9-4474-8636-05e591c66a5a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39612bfb-6618-4cbc-a8a1-c5c3e1862744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e787d5fb-1f95-4304-8e42-670cdd41d5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03351b2f-053f-4933-95b1-a8a80c8eb2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07730667-d966-49a6-b578-bdb209a99580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d524c9c-ac12-4aa3-b37c-bd9cc216f85f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b49a1ab-a153-466e-94e3-f15b757a653c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af1ff61-dd04-4b73-9a51-c08cce3c299c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d8d012-b53a-4243-b849-9343df6b4cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53bb898b-b371-4556-bc70-7b9de7658711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c48181-1f70-4e3b-b324-91b5e196c3c3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3c4c18-f340-4ae1-8f3b-42045f094d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f79677-3acb-41f7-a4d1-cd52d84572b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3456a4-4b9e-461e-afa3-e870522a4ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8832fd8a-9b09-406c-af9e-cd3c15409aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c454c74-63e1-46a4-a328-2f4c62bee4f1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665fe71b-c43b-49f2-9422-441a7a14caba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13095a4c-bd39-4d4a-94ab-7d9809661463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea4e205-266a-4c1c-8bb7-cf3c7f79876d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa21784-5ecc-4f8a-b1c1-e8b95657ca9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1394ee-13ab-438a-a983-6c6a2889efed",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bd4d6b-bde1-4c92-86ff-43b5699cccea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46791934-b9b9-429b-9e0c-e9df12d0a966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8f85ce-a91c-460a-a56c-29afe68b485d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b13ee373-64e7-4e94-a37d-f9c9927f0720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb89e079-5b2a-4aac-a46b-cc946c77d5c8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6eed5a-d10c-4a78-873b-31cd14cc1f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f69deb3-e284-400e-930c-9aa20bb49832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51606ff5-ce0f-472c-8b4c-9b51369e47ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e459d7d7-8bf0-442c-bedd-35f1a136daaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9d0089-0de3-4669-9f2a-172895b4cfaa",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee1218d-bbb5-4314-84d1-cd093454d20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce161c4a-179e-4767-804f-a08f994d57e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401baf5c-fa49-4fbf-bb3b-d3f309a5d5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3dc4ced-78ff-4040-8852-5a459004cf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6fc9c3-dd6b-4be3-91e9-fc2f331caa5d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e61d3a4-6ee5-45f2-88b9-77782d85ebe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4fd820-0179-4887-bec5-256ea87f231e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2862a0c8-a9ca-48d3-85ea-3763fccc3fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b254da-9eea-4226-a158-c54c09ba1bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ad1778-319f-479d-8fd5-25a6d917334e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5db9277-e44f-42c3-a11b-64902e68f5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7475772f-b734-45cd-ae93-95405374f2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef66cda-dbb9-47e0-acef-94d2581b98e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe31ef7a-51fa-4ee2-bbb9-a6e13e0bc49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9d3978-57d0-455f-bfbf-3f7b8f257cb9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1316dc-0797-4a86-b57d-a32d6b3dd9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70e061d-92ff-4045-aac7-265e0f75d066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903db5d2-5789-48a4-bcb7-bb1f1f0e53d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c89a954b-eeb0-4adc-9932-8e9572956792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418b4f62-86f6-40a9-8845-b4bbf3f9b011",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4c6109-4cc8-4e19-94d1-c3ad900c8430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bdb653-b7c6-4275-892c-9e5b20532553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abed089a-104e-4fcd-a41d-ffd5d6b33ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4751b8-b707-49a9-a140-2a6e085e0493"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a1a795dc-06d5-4a9e-adcc-5fc827e6d87e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a25e8dac-e21a-4960-a86b-2b979167c60d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2808d665-8f32-4804-addd-461bfc498dcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7243694f-feee-4209-8b12-7e1f43aa1749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb44203-ccd4-4a0f-80e2-5d89311c464d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "400dc86a-72f3-42c3-ad29-a49e0b160fea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d59f210c-75c9-4b92-b9cf-1839c43243e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f6bd47f-fd24-46e3-bc31-572659f34642"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35ce2679-7d7a-41a0-b10a-07116e10a142",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74dcd977-3bc0-4bb1-b982-52c4b63e3619"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "386f2515-7d46-46a0-b3d7-51a92b704de5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "17c1b217-350e-4422-973e-a868f52351c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8010ba42-c306-4fe7-80e2-59ff0b622c09",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd651b07-ba02-44e6-a512-36a6ac2163c2"
            }
          }
        ]
      },
      {
        "id": "1b752e51-cde8-43c0-8be3-bfd3b02244e6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7f97b6c2-f48c-48ba-83e8-65b53988d49e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f3a9474-6aee-4a47-aace-581c8b05008e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1cc3a67c-bfca-435e-befa-3e8cb99b475c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6640c5-a964-4ec0-b028-c390e03f962e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10dae713-c2ef-482d-82a5-95f68fd348f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84ceb16-ad67-4878-9af7-01f3dddf3d58",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555c14d8-edbf-4d67-8e50-aa5ed1c2dbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54063e8a-fa70-4c08-8c71-c0d56b1923ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b259fc0e-adf6-41de-9460-7e82e32fd5bc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e740c60-6723-4f20-8309-b71d0690f37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7739eda-fb6b-4cc5-a542-7c0e18865a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2baba0-c2d3-4245-b888-38122142e525",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efce3e4-107e-44f3-98f0-792697f289b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50464394-924f-4969-8ef4-af299d959991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cfc512-0e1a-4650-9a24-e378e77dfb25",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab8cc91-1269-4d1d-a04f-806faa513568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3981f91f-78a0-4bbc-84c8-cd4f11b57591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c334604-83b8-43ad-9ac4-c23157fa4cff",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329d8188-a36e-4772-a2c6-2f3f622b6b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2ce1f5-29b6-4747-8ffd-fe89cca9d110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421df08a-5eb7-469d-84b7-00b7f72b8cea",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88089865-382c-40aa-809d-a6a44fd00b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7b76a6-328c-469b-af35-71b97e57884e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ef8292-13eb-40bd-9cd5-368ab6b61ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e36bc1-33e8-4363-ad64-148d0e360edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2159d7-8ecd-4f90-8ca7-0e73abe8fc4f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d94b0f9-ceac-4bb6-bea7-7a05bfac35c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01aaf4eb-f3e2-486c-a107-7b23209eeeeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "760e168b-3ec3-4349-a356-db6782226b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc24d1c-bdec-4e79-8647-c979ba990402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91a0ec4-8659-4446-8530-445176b69ab4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946bb161-b2f8-4f69-bb00-8d68873ff395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0a8adc9-95e5-4bbf-ad07-6b898755539b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5613bd67-7956-48d7-a2e5-d36e973ed5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45b2d07-7891-4632-aa80-2360f4ed5a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c872e8cc-df17-4345-b89a-23e065f7e589",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17127a3-29b6-4641-9d27-706015993c62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac0a0ab6-3650-455d-98f0-808332fd6b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55a8654-4bd2-4b41-9fe5-e28608f05763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180bc043-0430-4906-9b94-cf7de6dd3bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dbfe6c-55a7-48b1-8b6d-f39127a06f65",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d54e04e-434e-40f9-959a-884dfee14ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe410ed-663d-4ca5-980e-6a7e945aee7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37c4bba-5de3-4543-b9b8-1d2e53c9336a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a100bc09-62fb-4bc1-bcfe-27e1dd4499b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc2dc3e-294c-4658-989c-7dc863a89462",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32139d70-c453-42bd-a8cf-03fe8c339374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96aa7eb6-6d55-4929-963f-7b6f6e0e08b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f07828-166d-4e5f-addb-4d16627defb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6a7d9b-4884-45dd-a18a-8b5d9313789f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340883d6-b851-4b3d-aa0c-31a0dd9ebbe2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc00d7c-0182-4dc5-9cec-fc58a24a009a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63caf11c-2fad-45a5-8ed5-4102995329bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553fc3c6-232f-4d6e-be09-83f7fe682ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840d081d-5772-4e1c-93b4-b31c4c94c0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3001c6-7af8-428c-b12d-c45108f50351",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c537cb-e9a6-4f0d-acd9-89676d75d88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da83f795-f0a7-4704-8c22-bbd2f58b804d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbbb880-c5f3-4a35-8c61-4d57f6722253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5674ad-4e87-4d3b-b480-7a70ed83ae26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b21c74-931d-423b-907c-88293fead290",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb9cbed-c1cf-42dc-ad25-71438032d7a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b814aa58-876d-489b-94b2-a22a7aa2eee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5fe868-0a96-49ef-93ea-99ed8f6d58c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2fca0d-394c-40db-8498-3e6b11672bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7392d4a8-ba3b-4cb1-b94b-babf0dbb66b2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac803e1f-d534-4fcc-830d-359829d062be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a02f6c-0dd2-40fc-8b5f-a3f43bc3fda1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ca708a-3e01-4334-af99-69d4b6cb6fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed20cd1-fe11-43ad-89a4-0e0fb2dabf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a0a07d-b49d-4a30-97fe-490a792d03fa",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad013ba-d4ac-451f-a223-4db219f82ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5353caa9-5e50-4485-8472-3fbfe1919dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2bfaa3-4b8f-4536-a996-4c2e7e25a89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d64ec7-32fe-48a9-9d40-c2e8986b5e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26a6bf0-674d-46d1-af66-794c1dfbb3e2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a1528f-8716-45a0-971a-25bf56846beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83942e54-a8ce-401a-86a7-10eae0fd0cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59439b0-0309-4a80-b741-a088ca90e484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1d00ba-bddc-4fbc-8ae9-78392814c65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ff3516-23fe-43f3-8450-722a1ff03aa6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4850d4f-03d3-4d5f-a560-ba659717c3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924c754f-6671-4c36-bf07-b6ef654dc54f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99da8623-a849-436c-b724-72671cd8834d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681259d7-405b-4791-8742-9686652821a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7059ba8-25f3-43f8-b33e-6e77ee882901",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a899f469-d0fc-4a63-b411-8219b599388a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa34ea7-7314-43f6-88b0-b5120672c8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c114e61d-3fb5-41ac-b58c-7ac6df89810b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e4ee10-2f39-415c-90ef-38d54552af78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd175a0-270b-4ecc-9784-367c2357b854",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea17f3c2-3634-48f4-b728-ed335386420e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df43f5f2-bf51-4ed9-b8fa-248b0a39b6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed916bd-8e3a-4c4f-a32d-02ac8e94211e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71265d3a-eb68-4a80-b7d8-b09580bb14b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a2e8f7-906b-4e79-baed-0df0538987e2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df79f5f3-d98a-4aec-97da-a08b4e78ced2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc472ac-9a73-4a9e-ac4a-91e5d8644466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83befe3-c30d-4d01-bb93-df777cf9f348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d70ac9-3b67-4976-9ada-fdf71b1abf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6526e327-97e5-40c8-a46a-46ee0b567ca5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ab0599-2d53-45c8-a749-c072624e472e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6906b993-e668-44c1-9e42-01a095825d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f961bd4d-b7f6-4c28-9105-5b2427c18abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c674581-f666-479f-b3d7-f41e32c9bcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d24130-e03c-49e4-b0ad-e51a8f2e3214",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35e56e4-acc5-4a03-9b09-cfb763594229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "130c4f03-3c21-4192-a2e5-75d9096574b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4ffa68-db4d-4ab4-a3bc-8f4adfbc71e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f5cd9a-8968-43e7-b0a8-ca9ad6f5648b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97af063c-9402-448e-8075-65946f8e8f6d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9e4432-64b5-4cbe-aafd-b0794356a9e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ad9638-2363-4e80-996b-7cf3d5900add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17b9a3d-70e7-4828-85b4-43bf7569a5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa27cbf6-09fd-4dd6-bd62-6f27a5524d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb77dce-5e47-4699-a3d2-653cfa89263b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fa0f83-4677-45e3-97e3-e7a5eb7bc4a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b2c031f-f1c3-4f5b-acf8-9f825a475278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090c6afd-174f-4baf-bace-7ee1777731e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abba78d7-bcb1-4643-9fb1-7ee432eb4ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8d5f86-9637-460b-93bb-fced7cb7953b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3042e1e-92e0-424e-aa91-9dccc9230a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb9b4629-583a-47d8-868c-b00a0d20139a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a1fe71-32bf-49ac-af5c-cfdb5b6c87c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24768033-7ff7-4225-abce-35df49d449c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673aec53-88ae-4e60-ac8b-b09df226f047",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8966d4cd-ba9c-4ca6-8175-96015c1ac474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0176e1-6d30-4314-a400-a51d2da17c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312bd6dc-8da2-4913-834e-c40be6bc6af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c38071e-4659-47c7-9317-1f346422729f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48bcc1e-980d-4951-9966-8007946567a7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235d650b-354b-4a7b-8457-54d7654d0fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "417637dd-1266-4163-8675-cafc8186dc1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0e6a8c-baee-4954-9117-68efbc43dd9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582b0d1f-e5ee-47ae-91e8-b7a46ee1ca0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a6b181-1afd-4c8f-986c-b28dc436477f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03adfb20-bb3b-48b1-a5cf-b111245238a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "972e3006-ae74-45fb-9bdc-519d388b18ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad403735-e561-4f1a-be3f-7a8c790ddfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0d7d7e-49a9-4316-b81c-f4069df1a436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e28926c-d1ab-4b01-9152-096c5d747cb5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6867898-8f6b-4407-b959-00dc831a1f86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "281496db-d6f1-4877-a771-20ae57a0d73d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d76c2f6-6412-47e2-a6c3-70449bbff2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a926e89b-c416-4396-84d0-3bc78eeb8177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea45b4c-3cb9-4405-a2b6-c9c071563b1a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df5a183-6f26-44b4-9336-ecea5d987bc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad3e7b3b-aa3d-4997-b460-26169894d648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f79235-ce1e-46ff-9158-2bcdebe1d3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247a3b9e-6866-46db-b59c-bd9a238c4f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73f779a-9d74-421a-a30e-1b11d09e11bf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec9e602-d02b-450d-ac8f-63cf064468a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5262e5fa-910f-4bc4-bc0f-787419c65284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abeb6049-08e0-4be8-afd3-51318e3f2430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c411270b-81b8-48ec-bcde-b817817f3f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fa0a75-dc26-40cf-8561-81784c0af5f0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b925271-b245-451b-a7e4-2b9109d59fd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f497a49-a0cf-47c1-bdfd-ab52c61bfcb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10d3533-fd09-48f6-b4ea-0649c38aaf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b949b4a-3e11-4e23-8808-b6affe5c3c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a0a798-e6f3-49e3-ba0e-3b0593b1c528",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac75262-2b92-401e-a316-ebb9186a1dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c056f2b-4e57-41c9-b55b-699558fdfc03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c1b193-6ec6-4794-903f-5d855b1a46eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41f5189-d27f-448e-a27b-b8094715f971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842a035f-d6c2-48f0-81a0-600898a840d7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de662ea-4610-46b2-bc48-a5a9f2256f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3dfc5b8-1db2-4030-b43d-cc8fd67a2e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e23f3e-5ac5-4856-b807-60fdd31576d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053bd696-7285-454c-a5ee-d466d2abe46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b791a09a-f76a-4820-845f-1074af6e38d4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bc802c-c77b-4518-b9fc-f0ac266561d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769e514c-fcb6-4a1f-b293-238260c1a037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec75b9b9-df60-4e2c-bd6d-95ef5b1719e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9633c6b5-be3a-4a00-b3ad-564dfdde2098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3658405f-b2a7-4baf-a08a-5d1721d022a1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba367962-41cc-4674-b226-3bd83d0c650b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afc5151-2ab7-4348-bee8-d9868d96234a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d514478b-ca4a-43d6-8a39-fb70e7fe5eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54487356-6b32-42be-b48d-ac9c468e9649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7124b60-46c5-4d5f-8748-d50d744679cb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da065437-c52e-477b-8f4c-010d381a8da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217a6c5f-8c35-41a0-9691-67ad09f81211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b324e4-e09b-44b3-b709-07dba14bb013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54fae96-d679-4d9d-af48-e7bebf8fc7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c741fa1c-6d9c-4bed-a4f5-e84d2bfe0648",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc383f6b-e6a6-49a1-8a51-0d6ffa3f2134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888d9cd2-16c8-4cbc-915e-483803618479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4d733e-239f-4998-9f25-c1a58a044220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbdce61-52d3-4352-b8ca-f1631b3a2214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b655809-5e05-441d-b32c-59a3b4f73e26",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b960bc-ad12-409b-b4ea-ee95c3b28ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cce1ff-53a3-4717-9ede-ddab7bc84683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6ddd3f-8152-4f8c-ae95-7a684cd712e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687d1a1b-2f9a-407d-bd49-24e249b9c15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265bf0dc-3279-4746-ab51-dcbea93f7b48",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d5c303-7777-4093-9a97-370239966932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb03508-1980-4945-b937-4dd224cec034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8dfda12-6144-4551-ad0b-e15ed6712523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0709ed76-af42-4dd3-a5f3-ebb83cc75cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a070129e-624d-4f6c-ac5a-6e1e4223d459",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff451bc-fb2a-4439-a6ae-b8d5fc922310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d8f649-798c-42e0-a5ac-e44a051ef63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669afc9c-5bea-42fd-8b3e-4e8960b898c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1a4175-afc8-4830-ad49-b94c0ba8dc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5473057d-0637-42a3-b5d2-3b5ebec17bdb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e583cee-7a3a-4fe5-b3a1-bde7d9c0fb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7ccc3d-70f6-4dfb-88e6-43164a10940e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "357d17c3-864c-442a-abd9-dc648c5ff8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c976823-80bc-4900-ba24-f652707e4e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0e4775-a19a-436f-af1b-9df012f1a7a5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83389930-c8a4-4df1-9aa0-e069092b2aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef13d15-5c81-4af5-8450-8408e9bc5bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18b978b-d63c-4cd6-be45-a7e73c1ce9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f83fd6f-6f46-4a56-a352-6ea12bd167e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07bffe2-e041-422f-9f35-fcf129705119",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953d9a9d-e89e-4e20-abd7-00c4141cce1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7147464-d31f-4e06-aaa8-e0e3f23811b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce85334-78da-44b5-901d-0e26516e54db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b4c463-c771-4c0d-9908-8ba03aea849c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc39f94-fcc4-4b6c-a6ed-2006f2ad2781",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b8812a-2976-4133-b4b6-7a3e299cd884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fd6f54-1c95-479c-becc-69c4d1e48a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04722670-3953-4746-9de9-bd3259b2c708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee96c365-bc0a-4b51-a480-c1c7c23faab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8a25b4-7c53-4f40-91a6-60a761b5a57b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2cb72d-551c-44f7-ab6a-eba47c0b0757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7848eb4-8014-4120-bfa9-bd53e107659c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f4f3c0-d46b-4a00-a8a7-76391c18b072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6169e5-a8bf-4a75-be92-4e7047d8b920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834b85fa-82b8-4fe3-b48e-e9ed903f9a1a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff4a730-7898-45af-97d8-94b09edc9431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66369837-a629-4064-b0e7-86f4ecb703a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa7d8dd-0d88-4653-85bc-c053226aca60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c49e607-d0a8-42e8-8582-95297a45b6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d838de-47ca-4625-af9e-7466fe7680da",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f91a474-ffd2-4918-9ad3-9ee07d2ac018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf28662e-0b9b-4ed2-9557-34839f96c6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d584e8-0ffd-48c9-bc32-39be6c93cbe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa25805-de01-41bd-a9bd-f48a82242357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447f4def-c1d6-4dda-b4b0-9ced6e9881e5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a93e26-d5ab-4951-b0b2-ab037e2e54b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e849e0-563e-4967-921e-f089f2f0afef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80fbfc7-8a5e-4245-b6b8-c51023515479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0835ea86-8ef8-4d57-997c-86454166a614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00155869-5fa8-472e-a743-b98e5ed03e96",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a919cfaf-29a5-4c6d-b116-02e1142f000f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3e04b6-00ff-4c99-9090-373a24093973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6633cdfe-8577-473b-a5e5-fc1304f4c002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516c4ad0-1978-48e1-91b4-a2f827d93d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5215ba5-b850-4d0e-a764-0e1d8af026e4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877081d3-0801-4698-901c-cdb6244d6664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb7a065-ad84-41c2-889f-d1ed9db2f34e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf32fa99-2490-40fd-8fb9-eb041390b784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d119e63f-84e8-4e55-9e8a-aacad129a870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d089146c-11e2-4f8d-b287-2e455280a122",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1765cb8-6c0c-4db3-a89d-6adbfb67436f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19656270-6557-4fe5-993f-79fea048fdb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf411be-49b6-41f9-8410-04b12124d705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea60cbc-8b0a-412b-8437-ec856ae39d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3979891a-ef94-4a46-9194-8e748d4c8de8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a37b12e-9cfe-4a0b-9c93-a0c26f6d623d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3117e6df-af32-4c72-871c-22d6a12efab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8c0c94-f86b-44f9-8c11-0b3d65c9dceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cedba07-c61d-4584-ac73-6b630e02c7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779ed79b-c8d2-4f92-9dfa-ac619cd686a1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecde8e95-6f4a-4b86-8108-8c7b7a1f29d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd015f9-e9dc-42d2-beb4-07c7e327ae95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f828a4-2623-4828-b32c-9e72edd933d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a4bc98-a6b7-4e0a-a946-eb31a04b7cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b70051-d3e0-4d8e-97ec-f2aeeb359a5a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96113848-e891-478c-91f7-3a93f2de5d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de040c3-13c7-43f2-a08d-dbca203eae16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cce950f-87f9-451c-8acc-f4223ad212b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68190350-6409-411c-bb9f-545777a16534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25c6354-17fc-450a-a593-527afbcbc8fe",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce945055-06a1-4a9e-a78c-ca1efa85c04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19dde1c-dfa3-47b8-9c3d-9824318c2c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025c7ae6-f637-4b34-9125-217b561cf05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e925eb50-38f4-4044-b5bf-93a96e15cf3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dea1ea-a3b4-45a8-8032-054ffdc251f8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d73ef5-be9a-4f70-b1a9-6cd6cf50c673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495db3c0-2bd4-4e76-afe3-0b3009498753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e22700f-545b-46e7-9904-8c33f499dfaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aad53be-cba5-435c-ac36-40fd6d2a9b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7192b17-ee1b-407d-a20c-f9eedf8be29f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f76267f-734c-4476-9c65-8d609aa2e7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2f6fa1-da23-4964-a451-0c0b04d06085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50a17bb-1697-4b20-80b3-c88cee6909aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ec26b1-f1bb-4f99-935a-cf37c5de081a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fd77cb-ac64-45c2-88eb-cc560f7233cc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac66454-6dad-40e0-9474-e06b6fb55475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed4400b-1751-4c88-8b5d-f969216f1190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328ac094-aefb-4173-9d8e-9e6f09d62c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5023d7a1-2163-4b3e-b7fb-259f8ad1827f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce551c6-cd2f-4cdc-af62-677f4e79b898",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d19cbde-13d2-4011-8fd6-420719762c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff5812c-7b5b-4427-b213-32410aa12e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2955dcf-8ca7-4c33-a7aa-3cf3f0caf9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85895542-0ecd-4484-994c-5cf632e39c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4678157-ea6b-4fe2-9394-a736079de7fd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592d13a8-4042-4f7c-b371-c7dc7aeb899a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09303623-ca65-4c2e-b1d6-fe11eacf7198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589ea130-1063-45d4-b9b8-3835120d9240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8ce523-adca-446d-9d02-bd898d3fedfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6719b955-6eb9-44e3-a6a3-6d44ed663ad2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87b8572-508a-4f1e-b1e1-98c93e8b1e0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a107a88d-20de-46fd-9aa1-4b03f3b52068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea04af6d-5da8-4570-b0b1-988fb8b460ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0e9773-f4e9-4b00-9fec-cc3cef8d767b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6bb3ca-3224-4a04-9e60-689bfd52483c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a871a8fa-e607-4024-aa32-ecc6c5b02c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3941b59b-8dd4-463c-9352-7f6bff8940a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f362b05a-3fdd-49c1-b3fb-d734ebb5bdfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50afc3f3-dc10-48e0-a8e3-7442238538e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2727bd-55e8-42ed-99b2-e91e378dc7b7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef10c77-3c35-459a-b28f-7b6ac43af2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3171cfea-1010-4ba0-9022-86bbf9c7cc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106413cf-03d7-43ea-b28f-20974f8f9e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa3b3f3-94aa-4628-ae30-85016ec89bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569589f6-7bb3-48e5-bfea-be26bab69281",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a823c94-35d2-4b0b-ac3a-f8679c9752e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8c3f7c4-c322-4516-b44a-4dd755358ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1886ca-1356-41b6-b7da-b43ed4f42995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438d2c7f-7bc5-4f0e-8c86-0dcbb9deae4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e05eff-db13-48c9-99d6-5a4ec2fa6ec8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d2b8c3-0efb-4ffb-b81c-193bc8c7c975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c248ba-ea00-4d69-8dd4-37daa937a35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22b4472-1b4d-46d5-91a8-6dd8471b08e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6661725-4e58-43a0-8ab5-c8c500910d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a108bc8c-9bee-4a04-b285-c4dc961d5c41",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513a3bd6-5f47-46c1-9cb8-1265f0af10f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a8f003-21de-4cd9-96fd-b9cf11d6f2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ab5f69-494e-4b5d-b465-6276dacce47c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fe3e8c-83bc-4503-949d-9e61da6a885f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989f2dd1-9cab-4e8e-ae23-ce3791dc0993",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40c49db-0c13-4731-ac60-5b291dc53e0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b57f6580-b62a-4f7c-86c3-469877a4b82a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b78d98c-aca7-42b3-bf95-4ea67ce2bf38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd51dba-41eb-46c7-a966-1fc98612a0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33aa591-56ec-48f4-8025-13e53edfcaa3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec77b25b-f9a4-4910-8da9-4368c9d3f431",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3367c741-5156-45dd-ba6d-4b74a9473be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c28563e-979a-4e0f-b711-1e8d98b216c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fc3677-6392-486f-be95-3160100067ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84a3d12-4133-49d6-b4d4-4a7305bede8b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5929b9fa-0b37-433a-84b8-6c72383f181f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dfaac7d-fcd5-4b35-b17e-450e1bde683a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b13ea81-0976-4c95-8deb-a15dd69cb7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327b4aff-f135-427f-9c9b-7b0ac2fee09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfee3f2f-18ee-4fda-aa9e-999b31134b7e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc82972-12d0-4dd7-83aa-073018add0f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ada07a2-da5e-4726-b7e4-e01e6485658f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a18c6f5-1fd7-4bb9-b72f-590fa2838045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f526535-804d-4255-8ada-eead3c17045c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f99fd11-e6eb-4fe5-a5ec-bb849f8e78b9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83856a7c-c087-411d-b383-4162ba90be2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b86380e-a0d2-447d-8a1e-1a688b727a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2e9011-68fc-43c8-835b-d3f224f719ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f301f311-2866-498e-8709-95462e09e1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a9e99d-cc66-4a1b-92fa-824a963fd307",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f320dcb-38cb-461a-aa1d-68417668e364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64651064-736b-4f76-a935-b7b4a33d7e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290b6b85-3cc7-4d8d-a324-f1d17b7088eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a73b275-b7e5-42a1-814e-0ba1031dd5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd358798-c419-4150-9a92-4275fc7e1956",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13201c9-f6e5-427f-84b5-de559b5d9343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9454378e-a873-4170-99bb-073eae9f0eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98533367-6cff-404b-a2cb-4c4475d16304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779e32f8-3acf-4d28-841f-0bd28678568f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8d2c03-54ba-4aa3-812e-f5653eb1f1c9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec90a6c-4ff5-4505-80cd-884472c0f234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86e2eb8e-4e99-42bb-8af8-3af949c96a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c918f875-435b-4e27-a2b1-0b7b8803fda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fe99f2-5984-4b70-ad1c-167941872fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fee1c26-4ee1-4252-8885-c53407b7bc23",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552c449e-351a-40e6-a1f5-c682a53e6353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cd67341-0218-45b4-a7b1-3974155505be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe8109b-892d-4631-84d8-ce86b30753bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f666b225-94b5-46c2-a213-93b0c6d973ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33249a3-9ea2-4015-bf63-14c6e1c13650",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2780c94-175d-4151-b87f-37988ab8848d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db977bd-3c80-488b-951e-2f20a041444c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa79f44-1513-4378-a86f-816d7291a687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb754ecc-84a2-4e08-a282-ea8cd511925a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3cd460-5c16-4d72-8ac2-d98cc3fe6cbb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3371bc98-a758-4bf2-8742-b3e54796bfb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb26282-af3a-400f-9a96-571e88151cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64f7f8b-d778-4444-b0fe-eaed4b6d72b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb71a71-a9aa-4b25-8356-38ad9d0d0cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba960cb1-72a7-47fa-a634-61ffc40f0731",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764919e3-7449-48db-a372-9b6e52a9bb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d648a5f6-69ca-4afe-b8ce-b016e30047ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe66ccab-9381-40d7-9e22-e37fd4cc8d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93d378a-7b09-4820-9f3b-39503b811854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e931f640-7f24-432c-9db9-10281d473c5d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dac66e-e71e-4e02-a9eb-737bd5452988",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b818c7-f386-492d-aba5-3086fdd84176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f9c425-0555-4e57-a2cb-2e523a8ca6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c376153e-d10b-45e4-8a9b-ac0d37c5f333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569f02bf-0f46-420a-8855-526640efb58a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15021d17-472d-452c-b962-fa06cc7b2924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa47f1e4-6da4-465d-b89d-bdc52c8de02b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689ff4b1-ad99-441a-86ce-f8aa2bc08451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752f5f3b-621f-4693-afbe-49faefea465f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4158b01-dd9a-4843-a686-1bd20cf14604",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d218c2d1-cad8-48a9-8799-5828cf87f1d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b313934c-f37c-4cd8-acda-131a91caab2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ece61e7-ec06-40bd-97e6-b87218414383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3179d0-efd3-42be-ac30-b8923d9d8311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a139f2-43b7-4f5a-9455-a258c2f2914d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7909a448-0cd9-4ba5-9b81-56fc05133da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f895848-68d3-43a9-b4b7-ef6e211a7bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdae28ee-a9fe-48bf-89fe-17048cdd89ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f587895-c401-41c2-9a3a-fef826a2642f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23374800-3aaa-4f6d-9092-cde2561a26cd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d54f81-d6e6-4ed8-890e-48b37550500d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "276ed699-3e52-4802-8a20-5888496ca719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a25efd8-b2ca-4c47-bd24-29b311ad7bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0aaf755-adbf-4e26-a266-cf105df79c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5aa93f-f752-4434-9195-c08217b4f9cf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f71e7cb-202e-43f7-a85f-fc5e8afab2e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f26c061a-7fcf-48f0-b9cc-b1a2fede9af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a29f6fe-41ee-48f5-8824-356ea0beabd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f97adaf-3144-45c4-b4b2-ea5c3df65fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75af38c1-bd9d-4688-ada5-9c62a333ca44",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772198a0-57cb-4b25-8824-c57f793b00a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756272e9-9b6b-4929-bd4f-15a5e7de4512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f12f721-2240-426d-8ef1-d92e825af6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0155919a-85f7-4be3-9dba-3373f370d332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9faf0c-b897-4f21-93f3-5e0d65c63043",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1655cc-9677-434f-a743-3934437ae6e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66e434a1-b237-481d-a64b-49a02eb70942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5bdb96-cf05-4ca3-847f-8e701b32aaf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815b3a19-6f87-4e26-82f7-ee4d69e60f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e00a29-ae2e-45f5-9085-a6536b7a3b5b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e86fb0e-017b-4bdf-bc0d-7b815ea11932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e775bd0a-cd09-427d-a499-15e4e1705653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9adb76-da6f-4daf-bb91-9e17d79f1d87",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf97cf7-e256-4563-8efc-c088b2ef785b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eefe0c-eb90-4ed6-9247-0252026f60f4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82198f03-6d71-469c-b6cd-d9fd1c95766a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b222ad7-8b9a-4515-9524-bde6c987c74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6001813-b43b-411d-b2e0-8076047029ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f008003-09bc-4213-be65-426ece1d7f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56e232c-4a32-414c-b78e-a580704195f6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33924663-5f39-4a61-9797-723b364c5d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56250086-5b9e-4659-be54-a5563a2f83f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e89b32c-0572-4fe4-8f9f-f6251367692d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35d8b12-60a6-4fb7-ac32-2110d1a7fd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b504f1d3-6fd6-40b3-a7cc-0cd57d53935a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5085629-b057-426f-9f63-e423750b8c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86eee505-6df6-4f98-b1cc-970f7539b255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e996a1e7-e23f-4c94-9507-57d6a4637648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53151209-5886-4a06-b972-cf80e3b4e466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9762337f-3a1a-4e7c-83cc-258174caf33c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8db3e62-cdda-4a52-88dd-f9979f08dbbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec9ab9ef-202e-42ba-85b3-e2caed2ea3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd31a8c-3e66-4a4b-acfb-9d74a041218f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e48464-21eb-4ce8-b3a5-3adddaf9a5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf253e13-a878-4eb9-91a8-fc2dda841294",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d45c422-0b1c-4025-9f21-5386896e84b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "861b21ea-5c25-427f-a082-a25e8f9a223e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff583257-d042-40ef-9948-dc41151a00ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ad43ce-e02f-4d6e-9ace-adca4c356df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52681071-5bf5-46b1-a21f-ba7ceddcff79",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914d71b5-9d3f-4902-896c-8d9a428393de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8790b0bc-eaef-4d76-be31-4b9906a130cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32686dc6-e546-4981-ae73-3095364c6937",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe7a88f-896b-4faa-8dcc-7ba3293dcab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a2ff21-c413-45d5-acdf-d1b9fbc2789a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9e7c59-2c57-4716-a786-cb73570ab97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e06c866-4603-4459-9c51-d3fc7d10d9b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704b9512-4745-4445-8a8f-978f7532c9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0fa840-f782-4d93-af26-25d975157e03"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39aae695-e840-48e5-ac5f-4588ed89dc75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "611d3577-1ca8-436c-8a7c-c042e231f714"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89fa5d58-286b-46ef-a6db-7faa9bc1bdbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33854107-77d6-487d-a147-625a65156032"
                    }
                  }
                ]
              },
              {
                "id": "e57a177f-9672-455e-ba49-ded17d3f3ed3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f387b7c-a6ba-4480-b4f5-5a4129927c05",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fc115f-ab67-4abc-a4e1-832db552f84b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "874038e3-42a6-41f4-8f0f-e462ab6bd1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6295d0de-e59a-4fc3-ba25-f6a26fd4b48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0e9490c-ad14-483f-8918-62c3adb0c487"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13f81df6-7ed0-4f65-b192-d6aefb692ddf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a732041-9973-4937-b999-791a76c161c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61698a27-de28-432e-a637-89144b3d1ab7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fe0480b-38a9-4025-9b8f-f6c1cca1c575"
                    }
                  }
                ]
              },
              {
                "id": "8de26883-3005-44a9-9ca3-d1fd32af1710",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "13295995-702a-4eae-89be-039e6da4f7f4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f0dfa9-eae7-40b9-a596-d75ef29de292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "13afd35b-3f96-4d03-bd67-ee8c0afdd1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8910f633-91ed-43c2-9620-bd626873bf06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d99129-7b1c-4fe0-ad8c-73e491ea846a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "241d79a4-2292-4a03-97a5-6ec9f7193e5e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7053562d-ae00-42a1-9b10-35db2470254e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7261380f-28c2-4197-ae60-da8aa74057fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b1a3a1bf-7f1a-47b4-b470-8d9820c0a6ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f16dc49-2144-4125-aacb-7032c73875a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8fa8c3d-dc79-44cd-93ea-29b250584398"
                    }
                  }
                ]
              },
              {
                "id": "bbd4b499-50d8-42a5-ac1c-cd7501808581",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f21228e1-4bbe-43aa-ac45-bf14d2d0c2c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "081721bf-1ef5-4996-a3c7-351923cb7a1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94e098b8-9d35-424d-9ec1-421a41a00b32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d46419dd-8efc-4269-be65-911ef3bb30cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5a19704-4d1b-4cc6-8392-77ee99e85f03",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a13e8984-71b3-4920-96b9-be470becb1fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc7c2679-8fdc-4a56-b544-5c2a33fa2780",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d27f04fa-77c6-43af-b7a4-8ad133c88f26"
            }
          }
        ]
      },
      {
        "id": "56349eed-7388-44bd-a4dd-400012e22b16",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "be1c5184-e7e8-4efa-95b1-a00aff4293eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2216885-c495-4dff-9aa8-0901e7f657bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d111edf-eee5-4131-b5ec-3bf76d12b2f1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0ba034-513f-4a19-bde3-0afaee001638",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fdbeff58-4a18-46ba-9d2f-1a1dd059cbda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffe52b5-432d-4197-83d1-532e69893ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8b674f2-aba5-479e-9d5e-ff28e1d87756"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "283eed9a-ef04-42dd-8791-6fd4110f5557",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "691c14f0-4138-4fda-b5cd-3cb7c3dc75a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7974b76-251e-4ed8-9b5a-c5a8da84ceef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eac20658-f4a7-49bf-8c64-c12e941c0dbb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b385ad5-378a-41d5-894d-b544e824abea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b782512d-66d1-4437-9d92-3669a21f4f92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa0aa723-eb50-481a-ad34-c492b5ad166c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94d6b33b-9902-4614-a285-4c7076a8c2e2"
            }
          }
        ]
      },
      {
        "id": "ea4a0273-891f-4cb6-a9b2-edbefe86a5aa",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6bf97647-bee5-42d1-a3a0-bdc7e1fa3cf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33b3fc40-e15a-440f-a861-d8b62b3939bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6515c1d4-31b0-4876-90de-90241bf8bc40",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136e9d42-cf32-4738-a6ef-2f8025da5a3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50f1175c-f8db-49a0-adb0-535408ddcb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69114ded-ea73-4458-a631-ed18a3a3529f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8031a58d-fb30-4ade-89e6-1d92119931e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66a71551-eefa-4973-8225-a13efbecc744",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf0f366d-df4e-49e4-9333-9e0bfc25037a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "852647cd-8056-4d85-a319-cb79cd455beb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eaaab1ff-b7db-46ab-8119-c64115962ed4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7629f8f7-ab6b-48fd-a5e7-440b78f80843",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "80548ee6-1acf-44ca-a53c-81a099035634"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e020c946-4551-4f34-95ad-7d0aa2f25b50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1423f6db-8524-4c40-bb2e-df7c9598db15"
            }
          }
        ]
      },
      {
        "id": "120bab47-b4e9-4d2a-ba41-5f399567b9c6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c440ef80-bf43-43f8-b43c-9744cf340a56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef1a8019-04f1-4749-bac5-5336ae460d9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06ab8147-8e90-4ac4-9d3a-a15ccd8c6e5b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc00af30-63ce-49fc-8923-be0f58f50135",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0172224b-2b3a-4407-b126-1f5579489f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f898c7-3ed1-456e-87b9-01203ab337e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "def43bf0-f0e2-455e-b38c-fe6afffeb1d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bf035db-b59a-4ae5-a452-dd5449c8a76b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52b9cf7b-bbe5-46e4-9dd3-1a0cf8a7db14"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "129f0053-3c92-4405-85a2-8b52f376edc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf544439-4fde-48c4-8ae8-b172eb11770f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ca62ee7-4476-4ae3-90f4-0552dbccddc3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27dc5ee8-cdc4-4956-8ea2-20365a60c219"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cb671e3-56aa-406d-a49d-33b84a72b8c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9d9742d-95ed-4599-b476-0eb4ecb7d125"
            }
          }
        ]
      },
      {
        "id": "7fdbec17-3b3e-4036-a2fa-f6d179464556",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee5f14fa-e30f-4757-9c27-53c307bb1624",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8bcb51f-8d3f-447b-9a2e-6a0a082a8b32",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ae32d56d-4724-4495-831a-774f0e28e748",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6db4efff-7f79-4f96-88f0-c3d2a10db934",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e0a4d4a-cf85-4179-8632-c47874f33cfa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 37.19014084507046,
      "responseMin": 15,
      "responseMax": 275,
      "responseSd": 26.452836877231178,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690245839693,
      "completed": 1690245864175
    },
    "executions": [
      {
        "id": "062ff0c8-f036-4338-ba2d-7f643a541cc2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1e9891e8-de6d-4342-b906-bbcab9c79e42",
          "httpRequestId": "b4304fe5-75db-43b0-bff8-282c2235394c"
        },
        "item": {
          "id": "062ff0c8-f036-4338-ba2d-7f643a541cc2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2163eca3-8926-42a8-ac09-121337130df5",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 0
        }
      },
      {
        "id": "c27dad36-ecf7-487c-a909-442168570381",
        "cursor": {
          "ref": "edd48ba3-9dc0-4576-8065-666a8017ed37",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "308e2aa3-a0e5-4414-bc1e-4674b9001b02"
        },
        "item": {
          "id": "c27dad36-ecf7-487c-a909-442168570381",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "48083dac-bff4-404a-b45d-e9bca75ddb09",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "d06cf526-0f49-48c5-8ee4-c16b8baf62e9",
        "cursor": {
          "ref": "0204f550-4624-4a66-8144-08cc563a32cc",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "82f61303-ce9e-49f4-88bc-013441f987c1"
        },
        "item": {
          "id": "d06cf526-0f49-48c5-8ee4-c16b8baf62e9",
          "name": "did_json"
        },
        "response": {
          "id": "7b49c84c-c7ab-4a04-a398-80593b167a0e",
          "status": "OK",
          "code": 200,
          "responseTime": 162,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f888d1-0ce4-4f97-919c-d3ff0be88241",
        "cursor": {
          "ref": "82d78cd4-1458-4e81-ae3b-502ce67773ff",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ee5e86f4-06a5-4cc9-b578-f7354ec19f6b"
        },
        "item": {
          "id": "a5f888d1-0ce4-4f97-919c-d3ff0be88241",
          "name": "did:invalid"
        },
        "response": {
          "id": "0763d338-1edb-4e95-8cd4-5fdec917b0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f888d1-0ce4-4f97-919c-d3ff0be88241",
        "cursor": {
          "ref": "82d78cd4-1458-4e81-ae3b-502ce67773ff",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ee5e86f4-06a5-4cc9-b578-f7354ec19f6b"
        },
        "item": {
          "id": "a5f888d1-0ce4-4f97-919c-d3ff0be88241",
          "name": "did:invalid"
        },
        "response": {
          "id": "0763d338-1edb-4e95-8cd4-5fdec917b0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87de5f6-5792-4dc6-904c-c01d4831bd7f",
        "cursor": {
          "ref": "2c858e60-8ced-4438-8d26-c12ac2397839",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "65e40531-0569-4ad3-a721-c79e513f5a9b"
        },
        "item": {
          "id": "e87de5f6-5792-4dc6-904c-c01d4831bd7f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6419b218-c25c-4205-84d5-d29bf59f5445",
          "status": "Not Found",
          "code": 404,
          "responseTime": 84,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5e0554-319d-4ad4-b678-fe6fe2c30632",
        "cursor": {
          "ref": "8f8b4283-247d-4e33-bb80-312ecf032259",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a8c9dc2a-1716-4808-8e8e-842ba85196ff"
        },
        "item": {
          "id": "6b5e0554-319d-4ad4-b678-fe6fe2c30632",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "965eb00b-9eb2-4a44-98c6-1ecc31af13c7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee1eee5-f1bb-4215-86c8-0118fe01fd14",
        "cursor": {
          "ref": "3eba6f82-52b5-445a-abb7-7d6725be5b17",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "231a4ac2-d313-425c-8a18-f61482c8dd8c"
        },
        "item": {
          "id": "5ee1eee5-f1bb-4215-86c8-0118fe01fd14",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4f2d9f1b-c4e1-4137-91bb-ead72a6ef9bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c8823d-8cf8-44f5-a4f1-4572c3bafd1b",
        "cursor": {
          "ref": "38d7c420-80ac-4928-83c4-f833ab9348c4",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7c0f3a35-246b-473d-8b8b-5682e7a65796"
        },
        "item": {
          "id": "e5c8823d-8cf8-44f5-a4f1-4572c3bafd1b",
          "name": "identifiers"
        },
        "response": {
          "id": "2d53fb9a-cf27-40b0-a4c0-53867ccff914",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4a9263-9bfc-45a9-ac0b-6ab661a20161",
        "cursor": {
          "ref": "e5775d89-cbfb-47e6-808e-de03459fdf77",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4e1a3c7f-a85d-41ab-97dd-6e04b5d98fa2"
        },
        "item": {
          "id": "1e4a9263-9bfc-45a9-ac0b-6ab661a20161",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "15ac0c11-cd03-470f-a55f-716f9ef09bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c09835-9577-455a-8240-b8eaafcc0b7f",
        "cursor": {
          "ref": "bdd63266-ca97-4740-b6f6-b986a30a3d7e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3eb801fd-38f6-4d4f-8503-9584817eecd3"
        },
        "item": {
          "id": "63c09835-9577-455a-8240-b8eaafcc0b7f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "46a29e0d-a148-40fb-8005-72ba73f47852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee96c12-1152-48f2-9493-8486613d7cfb",
        "cursor": {
          "ref": "62a1780b-7a36-4823-a894-40d70bf58855",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d35cdf69-0254-4368-998f-0039d2db7364"
        },
        "item": {
          "id": "8ee96c12-1152-48f2-9493-8486613d7cfb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "240f850a-d13f-46ba-8252-94e0b2d11e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adad2c5d-69e9-4010-9cb3-32ff96165d87",
        "cursor": {
          "ref": "6d517eba-5be7-4fd4-bf4a-c8bbda218d21",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8c4d4ec5-ae0d-48c2-b436-11767f003dbb"
        },
        "item": {
          "id": "adad2c5d-69e9-4010-9cb3-32ff96165d87",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3a888a91-9cd7-465d-bee1-85d859ff52f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985a6d75-c0c3-4f97-9732-e8f49dabf239",
        "cursor": {
          "ref": "b8e1fbcd-7b62-4a4f-a3ac-e3780df0104f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c80e10ed-23f2-484e-80c0-9ac8866aab62"
        },
        "item": {
          "id": "985a6d75-c0c3-4f97-9732-e8f49dabf239",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "619cff83-13ad-441b-853e-ff0d2d0edf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b78344c-e6e9-45b9-ae3d-1b1c16f82374",
        "cursor": {
          "ref": "0a924ee8-3bbb-490f-ac10-e93b879d0c17",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ae49f9a6-9e84-47a7-ad76-7898f8d06f61"
        },
        "item": {
          "id": "2b78344c-e6e9-45b9-ae3d-1b1c16f82374",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "98bbbefa-a3d2-4f51-8535-d323c8013300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885cd253-9800-4817-9134-31d5d14ab63a",
        "cursor": {
          "ref": "361fd93a-065a-4a5c-a37a-a030afb8efd2",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6ccab4a1-a474-4a03-8420-34d6d104e29d"
        },
        "item": {
          "id": "885cd253-9800-4817-9134-31d5d14ab63a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4d3e2192-db92-438b-bd4a-7a62e6fe7d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b957578b-d7c4-453c-a3b9-4f30174a7a09",
        "cursor": {
          "ref": "f0438246-39ee-4151-abec-a9148fa57219",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fb66fe41-c03c-4157-b59c-80f5da5622f6"
        },
        "item": {
          "id": "b957578b-d7c4-453c-a3b9-4f30174a7a09",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8d44602b-eb44-493b-adaa-5b6c79b4d193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75586950-6543-4f58-a18f-da99c3cb5e2d",
        "cursor": {
          "ref": "50411dcf-db0f-4c40-8b0c-2c3e8c3630bf",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e06b468a-645e-4080-bb4d-b598fb5b7d49"
        },
        "item": {
          "id": "75586950-6543-4f58-a18f-da99c3cb5e2d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9524ead1-d293-49f6-86f9-3f73c2e0f701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6c003a-c7b5-49c1-8022-7bed4466670b",
        "cursor": {
          "ref": "2572b67c-50da-4921-afd8-bf7a21bdd018",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "96cdde6f-e156-47f7-899f-1b3624c83bca"
        },
        "item": {
          "id": "5d6c003a-c7b5-49c1-8022-7bed4466670b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bf62a8ae-1c59-4ff6-9ccc-74d38baa70a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5898438a-46c0-43dd-b742-5f98c8e674e6",
        "cursor": {
          "ref": "e0709baf-fed5-4716-a7bd-836f5c281b43",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e4ed672a-9d5b-480f-a672-6e4d3710d455"
        },
        "item": {
          "id": "5898438a-46c0-43dd-b742-5f98c8e674e6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b6905116-5fa5-4992-ba9c-f3850ef70660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3b0665-013c-46d5-a7f8-e4b53bc1111a",
        "cursor": {
          "ref": "834f788c-a3ef-4400-afab-42e5163dd8a9",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "023e2314-d70b-47ec-a6a7-17db3f1f75eb"
        },
        "item": {
          "id": "9d3b0665-013c-46d5-a7f8-e4b53bc1111a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eb9c2c55-9684-4476-bd40-3411df7d6d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed500ba9-f69b-4bdc-a3ea-9ed7d553a977",
        "cursor": {
          "ref": "0e9cd98e-b513-4bb4-9432-dff62bf56bcd",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6d79102a-342b-4dfc-bd5d-e7e6619eabd7"
        },
        "item": {
          "id": "ed500ba9-f69b-4bdc-a3ea-9ed7d553a977",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5e8020e0-56e9-417f-a925-25f853d946c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94217ca1-38d4-4ba4-9250-44422f6f3723",
        "cursor": {
          "ref": "6fb05b75-d46a-4487-af6d-14419a7a5e82",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "14cf25c9-717b-43da-a133-703d63e6a70b"
        },
        "item": {
          "id": "94217ca1-38d4-4ba4-9250-44422f6f3723",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b6ba1639-5f6b-4261-b5d1-405ad8d08109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f8ca61-8ae3-4d9f-94c6-0476f0954f9e",
        "cursor": {
          "ref": "4b1b980a-02ae-4d4f-a085-5abe6948bc76",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "88187cc5-53b7-442d-9d6f-b9f02fe9384e"
        },
        "item": {
          "id": "a2f8ca61-8ae3-4d9f-94c6-0476f0954f9e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4303d974-1d8b-46b8-9cfd-fb9b86378df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c17bbf1-8a35-487e-b97e-54619983414c",
        "cursor": {
          "ref": "d1071337-a46e-4346-96ed-cdfdd962e872",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7bd72781-ca43-4127-b169-89ad2b1d1302"
        },
        "item": {
          "id": "1c17bbf1-8a35-487e-b97e-54619983414c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ba53aaf0-9f25-4969-913b-5431d2c3ce17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8889fef5-44cc-4239-acbb-d28ab45c0835",
        "cursor": {
          "ref": "03602a79-9391-48cb-99dc-81b3fdbe90fa",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "aa1bcdd4-3fac-4b1a-a14f-4e9a1ba54fe5"
        },
        "item": {
          "id": "8889fef5-44cc-4239-acbb-d28ab45c0835",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "22c20a01-3226-4c11-9edf-4572f4fd0d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef717569-57c5-45eb-a2a7-3aac15dcb9dd",
        "cursor": {
          "ref": "39dde8d8-547f-4b7f-911c-aa9949ba2342",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8f60c045-aa72-408e-9bdf-76a033b20d38"
        },
        "item": {
          "id": "ef717569-57c5-45eb-a2a7-3aac15dcb9dd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "836ddb6e-03b1-4c85-8a65-e6740403c623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adee096-02e5-4659-951f-5266ada60622",
        "cursor": {
          "ref": "ea4944fa-9d95-46dc-aeb0-66390e6944c2",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "31f79d58-d01c-43a4-a183-d2e05ae6693e"
        },
        "item": {
          "id": "4adee096-02e5-4659-951f-5266ada60622",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cbc64f00-8ead-43af-b225-3f56fe0ebf17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17490a2-44bb-47b3-9391-190a47a23bdd",
        "cursor": {
          "ref": "3969d0a5-d72f-475e-accf-c854f70d63a6",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7b32071f-b803-419a-8891-2ddd03805bfb"
        },
        "item": {
          "id": "e17490a2-44bb-47b3-9391-190a47a23bdd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c55a76d5-f632-44f1-9eba-72a228c89b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af03e00-6b2f-4320-9d51-3e69e5bb7308",
        "cursor": {
          "ref": "51f973ce-ee87-41fc-966e-b11c5566e1c3",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4279eef9-8b39-4e61-850d-fbec0e50e766"
        },
        "item": {
          "id": "7af03e00-6b2f-4320-9d51-3e69e5bb7308",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a05a2aec-0d63-400d-bd42-1d850c8dd9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fde1df-4ecc-4e33-95cb-3c8a9375dab6",
        "cursor": {
          "ref": "5746b2be-0182-46bc-b713-7d58ce67f823",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6193f3d2-1b57-4fbf-811c-610e0dfab0a0"
        },
        "item": {
          "id": "25fde1df-4ecc-4e33-95cb-3c8a9375dab6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7994fbc9-3291-4138-b207-8cb0c356995f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56da86e-b004-4123-9c8f-f73e9413f48a",
        "cursor": {
          "ref": "f1c6e8ca-31d2-4b46-bda9-7c755934b427",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0f23dc2e-e5fb-4d03-94a4-ac3667fc78a6"
        },
        "item": {
          "id": "d56da86e-b004-4123-9c8f-f73e9413f48a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "13639a09-5dc3-4589-be63-a6d36a899c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6606b796-fb98-40c3-b71a-7a1b13e431f0",
        "cursor": {
          "ref": "3ceb0839-f475-4a6f-ae7c-e242381764e9",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a9e10290-e909-41ca-be1d-3d44e39f935f"
        },
        "item": {
          "id": "6606b796-fb98-40c3-b71a-7a1b13e431f0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8238bed6-9ae6-4b96-a8e6-829d7e40ecd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b284ec6-8648-4e25-9b75-665a0b443c10",
        "cursor": {
          "ref": "aed0af84-ff4b-4d41-8b39-3604b4cc13c5",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f9c074e0-627f-420c-80f2-8e63c38ddfec"
        },
        "item": {
          "id": "7b284ec6-8648-4e25-9b75-665a0b443c10",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7fbcc062-80ac-4a29-a3c6-774d3798ec08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b47bd1-1de7-45b1-b439-ff9a4f558f67",
        "cursor": {
          "ref": "1a7eb453-e978-4957-b580-71adc85cbd42",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8dbe93b9-4f3d-4bff-98d7-04f14b6881e0"
        },
        "item": {
          "id": "c7b47bd1-1de7-45b1-b439-ff9a4f558f67",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "513eee45-2fa7-4316-b1bb-fd5e1b4d9e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85db6767-7f59-4fe9-bffb-acf03bf099f6",
        "cursor": {
          "ref": "b47af076-5463-4662-84b2-ddd161dbbfec",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ea70bf6e-f093-4fd3-8215-89431e058110"
        },
        "item": {
          "id": "85db6767-7f59-4fe9-bffb-acf03bf099f6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fbd90e9c-8ac8-4ddd-8364-f6d5ee656972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac59f4b3-d286-4a6c-9908-7d279e7033be",
        "cursor": {
          "ref": "89bbf3fb-713e-4401-a709-4a5ffa5debf8",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "490a6f44-d8cd-4b15-bcb8-1d82462d48e8"
        },
        "item": {
          "id": "ac59f4b3-d286-4a6c-9908-7d279e7033be",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8dda61fc-379f-4a48-9bac-b4b8ef9b45fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2699c5-f97b-4bc0-bca5-45b40fbd2820",
        "cursor": {
          "ref": "4d8025d3-390e-457d-b0d9-05007509200d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "177d4fa9-7551-4893-839d-a4b16cd06d90"
        },
        "item": {
          "id": "9d2699c5-f97b-4bc0-bca5-45b40fbd2820",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c39a243d-b927-4218-9913-429185d32b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1a9168-4d79-4060-952c-274ef2cf9855",
        "cursor": {
          "ref": "81840f8e-ab92-45a8-9883-fa68e48401de",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2237ab42-67c1-4cc2-b3cc-267fb1a663f4"
        },
        "item": {
          "id": "4e1a9168-4d79-4060-952c-274ef2cf9855",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9548975c-248d-4b03-807d-ba8eb353a25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129a0531-da95-44a6-9c5e-54bd811f272a",
        "cursor": {
          "ref": "fcc2ce03-bcf1-47ed-bb5d-87169d5e9122",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3044ad90-1801-4b1a-a8f8-c3174244fe6b"
        },
        "item": {
          "id": "129a0531-da95-44a6-9c5e-54bd811f272a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3058bc04-6f7c-4550-8c5f-5434a39a87f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c12082b-2de8-48e6-91aa-f251d8b452ce",
        "cursor": {
          "ref": "e9d54d5d-b2ff-461d-b621-ce12b3a2181e",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "126a9895-f275-4657-8e08-c91cd472a4c8"
        },
        "item": {
          "id": "5c12082b-2de8-48e6-91aa-f251d8b452ce",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ed20df07-6215-43cc-a0bc-12d2a5704f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d454401a-55a8-45c1-9078-562f94294423",
        "cursor": {
          "ref": "c3da88fd-6512-4689-af5e-f320f6d4e21a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ef232641-f4cd-47f5-9ef2-06d4f58d34b3"
        },
        "item": {
          "id": "d454401a-55a8-45c1-9078-562f94294423",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "764eb1f7-80d3-4f9f-84f7-c255e3dd9264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af863ec-534f-4587-849e-bfe96ece901c",
        "cursor": {
          "ref": "c9681f32-74e5-4495-b5ab-7d1ca8352ebc",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "305e3330-927c-42f1-8b76-8722f4c295ba"
        },
        "item": {
          "id": "2af863ec-534f-4587-849e-bfe96ece901c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4d6cc781-5cb7-4daf-8996-810acf15d1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f23b05-ee0d-4302-835c-65e70d32c9b3",
        "cursor": {
          "ref": "32eef2c8-cb5e-400b-8e71-b1ce80c611ee",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b7248663-0109-4179-9f5d-7328ead3416b"
        },
        "item": {
          "id": "e4f23b05-ee0d-4302-835c-65e70d32c9b3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5425288b-1235-4058-896b-c58aa4c9214e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b86b8d-d887-46de-b0b4-6ae9b4aaffe0",
        "cursor": {
          "ref": "cbd92533-13f3-43e0-a562-7eb4400a8cf0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a99bd5df-a662-4d42-b167-45001620f62f"
        },
        "item": {
          "id": "15b86b8d-d887-46de-b0b4-6ae9b4aaffe0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a5fff482-e93a-4814-9f2d-8b18ced19466",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11385629-03cc-4a82-859c-f8cc062bec0c",
        "cursor": {
          "ref": "c0d6f17d-c9ef-4f74-8343-9bd919dba878",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b70ed500-102b-4340-a07c-20c17be0e306"
        },
        "item": {
          "id": "11385629-03cc-4a82-859c-f8cc062bec0c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a7072aab-ae9e-40ed-8591-0406aedcab9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df55100-0786-466b-a039-ec512f880b6b",
        "cursor": {
          "ref": "37523692-68c2-4929-9d02-c2a86e2e65b4",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4b7706b1-21a4-40ee-9321-fb9d5ffe0487"
        },
        "item": {
          "id": "3df55100-0786-466b-a039-ec512f880b6b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c260d481-5a5a-4d61-8597-632b727793a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b8c4b9-8ec0-4407-8731-9e670bbe5b40",
        "cursor": {
          "ref": "6035d409-571e-45dd-8c45-8927bcc64bbb",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "272e653b-c4c0-4d97-9863-9a4c64b9899a"
        },
        "item": {
          "id": "d4b8c4b9-8ec0-4407-8731-9e670bbe5b40",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2ba94450-8347-4ea0-a7a9-48269fe312df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c01ab5b-830a-4c4e-9d69-1001519af77f",
        "cursor": {
          "ref": "7c0aa61f-7d7b-4252-a9da-7bb8c4dadce9",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2ad4a8d2-0e92-4dc1-8a09-733777617108"
        },
        "item": {
          "id": "1c01ab5b-830a-4c4e-9d69-1001519af77f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e047d443-d370-4b00-8731-1a12a2ba3192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe39975-f7fc-4e42-8283-5076f8f54864",
        "cursor": {
          "ref": "dfe8a331-1663-40b5-a06e-55e730d999cb",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1077e4f4-beff-4ba9-be7b-2dcfc98f8e3c"
        },
        "item": {
          "id": "abe39975-f7fc-4e42-8283-5076f8f54864",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0f2b4a77-5870-4572-98a3-c6aebeee82f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b719a11-3b7d-47c4-9590-9934885b4d81",
        "cursor": {
          "ref": "3db0504f-8712-40dc-9851-d29d395cdfee",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ac9c9f95-86d3-47ee-b657-6d21885202ca"
        },
        "item": {
          "id": "4b719a11-3b7d-47c4-9590-9934885b4d81",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "36bfdba8-8fd7-4424-8eaf-75190a127968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f30257-9c36-419a-be4e-416e5f68db56",
        "cursor": {
          "ref": "7e882c41-f821-4640-a766-158c2c33284a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b432ac36-664b-4250-9d6c-f07ede6b2141"
        },
        "item": {
          "id": "56f30257-9c36-419a-be4e-416e5f68db56",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f762466a-4b44-4b78-a7a5-89dff1f0029f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2d0e48-cd13-4548-86d5-0a43a61818b6",
        "cursor": {
          "ref": "6fdf3520-f8ae-4945-b598-42a0b788e1d3",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4d535f6f-8d21-4f32-8741-6bd17de40867"
        },
        "item": {
          "id": "1a2d0e48-cd13-4548-86d5-0a43a61818b6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "676ae604-d161-4ee8-9f57-b6c6cac6587b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd10c45f-4552-465f-89a2-9b26ea585bae",
        "cursor": {
          "ref": "46c11f93-4dc8-44ef-967a-2125dcd8fdb4",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a34f7796-8c86-44e2-8171-44fc0f5e8f19"
        },
        "item": {
          "id": "bd10c45f-4552-465f-89a2-9b26ea585bae",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ea00fa72-974b-460c-9911-2186e4da05a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb4609d-df76-41ed-bb91-1e5b2e14c6f3",
        "cursor": {
          "ref": "45fe1dd2-0e9b-4064-abd1-a34c8b46960e",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4eb9a829-2d09-4ec7-8d28-7091828d7add"
        },
        "item": {
          "id": "bdb4609d-df76-41ed-bb91-1e5b2e14c6f3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "63d0355c-4c93-4550-9b86-1f6f4aaf056b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3be2e21-32ba-497d-832f-368aaa97780b",
        "cursor": {
          "ref": "e97613ba-22eb-4e5d-8af1-7c52e327d36d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b0023351-6b9e-4b2b-a6d2-5a5a6e3c41a9"
        },
        "item": {
          "id": "f3be2e21-32ba-497d-832f-368aaa97780b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d189de04-ba1f-4e48-a3f8-c2566accf45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ecbf9f-1d71-4423-af06-3a71377aba2b",
        "cursor": {
          "ref": "1e146c71-0b75-4b1a-9deb-f41f44e5bf9e",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "22797834-b1a4-415a-ab7b-d342974e7aa3"
        },
        "item": {
          "id": "14ecbf9f-1d71-4423-af06-3a71377aba2b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5c8fbb21-1d92-4a8f-b1b0-03b1683ad9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e1e69e-6ab4-434b-9f5c-814f6d1ff7f8",
        "cursor": {
          "ref": "3cec33c0-f85f-4245-aa0b-d5f0b0bba4a4",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "60c75d9e-1205-456b-94a0-c17531ed2c78"
        },
        "item": {
          "id": "e8e1e69e-6ab4-434b-9f5c-814f6d1ff7f8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "196325f7-4bb2-489c-9e84-8a44f97f31eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497831e6-bb99-4fa3-8425-449cab1c9e3b",
        "cursor": {
          "ref": "9cea687b-63d1-44ed-9dad-70e1f584decf",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0bd66dd0-daf9-4969-8bb6-bfa20379ec87"
        },
        "item": {
          "id": "497831e6-bb99-4fa3-8425-449cab1c9e3b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d56d21f0-aa0a-47e0-a8b0-e4adefd2fb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db43e8e8-d5d4-4750-9f29-5dbef9f1c413",
        "cursor": {
          "ref": "302d6210-57c9-4e17-be93-d74c32ff8eea",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b9087269-b015-47a8-bb1a-95429cee8093"
        },
        "item": {
          "id": "db43e8e8-d5d4-4750-9f29-5dbef9f1c413",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6a279594-cff2-416e-a782-c1150b553111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f97375-e604-4ed7-a153-b0a2b51e0313",
        "cursor": {
          "ref": "c9df54da-71eb-4402-8e55-6e782ffc7bed",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a7e5ae50-5e59-4cd7-8447-dc1a0febb8f0"
        },
        "item": {
          "id": "90f97375-e604-4ed7-a153-b0a2b51e0313",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b71aaf91-bcdb-43b6-87bf-227e69ae1a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb1d3c7-4d0c-4f9b-ac70-055e2473b9a6",
        "cursor": {
          "ref": "5b960b08-6954-4042-99ad-2a5a885f13b7",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ab19d662-8225-4965-b354-9d2876c9443f"
        },
        "item": {
          "id": "beb1d3c7-4d0c-4f9b-ac70-055e2473b9a6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ca6b331a-2aa8-45b9-8d2b-2cb7a59d9a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10368c0-f5ee-4880-9e7d-1b9aa2a1191c",
        "cursor": {
          "ref": "19550d32-2cfa-479b-b3ec-6ad9d0036320",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "836df35f-f9bd-4e35-baa1-a654ae0eb48a"
        },
        "item": {
          "id": "f10368c0-f5ee-4880-9e7d-1b9aa2a1191c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "83638a2c-da15-4bcb-887f-9b4103c8f43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c621be6c-5720-4b85-9cb6-144cae9541d2",
        "cursor": {
          "ref": "e3bab6be-0496-4622-809e-8e803e1db7f4",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "25d10b1d-077f-47f4-ac79-72af09bfd39c"
        },
        "item": {
          "id": "c621be6c-5720-4b85-9cb6-144cae9541d2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "15489320-67a9-4bf5-b733-0e96263088ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6a77d0-b151-40df-9fc3-8525ec3eaff0",
        "cursor": {
          "ref": "c9bb5522-abc9-4e27-88e9-ffa70e3c272c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "92432816-99a8-482f-b90b-fc07b3b74b2d"
        },
        "item": {
          "id": "ff6a77d0-b151-40df-9fc3-8525ec3eaff0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fc878c89-1e4f-4881-99ef-65bd6cb5429b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9043f90-b3ee-4dc4-bc18-21a274930a0d",
        "cursor": {
          "ref": "6f3d04a7-95ce-4401-8270-cdce7ff9a310",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ff81ad34-1746-4af7-81cc-fb756343b2e7"
        },
        "item": {
          "id": "c9043f90-b3ee-4dc4-bc18-21a274930a0d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a6c3819f-721b-4482-a593-59271ba8cee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8026b73d-3a47-440a-a574-5e5d224a4f01",
        "cursor": {
          "ref": "637d5860-2da7-41da-a594-324d5cb9b3fe",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "02447140-ee3f-4fba-86e8-6a523b110585"
        },
        "item": {
          "id": "8026b73d-3a47-440a-a574-5e5d224a4f01",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "54cb1c10-c9b4-468b-8790-243544e1226a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30557018-3835-4be3-8f7c-ae8372e44583",
        "cursor": {
          "ref": "752e03e2-4dd1-4dbe-b60e-3d61b7d95d22",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0330b57c-8028-4acf-b9c2-8094b3b32ac7"
        },
        "item": {
          "id": "30557018-3835-4be3-8f7c-ae8372e44583",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d059b4aa-e752-4e53-ac89-520aa5382310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998c89ca-964d-4919-bc00-3f1af4505acd",
        "cursor": {
          "ref": "a9d8f41f-f94e-4302-89e5-2756b20d7f38",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bd416ebe-d00c-461c-81e9-a550df8045ed"
        },
        "item": {
          "id": "998c89ca-964d-4919-bc00-3f1af4505acd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4d1a7bb5-0e38-4ea0-a18a-d5107974bee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68648b16-7da2-46b0-a140-fcfd6d5cf541",
        "cursor": {
          "ref": "3f120106-63b8-4b80-bcc2-5439e0aca935",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ab917f74-330f-42fd-98c5-6fbdbde3111a"
        },
        "item": {
          "id": "68648b16-7da2-46b0-a140-fcfd6d5cf541",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "30bb36a3-a729-4d8b-aee6-d5f0c9a6b9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f45bc24-bb6d-4050-9008-730bb43ac81d",
        "cursor": {
          "ref": "802aaac6-1bde-41ce-825b-744aec1937e1",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "59ed5f59-c56b-4144-863a-93c2f0a51be1"
        },
        "item": {
          "id": "3f45bc24-bb6d-4050-9008-730bb43ac81d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3cf9ead9-ea6e-41aa-a698-11ddd26b6d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad675fd-cf15-40c7-bb34-91213d1add2a",
        "cursor": {
          "ref": "f11a41b6-e4ed-4161-b416-06a39cf97d8a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2154feb2-30e7-4459-905b-36dd84dc08b0"
        },
        "item": {
          "id": "aad675fd-cf15-40c7-bb34-91213d1add2a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b49d71e7-bbbd-4d02-8e49-631a74823463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34839f67-d28d-4060-9861-f9a6928d0639",
        "cursor": {
          "ref": "f387e55f-23d2-4fdd-b72d-bf4577c44913",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9290feb4-8a7c-4e3d-acb2-4e9ef328b973"
        },
        "item": {
          "id": "34839f67-d28d-4060-9861-f9a6928d0639",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c286100c-11f8-45b9-b6bb-bed047152c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118b02c6-1729-4f3f-b19c-dd3b371a6bdc",
        "cursor": {
          "ref": "407c00ef-35a4-4117-a3fc-50cc02c42e0c",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "990aa964-a552-45a1-bc7d-3a59d0a5dda8"
        },
        "item": {
          "id": "118b02c6-1729-4f3f-b19c-dd3b371a6bdc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5180549d-c8ca-4f37-8f79-0e9ae2e0aca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdeab447-1c68-4b3d-9da5-0563c09cc3d6",
        "cursor": {
          "ref": "7875f782-db15-484a-bc94-6af670a674e7",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f7e8cebf-94a2-4735-ba77-a7f61edb6136"
        },
        "item": {
          "id": "fdeab447-1c68-4b3d-9da5-0563c09cc3d6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1d7ee001-f403-4119-bca6-352e117924cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b7e8ce-4fbf-47c8-952f-ca8843f51fb8",
        "cursor": {
          "ref": "2e1934cd-b440-451d-a59c-eeee6d9f5e1b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ec45556f-c194-4b5a-ae7c-088c93227f36"
        },
        "item": {
          "id": "37b7e8ce-4fbf-47c8-952f-ca8843f51fb8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2d12f85f-416c-4609-b0bb-92c492fcd025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434ea451-7db9-4241-923c-e3fcf58a08b8",
        "cursor": {
          "ref": "85ea4b3c-4184-4dec-9c8d-1b486f8d7c78",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c53d2ba5-2ea2-4299-8608-7af4843bd02d"
        },
        "item": {
          "id": "434ea451-7db9-4241-923c-e3fcf58a08b8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "30bbfd81-4379-4110-bd29-30fe6f07e4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db1154d-2223-439d-92f7-500737033ea3",
        "cursor": {
          "ref": "80f86fcb-58ea-46ee-b6b7-efd57c4463ba",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8820f16e-2e78-4e3a-a216-360a7e86a255"
        },
        "item": {
          "id": "5db1154d-2223-439d-92f7-500737033ea3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "02bc0d9b-4e90-4d59-a6d5-89f36a2793f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb2f4c4-bfd4-473e-8c75-c9242d692dee",
        "cursor": {
          "ref": "41d0a070-476e-465e-8a3f-394753ab3e67",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f19baf98-868d-416e-9193-87e7ed264f03"
        },
        "item": {
          "id": "3bb2f4c4-bfd4-473e-8c75-c9242d692dee",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c19c125f-2c44-400a-bcf1-027bc9b058c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19b92aa-3d84-4c34-8916-0fd31ef4974e",
        "cursor": {
          "ref": "9c198455-7d4f-41d5-a9b5-c67929346203",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "706517f2-5d28-4458-bf63-4daba924b3ac"
        },
        "item": {
          "id": "d19b92aa-3d84-4c34-8916-0fd31ef4974e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "137f579f-360c-4be7-a7ff-36f3e1184a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cdab40-8f8d-4b05-be84-d534da943f2b",
        "cursor": {
          "ref": "01982b56-589a-4edb-bb66-ada641db2b05",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d4f36b41-9975-4cab-9614-bd27788ebc61"
        },
        "item": {
          "id": "49cdab40-8f8d-4b05-be84-d534da943f2b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a9badfc1-d9e5-47c9-9019-f3d1875a0b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517710f6-2af1-410d-993d-256684fbddf9",
        "cursor": {
          "ref": "39cf6d83-64d0-489e-91df-75870d0fc61a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1ebc6391-55c5-4712-9feb-b370f5765553"
        },
        "item": {
          "id": "517710f6-2af1-410d-993d-256684fbddf9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e0dc84f8-1862-428f-afd1-a43600769f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a368ad-9d05-4464-87eb-ec41c1136a53",
        "cursor": {
          "ref": "fdc7cd57-433c-4df7-b985-efa6b79c7415",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7990b4d3-ab0b-4dc2-90e7-390799dc8b87"
        },
        "item": {
          "id": "26a368ad-9d05-4464-87eb-ec41c1136a53",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c184aa50-ffe8-41b4-9a27-c825ad4199d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7132f7-1583-4ecf-9694-84c2d1d6ef4f",
        "cursor": {
          "ref": "88a2e303-be30-431a-871e-8e28d8b6c6ef",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3dd839f2-f938-4696-ab10-6a363bb6b1c0"
        },
        "item": {
          "id": "bf7132f7-1583-4ecf-9694-84c2d1d6ef4f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7125fa13-8dfd-4595-9e93-040a31fb5783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae9d39e-35cf-4ad0-ba88-d2b8b95361c9",
        "cursor": {
          "ref": "aedb04b0-544d-4b91-ad6c-6146b7d1bf90",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "270d107d-7dbd-4d45-9f81-c518cf7ab117"
        },
        "item": {
          "id": "2ae9d39e-35cf-4ad0-ba88-d2b8b95361c9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7b82ca51-0dbb-4857-9b00-ffb5816c0e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22365581-3488-4142-839e-b154d14c0b74",
        "cursor": {
          "ref": "eef948d9-e6cc-4c38-a6f9-92c7cc4743c8",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "66dbba14-73f6-4ae6-bd73-16acbaf7c8eb"
        },
        "item": {
          "id": "22365581-3488-4142-839e-b154d14c0b74",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3bbc8ad4-ce1c-4a18-860e-c420816b08d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040b5eb1-f30f-4b66-ac4a-6e495e0169fa",
        "cursor": {
          "ref": "9f6ab59b-33f0-44ef-a63c-bf94220d370f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "57f32fc2-fd8f-4815-aec8-ce1a903b87de"
        },
        "item": {
          "id": "040b5eb1-f30f-4b66-ac4a-6e495e0169fa",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "860621cc-7441-47f5-b927-858765c35f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239e5f58-2b67-44c7-b76f-b0e69ed4c616",
        "cursor": {
          "ref": "42310a1c-201a-48ab-8b56-64a18d5ee35f",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c95ca043-cf8b-46f9-80c6-96a8d33472cd"
        },
        "item": {
          "id": "239e5f58-2b67-44c7-b76f-b0e69ed4c616",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1cbcaf7b-3671-47ff-ac3b-e9d7db864213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902f4c53-985a-41b0-9ccc-23b318baca1e",
        "cursor": {
          "ref": "061d2ed0-8b05-4725-a562-6288628214ea",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9cab3fa5-7fe5-41df-8dd5-6dc9be39dfc8"
        },
        "item": {
          "id": "902f4c53-985a-41b0-9ccc-23b318baca1e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "72ecb45b-cb62-4135-a90c-7047c3871584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9708b6a2-7fff-4ac6-b043-9d9256545a09",
        "cursor": {
          "ref": "c604d3a7-7adc-458b-ac94-d8b51c9b8669",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e21e5b0a-7fe7-48af-9659-939951707729"
        },
        "item": {
          "id": "9708b6a2-7fff-4ac6-b043-9d9256545a09",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "21eeec88-b88b-4f9c-90ee-5f6da4f38000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caef265-9747-4f51-900c-22c3cf26a294",
        "cursor": {
          "ref": "94b43713-c053-48d5-99e3-18fd3cf25a7c",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1b92c3a4-a6fb-4a51-91cc-92d6111cc26b"
        },
        "item": {
          "id": "7caef265-9747-4f51-900c-22c3cf26a294",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5d631718-1be2-4d98-86cb-92f39ad04fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab900530-8ac7-4edd-85ce-fbb4e84306d7",
        "cursor": {
          "ref": "bfdbda1b-cafe-4a38-9a29-725296dd2ee3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c11afe97-f128-4ac1-bfbd-443becd74018"
        },
        "item": {
          "id": "ab900530-8ac7-4edd-85ce-fbb4e84306d7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c186ebff-2f2f-4260-a95c-df3eaa42aa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1646b672-c962-4c82-bd64-260efbe2b3b2",
        "cursor": {
          "ref": "2c0cd5dc-5a24-42b7-b92e-d824e3976769",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8e7e62c6-b6d5-4fb2-a6f7-7a38ac12f80b"
        },
        "item": {
          "id": "1646b672-c962-4c82-bd64-260efbe2b3b2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "452a5299-dc35-483f-863b-663cba7cc82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88b5b50-1ab0-4bf5-9ab0-b8f7f9885f59",
        "cursor": {
          "ref": "ee81f3a7-cdd9-4c8f-8189-c34ffc241ca6",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b0a4f8af-b664-46e3-a62d-66fbd29182f1"
        },
        "item": {
          "id": "c88b5b50-1ab0-4bf5-9ab0-b8f7f9885f59",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2c6e430d-c58b-42ef-907b-51055cda9a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08cc829-16de-4632-bc1f-f49239434c32",
        "cursor": {
          "ref": "0ef19a64-afeb-4af8-b604-b11ea7a1cb2a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "77173c77-0332-48ef-8391-eddecd2f098e"
        },
        "item": {
          "id": "e08cc829-16de-4632-bc1f-f49239434c32",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b5ce45c5-500a-4255-bf51-6cdf7338cb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7574dcd8-1b40-45e1-9c73-fa0ccd43f1a9",
        "cursor": {
          "ref": "93fed88c-1fbc-4927-810f-6aff57802ff2",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "adc65d33-25b1-4fb3-a909-d70d18958edc"
        },
        "item": {
          "id": "7574dcd8-1b40-45e1-9c73-fa0ccd43f1a9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "83aecc77-a7f4-4ae4-8d16-f66f65ae0382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33146c1-90c3-4a14-93a7-2af8bd3ad980",
        "cursor": {
          "ref": "718649dd-5868-4892-85c8-216118d0e242",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "772ce458-a7db-47b3-9798-105133581ffd"
        },
        "item": {
          "id": "c33146c1-90c3-4a14-93a7-2af8bd3ad980",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cb7b986c-7102-42de-aea0-be5b74747e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51f7fce-e243-4f8f-8822-0f0f88fd293e",
        "cursor": {
          "ref": "57317b79-463f-4518-bf31-e169191a3ed0",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9a5eca86-4eac-4c83-b4fd-6eda8968442c"
        },
        "item": {
          "id": "b51f7fce-e243-4f8f-8822-0f0f88fd293e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "57c3baa5-396c-4e57-a072-1550de3a482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af68a6bf-99fb-47b0-95ec-7867e4b5f782",
        "cursor": {
          "ref": "be0694c3-d0d9-4f23-9e76-350c3e171652",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "314ff27c-f4dd-4aa1-96d2-cdcb6a263108"
        },
        "item": {
          "id": "af68a6bf-99fb-47b0-95ec-7867e4b5f782",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "de846856-59ac-4938-b16c-e666e86c5c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb8ecc3-23b0-4dce-9bca-f7447b855dfc",
        "cursor": {
          "ref": "00f9d87f-6979-485b-923a-5d393059e0ff",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "92d734d8-b96a-4c08-bfff-da7eecb35e39"
        },
        "item": {
          "id": "dfb8ecc3-23b0-4dce-9bca-f7447b855dfc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7eea6d9f-8b6f-4b68-acd8-c9c6eb46fdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccd6270-f2c8-4cd4-869c-0a8f591bcf9c",
        "cursor": {
          "ref": "c075baeb-5dc4-40f5-992e-dfe1243c2a56",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "887f948a-bec9-4a34-8f3e-04784bf4251a"
        },
        "item": {
          "id": "9ccd6270-f2c8-4cd4-869c-0a8f591bcf9c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d2bda084-93a8-4b2f-8cb4-eae3a82021d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30d56f1-8ed0-4533-b851-ff957da7deec",
        "cursor": {
          "ref": "5d73188a-fc31-4bfc-b748-52fd1ad7a081",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "eaf2f214-ef88-425e-8d46-4056336f0965"
        },
        "item": {
          "id": "a30d56f1-8ed0-4533-b851-ff957da7deec",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "84e2e4c7-0fb6-43ec-9b90-d1fb1d6593a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d49725-73d7-4977-9a1c-edc4daa35fd2",
        "cursor": {
          "ref": "2e6f0304-98af-48c3-a300-cacd3b14a28c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "104506b5-5308-43d0-8aa4-5c046324c5ad"
        },
        "item": {
          "id": "b6d49725-73d7-4977-9a1c-edc4daa35fd2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "34df1da5-98d8-4465-9fba-2494ebebb5d7",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "937ca500-1bec-4522-8420-797c837ac6bc",
        "cursor": {
          "ref": "6ab74e7e-f880-4381-94ce-944049f9e537",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6d94716c-12a2-4d0e-8b82-da9eafa6fd43"
        },
        "item": {
          "id": "937ca500-1bec-4522-8420-797c837ac6bc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "71aeff01-10c1-4f4b-b53a-6feb2a044fbf",
          "status": "Created",
          "code": 201,
          "responseTime": 162,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e825e15-1f51-4f7a-925c-33d0456ede32",
        "cursor": {
          "ref": "6b2a11e6-571e-48b1-8349-8e1ff0fd7fbf",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8204fc67-18b9-44c1-812e-98d7ebd3ff62"
        },
        "item": {
          "id": "8e825e15-1f51-4f7a-925c-33d0456ede32",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d8756137-94cf-476a-9d90-e389ebfe117f",
          "status": "Created",
          "code": 201,
          "responseTime": 254,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcf1897-29d6-459d-9951-b04595eef366",
        "cursor": {
          "ref": "3b59c459-9b1f-411e-ac46-f18c2fad25a3",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2e1cefb4-91c4-4f46-9b4d-03d0744ff074"
        },
        "item": {
          "id": "edcf1897-29d6-459d-9951-b04595eef366",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "80767500-bca9-4177-ac69-8a54b80c7213",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6b751f-2e1d-4808-a939-ae1607469daf",
        "cursor": {
          "ref": "234015af-13ac-4803-8ad0-84d2b896a913",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b169366a-f0e8-41dc-bff8-8016d3ba68db"
        },
        "item": {
          "id": "0d6b751f-2e1d-4808-a939-ae1607469daf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7cca992b-d7d5-485a-9515-69791ae2d3d2",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db6bb17-65ec-4cb9-8a4a-6a557174d1e6",
        "cursor": {
          "ref": "96ac022b-b7ec-4bef-8710-af9dc7f9a75f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7927e6fa-2e46-492f-a079-1e059db18e45"
        },
        "item": {
          "id": "7db6bb17-65ec-4cb9-8a4a-6a557174d1e6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "761a99ed-d75d-45a4-8b3f-f313e8fdf2ce",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8c9426-2bb2-43eb-8aef-0579abf6a5ad",
        "cursor": {
          "ref": "95ce1f2e-e9f8-489a-b2e7-e489094b92f1",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "23daadc3-5fae-4d50-8074-a05d283f9677"
        },
        "item": {
          "id": "fb8c9426-2bb2-43eb-8aef-0579abf6a5ad",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0aac0d91-50ab-4cd2-9b21-609ee78497a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5584de4c-3b16-49da-81b1-9ed0210a11a8",
        "cursor": {
          "ref": "e88bb40d-2649-430a-9767-483feb95f05d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "efb7e978-4881-4187-bd8d-c44e1169e189"
        },
        "item": {
          "id": "5584de4c-3b16-49da-81b1-9ed0210a11a8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "13a6b8ac-5323-477f-95ef-7d0e4a8492f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7f363f-098b-4c72-829e-abe6e6dc331d",
        "cursor": {
          "ref": "7c6986d0-3248-4b11-94b1-4ea4b61836b9",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "eb6c914a-96c3-495c-b829-72f16651a6be"
        },
        "item": {
          "id": "5f7f363f-098b-4c72-829e-abe6e6dc331d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f61ab719-a1f1-40a8-a568-1bff57df721b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d85df2d-0844-430f-a347-41a683719c9f",
        "cursor": {
          "ref": "47053905-a149-428a-a27c-2e30ffff01ec",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b31319b6-afd5-41f6-be87-bafaa81c48be"
        },
        "item": {
          "id": "8d85df2d-0844-430f-a347-41a683719c9f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d5a2e4b0-e017-4fa3-bb12-21ddc6a716d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b45519-e8b2-41f2-b54d-2f251e1c0d71",
        "cursor": {
          "ref": "477e5e69-ec20-4929-b846-89162c2f13c3",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bf3524f0-b789-46dc-976e-ab6b125f417e"
        },
        "item": {
          "id": "95b45519-e8b2-41f2-b54d-2f251e1c0d71",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9fc26741-d507-4d2e-b1e5-b5ead27f6c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e007a7-09aa-4d9a-af2a-f5cef53f8b9e",
        "cursor": {
          "ref": "cf4dbd6c-603d-4969-bffc-fcb6d832fa01",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a4bcbe6c-5e2a-4932-b63c-47a459cb8dc8"
        },
        "item": {
          "id": "e2e007a7-09aa-4d9a-af2a-f5cef53f8b9e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "696f6981-d810-4522-a9a3-26085dca3b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd8248e-f938-44b6-bb58-6a845c1587c9",
        "cursor": {
          "ref": "0431e9c0-7c99-4b21-9553-55317ba4abc8",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cd181708-8025-4ac5-ae37-87ec8acbf7c2"
        },
        "item": {
          "id": "7bd8248e-f938-44b6-bb58-6a845c1587c9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "288aa82e-7303-41ef-ac11-0125e3c5dc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4a1dd1-8145-432e-b933-638f834ae803",
        "cursor": {
          "ref": "0a395894-5b39-4a91-866c-add3eb493f9f",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b0c34495-2197-43ed-87af-7b08e7f0cf58"
        },
        "item": {
          "id": "8c4a1dd1-8145-432e-b933-638f834ae803",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2a08be60-ccad-4a0f-9db3-71aed7a21b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7398b9bc-5922-4082-a809-9bda7c1d2d57",
        "cursor": {
          "ref": "8fa1f885-b150-4026-a2ba-8de2cc0697ca",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d2b1e3a3-f142-4be4-9114-dc324905352e"
        },
        "item": {
          "id": "7398b9bc-5922-4082-a809-9bda7c1d2d57",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "17d6e94b-38eb-491b-be64-2d3aa3935404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6713d3-7bf1-4daa-b4d5-5776d2e90747",
        "cursor": {
          "ref": "5a972b78-e95e-4826-9119-47ccd2571813",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "af57c459-f8c8-482d-bc64-9c54cf3b38f9"
        },
        "item": {
          "id": "2f6713d3-7bf1-4daa-b4d5-5776d2e90747",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "70f83780-8b66-49d5-84aa-2f487a004354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd3f584-554c-442b-b7a7-20b048e41dd9",
        "cursor": {
          "ref": "a0382964-b856-4866-9590-d7ba3568338d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a5b6cf72-1515-4b46-a59f-fa3739e14aba"
        },
        "item": {
          "id": "2fd3f584-554c-442b-b7a7-20b048e41dd9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aeeeaf07-0ef7-4d46-8ac4-c402d5193193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eb3452-a95b-41ab-a093-2ca85a669cee",
        "cursor": {
          "ref": "a9ec4491-b7a5-40b4-9092-b6ec4ed852c0",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "10204d71-1f28-432b-9d1a-2c9b50bad57e"
        },
        "item": {
          "id": "30eb3452-a95b-41ab-a093-2ca85a669cee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a3e80c3a-e01f-472c-b083-780d23dd3f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bf6c7a-d88f-478a-bf70-225b987105de",
        "cursor": {
          "ref": "933ded51-6677-4b7e-8bca-23ff901dead4",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "33155347-a31e-4e49-9c66-c386236dfb58"
        },
        "item": {
          "id": "48bf6c7a-d88f-478a-bf70-225b987105de",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "05498b17-2cda-48f9-b7ab-bd95e4704cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25b6e3f-19f0-4b1b-8139-7fda0f44db39",
        "cursor": {
          "ref": "0d129a14-f35f-4611-be80-9e58519b6863",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e3d39a56-fd42-413b-8303-a3997ba23277"
        },
        "item": {
          "id": "e25b6e3f-19f0-4b1b-8139-7fda0f44db39",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "df7814a5-aef4-420f-9c89-f4dad16813b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a02f79-2069-4a25-b187-ed947f6585ca",
        "cursor": {
          "ref": "aeae74c6-22ba-49a9-9484-319a007a4bf8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d9e2aa21-fce4-47dc-a730-7cc41bd7e430"
        },
        "item": {
          "id": "17a02f79-2069-4a25-b187-ed947f6585ca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ed187055-3a8e-4e74-84c1-22f9b21550f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5848fc46-5157-45f2-9939-8f0bfdf57e69",
        "cursor": {
          "ref": "28e7bb59-e065-4877-8edc-a3ce0bdd8bf7",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a60c7d43-039c-4a9b-ac07-968a84766739"
        },
        "item": {
          "id": "5848fc46-5157-45f2-9939-8f0bfdf57e69",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3f211585-4575-4b74-9574-195d37706923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f764a0f-aa7e-4951-8c85-4c6cdd9b4434",
        "cursor": {
          "ref": "5901fb59-062a-48a7-b9a6-4356c5c57adc",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "870d03bd-e64a-4dc7-90b6-06397081e40d"
        },
        "item": {
          "id": "1f764a0f-aa7e-4951-8c85-4c6cdd9b4434",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "714fc807-c77d-4cd7-bb79-34af9f5b6a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e673af-61bb-42fd-995c-2a0ccbb119fa",
        "cursor": {
          "ref": "24a2503e-d042-4cdc-9a43-8d98fd98ef30",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e5cc853d-8eea-4939-a05d-dd5f8fe63a97"
        },
        "item": {
          "id": "98e673af-61bb-42fd-995c-2a0ccbb119fa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7d99c237-f9e8-4a54-a926-f9ea74a44e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6035a7a-7bea-4bd4-963c-d70f78ad873d",
        "cursor": {
          "ref": "d6b01330-878f-4e68-93ad-700631eadd69",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b1b60b2f-e6fe-4854-bd37-0d4ad3b657cd"
        },
        "item": {
          "id": "c6035a7a-7bea-4bd4-963c-d70f78ad873d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d587fc8a-8749-4912-bfa6-b79de2607221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75da158b-8d49-4402-ab71-6c4c7738f43f",
        "cursor": {
          "ref": "4dba38bf-0cd4-4131-967a-e43e1773b46f",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ba4110fd-1c83-4728-a80d-c256032fe705"
        },
        "item": {
          "id": "75da158b-8d49-4402-ab71-6c4c7738f43f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "970435d8-6cdf-4f2a-b644-e9c968197d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b05dab-6da4-479a-8248-e6e34c66c6f8",
        "cursor": {
          "ref": "c4529d07-c23d-49b2-842c-83e2985c2263",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7742404c-5704-42c9-937b-deec7ee02c72"
        },
        "item": {
          "id": "72b05dab-6da4-479a-8248-e6e34c66c6f8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cab0b922-bc62-43ef-9d95-d41d2b62c17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15994ed-1a57-467e-a3d3-2f9e04e429fd",
        "cursor": {
          "ref": "1f91643f-18b8-4135-aef8-b5f7b6a4b9ec",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8c58b2b1-11da-4906-977b-b3c0367f83b5"
        },
        "item": {
          "id": "a15994ed-1a57-467e-a3d3-2f9e04e429fd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1f55e95a-2349-4eaf-9f3c-15e1ee717c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73736b23-6cda-4bb7-a016-cf946f51175c",
        "cursor": {
          "ref": "93433e00-937a-4fd1-8e9d-558c66541786",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "567391eb-1949-4cbb-99e7-91f22d1f9abd"
        },
        "item": {
          "id": "73736b23-6cda-4bb7-a016-cf946f51175c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cbbf0464-4d74-4dbe-ae9d-95eb191e56a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b962c719-9da2-43f6-88f9-ed044a098a1a",
        "cursor": {
          "ref": "73843c12-ed7b-4c1b-872d-79737e48638f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "343bcdae-66e6-4787-b7ee-7f988c16a969"
        },
        "item": {
          "id": "b962c719-9da2-43f6-88f9-ed044a098a1a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "82a699e3-7921-4cb8-b0e2-123ee5946deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675b474c-047e-4338-831a-016dd0cc5333",
        "cursor": {
          "ref": "26e5a3c9-3ed2-4480-a6bb-223dd60544a7",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a1d75e90-a940-44b1-9a35-8f1adf0c0912"
        },
        "item": {
          "id": "675b474c-047e-4338-831a-016dd0cc5333",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0897366e-f70a-434e-a72d-87b5a1861031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd2f240-aa76-4d03-9002-2843f42ecb9e",
        "cursor": {
          "ref": "7bf79234-edca-47ff-8956-64a5ef4df69c",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1923eac4-afd8-4bb4-a595-1d925079f192"
        },
        "item": {
          "id": "3dd2f240-aa76-4d03-9002-2843f42ecb9e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7399cdad-340f-4dba-8468-25c04fb1d507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce095ce-e553-4b0a-8822-3fd592db5a50",
        "cursor": {
          "ref": "4100e65d-24e6-4a00-8432-0f97adfc8f93",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4d5c7add-f804-4084-a3c2-dd295251f8e7"
        },
        "item": {
          "id": "7ce095ce-e553-4b0a-8822-3fd592db5a50",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bad8c30f-1759-4ad2-b558-5c0fb3a732f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a503b19-0105-4017-8d09-9979e24a4527",
        "cursor": {
          "ref": "1d11497e-909e-4ebe-a906-2af92bad6a41",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9bcca2f2-9cf3-4ae2-8e2a-da005b786963"
        },
        "item": {
          "id": "3a503b19-0105-4017-8d09-9979e24a4527",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "931e80b6-0e48-41fb-9dc6-6d88390bdf15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10ff175-3311-427f-9412-720ce7c829ad",
        "cursor": {
          "ref": "272bbb58-8753-4644-baad-d9f146b2724b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a78e342f-1731-4775-9055-158aa3c52541"
        },
        "item": {
          "id": "f10ff175-3311-427f-9412-720ce7c829ad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c84f548f-9717-4572-b705-bb7358cc649a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ca652f-d597-4b28-9b53-ffa6a4fb1ebb",
        "cursor": {
          "ref": "99a33909-d702-4b65-9ef5-dcda2cdb817e",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "da891a9b-9210-4403-a39e-bf43d0a61f1c"
        },
        "item": {
          "id": "75ca652f-d597-4b28-9b53-ffa6a4fb1ebb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f2a47154-102b-48f3-bb2e-ae723828017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9ca0f0-e194-4a6b-a593-01f6a7897c0d",
        "cursor": {
          "ref": "01380c57-1afa-4b98-8e04-a9beb41fd8bf",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "30738232-2cbd-4776-a35c-b6b5053ea39d"
        },
        "item": {
          "id": "db9ca0f0-e194-4a6b-a593-01f6a7897c0d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "845b0145-6086-4f57-95ec-1bcaf8e66621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d527567f-f9e0-4f94-89a9-ebb71c4a541d",
        "cursor": {
          "ref": "5cc34e3a-6725-42da-b336-3583144e774f",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cde16f1e-488f-473a-9d8b-828f4171a1c8"
        },
        "item": {
          "id": "d527567f-f9e0-4f94-89a9-ebb71c4a541d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "de91969f-f02d-4078-8c08-05fbb843c463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4988bfe6-814c-4257-b94d-1751b50f7624",
        "cursor": {
          "ref": "c086eea0-f116-424d-ae12-8c4cad37f2ca",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "678c536e-aee7-4a23-87a3-0b34bb1db276"
        },
        "item": {
          "id": "4988bfe6-814c-4257-b94d-1751b50f7624",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "76fe1308-63a6-49bc-994b-99d6ea739fbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31404744-0504-43a4-92d0-d3acc5e88034",
        "cursor": {
          "ref": "854f3d98-d97f-4b2f-9547-9bab93960dbd",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7c4c5d8c-226b-45ed-9c36-14eb93af78fa"
        },
        "item": {
          "id": "31404744-0504-43a4-92d0-d3acc5e88034",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "45535294-b0fb-4e56-b066-483055aa572f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b951ce1-5369-4851-86f8-f0f3805f99d9",
        "cursor": {
          "ref": "a22f86e9-410e-4b99-96c3-f44f6d30463b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8e59c967-6965-4595-915d-652678c7374d"
        },
        "item": {
          "id": "5b951ce1-5369-4851-86f8-f0f3805f99d9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3266e0b6-c153-4a1a-903a-0082fa1aa3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbc5c1c-531a-4c71-9baa-e045e4bdf9cc",
        "cursor": {
          "ref": "808ee9c5-d9e2-4e80-9080-24d69545003c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3b28ed10-315b-4da2-a702-bb8568de59cb"
        },
        "item": {
          "id": "ebbc5c1c-531a-4c71-9baa-e045e4bdf9cc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e0d6fcb1-31e5-4fc3-9533-0b29af7658a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc37307-f652-41dd-82ad-7eba1789ed89",
        "cursor": {
          "ref": "c5307404-4d7b-4b99-8b0a-d25582c78c4b",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6471849f-b75e-4679-a3fd-d9330ae2dce0"
        },
        "item": {
          "id": "dfc37307-f652-41dd-82ad-7eba1789ed89",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cc7f0251-8cb7-4e4b-8e1f-8d234b98818d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba510030-fabf-4e6b-932d-39c0ebfc27d3",
        "cursor": {
          "ref": "f007f771-425e-4ee5-9bc0-a8adc1d86d00",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "aed8a7fe-7bf0-4677-84a1-750d7bc228f3"
        },
        "item": {
          "id": "ba510030-fabf-4e6b-932d-39c0ebfc27d3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "501d2f3b-842a-4334-a401-9a13e77f46bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd9829a-0770-48ff-b959-e0b2730cdf0c",
        "cursor": {
          "ref": "77ab65e9-2db4-4983-917b-c01802e2da46",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d954c419-7537-4c79-a414-9fb79f559afe"
        },
        "item": {
          "id": "1cd9829a-0770-48ff-b959-e0b2730cdf0c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "827ca6fe-c046-4dbd-aea1-6f34aac2f033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cc52c2-f8ac-42cd-b249-dbdda53c319c",
        "cursor": {
          "ref": "c0edfccc-856f-4200-aad6-d265515732a2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1dafb1bd-e8d9-414a-b8ae-cfe7c5d6e9cd"
        },
        "item": {
          "id": "99cc52c2-f8ac-42cd-b249-dbdda53c319c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "27b7d15d-87a9-409a-a7be-ddc5bbc2fcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a5b8b7-d1be-4e71-ad64-1f36580af0fa",
        "cursor": {
          "ref": "77b1b55e-ee98-4f24-b69d-25dc4b5fc2cb",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e5141d93-2b72-402f-a1d4-557011ee4e44"
        },
        "item": {
          "id": "c6a5b8b7-d1be-4e71-ad64-1f36580af0fa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c388d30d-c5fa-495f-af52-ac59d3a5b6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bdfb0d-2c66-4cfb-a2e9-ad0d2a765684",
        "cursor": {
          "ref": "8e91215b-a500-40f6-b7db-b73f0099f7a3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b3e689d4-7be3-4317-b5d7-95a7d256ec25"
        },
        "item": {
          "id": "b2bdfb0d-2c66-4cfb-a2e9-ad0d2a765684",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0e52ebe5-2c54-4111-918f-2031b7a515d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53121272-4589-4501-8f95-92366bc266a7",
        "cursor": {
          "ref": "c774e252-28dc-4af9-a56b-1d71443a1428",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8872d86e-28cf-475a-a085-56ccf69a0f58"
        },
        "item": {
          "id": "53121272-4589-4501-8f95-92366bc266a7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8dff9d21-c245-4535-b4f6-73fc2950a680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4563c52-4f08-4adf-ad2f-5eb9d0fd7c54",
        "cursor": {
          "ref": "b7c9e6a7-b809-4a97-bc22-cbd516d463b5",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "67e22cf3-4c9b-41d5-81dd-b958de185c6f"
        },
        "item": {
          "id": "e4563c52-4f08-4adf-ad2f-5eb9d0fd7c54",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aef2b663-96b6-4fe2-855b-e8df8056ad03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc96016-07b0-4b97-9c65-f72e5e78b166",
        "cursor": {
          "ref": "96de264b-301a-4ddc-bbcc-ec49e1b333b1",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "68cc2aaf-6fab-4be5-a327-e49dfe0aefff"
        },
        "item": {
          "id": "5cc96016-07b0-4b97-9c65-f72e5e78b166",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "43ac6058-2656-428c-a6c2-3ad69d9e24f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369f45ed-1be6-4b22-9a98-472a04ef82b3",
        "cursor": {
          "ref": "1a2aae67-d646-42f1-b07a-5bcfd9d32eb2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "94c5a6ca-9bd3-41da-b76d-6236e3a12930"
        },
        "item": {
          "id": "369f45ed-1be6-4b22-9a98-472a04ef82b3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e608ba1e-dbe9-4b81-8779-3441161dbd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c55a0a7-432e-4957-9a5b-ca035e0783d9",
        "cursor": {
          "ref": "290e9a28-9abe-4f5f-8284-86aa973ccd40",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "21fc3655-fe1d-48a3-a2c8-2ba4bed18048"
        },
        "item": {
          "id": "1c55a0a7-432e-4957-9a5b-ca035e0783d9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "181b942e-679c-41e1-b683-15de52cb3e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5663dff9-7d9a-4e36-b621-31b4b18bf491",
        "cursor": {
          "ref": "c8e41940-96a4-4c49-b089-c337dee59d2a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6fc7104b-31dc-44dd-a5c0-b302d1c0ea9c"
        },
        "item": {
          "id": "5663dff9-7d9a-4e36-b621-31b4b18bf491",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e9b81020-1992-419a-87e6-c9054cd8c200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1535abc3-5c3c-4fdc-9ef6-b6a2e3547ab1",
        "cursor": {
          "ref": "14f7ae4f-fb85-49a4-a410-67a2a4956d6d",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "96cf5cb6-d54c-4124-ad30-6460ddba8f8a"
        },
        "item": {
          "id": "1535abc3-5c3c-4fdc-9ef6-b6a2e3547ab1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5203a0da-d82c-4968-946e-d4fee1cc9270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a13e35-5cb6-4528-a6a9-3cc727e6daae",
        "cursor": {
          "ref": "cb5f7c60-4201-4214-96f4-5b38333e649b",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cb6d9215-f6a0-40e9-8c46-c01442b63671"
        },
        "item": {
          "id": "c5a13e35-5cb6-4528-a6a9-3cc727e6daae",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0bd0286f-1475-4238-8553-24f822fb1321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0c1398-2b3a-4fe7-83c7-22528b38e389",
        "cursor": {
          "ref": "9b2f8f70-a7d1-4100-aca7-8d4a31318d01",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "30ded0c2-fc61-4b3d-a546-ac25e07b213f"
        },
        "item": {
          "id": "0f0c1398-2b3a-4fe7-83c7-22528b38e389",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "315e4b3f-5781-45a0-85a9-cdaa40bd8e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee831da-0a08-4f88-aecb-bef10fab7ec9",
        "cursor": {
          "ref": "f3beff72-97b8-4bb2-9070-7e24ff8be06b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6b8d2cf6-36df-46ba-8903-0dc8ee42d038"
        },
        "item": {
          "id": "bee831da-0a08-4f88-aecb-bef10fab7ec9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bcf2e32d-00d9-4a4a-862b-c598b8951227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b0871e-be29-4134-a393-55cb46736db9",
        "cursor": {
          "ref": "ef5a8b41-3f50-4483-aa5c-1298c187d0eb",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "55789258-2dfa-4abd-bc41-0a50df4ee702"
        },
        "item": {
          "id": "76b0871e-be29-4134-a393-55cb46736db9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3f87d28a-fd8c-4cb8-835a-9919a0e2bdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e6555e-636d-47dc-9704-6a97617da7f0",
        "cursor": {
          "ref": "c147a9f7-b197-4d6c-a7c7-081de26b4af3",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fcfa5c0c-c305-4506-b3dd-3afdc35db327"
        },
        "item": {
          "id": "85e6555e-636d-47dc-9704-6a97617da7f0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "52a7373e-276d-4668-b080-96cca48d02ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c620ec38-83d4-4983-85d6-b1820786e913",
        "cursor": {
          "ref": "d3e5504c-4501-4cbc-9f10-4187c4e90be9",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8e7bacd2-8417-4931-bcd8-f807f44962d6"
        },
        "item": {
          "id": "c620ec38-83d4-4983-85d6-b1820786e913",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a679263a-f236-41f1-94bb-92482dc7943f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bae5b3-a4ce-45a0-ad07-62667e525d60",
        "cursor": {
          "ref": "ea9e758b-cc92-4648-a201-939e104ec5ec",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a6a9831c-27e5-497e-bce8-022baba2adae"
        },
        "item": {
          "id": "d3bae5b3-a4ce-45a0-ad07-62667e525d60",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8623eb8b-94da-4761-ae1a-7a02f59bb9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54e707c-6964-4e90-be9d-f7d2d56cbe1d",
        "cursor": {
          "ref": "89d94096-ef99-4d78-8c01-c1cc349443f8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1310db28-e9ca-4143-ae2b-30ba6ef4d4e6"
        },
        "item": {
          "id": "e54e707c-6964-4e90-be9d-f7d2d56cbe1d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d07ddd5f-f473-4a64-8cf1-f9c757cfdac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e06a080-7d99-4c4c-b9a9-856a4c587e0e",
        "cursor": {
          "ref": "3d7a49fa-2eb7-48db-bd6e-9435cc1ce5f6",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "65293285-1673-43ad-8d89-34b312b544c6"
        },
        "item": {
          "id": "3e06a080-7d99-4c4c-b9a9-856a4c587e0e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cb4e50e6-f6d2-4ae9-8b8b-110f3fb32b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53eda90-c102-476b-a521-0dadb8e8bf06",
        "cursor": {
          "ref": "4cdf4f79-7ed6-46ae-ada9-99466fa4a6ba",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3fff0504-1937-4f9e-ac35-e67f81c6ba2a"
        },
        "item": {
          "id": "a53eda90-c102-476b-a521-0dadb8e8bf06",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d98dbb9a-e6c2-468d-8b39-e2405598f394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f964966f-00b9-4474-8636-05e591c66a5a",
        "cursor": {
          "ref": "ea87b204-ec42-4467-95b9-2dba68b7e14f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a780f9d4-fa9b-47a0-9ff8-300b0583c961"
        },
        "item": {
          "id": "f964966f-00b9-4474-8636-05e591c66a5a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "83be4c21-1a3e-410e-b0d8-a9afb1eeb494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d524c9c-ac12-4aa3-b37c-bd9cc216f85f",
        "cursor": {
          "ref": "3edcb482-4311-4424-adcf-6278e79da626",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3570f687-618e-4188-b7f9-119980836660"
        },
        "item": {
          "id": "2d524c9c-ac12-4aa3-b37c-bd9cc216f85f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bee2923a-9f89-4a33-a594-4c7d437f4fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c48181-1f70-4e3b-b324-91b5e196c3c3",
        "cursor": {
          "ref": "d45443be-ebde-4b7b-a62a-e927184529ca",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "07be2f99-abd6-4ef3-a4a5-33119e0f26a2"
        },
        "item": {
          "id": "07c48181-1f70-4e3b-b324-91b5e196c3c3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eaccc323-f537-418e-ac3c-1ab48f43fdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c454c74-63e1-46a4-a328-2f4c62bee4f1",
        "cursor": {
          "ref": "602fc9e5-7fb4-4173-a01e-b83e01966f05",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b26f44c0-6f47-4d44-8426-b3aa95f4d34a"
        },
        "item": {
          "id": "6c454c74-63e1-46a4-a328-2f4c62bee4f1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a50e893f-378c-42d4-bdc2-98b452b85a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1394ee-13ab-438a-a983-6c6a2889efed",
        "cursor": {
          "ref": "97da85c3-7bb2-41e9-a6dd-c8a767cc5073",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1479384e-b0da-44a0-a7f6-d5dd20f3b063"
        },
        "item": {
          "id": "fe1394ee-13ab-438a-a983-6c6a2889efed",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5b2f8b5d-7523-45b6-82de-81a391b6952b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb89e079-5b2a-4aac-a46b-cc946c77d5c8",
        "cursor": {
          "ref": "c17af16a-3294-419e-ba3e-9ca2bfd40771",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2bf970e1-e326-49c8-b73d-9e06ec69a4da"
        },
        "item": {
          "id": "bb89e079-5b2a-4aac-a46b-cc946c77d5c8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e796765a-6c60-47a6-83d3-8e6ac80d7ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9d0089-0de3-4669-9f2a-172895b4cfaa",
        "cursor": {
          "ref": "9a623d8f-b8b7-4f35-84a0-a816c6ce8881",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "02a2b5b5-ae00-4845-b1cd-075c99077685"
        },
        "item": {
          "id": "bf9d0089-0de3-4669-9f2a-172895b4cfaa",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "96ff6731-0b4f-4724-a25e-c08bc6b82d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6fc9c3-dd6b-4be3-91e9-fc2f331caa5d",
        "cursor": {
          "ref": "278b7377-e3f9-48e5-a723-92ecd1f82f9c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e849c19f-4318-4447-a7e3-7766eb24aaad"
        },
        "item": {
          "id": "da6fc9c3-dd6b-4be3-91e9-fc2f331caa5d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "92f7cb75-ffd5-4417-a7de-9a97e4e42ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ad1778-319f-479d-8fd5-25a6d917334e",
        "cursor": {
          "ref": "865c6d1d-b62e-4cfa-801d-dbb3bebdb9b7",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2d030a81-6671-4d38-986e-a8c99ad53708"
        },
        "item": {
          "id": "48ad1778-319f-479d-8fd5-25a6d917334e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b2566a2d-4252-4b67-8303-9df0a4354f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9d3978-57d0-455f-bfbf-3f7b8f257cb9",
        "cursor": {
          "ref": "553a320f-3fc8-4a87-ad3b-3ccfbed3b812",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8c6fa8ef-6a07-484b-9c2f-f9c5afb905f0"
        },
        "item": {
          "id": "9a9d3978-57d0-455f-bfbf-3f7b8f257cb9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "22ee4f69-bb24-484e-b343-54d578a81c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418b4f62-86f6-40a9-8845-b4bbf3f9b011",
        "cursor": {
          "ref": "606dcb53-b15a-4923-8bea-90c31cadd56d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "36bf8f78-5f23-445a-bcb9-d0972da2b76a"
        },
        "item": {
          "id": "418b4f62-86f6-40a9-8845-b4bbf3f9b011",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "15b7b1a3-6b50-4b0e-b6b4-8583976adfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25e8dac-e21a-4960-a86b-2b979167c60d",
        "cursor": {
          "ref": "6ca17016-d850-4c5f-af12-324d695d4484",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bf7c1e0c-fed8-4888-bc43-262cdb80ab10"
        },
        "item": {
          "id": "a25e8dac-e21a-4960-a86b-2b979167c60d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "626678da-b6bb-4395-99e9-2bfb4bee0b84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc3a67c-bfca-435e-befa-3e8cb99b475c",
        "cursor": {
          "ref": "1b50921b-1766-44ee-b19c-9359ca308cb8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "10245766-b947-4af9-9eb4-32b2c00c5bd5"
        },
        "item": {
          "id": "1cc3a67c-bfca-435e-befa-3e8cb99b475c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4fb27692-3878-4b25-93e4-a83afe849f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84ceb16-ad67-4878-9af7-01f3dddf3d58",
        "cursor": {
          "ref": "b83a5939-6f12-4cfb-8e50-d2eb8c1ada55",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fbab2b20-4653-4226-a186-6277ef1f6271"
        },
        "item": {
          "id": "b84ceb16-ad67-4878-9af7-01f3dddf3d58",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b8835cab-88fd-425e-bbd4-00e6ed6ccd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b259fc0e-adf6-41de-9460-7e82e32fd5bc",
        "cursor": {
          "ref": "4da7c89d-75cc-48ae-9a86-96140de39da9",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "117c9370-b8fb-4c60-a82b-cd4206db866a"
        },
        "item": {
          "id": "b259fc0e-adf6-41de-9460-7e82e32fd5bc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cbf0210a-ceb7-4d95-b517-104891a44599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2baba0-c2d3-4245-b888-38122142e525",
        "cursor": {
          "ref": "0e9ceb2f-3495-4813-980a-7b71e3f8435f",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4438d1bd-1bf5-4daf-b3ed-9d05ef17ab98"
        },
        "item": {
          "id": "bd2baba0-c2d3-4245-b888-38122142e525",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c9ab33ea-0d69-4c6a-8472-0030725e66c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cfc512-0e1a-4650-9a24-e378e77dfb25",
        "cursor": {
          "ref": "6fda36bf-5734-4a1b-91b3-b4d90e9beba0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b73a01e5-a2c9-41d7-b261-655a29b92193"
        },
        "item": {
          "id": "c2cfc512-0e1a-4650-9a24-e378e77dfb25",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "30a6ef4f-6d16-4050-a011-deb33863c786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c334604-83b8-43ad-9ac4-c23157fa4cff",
        "cursor": {
          "ref": "cf2d7ac4-724e-4892-89a9-2effc08972aa",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ab03f7b5-46de-42db-9be7-1657b797aa3b"
        },
        "item": {
          "id": "1c334604-83b8-43ad-9ac4-c23157fa4cff",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "52ca2bd5-2181-43ee-b5d8-2720c3f1b2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421df08a-5eb7-469d-84b7-00b7f72b8cea",
        "cursor": {
          "ref": "13330e78-23c7-4265-b5cc-accf0dd44620",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "66677b01-f94d-4147-9ba9-c77d4fa57344"
        },
        "item": {
          "id": "421df08a-5eb7-469d-84b7-00b7f72b8cea",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b1afaec3-62fb-4bc0-bd25-0c039b7cfd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2159d7-8ecd-4f90-8ca7-0e73abe8fc4f",
        "cursor": {
          "ref": "b69be2ff-b260-4704-ab3e-fb91d3621797",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0aa812f9-5e6c-45df-8f4f-15da880cd189"
        },
        "item": {
          "id": "5c2159d7-8ecd-4f90-8ca7-0e73abe8fc4f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "63a59a1e-f82f-471c-a0b7-0ae724cf32fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91a0ec4-8659-4446-8530-445176b69ab4",
        "cursor": {
          "ref": "25f0d86e-9b7d-4cb6-a070-6981a5361a33",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "372394d1-d222-4bd2-b784-34cf35e61a71"
        },
        "item": {
          "id": "b91a0ec4-8659-4446-8530-445176b69ab4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "87736e1d-57a1-45c3-8bc0-4ca603813384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c872e8cc-df17-4345-b89a-23e065f7e589",
        "cursor": {
          "ref": "43a20d4b-4f66-40c2-91f8-ce6d99f13c3c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "10cdcf6f-bee6-4d51-8272-f9eb26568a02"
        },
        "item": {
          "id": "c872e8cc-df17-4345-b89a-23e065f7e589",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "31edc869-4f1e-4e70-bab7-18be15f04330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dbfe6c-55a7-48b1-8b6d-f39127a06f65",
        "cursor": {
          "ref": "768875e0-b809-4aef-a131-7c7d7ea3c91b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9f90e640-137b-4ca5-a036-d8d093ea723f"
        },
        "item": {
          "id": "14dbfe6c-55a7-48b1-8b6d-f39127a06f65",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2d9a3d21-d35b-4a84-b39b-25e0db6328ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc2dc3e-294c-4658-989c-7dc863a89462",
        "cursor": {
          "ref": "743cdee1-3f22-4495-9508-ef516ca45a05",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a7cccc61-e234-4393-8d89-6c06792713e5"
        },
        "item": {
          "id": "4bc2dc3e-294c-4658-989c-7dc863a89462",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "43b8e14e-7c81-4032-a6ca-7190d3ec367d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340883d6-b851-4b3d-aa0c-31a0dd9ebbe2",
        "cursor": {
          "ref": "431d4b54-366a-493b-b834-633d979247ae",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4d3ffccf-1c1c-46cc-83ff-0309b4c03fcd"
        },
        "item": {
          "id": "340883d6-b851-4b3d-aa0c-31a0dd9ebbe2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9e9018ca-3a21-45e2-9df2-1f2c21e06064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3001c6-7af8-428c-b12d-c45108f50351",
        "cursor": {
          "ref": "e714ffd8-3411-44f4-a275-3c1f0c9825cf",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d173445e-947a-47a0-9c6b-c1634d2eda51"
        },
        "item": {
          "id": "cd3001c6-7af8-428c-b12d-c45108f50351",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8a9decb0-e097-426e-a401-5009f91ced4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b21c74-931d-423b-907c-88293fead290",
        "cursor": {
          "ref": "b93afe16-b4f5-447c-9e4a-e6a0f18a966c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "499b1283-18ba-4643-a418-f8868294660c"
        },
        "item": {
          "id": "d0b21c74-931d-423b-907c-88293fead290",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1b1948d8-ad15-4839-b095-d3000e0f1431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7392d4a8-ba3b-4cb1-b94b-babf0dbb66b2",
        "cursor": {
          "ref": "d20ea2a4-b9c6-4402-ba7e-f51aae1147a3",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c70d5919-fd5a-4681-b6ca-1fa414422111"
        },
        "item": {
          "id": "7392d4a8-ba3b-4cb1-b94b-babf0dbb66b2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ed5d37d7-2ed5-4247-baa2-ba61e21c7389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a0a07d-b49d-4a30-97fe-490a792d03fa",
        "cursor": {
          "ref": "8a1121f9-71b1-49e3-aecc-40c599d3692d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f1327367-04e7-48e3-884a-3e04fe2ef70e"
        },
        "item": {
          "id": "60a0a07d-b49d-4a30-97fe-490a792d03fa",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "887ff5c7-85a0-4c8c-a141-6d46b9a15d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26a6bf0-674d-46d1-af66-794c1dfbb3e2",
        "cursor": {
          "ref": "2dcc377c-4454-4c3e-a25e-1e68cf17fd55",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d70372f6-3f62-420d-af7c-1b95f01ae14c"
        },
        "item": {
          "id": "e26a6bf0-674d-46d1-af66-794c1dfbb3e2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bfbd1ef5-d4d3-4444-98a0-eebb0bec6dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ff3516-23fe-43f3-8450-722a1ff03aa6",
        "cursor": {
          "ref": "579ede42-6fcc-45f6-b1c0-e20ad7e7c97d",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6287e06f-d8b3-4a56-b5a8-a6639f07879f"
        },
        "item": {
          "id": "62ff3516-23fe-43f3-8450-722a1ff03aa6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "470bdeec-f995-4d4c-94f0-903d03e64a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7059ba8-25f3-43f8-b33e-6e77ee882901",
        "cursor": {
          "ref": "a3e7fbfa-1f14-4c55-a152-d92a0a216a6c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "efda4bdd-6329-4c25-aa40-a68a21095712"
        },
        "item": {
          "id": "d7059ba8-25f3-43f8-b33e-6e77ee882901",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1bdfb707-3b39-438d-92a0-6673a11087ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd175a0-270b-4ecc-9784-367c2357b854",
        "cursor": {
          "ref": "1ca83615-723a-4138-81e1-f85b2601ab14",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "92a64051-bdbb-4c1f-9667-f4a1f6646616"
        },
        "item": {
          "id": "7cd175a0-270b-4ecc-9784-367c2357b854",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1aa623db-dc71-44e4-afbc-6c23be8ce4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a2e8f7-906b-4e79-baed-0df0538987e2",
        "cursor": {
          "ref": "5998d175-cbe0-4681-bdc2-3f548a6f32cf",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b5b36167-deb4-479c-b7bc-46c283fb8866"
        },
        "item": {
          "id": "84a2e8f7-906b-4e79-baed-0df0538987e2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "382a8c3d-e823-4ba4-8b18-1bf70109799f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6526e327-97e5-40c8-a46a-46ee0b567ca5",
        "cursor": {
          "ref": "1ca92e70-2977-4da4-a8be-f6d36694776a",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "adc8240f-8695-474a-81c2-3dd32439d6cb"
        },
        "item": {
          "id": "6526e327-97e5-40c8-a46a-46ee0b567ca5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "01ab1461-bc18-4bf9-8edb-c2650d7b73ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d24130-e03c-49e4-b0ad-e51a8f2e3214",
        "cursor": {
          "ref": "2bfb1675-f81c-4a17-bdd4-9e90ed710a80",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "041a6d7b-3963-46bc-b41b-94f78d45d6ef"
        },
        "item": {
          "id": "45d24130-e03c-49e4-b0ad-e51a8f2e3214",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c4bad124-e8fc-4adc-b710-7db17ea2e3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97af063c-9402-448e-8075-65946f8e8f6d",
        "cursor": {
          "ref": "d8e7c600-eb6f-4057-bfee-226b99c95584",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6ae45111-610b-4e5a-a3ac-b849575320fb"
        },
        "item": {
          "id": "97af063c-9402-448e-8075-65946f8e8f6d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fc8ee594-8665-4597-bfbf-39cf6d63001c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb77dce-5e47-4699-a3d2-653cfa89263b",
        "cursor": {
          "ref": "bc727951-c468-4267-b988-ed7c927fc087",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fbb55d62-6c42-4b1d-94ac-52ddc6f91645"
        },
        "item": {
          "id": "1cb77dce-5e47-4699-a3d2-653cfa89263b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f4f94fd6-01d7-48e8-bc1d-72b9eb45e5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8d5f86-9637-460b-93bb-fced7cb7953b",
        "cursor": {
          "ref": "c969fbfc-3b96-43db-93fa-52ec8f9cac61",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "50d396e6-5e8f-430d-9c35-a02a4cf5264c"
        },
        "item": {
          "id": "ee8d5f86-9637-460b-93bb-fced7cb7953b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "21da6666-5b1a-48d4-a428-a411ea53bd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673aec53-88ae-4e60-ac8b-b09df226f047",
        "cursor": {
          "ref": "8642f0e5-209f-4ac4-9ab8-c828583e251c",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e2615d76-31d0-41a3-90bc-d2a314b21e06"
        },
        "item": {
          "id": "673aec53-88ae-4e60-ac8b-b09df226f047",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fbd06a8b-fc4f-458e-bbe9-5196de009c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48bcc1e-980d-4951-9966-8007946567a7",
        "cursor": {
          "ref": "b8fbcbe5-4d6c-4a86-b7d1-d1831fa4aa3a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f49c6164-3b73-4cb4-b8ce-083109387a07"
        },
        "item": {
          "id": "e48bcc1e-980d-4951-9966-8007946567a7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0e572a26-a235-48a7-9563-a7a6bcb8ad4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a6b181-1afd-4c8f-986c-b28dc436477f",
        "cursor": {
          "ref": "08529621-f0d0-4a55-802f-a6b89502e729",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "747494a5-c7db-4d94-af15-84222c12f377"
        },
        "item": {
          "id": "52a6b181-1afd-4c8f-986c-b28dc436477f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b1c1a60f-4443-43c3-a245-8eaf3501eb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e28926c-d1ab-4b01-9152-096c5d747cb5",
        "cursor": {
          "ref": "8abf24d8-13aa-4e67-877c-4e3435dd652b",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "72aa137a-e3ac-46ad-9669-eced654c3594"
        },
        "item": {
          "id": "4e28926c-d1ab-4b01-9152-096c5d747cb5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7a35cd35-372e-40a6-a50f-8e0e04c17613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea45b4c-3cb9-4405-a2b6-c9c071563b1a",
        "cursor": {
          "ref": "6b62afdd-ced9-4dc4-b8db-320e254d250f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "35867f1b-9244-4485-968a-8835ceb8fd78"
        },
        "item": {
          "id": "1ea45b4c-3cb9-4405-a2b6-c9c071563b1a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c134c2cf-c885-4746-8eaa-4ae5ac1c3655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73f779a-9d74-421a-a30e-1b11d09e11bf",
        "cursor": {
          "ref": "ddd5301f-77f7-4bfc-8dae-f01e404ff1b0",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8a148fe0-4ba9-4039-8646-1d374db116e7"
        },
        "item": {
          "id": "d73f779a-9d74-421a-a30e-1b11d09e11bf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8e3f4fcb-71d9-4aea-8605-ce26456cb5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fa0a75-dc26-40cf-8561-81784c0af5f0",
        "cursor": {
          "ref": "36a14a56-0339-402d-8b90-180f9a9242b5",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b28fe80b-ea49-44ff-886b-143e31444145"
        },
        "item": {
          "id": "76fa0a75-dc26-40cf-8561-81784c0af5f0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c17efa4f-ef7a-4302-8f3b-b04ff53d9ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a0a798-e6f3-49e3-ba0e-3b0593b1c528",
        "cursor": {
          "ref": "d0c05e72-46a6-4499-8302-92917b62ccc6",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fdafdf70-f579-4c49-88b9-176bfecf8181"
        },
        "item": {
          "id": "d1a0a798-e6f3-49e3-ba0e-3b0593b1c528",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "86634135-2329-4bee-b4c9-5aab7958d5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842a035f-d6c2-48f0-81a0-600898a840d7",
        "cursor": {
          "ref": "20553b31-c0a6-4ed0-9296-d6627bc50b7f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cea1a068-1537-4877-96ec-929632d65e18"
        },
        "item": {
          "id": "842a035f-d6c2-48f0-81a0-600898a840d7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d2f0a5bc-b3c0-47eb-ba43-b616cd8ba564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b791a09a-f76a-4820-845f-1074af6e38d4",
        "cursor": {
          "ref": "5686ac37-fc81-44a7-9997-2a491f29d862",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "40b56f7a-a6b5-4ea2-9326-e377f655a101"
        },
        "item": {
          "id": "b791a09a-f76a-4820-845f-1074af6e38d4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "deeff707-04bd-4f3a-ad53-2489c4e5e02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3658405f-b2a7-4baf-a08a-5d1721d022a1",
        "cursor": {
          "ref": "d579980c-3a56-4292-a23a-ee73d0d2a388",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0bd36216-b562-48a3-add0-d374e2d02fa0"
        },
        "item": {
          "id": "3658405f-b2a7-4baf-a08a-5d1721d022a1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4f7f123f-c53b-4fdf-bccf-9230597e8c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7124b60-46c5-4d5f-8748-d50d744679cb",
        "cursor": {
          "ref": "3613eb4c-27e7-4ccf-9f5f-3377aa5a8597",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "67499697-3f67-4913-a95a-b37b7b0fe8cf"
        },
        "item": {
          "id": "a7124b60-46c5-4d5f-8748-d50d744679cb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bc6ff12e-b512-4575-8c53-ad31cc8c5e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c741fa1c-6d9c-4bed-a4f5-e84d2bfe0648",
        "cursor": {
          "ref": "8783e2a8-bfcf-48e3-8b26-dfb50b009dd5",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3ad9eef3-5c9d-4cf1-93aa-402eacafac65"
        },
        "item": {
          "id": "c741fa1c-6d9c-4bed-a4f5-e84d2bfe0648",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "737164c7-08a3-4de4-976c-9c7180e66346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b655809-5e05-441d-b32c-59a3b4f73e26",
        "cursor": {
          "ref": "d100f6e9-7297-4427-a4ec-f383707ae3f5",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "86270075-33c1-44e4-b4ee-5ece12364693"
        },
        "item": {
          "id": "9b655809-5e05-441d-b32c-59a3b4f73e26",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0953367b-f7bf-439d-af98-55f81f257c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265bf0dc-3279-4746-ab51-dcbea93f7b48",
        "cursor": {
          "ref": "c947707b-442c-49b2-ab2b-035c68a7f2eb",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0f375504-c24e-477f-82d2-61817a4c1b4b"
        },
        "item": {
          "id": "265bf0dc-3279-4746-ab51-dcbea93f7b48",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a2b9d6da-cae1-4990-9bee-3483d470ee70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a070129e-624d-4f6c-ac5a-6e1e4223d459",
        "cursor": {
          "ref": "04fb4a50-b368-4747-8344-6d778a17e25b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3b59c91d-1c05-4ca9-a37e-accea2865867"
        },
        "item": {
          "id": "a070129e-624d-4f6c-ac5a-6e1e4223d459",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2f2e6dea-fa40-438d-9a82-bc05aec26c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5473057d-0637-42a3-b5d2-3b5ebec17bdb",
        "cursor": {
          "ref": "51f8066c-2081-4cc7-b03e-aec8b531ff8c",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e00213b7-029b-498e-aef6-7c7b544a18b9"
        },
        "item": {
          "id": "5473057d-0637-42a3-b5d2-3b5ebec17bdb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f73a01a7-d3e8-4e22-98fc-f8b2c02576e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0e4775-a19a-436f-af1b-9df012f1a7a5",
        "cursor": {
          "ref": "fed665f3-0cd8-42ec-a7f4-9d3e007fd864",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4dd3b272-8302-49b0-abd1-97831767eb0b"
        },
        "item": {
          "id": "2e0e4775-a19a-436f-af1b-9df012f1a7a5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1810071e-a6ce-4179-b195-c454056570f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07bffe2-e041-422f-9f35-fcf129705119",
        "cursor": {
          "ref": "8c7ec380-1e9e-4b9a-b3a2-bfb55b4d8a64",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fa9799c4-d0ca-4a0a-927a-c8c42090474b"
        },
        "item": {
          "id": "e07bffe2-e041-422f-9f35-fcf129705119",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0b7b3faf-5072-4453-93a0-2153c3e35fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc39f94-fcc4-4b6c-a6ed-2006f2ad2781",
        "cursor": {
          "ref": "3da33a4f-041a-4a56-8235-064afcef91cc",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b7204925-61b5-4c0c-8731-25cb2315fa57"
        },
        "item": {
          "id": "bbc39f94-fcc4-4b6c-a6ed-2006f2ad2781",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e0ad393d-3839-4776-b2f3-789eb228a8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8a25b4-7c53-4f40-91a6-60a761b5a57b",
        "cursor": {
          "ref": "93c2c28b-981a-43b8-9fbb-199f01c74e0c",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6f23e01d-e6dd-4ae6-9b7e-9efa495711f6"
        },
        "item": {
          "id": "0e8a25b4-7c53-4f40-91a6-60a761b5a57b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6882658f-da86-47a0-b42f-a7bcb7576a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834b85fa-82b8-4fe3-b48e-e9ed903f9a1a",
        "cursor": {
          "ref": "6152e7e7-d842-46e1-bc17-c3382ba6df02",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "09813d37-7717-4cbf-b433-4fdc8e878fbe"
        },
        "item": {
          "id": "834b85fa-82b8-4fe3-b48e-e9ed903f9a1a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ea36384d-f6e4-4dd4-972d-9fd7ec4666f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d838de-47ca-4625-af9e-7466fe7680da",
        "cursor": {
          "ref": "79c70eb2-9e3d-4ce0-8e48-7bb94e9fe5db",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0f811020-28da-48fb-a35b-00231a4b7bf8"
        },
        "item": {
          "id": "f3d838de-47ca-4625-af9e-7466fe7680da",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d2c90d2b-9554-4d62-899e-f6539b495c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447f4def-c1d6-4dda-b4b0-9ced6e9881e5",
        "cursor": {
          "ref": "4c7a8334-3bdc-4bee-b414-62a80885c03f",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "917b58ce-90c8-44ec-9492-22c6befcd31d"
        },
        "item": {
          "id": "447f4def-c1d6-4dda-b4b0-9ced6e9881e5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "acdc0ddc-a8e8-4ba6-9967-4a32b0d7d44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00155869-5fa8-472e-a743-b98e5ed03e96",
        "cursor": {
          "ref": "a0fbffb2-825f-4829-8937-79e6f0f40a60",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cfe5fd23-6ad5-4444-8c91-a7561f7950ee"
        },
        "item": {
          "id": "00155869-5fa8-472e-a743-b98e5ed03e96",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5e643b14-6b46-49ac-b5f7-3366d20701bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5215ba5-b850-4d0e-a764-0e1d8af026e4",
        "cursor": {
          "ref": "013cc30a-9bfa-4995-8a29-661bbe4b94a8",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d3a65340-5103-44a7-a0c7-dfb31af8cb5c"
        },
        "item": {
          "id": "d5215ba5-b850-4d0e-a764-0e1d8af026e4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0b3be78f-78f8-4b36-bb21-edd0bc626612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d089146c-11e2-4f8d-b287-2e455280a122",
        "cursor": {
          "ref": "47c0b36a-b1a1-40c8-ab3f-5d446b17640b",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "305c0b69-d5c5-4ec0-b7b2-e843b1c13195"
        },
        "item": {
          "id": "d089146c-11e2-4f8d-b287-2e455280a122",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5bd67e5e-8dfa-46ab-9044-f177f4e7b321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3979891a-ef94-4a46-9194-8e748d4c8de8",
        "cursor": {
          "ref": "bc5c95ba-df9b-4b9b-a782-4de1b51441b2",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3d9f3ebe-aca5-4222-98de-7812052624d3"
        },
        "item": {
          "id": "3979891a-ef94-4a46-9194-8e748d4c8de8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8d05eead-2a60-49f7-9f2c-4255d3165090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779ed79b-c8d2-4f92-9dfa-ac619cd686a1",
        "cursor": {
          "ref": "bb1ffae5-ef42-45e2-9c95-0bbd217f617c",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7d7c196a-1fe6-4652-b937-ca1c1a5f8dbe"
        },
        "item": {
          "id": "779ed79b-c8d2-4f92-9dfa-ac619cd686a1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d561ce3d-4dda-43ae-8d2d-c0b06182f534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b70051-d3e0-4d8e-97ec-f2aeeb359a5a",
        "cursor": {
          "ref": "f3f48c5a-ba66-463b-af5a-e809d3d3a194",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "95bd796a-a4ad-4e3c-9911-8fbb174d430f"
        },
        "item": {
          "id": "88b70051-d3e0-4d8e-97ec-f2aeeb359a5a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e52e5692-8264-48bb-bdbf-ccd73bfb013d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25c6354-17fc-450a-a593-527afbcbc8fe",
        "cursor": {
          "ref": "805d68a0-b4e0-4c8a-b0fd-398b1f91acb5",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f6560178-748d-4381-bb6a-c989c42b2a3d"
        },
        "item": {
          "id": "a25c6354-17fc-450a-a593-527afbcbc8fe",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "28b85949-4c70-4b86-a96a-0360c4784b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dea1ea-a3b4-45a8-8032-054ffdc251f8",
        "cursor": {
          "ref": "150538fa-1b78-4898-bc33-8da8633f18ee",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "259c2565-75e3-45b7-af0e-9b1d05ea199d"
        },
        "item": {
          "id": "77dea1ea-a3b4-45a8-8032-054ffdc251f8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "42f1f61e-996e-41c2-9c95-e2ad2affe411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7192b17-ee1b-407d-a20c-f9eedf8be29f",
        "cursor": {
          "ref": "14a25440-b753-4e0e-b31c-df4e56ff2f4b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ab0053dd-b341-47d9-bbbd-8ee4f0d2c41f"
        },
        "item": {
          "id": "e7192b17-ee1b-407d-a20c-f9eedf8be29f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b3a460a8-3d2c-421f-be00-6b62813ab976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fd77cb-ac64-45c2-88eb-cc560f7233cc",
        "cursor": {
          "ref": "6dce343e-4d4b-4030-9e73-bc65405fc71e",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7f4a7d6d-cb27-442d-8227-75f918d7ee82"
        },
        "item": {
          "id": "27fd77cb-ac64-45c2-88eb-cc560f7233cc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "68980087-3d53-4b2f-a4a4-a71c2f14342e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce551c6-cd2f-4cdc-af62-677f4e79b898",
        "cursor": {
          "ref": "bc300c81-7751-446d-b781-d00cf62220f1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dd0b5a4b-d5fd-4a52-b4b2-5bc4fd558100"
        },
        "item": {
          "id": "cce551c6-cd2f-4cdc-af62-677f4e79b898",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "37c410ad-5045-43c9-b193-73f8843425e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4678157-ea6b-4fe2-9394-a736079de7fd",
        "cursor": {
          "ref": "55016c73-487f-4658-bb81-3dc5d783f3d0",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "12ff8b78-84c3-4917-9f26-81a8893f22e9"
        },
        "item": {
          "id": "e4678157-ea6b-4fe2-9394-a736079de7fd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "26a5c832-ec14-4571-a3ed-ffa438bbc2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6719b955-6eb9-44e3-a6a3-6d44ed663ad2",
        "cursor": {
          "ref": "b37eb4f8-9d21-45dd-8718-ce944ddfb577",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d0c24d70-6baa-435f-aebc-2f0f1549c72c"
        },
        "item": {
          "id": "6719b955-6eb9-44e3-a6a3-6d44ed663ad2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "64344089-4ea2-4a02-ac34-95bf96e90d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6bb3ca-3224-4a04-9e60-689bfd52483c",
        "cursor": {
          "ref": "a6b35ed7-ee67-4dd8-ba62-92f26eaa2bb8",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fa55337c-f4c5-40fc-b034-6ab8d5c8a1a6"
        },
        "item": {
          "id": "7d6bb3ca-3224-4a04-9e60-689bfd52483c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f81e4a56-9f67-4a60-947b-651674f5bbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2727bd-55e8-42ed-99b2-e91e378dc7b7",
        "cursor": {
          "ref": "19f9fea5-1292-4f9b-a1a9-391d523b1840",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a754b972-8bab-4c9e-bf2a-8be1914e50fb"
        },
        "item": {
          "id": "df2727bd-55e8-42ed-99b2-e91e378dc7b7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e8a9c49d-9a89-45cc-8d87-69cd00e4e12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569589f6-7bb3-48e5-bfea-be26bab69281",
        "cursor": {
          "ref": "35dea7cb-7fbe-4301-97c7-74896d59b959",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "240ec28e-9a8a-4bad-9541-10791f6a6bad"
        },
        "item": {
          "id": "569589f6-7bb3-48e5-bfea-be26bab69281",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5e5730e9-eabb-456c-b9e1-73532f24cfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e05eff-db13-48c9-99d6-5a4ec2fa6ec8",
        "cursor": {
          "ref": "be65c20e-e897-417c-81e5-ecc25fb61f1d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "786b6344-4003-4c2e-b525-1352f4f9d029"
        },
        "item": {
          "id": "54e05eff-db13-48c9-99d6-5a4ec2fa6ec8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4d5c18db-e99b-4191-8c66-76a24cda6859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a108bc8c-9bee-4a04-b285-c4dc961d5c41",
        "cursor": {
          "ref": "e1314c58-d847-4f69-b214-88f8792b12ef",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "28d93fdc-5115-48dd-a713-cfbe9e739992"
        },
        "item": {
          "id": "a108bc8c-9bee-4a04-b285-c4dc961d5c41",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0c099bff-773e-409a-810b-9a011cc22b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989f2dd1-9cab-4e8e-ae23-ce3791dc0993",
        "cursor": {
          "ref": "f293c528-7dd6-4d11-beaf-604982eadad2",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1a6313f3-365e-469a-9e0a-263b73c3e811"
        },
        "item": {
          "id": "989f2dd1-9cab-4e8e-ae23-ce3791dc0993",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3b0a68b1-b46f-4bfb-8063-e39749ae15bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33aa591-56ec-48f4-8025-13e53edfcaa3",
        "cursor": {
          "ref": "0bba5e0a-4c4a-45cc-b509-93091b1f7176",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "702254ba-2c21-41c5-9163-bc551fc832c9"
        },
        "item": {
          "id": "e33aa591-56ec-48f4-8025-13e53edfcaa3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "18d95f86-e9f5-403c-a689-617f1693a62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84a3d12-4133-49d6-b4d4-4a7305bede8b",
        "cursor": {
          "ref": "fee95de6-89d1-4d70-86fd-a1ad7364b296",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a4d43410-aedd-4647-9389-7a782b57cebf"
        },
        "item": {
          "id": "b84a3d12-4133-49d6-b4d4-4a7305bede8b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "251a7fb5-9c8c-4883-9cf3-594abc440c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfee3f2f-18ee-4fda-aa9e-999b31134b7e",
        "cursor": {
          "ref": "d34520f9-55d7-4e02-b20b-1e5961ec1ae8",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4ad8bdb9-7bbf-4402-a126-ee6cdd43f830"
        },
        "item": {
          "id": "cfee3f2f-18ee-4fda-aa9e-999b31134b7e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "603d7a04-cd10-4e50-9a06-4c710e6bf878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f99fd11-e6eb-4fe5-a5ec-bb849f8e78b9",
        "cursor": {
          "ref": "0c50bd42-ab94-4b47-8c20-60f50ccf60fe",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "da98b089-9f01-47b4-866a-b71965791f62"
        },
        "item": {
          "id": "2f99fd11-e6eb-4fe5-a5ec-bb849f8e78b9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "df1f5be6-fd47-40bf-abfd-067b72ef2f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a9e99d-cc66-4a1b-92fa-824a963fd307",
        "cursor": {
          "ref": "4dcd66b2-3429-4f26-a54a-8fc730a39c34",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "878c29c5-6d5c-4788-bf2b-b19449e92e27"
        },
        "item": {
          "id": "10a9e99d-cc66-4a1b-92fa-824a963fd307",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "981c0a8f-56d6-4178-8567-8e15a7c69e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd358798-c419-4150-9a92-4275fc7e1956",
        "cursor": {
          "ref": "3e1250aa-326a-4127-ab66-49d64121147a",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "115385b1-9afe-4c32-9b8f-1a0d8f684229"
        },
        "item": {
          "id": "bd358798-c419-4150-9a92-4275fc7e1956",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fe8b5085-814f-47d4-b0f8-9c99dfa72a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8d2c03-54ba-4aa3-812e-f5653eb1f1c9",
        "cursor": {
          "ref": "4ba45178-7999-4d2e-b332-40dade9c93fb",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "480c6f43-4bce-4257-a3d3-81b7f722222e"
        },
        "item": {
          "id": "5c8d2c03-54ba-4aa3-812e-f5653eb1f1c9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6e432920-3f9b-4b3d-8dcb-9a2b3eb23b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fee1c26-4ee1-4252-8885-c53407b7bc23",
        "cursor": {
          "ref": "205384e3-177d-494c-bd10-bd887e88fd13",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1d2dc034-7866-42c2-bdf4-7d05f2600a2c"
        },
        "item": {
          "id": "1fee1c26-4ee1-4252-8885-c53407b7bc23",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6b23e20c-3dd9-49cc-9a20-ed5b922c9224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33249a3-9ea2-4015-bf63-14c6e1c13650",
        "cursor": {
          "ref": "c015b7de-76f9-4d51-9f80-6a5cf360cadb",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "703c1512-03f1-4728-8e88-4a62f5215a17"
        },
        "item": {
          "id": "e33249a3-9ea2-4015-bf63-14c6e1c13650",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e798f600-8394-475e-baa7-d552472f9c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3cd460-5c16-4d72-8ac2-d98cc3fe6cbb",
        "cursor": {
          "ref": "dc2731b1-0727-44ad-8f5c-4034dc373d73",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f2d329f9-5d51-412d-bd03-c8b07c980389"
        },
        "item": {
          "id": "af3cd460-5c16-4d72-8ac2-d98cc3fe6cbb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "266c115f-1e52-4521-891f-3ed21c2a9c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba960cb1-72a7-47fa-a634-61ffc40f0731",
        "cursor": {
          "ref": "7cca5717-1c82-48d5-9b1c-d6d1ebdcad3f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b2a1dbcf-59b6-409a-9d48-265f3a48a847"
        },
        "item": {
          "id": "ba960cb1-72a7-47fa-a634-61ffc40f0731",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d72ae1b8-a8c6-44c6-8979-aabc7c40dbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e931f640-7f24-432c-9db9-10281d473c5d",
        "cursor": {
          "ref": "ef053600-5674-4e01-9f2c-fdd208c9172a",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "be44aa77-0a6a-4c40-a26b-0e9fe82145a4"
        },
        "item": {
          "id": "e931f640-7f24-432c-9db9-10281d473c5d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8b28faef-8124-45b9-bb1f-37404a677af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569f02bf-0f46-420a-8855-526640efb58a",
        "cursor": {
          "ref": "960d810f-68db-424d-873c-8a46808a9f66",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "710fff8a-19d9-4a01-8e4d-16eb0534ab37"
        },
        "item": {
          "id": "569f02bf-0f46-420a-8855-526640efb58a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "83b9bf9b-834a-4a27-aab8-b5d0e5516a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4158b01-dd9a-4843-a686-1bd20cf14604",
        "cursor": {
          "ref": "4bb762d9-6735-42dc-927c-26c55c3f4972",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "dbc6e27d-6eb6-4333-ab5e-ac1d07e0ef67"
        },
        "item": {
          "id": "d4158b01-dd9a-4843-a686-1bd20cf14604",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c11d90c6-1c97-465d-a2e8-45dd25812aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a139f2-43b7-4f5a-9455-a258c2f2914d",
        "cursor": {
          "ref": "ba611896-9d48-4fba-ac70-0c7afe3dff82",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "122e91ff-552a-4331-a267-faf513fba6d5"
        },
        "item": {
          "id": "81a139f2-43b7-4f5a-9455-a258c2f2914d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4e663a48-fd5c-4eff-b3f9-0bc59e7f601e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23374800-3aaa-4f6d-9092-cde2561a26cd",
        "cursor": {
          "ref": "f0805849-803d-4eec-9902-863de04bd60c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "089a0bb8-6742-4b89-827e-d716f249ad18"
        },
        "item": {
          "id": "23374800-3aaa-4f6d-9092-cde2561a26cd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7a204651-d24c-419d-95f8-bdb8c6571b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5aa93f-f752-4434-9195-c08217b4f9cf",
        "cursor": {
          "ref": "83983907-cf9b-481b-b2e4-d9b53564a011",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6c8b9fa5-db53-49be-a5ef-cef22b740b19"
        },
        "item": {
          "id": "3c5aa93f-f752-4434-9195-c08217b4f9cf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "aa27e721-17f7-4efe-bea7-5befca567d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75af38c1-bd9d-4688-ada5-9c62a333ca44",
        "cursor": {
          "ref": "c1b47b7d-d57d-4c5b-9fc6-332405536863",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d67db9a3-55bd-4426-993b-9c394b0d0ff7"
        },
        "item": {
          "id": "75af38c1-bd9d-4688-ada5-9c62a333ca44",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0626299c-913d-4745-9a11-21941b2f9576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9faf0c-b897-4f21-93f3-5e0d65c63043",
        "cursor": {
          "ref": "6665f57f-26e5-4aaa-85de-54d5577cb65b",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4f8943af-4dd0-40b9-8456-4fceed971e7d"
        },
        "item": {
          "id": "2a9faf0c-b897-4f21-93f3-5e0d65c63043",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "448a9f4c-5b40-4d14-b3a7-17a5528a6680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e00a29-ae2e-45f5-9085-a6536b7a3b5b",
        "cursor": {
          "ref": "b58562a3-7216-476d-8f95-baac4d7c0a6c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c9260319-3ed7-4cb4-8a74-8272fa6853fd"
        },
        "item": {
          "id": "79e00a29-ae2e-45f5-9085-a6536b7a3b5b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dd9149bf-c126-4b6c-96ff-25fb88ef02c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eefe0c-eb90-4ed6-9247-0252026f60f4",
        "cursor": {
          "ref": "45f487b3-08a4-4478-abf4-e2810b7b24a3",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "98c3b32f-570f-49c4-8f63-3f50bdfc87a4"
        },
        "item": {
          "id": "26eefe0c-eb90-4ed6-9247-0252026f60f4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1a73d5a9-a3fa-4489-bed8-da37c6e4bc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56e232c-4a32-414c-b78e-a580704195f6",
        "cursor": {
          "ref": "065e4919-ab66-490d-a675-1dc9ea0d23be",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ebb76eb5-b4f3-4574-9a33-acb6ae2cc4ec"
        },
        "item": {
          "id": "a56e232c-4a32-414c-b78e-a580704195f6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d6abe618-ab14-4f44-bf96-a72fb20fbd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b504f1d3-6fd6-40b3-a7cc-0cd57d53935a",
        "cursor": {
          "ref": "14021d9b-0b60-4b39-b5d8-abe5034dcd53",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8be0839b-5920-43f1-a2fd-53a21f54f661"
        },
        "item": {
          "id": "b504f1d3-6fd6-40b3-a7cc-0cd57d53935a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b70fb18b-c080-46c1-bc78-d677fdc3f12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9762337f-3a1a-4e7c-83cc-258174caf33c",
        "cursor": {
          "ref": "55fc9a84-c32e-4636-85c4-a8d936ff48e5",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f1384cf3-8c69-420a-b0ce-9002866f82ab"
        },
        "item": {
          "id": "9762337f-3a1a-4e7c-83cc-258174caf33c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eb1b64a1-3515-4d5b-8226-30c67f20e95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf253e13-a878-4eb9-91a8-fc2dda841294",
        "cursor": {
          "ref": "215de989-e585-4ed6-b960-92e83a51ff14",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "99678980-5d26-4e52-906e-0f5e9b1d1cb9"
        },
        "item": {
          "id": "bf253e13-a878-4eb9-91a8-fc2dda841294",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "44d1ef1e-24f1-4f02-9a9a-7cb07b1d94a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52681071-5bf5-46b1-a21f-ba7ceddcff79",
        "cursor": {
          "ref": "c5b5be93-3f00-4aa0-a49e-a50fb667f62b",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2f02d417-efeb-4d77-93c1-2347b4b546f0"
        },
        "item": {
          "id": "52681071-5bf5-46b1-a21f-ba7ceddcff79",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "98cc695d-d4e3-4176-8f90-38d21192aeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a2ff21-c413-45d5-acdf-d1b9fbc2789a",
        "cursor": {
          "ref": "ee5d1abd-d079-464e-9936-32cd838c3bcb",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "190b9c4a-b081-4dc2-8a4b-4510841599aa"
        },
        "item": {
          "id": "31a2ff21-c413-45d5-acdf-d1b9fbc2789a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dd1c5163-4f95-492a-8ef1-05c6ea0460b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f387b7c-a6ba-4480-b4f5-5a4129927c05",
        "cursor": {
          "ref": "642e2119-cf0b-4ead-ace0-64fa668b6da5",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "419c0e6e-e1eb-418f-9d67-cbe5e7cb31e8"
        },
        "item": {
          "id": "4f387b7c-a6ba-4480-b4f5-5a4129927c05",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fad44304-190b-4d66-aa85-c26287214d21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13295995-702a-4eae-89be-039e6da4f7f4",
        "cursor": {
          "ref": "4711e96a-0fb7-4c47-a186-ceedefad8b9f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1c03e526-dc37-4e29-bb7d-aca39c939792"
        },
        "item": {
          "id": "13295995-702a-4eae-89be-039e6da4f7f4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2081a345-a9c3-4a3a-9cf1-6dd41bbc93b6",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7053562d-ae00-42a1-9b10-35db2470254e",
        "cursor": {
          "ref": "59d27062-a770-4a22-b00e-2a73d43ffe53",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "95612484-fe72-4f9d-bc17-b7c87196cab2"
        },
        "item": {
          "id": "7053562d-ae00-42a1-9b10-35db2470254e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "174149a8-9f9e-4700-bc16-c25d1922069f",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd4b499-50d8-42a5-ac1c-cd7501808581",
        "cursor": {
          "ref": "72fca1b5-e597-44c6-92a0-adbcd0cfde3d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d87c68e3-e9a0-47d8-bfb4-03664984273a"
        },
        "item": {
          "id": "bbd4b499-50d8-42a5-ac1c-cd7501808581",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3866620e-bb5b-4161-a0f2-fad07922de16",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d111edf-eee5-4131-b5ec-3bf76d12b2f1",
        "cursor": {
          "ref": "f1643455-cb31-4245-9041-76b07536e716",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "dae37028-f5eb-4e25-bf67-e7a3e6c972d7"
        },
        "item": {
          "id": "8d111edf-eee5-4131-b5ec-3bf76d12b2f1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "66977a61-8093-4577-8fc6-40f05c4657e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d111edf-eee5-4131-b5ec-3bf76d12b2f1",
        "cursor": {
          "ref": "f1643455-cb31-4245-9041-76b07536e716",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "dae37028-f5eb-4e25-bf67-e7a3e6c972d7"
        },
        "item": {
          "id": "8d111edf-eee5-4131-b5ec-3bf76d12b2f1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "66977a61-8093-4577-8fc6-40f05c4657e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6515c1d4-31b0-4876-90de-90241bf8bc40",
        "cursor": {
          "ref": "31f3b680-8800-4e13-b9c0-91c6bb09e05d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "937b54ca-487f-4147-b48c-9d02c1594e6e"
        },
        "item": {
          "id": "6515c1d4-31b0-4876-90de-90241bf8bc40",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "346c4cc7-15c7-4f64-88b4-cfa594e0c45d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ab8147-8e90-4ac4-9d3a-a15ccd8c6e5b",
        "cursor": {
          "ref": "895ca7f4-a6c7-4a15-9bdf-a08b24e9586c",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "21bc7647-9417-4484-962d-e8d261356969"
        },
        "item": {
          "id": "06ab8147-8e90-4ac4-9d3a-a15ccd8c6e5b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1bcd797d-e768-4521-809e-19d5bd3bed82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}