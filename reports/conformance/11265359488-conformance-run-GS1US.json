{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d4686724-722c-443a-b103-9fffe96d092b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e692d0a7-3672-478c-9124-b0b694f817d7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45ae288a-4139-48e4-87e0-299e61a3a7a7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fd241a00-e123-4f2a-9a07-ef60eeeeb304"
                }
              }
            ]
          },
          {
            "id": "52415f9a-0210-45dd-9343-97c4d8d5394e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54f286e9-a27f-4c93-9ea7-7e6f4d71e34d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1e88c1ae-ea32-4f66-83ad-8b300cc92f7c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c61395ac-2de2-4419-a865-d1ba0fc8f849",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "42fdd750-cd89-4e08-9f85-6794b740596e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3136ee8-6b27-49e1-9d1f-209e2294fae0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bb18756-733e-40fc-95ef-e5baf4ad8416",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8114e953-6f22-4214-943c-90c324eaaf8d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c56a176-048b-452c-b7b3-1a1b2ae74436",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b800d3e5-0cdd-430e-86f3-dcf3405bca3a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a3c9d35f-1101-4a79-890a-f87615db24c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9f78f3a-4337-40f9-834e-37017bc07986"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f49e615b-6f56-40ef-8447-d39872660c87",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0a8b4067-3cf3-4593-963a-8a8c63e495a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33818a78-18fa-49e8-80f2-d5c7fa353683",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0995070-3181-48b9-8654-5eb99592300d"
            }
          }
        ]
      },
      {
        "id": "456f32e3-fc5e-4a0b-b1df-51e62b6efe30",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "eaaecb59-f58c-4d3a-b8a7-da13ac89fb3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20f4004c-75ca-4ec4-8233-9dd10447cd7e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dfd4d1cf-1b47-4f4c-8f73-1ba48d470c7d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b66d4e-c489-4fea-bcdc-11887fc722c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb044d70-a123-432b-bd77-2c406a910914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef149b8f-c2d8-4302-ba27-ef59353fd65f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69843d9a-0f29-4016-bdc1-4f407f720bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7a9d723-85e9-4009-af4f-8982d1cd5a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f0561f-f900-479d-aa53-7651fed587fc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7070ecb0-1795-4ea7-b072-4e57fea83aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9d27c81-e1af-458b-ad3b-49c6e25e2ed1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0373f0a2-c028-48ee-874f-319b86e0ea89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83c151ad-f5a4-4d89-8eb3-e366b3867235",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f422ba-2644-42ac-99f8-1c248836565e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f6d65a5-10a2-4c5c-bb20-143a705c77f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1891910b-477b-48fa-bfb4-4ce79df30c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f240ab-d151-4372-a764-f65036d19aec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3df63478-bf1e-4884-95c4-6e410b58cf2a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "638c7f10-4c5c-4099-b2c9-76a93aa9b937",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d035daa-1bfa-4df7-9226-1748ba770128",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2886c0f9-8dae-4cea-8cd5-ba8588e0e871"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af7de638-3914-4308-9bc5-2ae5c9d44cd2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d4379be1-4e42-430c-bd93-bb3b51549eca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a232ec8d-a7e5-4dd5-ab98-82706f40155b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f96f6b71-383f-4993-a2ad-0248662f96c8"
            }
          }
        ]
      },
      {
        "id": "06a3a14b-92c2-4c9b-80d5-efa4df2af964",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2f5db2d0-624d-4f0a-9a04-03eb5a8e2c86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9684b9ef-9456-4764-96d7-fe58022621a0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d427c09b-c1a0-43eb-932d-8382aadac429",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8627f33-074c-4df7-8f8b-76f9d419ca55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa85f4e-0ae1-4e89-8ec1-6a02d8bba622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b503cbe1-61cf-4dd1-aefe-29edd2de5895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfdf1e8e-9e26-4371-9889-f30a6bd2a662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b353d5e6-a3d0-4a8f-bb3b-1bf6c7efd8bb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b92f63-0e85-470d-b168-05482bab5a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efaaae72-287a-4b79-879b-c4133b2b0cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5be647d-cb52-4a8a-94d4-9e184be79828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5a05be1-45ab-45e6-98a7-4df9729e3b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacff27d-5a90-4a90-a35f-155b93276b85",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ed4351-b725-48e6-920c-9ab29732e2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebc341d-a4f3-45bb-95d0-d2c411db75ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c1be6e-eb8b-4d21-9036-435586689279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "576b0c0c-0056-4efc-9561-64dd58d495bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24ac7dc-3c4f-4904-8920-3bf9440a69a8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f90ce4-0830-46bd-b19a-d2dd9f43049e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9147e75-5126-4e05-9700-94647ac73329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdedfd99-3ec7-4944-99e4-2abebee41c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc7f425d-8681-4936-bb74-49d9a1c63191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166664ec-ca97-4a57-8094-41f43216fd77",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1c1b3b-ec49-4f72-b6f7-c6fda41b1a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2052608a-e358-4127-94e9-9082c1d72128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6559831-8a56-4a69-9f87-e9df4fc5969c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61373482-c073-41c9-ac45-6aad3202af3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf4c241-9341-4af0-9a65-414da9e4bb37",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cad6aa7-847b-47e8-898f-e0f5be1b3d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301bcf7a-947f-4e5b-b2dd-0008866e8882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb54a1cb-eabd-402b-9d57-dfaaa52e7d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17ff39ca-a880-4a94-98fa-220c77bfcebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdcfe75-89f0-4a97-890b-70ba2ec00b8a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd80f407-dc6e-44dc-a5aa-ad454236342c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52794732-ef60-47b8-a7db-f8cd1934fe8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f054f0-c680-4cb2-b9cb-cebc9fa409cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0660e367-a895-487e-9a35-87392a4351ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6703f8-af93-479a-8e50-01643ffe5f60",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77d8c7e-b395-496d-bcd1-39305ee76ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046e8bee-0c6c-45d8-a36d-8b43ba9e935a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fb9529-fbf8-46ca-9e40-a8e7a54038e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef1a159f-d30f-4abc-8e34-844d3ea7de21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b43388f-f8fb-4d75-a465-597d8adaa217",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6044a08-ff9d-4ed3-b955-7392a79df891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29803ac0-adeb-4f55-a3b6-4abafe6add76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738e8c2e-6837-4e33-aa83-06332bca66a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c845dea-f5d6-4593-bca1-a3e04374dcd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb111b0-b84f-4033-9a3e-78a9edd2b36d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fe6a50-247d-4575-bed5-b43219c3107c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce85256-3d9d-42b6-bb3a-98693c9192f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98c1fb0-23b5-493b-8d29-9101e3c8b450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac0b5ef5-59f2-47bd-bd4a-8e6a490bbae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c22171-0934-40b3-a5ca-cc93c4345b7e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fd2bbd-8d6d-4c4d-af24-7a65c17bebee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e576b885-de80-48f9-a1e7-1653db9ac3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0bc3c1-f48b-46b1-b29d-daa2287a3c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "149f8646-5b4d-470d-b1b5-5840c9a04d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7061c0-0f4b-4be0-a6e4-03509f76163a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9127bbc9-28c6-46a6-bf95-ce78aa872121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5efe4e-78a5-4d62-b8fa-1ed90bab5354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8e65cd-af6a-4f33-ac81-a13b33313bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cabc9c78-0486-4739-9510-71413964bca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43f5603-3ae6-43ba-8542-6ca62cd09d83",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bdcc14-80ca-4043-a96d-d11f2fd131a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a52e9bb-2214-4918-a792-cd7a11e20311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e349e4b-57dd-4913-b877-48345d792581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e838ff9d-3956-415f-93d5-96b77c342998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20299cfc-e662-4a93-b1f0-fb3b540c93c3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b07f63-998d-409e-b524-c1b8dfb0a453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d59dc1b-e96d-41be-8f53-c2ac53797deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980fa75e-93fb-421a-8ff1-00f7329b5113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "184638e3-2bce-4443-83f8-bafed07e3c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73ea22c-254a-47eb-93dd-ab1412da4929",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e83c39d-93f7-4d6b-a08e-b7799dd8aeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e878b324-1ae3-4bcc-be1b-edf0ccee061f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff88324-0b2d-459d-947a-088a7431de35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afb90db9-2307-420a-9133-55c6249b5888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c03515-e567-4f95-9ed3-92196cf2a3d6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d421e560-b87b-4c9d-a5e4-fd78ee2e9d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37245c9-b38d-4977-b6fd-896297c21834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfdc12b-c195-4e51-8222-5ee35ab910c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "585d088d-0af1-4a6f-9038-bc27ceb5d292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72698402-ebaf-4114-81f1-d963f2d1c3ea",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6262c83f-fa14-46e1-87b9-232e008afbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b427be6-5a9b-4308-9fdd-f71e819affc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3ebc5d-2172-41ec-a9b5-6653cbb37be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f020be5-152b-4c5a-8748-fbcfc3434b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a11866b-4969-40d4-b1a2-13165c8bc4c6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0a2b60-0c58-4d07-bc3b-48596a2d837e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694df790-ef7b-42e9-bd6d-9452b95728b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279c6a65-c8f1-4afe-beaf-6ebdc5e8a283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "408d709e-c183-4c96-9e5e-e70ff166c622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413d42dd-43f9-4944-9521-6841678908b3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d051e8e3-ab0f-4f21-ab4b-a3c6bbaf8028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af561d04-f4f1-4824-9a29-b80a1425f6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4f8087-dbac-4975-a9cf-ddaa95142f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff684ba2-fc65-44c5-87ce-393a06204fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dedea8f-01a7-47aa-9eb7-756323fabd76",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfab66ad-e539-4ace-b74d-33a3bbcddd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0838e77-9f2e-4e13-994a-ab3ac5aa1e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f3bded-f167-42b3-b12a-9d0d12a5a963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d33089-2e3d-4811-b39e-cbd612ce21e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cfad64-c420-4839-85ca-b9d8596ea002",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68973377-f4ea-41e3-a0f0-caefb772732d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa84fd1f-0b44-4c87-be2f-a852f2384580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5766d64f-234a-4ca1-b11b-61fa4912bed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4df2de7b-4e3e-4b59-bbb6-025a30a5fba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd7e6be-bf05-421c-a718-65178758bcbe",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5876b10b-f4fa-4556-a8a3-81e4c701cef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ffe2358-0a76-434c-b33c-76a998a7bdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd10d120-5f29-42e4-8e5b-f8394567776a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23bf9292-1815-4400-a284-d08af2761ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4599cc80-cfc8-4a63-bdcc-a051326d380f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2e38b2-eed7-4896-b41f-5504fb87f314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1b398b-daa1-47f8-af1f-59a93a53448f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0169fa73-15b9-481a-a186-fd14d7528719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "848515de-00de-4106-831f-f9ae45a0ab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050afd07-54d1-468a-9113-4db1e7867de9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d695be-b61b-4921-aba6-1e70091a4c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd25aee-1a7e-4cd4-aad3-65837ab52029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc1d000-be8c-4cf1-b6b9-36ab1fbf4789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4835602-127c-4678-b51d-9b2ec8bfb763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40b7833-c627-4f45-b67f-58ae699c5433",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fbdbd6-44f3-4a69-b67f-9758697b4d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f180e88-66d7-4173-b598-c25b7d93b571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a395ab62-f675-49cb-b3a9-a558148c30f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a960849-0540-49d8-8bee-5b32548b34c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35bb875-dbd1-4fbb-9356-a3bae6ca66a3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931cd3aa-9d48-49ea-917d-8f62333b850d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfcccab-3e33-450c-8092-6a1352b08e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda73dc5-aede-4e5c-b1cc-3fdbdfb6bc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a64db0ce-56c2-4316-a896-48168d02b1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a6f487-52c1-4b23-b1b7-c54e23ecc2ca",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a120b6e-4b52-4fcb-86c1-fef161ca9c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a249a20b-420c-48ac-b363-0febaa84fa50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004bf52f-3094-44c4-a815-7de6b773e4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1215144-b0a0-4271-adae-2915d5c67722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca726c1a-1563-434c-bb5e-b0346a488839",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a93e3e-c482-4fe3-ba0a-1cb865268a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4c8a44-0596-48d8-99bb-884571deba1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3523f3-1e17-46f7-92b0-a75c8cee0bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e538db0-4a06-4b3d-8e15-9d28fca4c987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7399904-4993-4fb2-a1c7-36cd5f62c97a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8de9184-2da9-40bf-bf0f-a40d2d2c7836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3957d7-5f91-4dcf-856d-fa55d888fc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f9f6f3-f196-4bd2-a0e6-d5485fbb3223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3ac7ff-6d5b-4770-b2b1-66c438941a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0641f1-6013-4633-b298-344e33570918",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c8a43b-2caa-4243-8b77-7197f352e50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10b1b20-fc33-4951-a11a-2db651e5b0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08aae541-a2dd-46ac-9dad-14a8db6154d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4d5dde-97ce-43a7-b3e2-2eec31ecb27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d86bf6-1bf9-4671-8695-298982f4248f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13231a4-cdf8-4306-8c37-1b2e79bbe22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a657b398-f366-48b6-ade4-63988e550b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228228c4-4ffd-4f63-95de-3306bb8dae76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9adcdd-06e7-4b7f-b693-c2b0d4db46c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a29ed0f-4b98-4156-90af-0b918f85764d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef508e9-39fc-43b2-a915-d18838e2de8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d83832e-4168-4b98-be57-a8c96163a79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcde0171-de44-462b-9759-2a94ccd47d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f671434d-8640-4661-860f-afba25bdcf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5114b5fb-74a7-49f9-8656-7685cb410e84",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452ad8b2-7bb6-442a-90bf-7d0ba0170cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1441f9-80de-4d6e-80ef-6e1debd2841d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f9e100-6a04-4ff9-b944-aec2acca3dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68536f64-52e8-4704-ac5d-59382e2b6aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5107de-c394-46a1-b354-2df32d93023d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44609b9-e05b-4cae-bf15-4a907599475a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5654025-e96a-4c24-9101-b3bc8d53cc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df026a51-41e4-44be-8108-02a44b1dc88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2235be33-480f-4e2b-a546-812fb3e8024f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a93de0e-8f44-426e-bda0-7d4c8403781b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f3a0ad-714b-475a-9edd-787b4fe8b0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d39b381-8583-4cbc-baf9-1430cbdd9385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f09e5e-8b9d-40f5-af06-165471bc58c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2e4659-81d9-403f-bc5c-c68c147ef9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a17d49-b87e-4751-90d5-fac6a3049aad",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accc0248-6f22-4ebb-997a-c7f8914042ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07ce66e0-f691-40e5-b89f-92b3a8f41b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c598563d-3718-4d07-b624-ed5791dfd90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3d2d6d-7d5e-4502-819a-123b02863486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ec194c-31d3-4d4e-aef7-08fb2c6b3bbf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac9489d-25f1-4cff-b066-dc8744a7ea18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68921fef-dd80-436c-8d9c-c551e0b61c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b41aaae-f883-4b60-a1fc-6db1441d211e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc439508-202b-4eb3-a036-27ea15235620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa50975-7e0e-46d8-8388-b0c530cd4693",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0d01cf-0ce0-44c9-911b-4ae9ee5ee439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c059fb2b-25e3-45e9-9c7b-50a6dc32b759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aba6f9e-3837-4353-ac85-20ce0a1e68ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "63990e65-9e2c-4a3d-aae1-3f73a955f291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aec411c-c8be-4b6d-a3c7-e3f3cbb288f8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13e4bec-acb2-40e4-8839-13fd2ed9dd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a58e94-bb4a-44e5-99c3-495b97eab570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e922d881-2333-409e-9338-cf21721b92c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f87ec567-7ced-453a-9cc1-1476adb8f65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba1951e-d72b-4461-ab5c-c9c3f617786b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5719d9b3-cc17-4fd9-a3ad-04dfe70fd0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4a14fe-3f2b-40f1-a1cc-a54d0b430986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad2c5d5-e10e-4d1a-94e5-eb1e12435c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63627374-1853-41a0-a299-10c795c288c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0788d6a9-ab94-4fd5-bfc8-74a737a9b91e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9447255-aa77-4555-a507-a0997104fd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150db410-c7cb-41b0-ad3e-8bc471520ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615db9e0-b0b2-4e01-b9c9-4926adac760f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "536ae51b-f146-497d-acfc-7e6d1f4b7f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d89e0a-14ae-415d-b197-b8b715613647",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a836148-df03-4abe-b7d1-dcb0e5118d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2347fb-0cc7-4c61-afcc-e1e373101ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b7b6b2-f014-483b-a3fe-01c65c4f5006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9a99275c-2966-41af-8a0f-57edfbcc1497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca758b9c-fd4f-46c6-b5de-a27ac2e10263",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635e5a59-a7c3-4e16-9698-4ef15d2ac5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd2aabc-4de6-4a31-b618-f51586a60de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a36acd6-42dd-49b2-8b9a-228b6b31997a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "52748fc6-2a56-400c-aa89-3881e69943b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2e7f67-3ee6-48ef-bc0e-9c4a0843570c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6d12d0-fb3f-4e41-aa35-404454643a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021ebca0-2404-4b7e-b2b7-f0d0bf6deaa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ba9cdb-ea2a-43de-9b07-1170ac46a920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "85efd763-5b39-4a06-ad84-b78854df0d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4144dde2-ee27-4db4-a413-1d18c9dc2ce2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43423258-c6c6-4f7a-9c24-9e594236e1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2d86a0-1093-450b-b847-7d3814340360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773cca2f-662e-434d-bbe2-09482ad6a9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25898cfb-cd72-44a7-8e34-17a05f923702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1900401-be59-415b-a4e3-6000738d2ce8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2650d9-db7e-4600-bf0a-a2fcf67312b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1af464-0c41-4756-9408-28694eb1fb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85491e9-70b3-4265-817d-f6d98301724e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "429f406b-c510-4208-8a82-b7ebb3c53f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d0d1f3-0aff-4592-a2c6-984283d57aff",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64d69a8-8456-4dc1-9b3e-214d890cd9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47aec9e1-cec7-4f52-80b5-31dd8a29f5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cdc1ce-db6a-48dd-9f58-60cd5eeb471f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb713fc-70ea-43f1-99b5-a6da818f47bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e42bd7-9a99-4a86-9d04-be5f0ac91dc3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5d9036-c10e-4063-9925-ed65e0e7f23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b333da9c-442e-4821-95c0-5cb916810c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf48f20-61e3-4571-8bf8-297c8b3f0a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43bda18a-5f85-40cb-82f8-ef96cd6f9663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbebe123-6438-4dbc-b7ae-44145b841635",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6c188c-077b-4015-8ea4-c2bf762734f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d874ea-c9c4-4d32-839a-442ab7ea60c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818f6a19-f790-4ea0-ad35-dbd10e4369ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61c6cfa0-88d9-4245-bb09-432d301da606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e738829-4a73-457c-a3d8-f5c64be9a1bc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe9e099-deb6-4e8c-81af-ecf32e55b65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d931d404-3fd5-4e9b-b72f-a89ea86203b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae064b9a-4e38-473d-a9e3-e78d76963c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abc46a15-46c4-409e-b4ce-42ba62a48d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4ec00f-1d98-41a8-ab88-3f8c80c81acd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bda1482-49c2-49e7-abc7-96a56d3e04f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f39dc58-422e-4b1e-8575-1bc284633442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821fbb6c-847f-4178-985c-af5fd6b9cc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "68e2df50-b0cc-4d05-ac5f-4be1d688f139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5660cf16-4def-4b9b-b33e-bc4f8d92c214",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81afe3f8-ea38-40b4-ae1f-7b489af5746b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b2501f-af20-4261-8051-fe2fd2212121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ef1a43-52b2-4680-bd37-68b860b06534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf3206b-c7c9-43d2-a5d5-7dd4b965a340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fc59c5-19d3-4762-a038-0eb1c002fde8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962033cd-f195-4e71-86db-cb3a22658879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9717d1-1f6f-473d-bc90-f977d125901d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603aadac-d3bb-42cc-aaf5-9f427f81b248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "adad60db-cf42-47aa-8612-7c037d5301b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4710fea6-c203-4762-b648-9fa0b222bcaf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1224d56e-d926-4ca1-8f8b-42bd8d67fef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b32d78-4291-4cf3-aead-97a9ee7a4054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e69bd8-bba7-4a50-a57c-591dd4f0a5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "676b6cb4-e1e8-4335-8b39-9a7f4edcfd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35af6b3f-364d-4113-ab75-2376cfaef628",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55249d12-6956-4196-8ade-927861d1a448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611de4e1-77eb-4d5d-9665-058cdaf38dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d7ea36-4e0c-4036-9bed-61160c9d3afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "477a89ef-7e83-4104-a4c0-64a67db7e5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f731667-d1eb-4013-892c-d2c9003cf387",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496c9a30-65aa-437d-9e04-8135d44884be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08027373-4857-4c22-873e-5a9c128d3637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23412be2-b533-416a-b0ba-6c431e4b50dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "75e535ad-d8f2-474a-ab53-f15d5ae9f5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaf70cf-e9fc-4125-8d6c-ac296dbf7be7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8f9dc7-dfdd-40f3-a90e-e733fb867418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "353c689a-b4e9-4778-81ea-4670defa55d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081d8d9e-28cd-4dd2-a1d5-41b6513d1c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "773fefa4-9ea1-4027-82c0-38b13e8e4c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c01e8d1-7ae3-46f5-92b4-5debc0d67cca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ec5d81-7fe1-4d13-a9aa-6645a6a5de11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334d2f8f-6217-4325-8d2f-ab5a06a6dbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9404e49-a6aa-4c84-8357-327dd9fbc853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "15b50c3d-c6a5-41bd-a96a-c88c0e64697c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ccd666-5222-421c-85aa-99b402e9fdc0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccf7858-691c-47a0-a2bb-43b22e0b93e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f051cbaf-8c2f-4cbf-991d-63470db5e70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3b3cf5-9373-44d2-a627-0c0741d0c119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ec3702-25f5-46e3-8a71-cd0695ddfaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63cb543-9e45-4d5e-93f8-a65283d8eb05",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6c4f7e-bcff-49e9-8951-a4a20090a41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ca15e0-0b04-4b19-8121-85f6c582a006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b365a99c-0c9c-4279-a3d4-1a85d3d04cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd73107-65df-47c8-b9e5-20e0be300cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef4ec42-77e5-445a-8c26-f8d2443d5aff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7e7d30-89dc-410c-98d2-051f73e27155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4fca9bd-b9b4-4c17-b031-707959c0c8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec156ebe-863c-41c0-bfdf-a1629e322d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c78bc85-60b3-47be-9413-2e176b37fd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a834a57-d79c-412b-958a-ac2a29a33834",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af7780d-7b84-4ff0-818c-0b895d4fa71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e5eebb-1b4f-42d3-9d8f-48d68e4a030e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e2f940-3e3b-4de2-985c-239e2de071aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f036cae1-9f22-414e-babf-a0276e29317e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a1c3fc-b13c-48f0-92e6-a8e0ad66d48d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1314e280-d4ad-4e44-940c-40aa78793a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40f4805-5eb6-4a74-9bd3-ea0803e3c1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ff9ddc-735f-4791-aaf1-7c089f06be5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "50832a2d-a807-4f08-ab46-6122ff46344d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7a12e8-e7cf-4d06-820e-5d2728e43b29",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd33df1-fa56-4103-b44e-4100945f6653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a5b998-5226-4454-862a-fdf218f98762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffeb004-a843-4944-b89f-1564009728fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a82273-ff39-46a7-90a8-b97b2fb2e8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab0479c-e840-4c2a-b0e4-e5bce2d10ea9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6703f065-6662-4657-b6da-8e5c2943d7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b238f4c3-d8a1-4349-b8d0-e0443b7df75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3390ed4c-c993-4210-814a-efbadc8da76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27c93748-7dd1-470b-8c77-615b9198e436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d107d1d-1e5d-44d5-92e4-3743fc719814",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4740c7a-f10e-4434-b040-703019dcfb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef14a548-a900-4442-8014-f0e387a0779b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b15b882-f4d8-46d5-a457-aa4e3dcb4c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32dc8b5d-5bbc-430f-8f9f-41078466ea80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937e54e0-a57e-42c6-90cd-4fba15d34174",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248c6c7f-6c74-4f6e-b66c-3378b378436d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0ece87-0d7c-4297-b56a-018b62a8e12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ef865d-6e42-45de-b6fe-4dc3d9366aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa16c6e-62c5-495d-8639-5e256c41c1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74f4cf7-44b8-4a4b-81f2-695d103a2f12",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d67927-7ff2-4741-ab2f-88dd2b6656e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4d659d-746a-40cf-b281-74639889a44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae62c070-466e-41ec-a0e3-1fe58d9bb2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e9b400-f9eb-40b7-95bd-529c15dbe440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5c56d7-0cb1-4143-aff6-ecb989a16561",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e9de95-002f-47ee-b186-c869c8bbb214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cbdd66-1c01-4c49-a322-4bd61550af7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702317f3-867b-47be-b865-bd310ffd9e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc76987-7d6a-42e3-afcf-7e7747199c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35139273-c974-4d45-909f-1e2306c8686a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5556b34d-afa0-4009-b686-fcbb355fa38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00adf6bb-b482-4043-8e25-af4f271077f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2fd7ba-b2b0-4113-90a1-4ce488fce2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf77787-32e9-4350-b333-455259bad205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c79e3a-93e8-4997-a757-e386f8ea5a71",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801b7c17-cbf7-43ab-b9a2-9b3d28389102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb1fb99-0e1f-4128-98c2-6f1ce555a5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad850119-17a0-488e-8320-f9f3ad17508e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2c2aba-68a8-4b42-a0b4-33ebaeeb8962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bf29f9-b564-41bb-b06e-822f68530503",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb6a6c5-7702-49ce-966c-18088fbceca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66731df3-f73e-4679-ae97-a74068c24a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09f2071-7cf9-4d34-a86e-7438326e9baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8266da23-6d0e-4903-ab54-828affa279e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fad921-46a0-476d-b078-f8f1dc113395",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80f3807-f1fb-4031-a094-a907e1615598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35e92f5-3501-41c5-b852-7bc1f432444d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f868fb5-1cb4-4cfb-b925-84d87aed87a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22fec441-3d87-4321-8a1d-815c4da4b373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed9dc23-8165-4a08-bbe1-29666d57ef8f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f950193a-d0ef-4f16-b154-af65d738960b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84197265-d2c5-4db6-8383-c84bc7d3322c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d88e6a-3c1f-4396-87b9-8adb93457f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e415bfbb-fbc1-4796-8503-df52724e9856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332eb479-8490-431c-b80b-4342c431c1a4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e6aaa4-c0a1-4e6c-865d-26c3d9c7dbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f537a30a-ac63-47c7-9ef5-c73872f03a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f17fb94-afc6-4031-a472-66c31c94a083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c93bc56b-0fa6-4902-9207-ad783d19027e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02a3976-ff8c-4d1c-9869-4922cc88b3f3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6018b423-b0f6-4e79-826e-3a73b0f0cf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ecfc13-db4c-4d29-b3f4-473ed23368e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3386a309-2748-4758-a1fd-a0754c049a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b71a162-6a06-46ac-9f78-18a8c493d052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2bcefd-9913-4761-9b76-453552125063",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a7bbbf-d681-49a5-90e2-8b3fd14646a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c101c33-58f5-40ae-957c-78da5ddb7cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d19255-9c57-4c20-bb92-9e791ee78f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74140757-ede5-4944-a28e-0a5e785bd16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fe82b1-a75a-4b32-98ea-9c8c89b7a9e9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9024da88-3f9c-4434-bd9f-52cbc26be01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce44a6f8-983f-424e-9f04-6a74827985d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1064e93e-eca7-477b-991c-f7eacf2d8c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67103e2d-aea1-4485-a564-901b4dba5486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fb5f46-2597-4759-b0a0-dbe3f0262e97",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7895a5f6-848a-40db-a3b0-15d5cbe5a5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bfc7c6-9b7d-47c6-8774-3d78e33ce4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684e0ecf-07b2-44fd-b982-ced9050a9183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "105f6fcd-71eb-463a-8490-ea40101cd34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69154935-d3b5-4bca-b602-e347d6d1cdce",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232384e3-a467-4c0d-be50-0e0a77a5ba27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c4e7d7-7e75-434c-90a6-86e58479cd7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32798239-4804-4894-9cea-3924f2499fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f6c785-243b-4c4d-b577-181800cc327a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f299308-1172-44a5-9c67-ec64844e6271",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1122ee9f-5842-4eef-a6fc-c9f28d6265f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bfef39-5e45-4ebc-aed9-3d853144493f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c50627-6ad3-40ef-9c57-a592559521bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d524219-c970-43ad-aba5-6b2d96123460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d643c11e-ec9f-4d6d-87aa-fa09b5a01309",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15c2706-0904-4754-8363-f4b1bbb814c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc55774-b48b-49ed-84c5-e10c99f97b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bead8d-8ce4-4f48-a394-075e254bf3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0eca7e6-a518-4082-b0fe-e084c72d777f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf7d12c-869a-4f32-99a2-110977a80271",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92c492e-89db-4508-8131-4e1c43da1eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba94775-06d7-4a19-8c3c-d0eb185ff4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815b390d-ed06-4fa4-bb86-7f907847a94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1388fa3f-d61d-4e60-9d59-2189f651f47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7b3b53-030b-4a30-9922-6d6c9c1150a2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6569e717-cc46-4663-b52f-f8fac563cd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a364d6f-8eca-4990-a680-88ab5aab2712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c80ba7-3d04-4dcf-bbe3-7876823c5d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa36a08a-6e89-4e6e-9415-a86b71e23b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0fdf47-ce2b-496c-bdfe-1ede1b16e02a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2909a0c-396f-43de-b57d-dfc050a01a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccb3fda-1aad-4350-b806-50aa315b3f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1302218-9081-4db7-8d2c-a6cd14a52561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0f2267-9d15-42e7-9a8b-775671649763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2432618a-b0ad-465e-b874-3d37337bfcfb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ad534a-e2ea-4fa8-87b8-440368672202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee534592-f3d1-4723-9871-3b11243cdbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609b81a7-7909-4444-8430-52589e7d3f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44643908-18f2-40d4-b84b-a1af278e5b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f9213f-24f2-4995-a7e5-bd1616ef799d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35173960-5802-42d8-a4f8-b4e0f850060a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b231dc17-f0c9-4263-94a6-5fb2c034d82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd22d05d-f5d2-45a5-b4ae-9cc953aaade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac458037-b640-40ff-8af1-23b5248a25b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8829113-ac9e-44e3-ab83-b999c5dc7819",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c8ffbd-5d52-46e5-95f2-f22b356d1527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef844690-af48-4c4a-b24b-b9f52e932c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d01a753-eb7a-459a-8c80-41091f7c85c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7117c1cf-5682-4583-affe-8f7ab6925f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ac2bba-d649-461d-984d-dfe28d0810b3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516a68d4-0ae8-4773-8fc2-94f403df807a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b014eddc-8256-427e-bf2e-cf54ec6d1efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082c5d5f-5394-45c7-9776-f639733785c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "46647a2e-925a-4635-b8a1-9629fed9933b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8b087b-a3e0-4849-a4c7-a578a3273530",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8238a42-af7f-453b-871d-20dd424595be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f226224-dfcd-4045-8f5c-e5e1f988a554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf248c53-f2af-4453-a41f-bbe28a533ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea485e9-dae3-4a3a-be07-6f0d742d5620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e940e281-71ff-4c43-86a8-654b0d3f34e1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5d9b1b-a85d-4991-b235-1fbaa496565f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b696e20-063c-452f-a10c-74421c78ffd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0c495d-6f73-4cd2-8d51-5a78cd6809cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a23f7a-9ad2-4f82-91c6-2babac241783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee7b6ad-8dec-4345-a6b8-1331cd7101f7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17128016-c817-4955-b7ba-64155936ac76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9d17ab4e-775e-41f0-a5d8-474731554a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a327d618-fb61-4148-b56c-1d79b04ea643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd823d00-4041-404e-ad1b-e3fad1616dfa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1668d872-30c8-42cb-9f91-6ea4000795c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eeb92f13-fdc1-4922-a028-1f393f84aab8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd755ccb-c7e2-46e6-9dcd-f5aae1eeeb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "926ec4cd-b430-4fd6-b6a2-29778a53e6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97baa86-8824-4f81-ba0e-ef9f54a940bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f883e16e-c7b5-4be3-93e2-c8eb30ad4d53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6901c67-e373-46f3-953b-422491745523",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54d8aa8a-c3c8-4114-9ecb-e91079b3d68c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fa99105-b839-4a7e-99a6-e6e764fca08f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd8216ca-0bee-4f1f-8343-b351b442dfc4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a18158f4-9f37-4e04-b398-0b96bd45cf64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "885768f6-92d0-4b30-88db-ad768f47d55c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "abfd0cd2-0113-4009-9021-cf9f3d28288e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce2e78ac-e902-47da-879f-10e816a95aa5"
                }
              }
            ]
          },
          {
            "id": "7043eb4e-ae64-43fd-9dc0-880f04e24563",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92249c9f-dd2b-4192-bf5a-3bd33fb15652",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "486b260f-4b77-4879-b1ef-1d8c7707c298",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c78e6f-8ce4-42eb-b86f-525e69ed8e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "81bc6209-5144-48fc-9afc-93840bb0b82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c8cb49-d067-4b36-9772-c34be7483aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0884344a-231a-48de-a829-ee551023d5ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da80fd85-80ea-436d-9432-1c79fab35048",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81ae1b12-3fa1-468b-b67a-e3e8d7126c3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84db5ac6-6af3-4e29-b834-fa80934f2317"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e56be3c-8479-45a8-afdb-71ada6b24567",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f74edf30-77c2-477b-a240-fc051b7b8a17"
                    }
                  }
                ]
              },
              {
                "id": "37023db8-1f65-439d-8269-0a77da8f656a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ddf0b3f-867c-4a14-9c48-ba34d725f0b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2815412e-e8a9-4008-b04a-07f97b998b13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c44910fd-f9fd-463c-a8f1-9dd38a25c3be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df08d8a5-a128-4a35-b00c-d47d3e6c0eeb"
                    }
                  }
                ]
              },
              {
                "id": "073afdb7-58d4-48e1-95a6-8425703b9d64",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2a06e62-98cd-4cc0-a430-54a35d947ae1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1db578e9-e8cf-491c-aaae-e1ebc7be1295"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20cf4e69-b9f4-4f82-a316-16edeb3820ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d95fac66-dd5c-4169-95fa-110b1d7a2585"
                    }
                  }
                ]
              },
              {
                "id": "386632b9-ed10-44c8-a9c6-c213dc84f733",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a88ffa2a-9bd0-44f3-9ecd-58f23d76b22c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "542e646e-118b-4add-8695-02a3a568e9cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3caea191-1acd-4178-9dbe-a80228430f05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4481ca1f-935d-420d-9442-178578b29031"
                    }
                  }
                ]
              },
              {
                "id": "35ff06ec-055c-4c27-9fab-be05c68e86a0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60c0c0c1-dc61-4712-a7e8-b46cf9de1877",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "059b51cd-de7a-4e68-a91f-8025126719c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37ef6b46-2ad9-4355-9b08-ffb5ebc5549e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d35bb0a0-e49c-4af8-96e5-ef2b8c072b53"
                    }
                  }
                ]
              },
              {
                "id": "b68d4e01-6b38-4424-a437-41cd8a2f25f1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40c321a6-273c-4573-b53e-b7c46750316e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86e72135-fca3-4142-9d71-9b49d68f5d10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f4d60e3-4391-4448-81aa-1268bf2db005",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27ed1c35-c4b7-4722-8aa0-7f564f2ab1fc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "32cbde52-571d-47e6-bc17-604299d9028f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "26ccab81-eecd-4b69-a062-78e22e889e1b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "06f76042-cbae-41a5-8b6a-c66b66a3306a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84e1d58d-a808-4f80-bfa8-6a973f1fd1d7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28fb9700-d803-46f6-ba2b-226189f5121a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bffed40d-645e-4a8b-ab5c-8ba009ff4320"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aaef68db-c7e1-40da-9499-8c821003636b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fc8ca0d-1d04-4e8e-bfa6-a003cca7e70e"
            }
          }
        ]
      },
      {
        "id": "2a4d522a-2db4-4f7e-ae48-5c90680e57d8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "16b3c371-5ea0-4629-809d-38e3baf2e926",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c364960-7674-4e7e-8f51-f56e2957bd87",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1f958999-4c96-4e9d-bbce-da238ab8ba0a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43757f8-0a33-4051-850b-1eb81a043d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bb865c-e7ee-4064-87fa-8c15d4a4ce27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4461fc68-c974-4e15-a0c1-cf21bfedef02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f909a7d-4efa-4ea8-899b-18fcbd9ce479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91e73a8-a50d-41e6-a950-ca1b33f0beea",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27081294-e42a-430b-9818-11d4fd397637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59b68eb-4352-455e-8446-f0176c476d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67e6aae-ec31-4087-b3f5-c3d459289d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ecbd3f-d26d-4bfe-a6ba-ac8cb4f2cf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638e5c6a-272c-44a5-97ce-c90fc259323e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12685392-f803-44de-934e-5edc2c2d7651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb8542e-c842-4570-8e76-5870485d80a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61aa45e8-f5b8-4690-a1ab-0bc90ca395d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc2d42e-216b-4411-b281-ffb22942fa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1373df-cb53-4869-be2d-18f89d7a5481",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9517321c-8b21-4619-a966-8052d6621802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00e79e2-6e40-4095-84e9-2e91c2595dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5f1c6a-695f-41cf-9b37-3d6371b39102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23eac559-ecf8-4b55-af4e-22f63e514493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f35c8bb-e12b-4385-b071-4f3e6071c9ec",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50234204-76bf-4ed0-a7c0-24f69bb00f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e79654-85c5-4891-a8ff-7e018994ea79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3de567-c729-4a9c-aab2-cd29278b1690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3204fae3-3774-4f8c-bed5-2cfefd271341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c32ff5-9de6-4a62-909d-935e3e8e80c2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3d56ee-af9e-4426-bf81-693178a8916f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dad0451-c827-4233-b502-5caa5908482f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787f9650-7c37-40dd-9d58-06bb46744556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd9d58a-6166-4ae4-a591-8f0c185a8e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb7bfef-908a-4362-a485-e3ad193e239e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3ffd99-22b2-4df7-b6a2-803be9da1b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04261c11-e1a3-4205-96d1-43afe82203fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e91d33-bbf2-4282-90a2-29a2eb7c3383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c340f39-bcbb-48da-82c5-66f6b87a74b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1581f61-f4d6-44ba-8626-1a4c22139500",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc776d2-6692-4410-b9bf-e3405eb95c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c6c797-e942-4750-a67f-979937b3e85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cfe7e8-0695-4905-b6ea-ddec652c11b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e45c56d-d023-4d41-9d5a-a64ed966e646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe18dec-ac69-4e4d-a89e-0e741f9685b2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd0f9f6-c06c-4cbb-9645-24c3a3dff020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c071da-95ec-44ae-8642-8a82e539e8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f71d8f-46fc-4f9b-a344-beb6afbf25c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51301c8c-4fd2-47d4-b59b-ce14fe385dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e65854-1809-4c19-890b-54063f5357e6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517d9241-74c6-4cd5-bca5-218507ec082c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b96a88-1d17-45f4-9372-5d4fc055b38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d1e90e-01f9-4a5c-b971-bb062a398b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76907092-06fa-4801-9389-e3f46a1d329c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a061c0-dd4d-4cc5-a554-73ef1806e1ed",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b600bdf3-310c-4325-a1d6-654f2ea0f14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc221ab-47c6-45c6-9b2c-17e64dd17de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d04476-7849-498b-8cae-5ba876ff0507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5973cd-67bd-4375-b69f-2495ad0f14da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829b73e7-f38a-42db-b935-e31b8393f666",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8cfa40-5aef-451d-8d64-dabf12d45fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9067c0-1252-4ba1-8bb5-6401e5e0e545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6cb295-8852-419f-a4fa-1f76af0ed931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a32e332-c8c7-4a1f-9a7b-ebb9958a268b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8da28c-637f-4864-af9d-881c01eec7c4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab96508-a0ae-4ead-887d-97fad95135bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926b7b93-9450-4f87-af43-cec9c0b3004a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ebac4d-3fa0-47a1-8c5b-ab8ea1c6f214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8c3d8f-f511-4a6f-9c97-2f5ede049e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3877d4d-816e-4818-b3a7-6284176fad4b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffc94df-7d26-426a-a7ae-a97c9904425f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747abafb-9b6e-4e64-befa-9235ea936179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e18a6fe-2e0e-4263-8be1-75d4f7dc273d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "db6d1dd0-2d4b-477d-bde5-7925dbfd4e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460d0a93-db78-4a9b-832d-1b96528e6602",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed568bdc-6084-43e5-a2de-4c25b3151f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358aad28-ff9c-4c37-a321-7e3eecc4d1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc87f2d-1786-48c1-b158-a3a9b8d296ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd33193-593f-4ec1-8056-4eda284cb052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3c126c-9152-4c7a-8de3-9dc0b4e7cbd6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07adf246-de6a-4e6d-b5d8-1e59a4060bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2e4149-7a9d-4f09-be63-8cc5e7f60dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be08acf-0eb4-4364-8502-634622e78a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "065200cf-2385-43b7-b111-4f24b230e153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a3f419-6d03-4c75-bd17-1b4b918c4019",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21072b34-2794-444d-be83-1d7e72cbc32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bbb40f-178c-45bc-bce7-ba852b73a840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c44ba4e-e5a8-48f1-9104-dcc11d886d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "184ea8a9-a91e-465d-bd1c-6a317cceb66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7c9005-1852-45d4-ae5b-a78901ecfef4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507c564f-c42d-435c-bc10-667bb278b290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0f5540-9b90-4f36-b888-56ad20808e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060a088e-58d1-41e1-b25d-af988ae92579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a84ceb-195b-417d-9cfe-da07de9d96fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ba45e3-16f0-45f5-ae32-9c2857f88ffc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da35997a-286d-48f9-bb06-621becd717d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c4fef9-45f0-4eb8-8d4b-e93adcb8c7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11c44dc-4fb2-47ea-b283-9ae9c99af252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46ef6f12-44bf-4f4d-b4a1-3383aec6c6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c291e9-773e-488e-a2f1-f8c6e0b086f4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94efc98a-686a-4f5e-bac3-020abcdff22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491ba11b-b459-4116-8a1f-bea89d6499b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec78432-16e8-451a-81db-8645c378cacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8184ed4e-01dd-49b5-b559-5919ee8c705c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4767833-555e-4a7b-b0e3-7d7d278928de",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddee388b-9926-4a52-9e57-37e41e571a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf48170-266a-4643-85c4-db4faf0b7896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eea2c8c-9cc4-4806-859a-6197d91651a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0383e1d6-ab24-46f4-85f7-52ac92b2ce3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260abe62-a9ec-444a-bb5c-de1b26879e3e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3024bee2-e2e4-4f04-8246-ef4a8aa6d235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e880e46e-0edf-4509-9505-5d37da7865f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb78301-15c1-4fc4-aded-3c69e010b7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e97917b-65db-49fa-b632-00c4400247ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcd27de-f388-4369-8d22-b2a21790b487",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bef38b-8281-458e-a4e9-bd42acf968b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8b314e-a098-42ff-a3dc-b9f32860cc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa017d8d-7b79-4d81-ba36-8c23dff3b835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad521a65-1bc5-4301-8f77-6b193ba0e810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98150c0-9f5f-4fa0-a5c5-b2bb0f5013c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98d7a30-1b11-4f5d-ac16-4bcb6ea3a24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f7a420-57ac-4bc8-9c34-b0ffc2dca65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaf1bb3-94ec-4fcd-9970-d3bbc2697db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9da977b7-69f5-409d-b766-44a552066347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc8dede-3384-479f-9543-7a8852c1faf2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9650c4e-f3b9-4e68-924e-4fc1ee9402be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0e3100-534e-4fe0-b92d-2a2920407c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8eeaba-a137-475d-a403-d4f85f7ad866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75043a88-6d31-4fb5-924c-08681a37d0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e59bb9-e7e5-418f-8c6c-dbc3dc4aadfd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091ce0dd-b989-4a68-b452-108587eb3b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e692d88f-76ff-47f6-9756-4653dd8b82f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4744fdf-d1c2-4e40-97d1-604eeff055a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a81d2ba-93cd-4f84-a468-a6331111a65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b2494c-811d-4812-a37f-39a0115cb1bc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f22e79-a1f2-47db-b74b-3270705fc9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd0ef8d-5797-4536-bc19-b6eddcf81fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c59a32-51f7-40ed-a4c6-836f1f45dfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ecf7e35-0ad0-4435-91d3-01b115e885ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4305a6-fec2-4cab-9cd4-fa0b8b9ce220",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34e6d43-d262-4557-98b5-b621e79a4dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23759be7-1bcd-43f4-9ca9-6b494a929b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f897a5-f55a-49d0-a575-4446713b7d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfb6db5-912b-4767-8d8a-27d01cf602d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eae1464-84f1-49bb-8ad5-16d60b48aaba",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666923db-b300-444c-b023-a7fcf4112ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98a6531-5918-45f6-baa8-64ff5017b7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec471a6-9656-497f-9c48-bfad5efee837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "814a8d25-3f1a-468b-bf7f-abcbb52b7426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80a673a-bd92-427f-b6d9-4015706a8f04",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a42b9f-6627-4921-8c03-744833b80afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0374e4-008f-4837-b6d5-6b6a913d526a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2860d00b-69bb-44f1-81f0-34388dbac3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ca6caf-8085-40a1-b981-8dafdbbbb493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a99954-5f74-449e-9c9a-536e74d63a5a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f06f887-6e28-41c8-965e-af54c3b4d1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa4c816-5fdd-4249-832f-a92e913c5676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982998f7-7290-4eea-94ba-5814a0d49f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acffc14c-d3bd-425c-8c4d-082a7355c370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d6a2f3-47e3-45bb-a9bd-65be194c8ee7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f88f0a-aa1d-406b-9766-338a1c294c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad23f13-b10e-4a41-ad51-7bac98b7dc2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfeaff0-e79c-4f70-8c4a-531444fc5334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29192a2e-9d54-44db-bb54-5ae3dad52863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147b63b6-ac16-4c67-8181-378a161f5214",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79902cf-ddad-4c85-80d2-e04cfcd94e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0065d2-2cf3-48c4-a373-e53991d2ce11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec7e30e-23ea-410d-bb0d-f41ced76f423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c04caf37-6a00-4457-b31c-8a6c126f3a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346cb486-25b6-444f-add9-04f8150eaed8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867d6112-03b9-4f34-8a9e-4482cde1399c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54950e93-41e4-4989-a3eb-81c9fa09d5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9e5767-d116-4c63-95b1-4d683adb8072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62647bd3-8e89-4d20-8964-cc259dc6b42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fb0604-fa37-48c7-a06d-bfcbf612b605",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979583c3-4c01-49a4-9076-3a53dd642fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a44404-2974-4748-b2dc-6548f77a376f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9ada4d-9365-49f7-80b3-00eb5a9ae766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9304d0d9-7ddd-4538-8698-b1c77fdfb64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2868f09-b594-4d38-b333-b2735b7b8384",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab30baf-548f-4da0-8de2-1976e56980a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b498518-8a25-4f95-a1b3-bd5a4ba8f074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef70113-d6ed-4c97-bce0-10a5d68fad5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2f37c0-e54a-42b8-90ec-d7afe793271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2e7a8d-69b5-4ca6-befe-79d1f81ad31b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03eab697-a0b4-4b4a-ba68-d1a659a33651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1e8e64-2fcd-4b15-bffa-1ebe66f23bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98008cb6-9f42-47a3-89c9-8b7c64c2f05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "740e3e8f-7fa2-424a-97e4-b17c6f851956"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f212479-5b5a-41d7-93d1-455e1d518f02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e1dbb0f-c226-4c61-a62a-732921d21cb7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e98462a-ca1d-42bd-a1f8-6f533a5adf8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "254b38c0-179d-4f67-aacc-8f5e97fa91ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c697b515-e4cf-4038-a051-6714351bc740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93189a4b-4175-48e8-8f87-c460a265db97"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e8e0792-715a-4f71-9168-b45bb44c23a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72e1c0a6-1162-4992-9cd1-f579af10f940"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8253f63d-bb3c-457b-8aed-9ec248999aef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6446d5ea-ca20-4a4e-b680-15b0349e86e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f5c17b2-2e56-4041-969c-8b75507ac4ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c82eb71f-b2b4-4598-af3f-cfa84d92b78d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09dad9d8-50ca-4014-99b0-857e41e96d0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90bb8211-c365-4be0-be82-9483606096bd"
            }
          }
        ]
      },
      {
        "id": "627e52aa-f6e2-41fa-bb75-1ea77b2ec99b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f7e869f7-1f56-4133-9212-216707e65cd9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61c7fcf2-1127-4d49-b543-07fc10024ac7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3161079e-35e3-4694-be13-d4df712f3b59",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965bd640-fec0-44bd-bfa1-fb9834905e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e800cee4-50f8-4723-a444-ddeb359b2ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67c0c76-0796-4d80-beef-3bad8080a64d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66be658-f3b3-485d-8d3e-b3f9f1758d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce17c44-cb67-498f-ad34-b6f88f2016a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5921ea49-c25b-4215-baf8-8a4cc18a9d00",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268eb273-1ccd-49b2-beb5-f7a8f36ff60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7f47ec-412a-45df-8d61-c88ad996c9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f5a68b-49c1-42f1-acf4-4f6edd32c5b3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c1b6df-80e8-4eba-8449-8edbcfb379c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a36631-1f24-4d6f-b693-aa12dbfb6d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d982e11-8d37-4a8a-b2b4-89060dc298f5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43f9cb5-b58a-49e5-996f-3457635166e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78ac635-3ac0-4fd2-8e19-db3ed961d34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807eb8f6-6df1-4291-801d-b681d438b698",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9179766b-e30a-4d77-8a9d-c2e609e20813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d19d21f-b1cc-4bf0-a748-4f21ac63b4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87b720d-6155-4d85-b85b-acc5487295be",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53f43d2-3050-43b1-8681-8ed35fff4929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51866e9-2eb5-45bd-a1a8-946adcc8ed0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf69279b-2b01-4c5d-9468-98299502c62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44b820c-07e8-4bec-9d35-6ae10ee32b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcbb67b-7eed-4ccc-8eda-81b171ce2191",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c31222-b3c3-48ae-b7f3-33f2152a15d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9953cb11-2cfd-404b-8320-d57ee3d1912f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7af8dd-7d4d-4db7-ae3b-66a2d99aadfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15e82b8-948c-495b-bc8d-695e473209d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bc681b-8fe3-4612-a89b-baabe92e949b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065f3601-36e5-477e-8f28-6fa047c223ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c12a394-94e7-430e-ba18-5a187a7273b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bbdd5d-694a-460d-b012-ca8333950dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18044942-dff5-4c68-82bf-a8b7dfd486ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b462c167-95a3-4887-838d-1ec90b29efc2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565b3bb9-7d6e-444b-ac13-f0c5368da7f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7048951a-58b1-4d5d-b286-81bb32d9be79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c60893-a642-46e9-8031-9b7f89832cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f317aa-a182-4f71-8e13-2a671284881d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da0efbc-0bc2-4d46-9d51-e65172b873fc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2f41f6-68f7-4702-8b12-b5cc036f244b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5663a234-f091-441b-b732-0311a333ad69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa80206e-7a87-453e-9b67-f5394f3ad8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eaa0e0f-962c-47df-a073-8a80e1e1239b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20b6080-c826-4ccb-a72d-5a5fb7bb760a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8721ad2-abe2-4f73-8af4-1278fee8cbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eca0f69-d55e-4bca-ae4f-39e103f5a8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d918511-0838-4e78-8df9-7ee2d6f1d7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc49e28-4ab9-4bb3-9ae0-82d419edf667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910e1782-25a2-4a62-84ec-dd5ccad15b12",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1620649-bfb7-465f-9edc-b2e9ecbc7151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fd65d6d-0d66-4291-a922-257a8c00198f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1feaf134-f2de-40e7-ab2d-833eeda72afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0036cc97-9b18-46ab-b1af-af1f71e464ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a918b91-0f3f-4693-8cf2-4d1192af5864",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaefa0d-f521-4c0f-b2aa-b1c2bdc72302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0579c625-0063-4f96-aaf1-4c63bfbe0027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4caac49-3d93-4de8-87b5-214ac7c36026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc556ae-9162-45f7-8246-8091a7dd29b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6686b558-ab2e-4258-9eaf-9f86c6ce34f7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d8a496-1b87-4a4d-bfb3-8045f1c405a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e4e92a-1cc0-4484-8713-21a83a3ea8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f24574-777b-483c-ae7b-b8cf8564c096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e7f7e7-50da-484e-8e74-036eaabd1398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d803bd-24b7-4ed3-8477-998e0217bf67",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b80899b-2b98-430d-a6ec-4ed0d966f5e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9340de00-6e40-47d2-b38e-883ca96dc3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81672dbd-9e17-497a-9c47-5a20351f7aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e8b167-c3da-4f50-99a9-3f9cf7486abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620e1e53-0a55-42cb-ac94-c89ba7eccf4b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7680c4-6f4c-40dc-90ae-2ff0979179d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfdebc3d-6f18-40cb-b1e2-8b8f8e04fd2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404fe99c-d35d-4bb8-99c0-f4bfa2f00b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e228acf8-2876-4f55-b68d-38902f48349f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06482880-48ac-4b0d-8815-76c05968eece",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62d7345-2fb3-4b6f-afae-d46458877d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1a641e-8bbe-4821-9979-fb813c1732c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2557bff-eae6-4eff-ae12-f04d98b28721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4199ed8a-75d3-4be7-90e4-a6e8ae0e2f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32c7967-fccb-4e82-87f5-e5aeb4074504",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de476479-0625-4344-9c28-a309024036d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a45760d-1046-4245-aef7-18846415c8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8c6f4d-a690-4402-850d-7f36f043c382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f3ebb7-3112-454b-bf6d-4194eb57be6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59a2e1c-cd6f-45d8-908d-348c8f770b87",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73579c4-e843-41b2-a519-7c366ec81154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8005cd1-4027-4d61-be23-548be036e1f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b432158-b7d9-44ee-be55-a1370a2819fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973e75cb-6255-4cc3-8c0a-cd98eea2a8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd91d2a7-72bc-41c8-b82d-5d492d51d4dc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f11d5d3-1e48-4cbc-95c0-4c21c9ffea14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4cc2f5-d789-4756-8791-6c788709e602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11ee95b-adc9-409c-a677-36b0026d3e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcb41d6-1052-4d1c-8bbf-557534828d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d563e05f-e3f7-4981-bc86-9225cd5ec4ee",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d9a8a7-1eb4-4459-8796-1c1fb5cc7a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b90a6fc-358e-4a2b-962b-b07e60ca779a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d05602-6ca2-4cf3-b3b1-0121687ed2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896d0038-eed9-4f2d-94b2-fc591d2bae4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00f0cca-ba10-455b-b98a-190792f00375",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e848867b-5388-443b-86c9-1dcd1524fd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b17aa27-ceed-4379-88fc-03ebab076ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c02297-6f9a-4b49-937c-0c3ecc22b756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba81fac-05fe-452e-b3d6-0989ee30759b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65565c5-7418-40d1-a94b-fa85c643dcd0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c331a8b5-d451-401b-9af1-54bf7d183525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "498b492b-ef80-4b13-ae61-7dec18aa07e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecb03ee-0076-45ee-8e05-df9137a90955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45f2576-638e-4fc9-84f0-b23b340ea6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66dd5c9-ab9c-4d37-8806-3f08b22d6e2e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8140540-f6f0-4dc2-9fbb-30e4f8759263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55cce7ac-a3e4-4d53-a43d-35525b004a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa749c56-b501-4c8e-afee-8467c0fe8025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ae4da1-b849-437e-bf4d-44d50ead76e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7f363c-99cb-4493-a1b4-0f65fbe20e3a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120327cf-97c9-4332-a2f6-98e70bf4b6d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e410b1-d129-4a1c-92d0-50af1afb49a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1c45a5-24e9-4264-a4c5-f360ae58f271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ba4233-0aeb-4f69-9144-1c8ce9879dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d58af8f-4ad4-4b7a-ba28-6a96bbd20c8d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2adc841-d2c4-49b5-9c35-ee9ae0b2070c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c3041a3-b14e-41c0-bacb-d85721a78709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8568e32-f41a-45b0-befe-06b40af9030a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16443b0-90d2-457f-85f4-8f8140197d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d101dcb4-5a34-4701-88bb-687570a058ee",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9474d8-8e0f-41ce-bf02-6dcba8602c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26d0d07-e3a1-4068-bf4f-381796d40218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd82a4f-aa68-4af2-afcf-946badf9eb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f329287-a508-44df-8399-b063b618aac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a4d5a7-b4ed-48fb-b21f-9de48920560a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8cef11-ee81-41be-8035-fca29aa930a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "065a0650-4e0d-4d52-8d92-fe769f8e4c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f49d793-b854-454b-bf86-f79f7f497090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358a1a0c-895b-41c9-8fe7-46badf183d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5beeafd5-c8b8-4666-ab9e-f45ae8179093",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5665fd-8861-4d56-bb0f-b2ca6584745e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b78b6b5c-8e0f-44b6-b6a7-e0464d5472c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaadbe7-0ec2-42b5-a1dc-1c8b8d91b7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ce3096-5e6b-452d-a933-c9a433b32e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e220d9c7-dadf-4471-83f7-6eacd1ebd3a2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02c7f4e-44ab-43e7-8cf3-9e215b53ce30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca41ed4b-187e-4fe0-b61c-e79a8e84c1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62650876-8ced-4c5c-8fc4-61dbdd83ae27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea978a1-9d2d-425f-90e9-bbd7836df781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6a51ee-469f-4fa0-baf3-0ec234c7719a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781ce8be-8f3b-4460-8567-ae4edcf79d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb1c6e91-6080-4a5e-b9fe-a42e5d4ff9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ef4296-f7ef-4294-9fc8-b8415bcb6660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef06e02-8a22-4423-92b7-7be8e27fb33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91cb354-400a-4432-94fb-122877c6a2aa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526ea1d3-ea5c-4b9b-9ddb-8289a91fb0ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3be1a18-7f3c-4a43-bc7d-3ebb8c358c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb30b55-bba9-46af-80a8-8873fac58c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780bbd04-66ec-4b75-af97-f7f49e97f945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1804b1c2-5ee3-4359-bea6-f38d97b365cf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c73b0ac-13e1-4a46-9f8c-194cc47fac37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "720f21e0-3209-4972-9de2-3d5bb6d97124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29c2826-7bc7-426a-86a4-c007785ef7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7afbb4-9868-49a8-8ece-20db43759f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fe921f-c42a-4712-bf46-acd75b2435e9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3614974e-a925-42fe-80dc-15be228fcade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b226b91c-04bd-4cc9-8255-aa27a8c71671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f30873d-9bfc-4bd6-bcea-a3ef51a336e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a96d192-dbd3-4b18-8cd5-5d70647b3488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb34fde-a02e-4fea-ad3b-2844b7aaadeb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7daff0-29f7-45a4-9fda-859f68147529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba5449f-21e8-4eeb-a0b7-a820d3813524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be927690-2c3d-4f87-8f2a-56bc3e5fba81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796aaaed-a4aa-4dec-b2d0-b2c095107988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688bb520-489b-4d35-a841-dbf8b268f71f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83a339d-6488-45d6-8fbc-4d922fbe6276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26ba121-7fdc-46b9-84ec-3120f69f65c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adadfae-9c6e-4b5f-9b4b-7c93f951f745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569604f6-d7a6-43f5-8020-568d7d943e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc821e2-471f-4390-8da8-70c5f66f8a21",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5617029d-9cd3-44bc-af6d-3469bdb013cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3307d59b-4565-48e1-be8b-c0782eb95453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe784d42-d3c1-4949-9216-cbcbb12ff5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e7a6ac-73bd-41c4-8ac2-981600c99595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9904cf5d-8ce9-42ea-b286-07701bb5055a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1e3b95-8de1-4196-b5ea-28061a9cf05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2354604-559c-4aeb-8242-8cc964b124ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a09ad5-66ea-43b9-a858-a08db26bfbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7ba8a4-6795-4fea-bcf7-17fa19eeaa9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2053eb5f-15db-4448-8e65-934b893e0c5d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728ce254-e548-4dd0-9048-62586ff68ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfad765-af50-4a4d-b873-1740f9c65f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2c4e3d-9048-4be0-8946-a98f781c75cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462892af-9a37-4832-aa5c-2e22aa6c7b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554ed873-6e3d-4e8c-95b6-e890aa724189",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3dc505-40ca-42e4-931e-9f3f251c076b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719f21d6-2b9a-4385-8813-07a8b4feecf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7233ca0-b577-4400-a633-c74d6a0d6c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36063ffb-caf4-4cd4-9151-dcbf8e9fce29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c2eceb-3ad3-4650-8533-66cc5a0142ca",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffe8689-3a27-4e4b-aec2-dc778e90c0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c063832-0d7a-453d-a63a-d22ba7f1eb54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c7000b-a3d1-45c4-bb4e-efc22942becf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbace47-7020-419f-b862-335ab2d46353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d46d8b-f129-4c1b-b0f8-6bcebafa0fbe",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c034e1a4-e46e-421f-913d-8e7c9078e44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e749d60-743d-403d-be11-41ef65d69989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bc8f7c-afac-411d-a6bc-f0aad2f078c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdca898-a1d6-4900-89d5-6584ebe154fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28e4dd6-9480-46bc-9255-8028083696d9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0768619-5d1e-48ca-a442-555decbdf48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573b3d0a-f7d1-4922-a6c8-d95d46af0a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5caeec-1244-4530-b842-9505341a1877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f354d2a-2357-426c-81c0-fc3282058c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7fc569-2ce3-48ae-a1b5-1a8ab2409ffe",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f30af91-a6ba-4505-b220-925457bc1f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aed5825-a937-4f5c-befb-2f5272ed06f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f87c0a8-c7ed-4d14-973a-34b579e1368c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7eff949-bd6a-4807-b1f6-06260c847b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e9132f-4f5d-4dbb-a35d-247a444112c3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9ea883-f911-4992-88f6-b58fc87d7007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513bb90e-fee5-485e-a12e-3b8fe15a9cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88d363e-121b-4ccd-a7d8-6a40ad8cfc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f34709-7132-43e3-9acf-58ac844f9ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2d65ca-51d1-42c5-9f99-574aab57a836",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7dd78b-4c34-44cc-acb8-87ed3c4689cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ba668c-5c8c-468f-bb1f-75c8b203de32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5f0f41-a32a-473b-841f-f0787dd8561d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adce21fd-24f2-4568-8b58-440505706f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae51458-88cc-498c-b7b5-a7291f286545",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4751704d-3205-49d9-b4ae-21409d6f229f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86c3b68-3d3e-4599-ac39-9f719ef25b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8306254-a8c4-40ff-b2cd-d2c59561d119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd42c36-0daf-42e0-8612-99262eeb21fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c20173-8737-4885-869a-d02ab82162a1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ca6e9e-7d9c-4e7a-b607-5e4334c22aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e557855e-b238-4d22-b08b-72ae199cbfd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949f3026-221b-4e07-97db-8652369b707d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1ea69e-c626-4146-963f-d9d6eb158d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2f5488-e924-4fda-8311-4169f3523361",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa02af8f-0bd1-44fc-9d5e-6f15838d5c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571fc901-bbd3-4dc5-a4b4-577046a1bb38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356b2d68-2039-4d18-9f65-bfeb031b9101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c7a2f5-af73-42a0-80dd-d547bd3d1beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ab3c1d-c0af-4974-9c7e-01a9fec2cd1f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8015c4bc-9944-4040-ad4a-0fd8ab6c4cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6eb98a2-a098-43da-aee3-5c314277a0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d36fe6a-a66a-4641-b6a4-4260baee72b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea780f1e-cb36-48bb-908d-00aad48468f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97e38bb-c6cf-4f42-b787-606f0ad5104b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde49f5e-c861-4e45-b477-32b82d111831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a176285a-17b3-4ddc-8e36-50b8db8f4bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e8f6e1-a524-4b25-98b6-017614938bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60297952-05e8-4a03-b7b0-8f3e551f1dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c4f9c0-2708-476c-b538-e25d8c98a375",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec0b9d4-c96d-406c-8389-137340a340e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e33644-3ee9-4d4e-8cca-3bcf22e6b958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd96d8f-6cf8-4843-b207-10069abba8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af822b3e-5dfa-4293-ba97-8790a0757af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee47914-7526-4d78-b0a6-100007544e5f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9577125e-4fd4-4237-87da-93721a60bd91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8096a6b8-8a26-45a5-8f4f-58010925d21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea95565-24d8-499a-a65d-4a77fc6aef0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a7c487-77e5-4b6c-9b67-f66ba0072b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbd7746-5ad7-4ff0-9a9f-08fc9fa9f799",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4386b2-374c-43d9-912c-17cb72cbef04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc0096a-d65e-4b52-953e-0dcce92dbea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e883c19c-1789-46d1-8111-a4299141a532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dedf84b-de3d-49f1-8ef0-a460cdc43af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5c8c8e-1b43-44cd-bcb2-d28a7c53613f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164162c9-cb3c-42e8-b7f4-39be832c1236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1e9f91-9049-46b7-ad8b-78bb1d6b6d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a106ea-4ac2-4f90-9ed7-76a1e566f299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61364f95-6941-4080-a1d4-70c71648b382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6073508-91a7-45be-bc51-9caa9fc9354d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e88336-b876-4dab-a4e7-c5d37b1b85cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e8f5b9-1d36-4759-b756-f266f1df42a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b735129-a581-467f-80af-67e11b43bb03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a776f4e-137f-4ccb-a06b-f47b3aa1991a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1905fc84-0a15-4df6-9f3d-cc697abfb744",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2528bb-2afb-410c-b208-e5b1c3c5009f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd2f4bb-50dd-4e1a-93c8-034d59f1d70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c849e95-69b3-4549-8afa-c3129e15418e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6530f8af-3f68-47a7-8d85-c629718224ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ec1e9c-930c-4c3f-a638-0bd3e9d50392",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f542f1e-a80c-43e5-8702-5b9529b35396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900c6040-5664-4f7b-9719-88388e9b4460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d03d77d-dec7-430e-98e8-8bed8ad72ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3186e11-9544-4974-be56-132a2d0bbef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de47921d-cc00-4fed-b49d-5f487eb49cb5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a041cac-692a-4878-acf6-a3b9237ddaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519f50aa-c1b5-41d7-ace9-5800bba6cf24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4937bb4e-eab2-402b-8e98-3c245f1adad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec712444-5784-4310-b05d-9c1fb90801f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7689d3-5a43-4c28-9390-bceaa5526a18",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbd3daa-7832-4864-b584-222db36a3ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bed61ad-0611-4924-89bb-1650d7afd98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125c1370-3f4e-41de-bb69-fefd3292840c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15d21de-ac13-401e-9647-f6a7ca37ab82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f05874-aa88-45e5-bd2b-7000a9ec79b8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50f098a-0c0d-4d60-b601-ac7fa471eeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17f8e50-4d5c-42c8-8b85-a4a3a7948925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c12078-fc4d-4b91-9e90-60b35b4bf520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe08a98-a731-4fdb-be8a-240b4410dd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b3660f-d94a-41c8-9c72-ef8d7c372ba0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821feff3-a2bf-441c-9c1b-4e8bab9be5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f7f7ff-50a5-4660-8c47-b628d4e8e386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d8ac88-fbb0-4598-8530-20e39e7b2dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596f2280-5ff2-467b-abc2-8c41a09ca48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25ca065-42d9-42f2-b4e4-e1084cddf728",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b09f382-5f47-40ab-ac51-134533784b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2e3b556-f194-4147-a846-9d4afc4738c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb9a9f5-d919-490b-a024-77f987706cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee0a54f-5da4-42da-8731-65a7223b2a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b59bdf4-fc31-44ca-b36e-d1be8b2c91ad",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4da8ed-c6a5-4d37-88ca-e1407fe444a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc323fa-8b3c-4be5-9729-5f3d1999f3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a75ef7-c3f3-4b81-9dc2-3447540ce1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7903485-0872-4199-8d6b-b907c3e5f2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d04bc6d-b098-4cc1-a19d-7eba3bc26abf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6b20fc-9d06-4267-9f85-2db4b0034a7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "444363e4-bc6d-4e16-acf3-7017d5d147e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7365b9cc-682e-47ba-91fd-c314944876ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6d41fd-882d-4047-bba5-dd470e63650d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b82c9ba-15c9-4823-9b8a-a117ace10948",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adfd630-6742-4ffa-8b94-be87033f81d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6eb587c-d068-4d7c-bd12-93dae9dbfd33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6b0016-8500-4897-b902-0b2e35350ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea0fe1b-1fd3-4567-b44c-bd3f85ff2081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a73b5b4-5d81-4e9e-9be9-23948f6ca74c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a069d2f2-1427-4207-a360-3e7d41431355",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "445f4a8b-9613-46a1-b9b0-3cade96c8884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a608e0d1-264f-4503-9139-51128131ae64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38eb2840-0513-4629-95ce-a9945f9a3f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0d976d-bdf0-4af8-a6dd-dd58842ddb42",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496a2a86-7cf8-4fea-b328-3f0abc310b24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3648bd4-6b0c-42e8-a215-4aae4f1aa7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b8fea5-4531-49ac-8504-0478239a6180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eaa4305-6786-46b5-aa34-8189aecd3e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404b7c4d-d3ad-4f24-8bc1-d42d8cb0bb04",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446f588d-48ac-4dec-adaf-09c4b5a60a57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c493091-5a99-4efa-b62d-cca187d4574c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c87d48-eb99-40ae-8862-cc2e22779981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2f23f9-e146-408a-aed1-a4850545fd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac285910-aeb7-4562-88e1-e7ddad543cb7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4450f6-f86c-43ef-9fac-7ce09c29e177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae088e81-0416-4c05-9472-cae967238df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fb3e42-89dc-4740-b16c-41c65caa2754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e8cbe4-d3a1-493b-8f15-9e825c141355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c59896-3fc6-4f08-90f9-843258a99af6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b52b86-31e4-4380-addf-f818ce8c53b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "982d2a16-ab6c-4898-a19d-aafaaa509cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e33747-32c9-44d8-bbb9-e47096bbae7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340d0e98-7890-49c2-afb3-c4c2caf67c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb95ce0-13c3-403e-842a-671d64b574ef",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c86a143-e55f-41e1-b708-c42653eb4238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3daf0f8a-9e49-4c98-9302-f350bad8e868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ca777d-2b75-4a3f-86ad-b1c7d3838b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf00159b-b394-4995-9e2b-9c21a5c301a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6d86fa-2015-43f8-b037-4e7ca16a4b47",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5678e46-6678-45c9-a64e-bb86627cd5e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c42c6de-4c7e-4653-9720-a9d5e08ba819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e682c4-2de9-4d44-b919-99698d29d681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4512145-78cf-463e-a04b-ac7266bcbcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc41dba-ee4c-42d9-9720-f77643b2687e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dfe476-dff0-4d81-8f91-64425d55d73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c84af1ff-9548-44b3-aff7-c61d773cb2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16a2dba-3e21-47be-bf04-be2864b953d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f97e2f2-ce2a-44c3-a0f3-00c2c9c9bed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c3bf42-60e1-46e0-a95e-a17d221a3bd9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a25d5f-84ff-41b6-abb5-515232ba8e89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "573cc9a2-ab5a-4224-b2bf-d70fca3a3e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c4c298-b9d1-4220-ab30-5d242a638f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bc983d-bb99-46d0-ab0b-4096ca0a16a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085e5574-f810-4631-bf3b-0a92c623a5c0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87db7701-c01a-459f-8cc5-a2e6a00229e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db0427b-428d-4c0a-9852-7e8b23ca846a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd212f7-c135-4156-a4e7-ddbf774a5e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365d18d2-c00f-49ea-8162-12513b1230ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5198127b-70a0-476a-9a97-681b4c70653e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95272f63-90b5-468b-b97a-366bc5ffe08f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c0ba64-d51b-40a6-833f-25a1fae4cd6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6258a4ea-4404-4c47-a8e7-6bce3d54a9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1310040-9091-4d7b-b422-55f94b52afe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1178b1ca-a02d-4f52-a176-9613523d05dd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cffd54-710a-4f1b-82e6-03381e3edb99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26cc447c-ede1-4e2f-a1ca-a04df975e405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105b7a27-25dc-439f-8f2c-f4410e8462f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d45c245-421a-4adb-85b1-faea63c2b985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020f4c56-b223-4710-b012-c0ae86d383fa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf34142-197a-4965-980b-0d4538377262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2915661b-d5b0-4a16-8845-470eef19f912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d86e9b1-4d21-4fe6-8697-3749458c3c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0f8e77-5eb0-4a99-bed3-d9ee4cfccddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fad550c-d875-4f3f-a0d2-1b06846fdd3f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3af24c-6486-4c7c-9cdf-041d994c7176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e69921a0-33c9-4269-b965-1fde60597fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fa02c1-4131-4a14-9ddf-007619ab5907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02285b05-e1ac-4f18-b6e3-8c81c998b9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e34cf06-dca8-4fbf-b6bb-8db0d955bc12",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b5ccea-3dc5-4273-8f57-378bd914a65c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66bb029c-5ec0-4241-b5f4-49b56601f4a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2577dfc7-f46e-41fd-a65b-78a1f1a10d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333ea514-7b96-48d3-acc6-94a6103b804a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e83df8f-e2cc-4aae-9fce-038355c2e389",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4a2b51-2631-47fa-9a3a-76ad3560d6b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b86b1e3e-9fa4-4eea-9248-64ed5bef20d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58462b97-c646-41ab-9dfc-d62433c91af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcd69b0-c7db-4eb1-8bed-7c79f06f3bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a14df8-6369-4038-a346-c9669e34c0ad",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6eaeeb-12dc-4267-b913-b88ef6195900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ed84b1-c530-4b7f-8bd9-0b9b61510380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c2f06f-cf7c-45f2-9a80-035f6acec460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de475345-497e-41a2-b333-050974f895b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ce27e8-f213-459c-a7d6-a8003333805f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8442afcc-48f7-4292-a75e-c268e4b43443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1591fd9-62d1-48b6-8956-ae7d3a8d8d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23d6aab-f418-4d42-9df3-d2bbb6221ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d74aa7-df0a-46f8-a1a2-74254fa05610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a958a8-e6f1-4a58-bbd7-d05d6ba5fa23",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7828b15-5679-4e5d-8d4c-43696abd6fa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ff32b4d-577f-44da-a0f1-39ed9e805c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9134df2b-d3f1-4e81-8a40-d1ce09876458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051108b5-5bd1-4fc1-9a49-dfceeed085aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c88878-6747-4044-93d4-5038f34b0e33",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca6f3c0-2148-4358-858b-42d4c82d1ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "750bed36-5250-4c2d-8c58-a299c99d3a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72660523-c63b-49df-abe0-f32901b28dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afc28bf-7edb-4402-993e-9da726362728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7529ca88-5c9f-4394-9c41-e78b3c6c06ad",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27489406-3490-4de9-87bc-b97d3ea228af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "173d270d-34ef-431e-a4ce-ee2e0658cee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49ba5e5-d60f-4f22-9c8f-66fd4add9feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc236a9-a299-4915-af6f-e6e4df1394d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acd8afa-855e-4689-8ccc-a9138fb6a443",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16ec933-55dc-4416-b095-a02e08c52081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "193690ac-a048-43da-8a72-0eb6873babfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f90124-c610-4718-8cf0-39538aa3c0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6743d2a4-0a3b-4473-9430-5c1b8456adff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a1d90e-3754-4365-ae22-7a3355ce5d0d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66ac07a-be3c-4c20-a2d7-00f9a0f840f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b344d305-6800-422c-8a83-ead86462cc9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d158eb46-6b90-468b-a3d5-988e98588d9f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a7b16b-1b5b-4837-821c-47c352c39f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34016146-8754-472f-bace-34f34d1ef254",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e763bc-6ff5-40d6-b04b-cf968c9d9f45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa135aea-b754-4f01-bb2d-bea294486881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a39a067-1f4f-4187-930d-389fcb14bb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b89fb1-9f8c-43f8-b3d8-1592a3f7d1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d9be19-0fdf-4b16-920b-9ba7c9540179",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e68163d-c27f-436e-9e70-a07b029f58d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6efb1f-b714-4eab-a910-55da695772d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2694ad4-c14e-4e92-a16f-f10f2182ef7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f576e6c1-a3ca-45fb-9c86-5fad2fdfa768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6f9b12-16f0-4ff6-8f9d-d90912cbf1d6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db351521-1d08-4045-939e-ece0b0be0a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a56f2ed9-3dcc-47d3-a450-701c45991970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028749a6-187f-4137-8331-bc14bdbc8bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8871d47d-bd98-41e1-aab0-9f45965570e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d0212f-bbcf-4669-a7eb-57b7e938f058",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4af1b9-3bea-42fe-a36d-d3f7bef9b178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e9fcceb-cde6-456f-820e-0576d4467994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9048da-1d18-42ec-b01c-53f20811a274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fd263b-b19d-418a-a1f1-1b5062b8ac87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b635169d-b286-486a-8c73-86cfb40d118e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9309322-1adc-4dd9-b651-b027d5d77dbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ab2b06-333d-4b6f-a46b-99e80596023f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f5e1ca-551b-4978-a885-1bb582dbb1f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d7ba44-1e1a-42b7-b7e1-feb8318e7683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6386b556-69c9-4026-9780-88675683f7b9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe230b12-7a31-4190-afed-14de0de36bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4b6d9a-f7e9-4f21-9566-cb360b8f7572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb19df9-beb1-495a-9fa9-c564ec3b05a0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a8602e-2536-4229-a541-d18e9ce1e2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e49f798-4c02-4495-9ce8-663beba5b63a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72aa5fa-1b7d-47e6-8889-b2201e3d5096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "758d2f8e-45f5-48fb-ac90-f9b9a77a5916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0788ff8a-907b-4dff-8002-32c04e3046ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7d0f30-c489-4917-b7e2-f9be7c4d8e10"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2994bec5-90f5-4089-ae42-ab166e041204",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0a37608-7f4e-4ce5-bb8a-86cc9d6287c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18ad7104-c545-4cbf-8bcb-fa116d2b908a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "818acd81-2842-4f2c-94ee-a1a509b8aa47"
                    }
                  }
                ]
              },
              {
                "id": "5c89dabf-290e-4140-948e-0a8c92df6838",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ea0b8c2-5188-40b7-9b38-d00cd0d8aad1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5c1f94-d507-453e-bd8a-7b62af12ebe3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a3dd0cb3-3dff-4490-bde4-f5bab8824e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1bfe5b-061c-4c1e-875f-92d8d7186960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e514a56-cc45-4b45-8a28-baeda77430b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f79e26b5-9d72-4dd9-bf83-441b840b5af9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b53fb32-abef-4eae-916d-f3f37a82b9b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "112bd7ea-c883-43a4-9737-894e8b3e6f61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5f0477b-f1d2-48f7-b386-199bdfa7a036"
                    }
                  }
                ]
              },
              {
                "id": "2e68f1e4-7481-432b-bfde-5697aeade981",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0bdd2155-5a92-4fa6-86cd-c66567247d02",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e90bd5-97c6-459c-a75c-867c7930c351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "73a4d028-30a2-4a72-9d57-a3d460461527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185ade53-bf3e-4304-883c-244a86cd91ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1484ab36-4799-46b0-a0c1-1bcb8a5daaad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "20068ef1-f61d-42b4-9a9c-9280495dd43f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2abe0c98-e8ff-411d-b500-5322f76dc251",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a8dd9a7-904c-44d5-81a6-c6417522d0d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dfd6de05-94e3-4458-a2b3-aa45d966a71e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20d8436a-cf1c-46bf-8222-10b863e0a495",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e558d4f-5a26-4f16-97bd-1d2ff59c5a89"
                    }
                  }
                ]
              },
              {
                "id": "f0f88688-bd27-4306-aef3-4978a5c980b0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a709cadb-4b0f-4c57-b337-df97b8d903b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2479cdd3-ea68-4ab9-bcac-d3044fe4fe83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cf9ece5-b26e-4421-bbf6-98d33fac700c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afabef4e-3a9c-4d36-8ffd-6f1929da6c2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65b8aba5-546a-4f49-9ab1-98db58c46736",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ca2532ad-c00f-4b7a-a485-149ff48370e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1af2157c-0709-4916-a40c-b86dbc309260",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b2c86f5-dc29-401c-a47c-8560089eeeae"
            }
          }
        ]
      },
      {
        "id": "aeccb763-4dc9-4733-93b3-4707ed9fd907",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "56b9da09-a97e-4633-ba31-5c0bc896107a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc8d51f1-3a4b-4b2d-9016-0473adda09d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "407b26ae-9046-4fae-aacb-1579bff4041a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0b6262-cd01-4beb-96a8-eb62dbfd2e7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4e9d405f-7791-4231-ae84-88d32fabdd3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a647aa9-6a93-4ced-9fae-6feaf59c45e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f04dbd8-3ad3-4917-9cb4-9a70d773a35d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8b6eab6-9d6b-4d3d-8793-4890608cb139",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4ff82d5-5765-4230-86b9-a27e213260e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e5afd94-519e-42a5-a5d3-1d85a3e0f7c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7961882-e171-4d68-ae24-00d520f98a2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99f72234-6a54-4387-a3c6-283468856f7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ca0da95f-5a47-40f8-922d-c39e694f43f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bd50e51-461e-453b-b827-5e917fb3e1a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cb80552-06cc-45b0-8045-a30b23c1454b"
            }
          }
        ]
      },
      {
        "id": "4b8c2186-8141-4156-b53e-43c66afd55ca",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "509a391c-4ce9-409a-8dd9-c01473638ff7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b517792-da1b-41bc-9d72-b95f9ef17f9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6942592-fff1-4742-b583-f9cf7abf8c43",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa5c315-f6ff-4a6e-85ff-4d969edea54b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6730012e-2311-49e8-8b55-5e101336ceea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f80cc9-0554-41f9-8d8f-3df10c34d942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a12ff11-1e3d-4f87-a9cd-38539512898b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32d0eebd-4e46-486f-996b-49a4963cc2b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56bdc70d-3c64-45a9-ae37-845063aa30d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fc6fe05-822c-4e91-b062-b0f76ae1cbfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "825957f6-f4b2-48a1-a8a1-76dc54ce7ea6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4312b98-e42f-4d6b-b6a6-0028a5cc6df1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5aa339df-0d8d-49d8-bea7-c536ad557de6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc14323a-a6a0-4333-9d5a-8f9afd63f958",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4942b9c3-0d5c-4ab2-b112-f6dff92450b6"
            }
          }
        ]
      },
      {
        "id": "b1d03915-1d96-44d1-9bbf-83a0f6b19496",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2f4d3005-73b6-4a4d-a5f1-61f0d9a149b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d495abf-565f-4825-8e42-e14742d1a474",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bba9b8b3-b8b1-4a54-8590-5845c1310c92",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09031402-e4d4-4291-8696-3709e701747d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6406a5a6-3c9d-480b-b5d3-c28180f8e096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235bd485-efba-4f9f-8ed8-6913b97cee7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3891d708-a00a-45e7-b20f-0fa3d44ffc02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0426c261-e6e6-4649-a78c-8aed1e953731",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec4ab284-4d84-4901-bae8-8b0c7ab0c3ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9817457c-ccf2-4eb7-b505-741ef1c43b01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c8f7b5a-b835-4153-a9ed-d2ffdb3302b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2c800aa-1a7f-45a8-806d-37b390877550",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64889a7e-f385-44aa-bdfb-b9b00a7c510f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16bd5cfc-adc8-4b1c-8cd7-dc82b8501c93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e1be568-b7cf-4c9d-8bce-5877e4c73e15"
            }
          }
        ]
      },
      {
        "id": "e54e9113-4bfa-4f17-bfbc-8006b9dc1d12",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a355d3b7-b00a-4dbb-a004-ca45d08189df",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "257cfa99-7d06-429a-acfc-645394717349",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c4fbea0d-11eb-4c33-bfda-cd5a17902f52",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00b792b1-2dc3-441e-af25-93d839668d1a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ec5e31a-79a2-43e8-8f19-78698749c390",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 39
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 140.20634920634922,
      "responseMin": 25,
      "responseMax": 13794,
      "responseSd": 910.4827763288185,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728521103738,
      "completed": 1728521147529
    },
    "executions": [
      {
        "id": "e692d0a7-3672-478c-9124-b0b694f817d7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "025748bf-9101-496d-98b5-ab3659cb0fa5",
          "httpRequestId": "13db3ea9-3434-4f6b-83f3-17da1880805f"
        },
        "item": {
          "id": "e692d0a7-3672-478c-9124-b0b694f817d7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "06cd72f9-9d92-48f7-9135-f35cf2aef0ad",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 0
        }
      },
      {
        "id": "52415f9a-0210-45dd-9343-97c4d8d5394e",
        "cursor": {
          "ref": "ab9c7f6b-6bf9-4fd5-b609-20d907add648",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5ab55e37-6f94-4977-b992-0057933f12cd"
        },
        "item": {
          "id": "52415f9a-0210-45dd-9343-97c4d8d5394e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dafcafe3-7d82-4bba-99f2-60bc935165ac",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 0
        }
      },
      {
        "id": "a3136ee8-6b27-49e1-9d1f-209e2294fae0",
        "cursor": {
          "ref": "e46611a5-69c2-4473-8508-d49c6e4f64f6",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b58a6a79-9f89-485c-9fda-e89163ee9ecd"
        },
        "item": {
          "id": "a3136ee8-6b27-49e1-9d1f-209e2294fae0",
          "name": "did_json"
        },
        "response": {
          "id": "5e3faf2a-5575-4c2b-bf19-b813eb3b0e8e",
          "status": "OK",
          "code": 200,
          "responseTime": 326,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd4d1cf-1b47-4f4c-8f73-1ba48d470c7d",
        "cursor": {
          "ref": "4da4cd56-5d19-4ccf-a7eb-7b4ba983002c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e047d5f7-d8cb-4826-bd7d-c717b2f48d09"
        },
        "item": {
          "id": "dfd4d1cf-1b47-4f4c-8f73-1ba48d470c7d",
          "name": "did:invalid"
        },
        "response": {
          "id": "63ded4de-d3c1-4ea9-b029-25412152e675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd4d1cf-1b47-4f4c-8f73-1ba48d470c7d",
        "cursor": {
          "ref": "4da4cd56-5d19-4ccf-a7eb-7b4ba983002c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e047d5f7-d8cb-4826-bd7d-c717b2f48d09"
        },
        "item": {
          "id": "dfd4d1cf-1b47-4f4c-8f73-1ba48d470c7d",
          "name": "did:invalid"
        },
        "response": {
          "id": "63ded4de-d3c1-4ea9-b029-25412152e675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef149b8f-c2d8-4302-ba27-ef59353fd65f",
        "cursor": {
          "ref": "2c9811b4-fbab-4ac8-bb55-725cf33f5b85",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a2435b60-7ba2-4e0e-ab6e-59da3776e8e6"
        },
        "item": {
          "id": "ef149b8f-c2d8-4302-ba27-ef59353fd65f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ee251408-2701-4ab0-9a8f-2ef448439a68",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f0561f-f900-479d-aa53-7651fed587fc",
        "cursor": {
          "ref": "19b4e85b-8c2f-4ea0-acb6-b7f46c78daed",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dfd553b6-6972-4c92-851a-8b4de67eea99"
        },
        "item": {
          "id": "28f0561f-f900-479d-aa53-7651fed587fc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "293a394b-e12f-4078-a3e9-5a542c8e0d25",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c151ad-f5a4-4d89-8eb3-e366b3867235",
        "cursor": {
          "ref": "48ec30a8-1a4b-4538-ba15-69fa90457bb0",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d54f6a06-98f8-4e65-8b90-e8e5e0d87ee7"
        },
        "item": {
          "id": "83c151ad-f5a4-4d89-8eb3-e366b3867235",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c39e912a-45b4-4159-b2a5-a8667f0aa9e0",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 200",
              "stack": "AssertionError: expected response to have status code 401 but got 200\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "638c7f10-4c5c-4099-b2c9-76a93aa9b937",
        "cursor": {
          "ref": "9d725e5a-8ec7-45d1-aa73-b4799e65f74b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6fecbdab-37a3-41fd-8a62-025a4979cfdc"
        },
        "item": {
          "id": "638c7f10-4c5c-4099-b2c9-76a93aa9b937",
          "name": "identifiers"
        },
        "response": {
          "id": "ca165458-1a0a-4d33-845b-aee34334a48a",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d427c09b-c1a0-43eb-932d-8382aadac429",
        "cursor": {
          "ref": "9ec85f45-6cb3-4e78-aa3d-f69e55ce1f04",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9ea5e612-41c5-4008-aa6a-ac42c7b3cf94"
        },
        "item": {
          "id": "d427c09b-c1a0-43eb-932d-8382aadac429",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "31483264-70d0-45e5-86ba-02f32c122ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b353d5e6-a3d0-4a8f-bb3b-1bf6c7efd8bb",
        "cursor": {
          "ref": "f5eee8c8-8516-444f-8ae7-761e644af078",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "591b7a55-23b6-4340-add1-076f78e9f5aa"
        },
        "item": {
          "id": "b353d5e6-a3d0-4a8f-bb3b-1bf6c7efd8bb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "19c6dd35-af05-4966-9e3b-27e71bc02a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacff27d-5a90-4a90-a35f-155b93276b85",
        "cursor": {
          "ref": "e643b348-55fa-41e2-af9d-1b33e21153fb",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dddc7348-68e7-405b-a07c-c965ad9bb2f7"
        },
        "item": {
          "id": "aacff27d-5a90-4a90-a35f-155b93276b85",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8f2ac2ed-72e7-4078-bc8b-3024da36f00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24ac7dc-3c4f-4904-8920-3bf9440a69a8",
        "cursor": {
          "ref": "08c40c75-9ed0-47ec-a3e0-05aa9fdf8197",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d0f56b6b-26e1-4426-874f-25226bbafd79"
        },
        "item": {
          "id": "d24ac7dc-3c4f-4904-8920-3bf9440a69a8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e06331bf-f2c0-4117-bdce-4f089c645b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166664ec-ca97-4a57-8094-41f43216fd77",
        "cursor": {
          "ref": "365668be-fc6e-4581-9c6c-0ed064528d2f",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bdde6fee-202f-415a-9c04-035ff338e07f"
        },
        "item": {
          "id": "166664ec-ca97-4a57-8094-41f43216fd77",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "86d75e9b-9b15-45d1-ac92-a4b5cb88b584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf4c241-9341-4af0-9a65-414da9e4bb37",
        "cursor": {
          "ref": "b6ce29c5-6911-4b58-a236-30b50f5cf4d6",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "902dcace-3969-453d-90e8-ce89f905eca8"
        },
        "item": {
          "id": "dcf4c241-9341-4af0-9a65-414da9e4bb37",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fd50572e-0b66-4292-b6b4-e87d66e9e3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdcfe75-89f0-4a97-890b-70ba2ec00b8a",
        "cursor": {
          "ref": "b8615bf2-087b-4771-b3ba-dad85769912c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c345f987-ae6e-4a29-bc6b-dff2cd72614c"
        },
        "item": {
          "id": "dbdcfe75-89f0-4a97-890b-70ba2ec00b8a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d68f3d49-fd77-47da-9a14-60ed9966e84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6703f8-af93-479a-8e50-01643ffe5f60",
        "cursor": {
          "ref": "c02752f1-8e94-44da-96d9-bb4a29f5e87b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c03c35b6-ff77-4d6c-bbdd-79528d2699ea"
        },
        "item": {
          "id": "4f6703f8-af93-479a-8e50-01643ffe5f60",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fa08d55c-32e3-45f8-b435-2637bf4faf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b43388f-f8fb-4d75-a465-597d8adaa217",
        "cursor": {
          "ref": "ce21a05f-513b-49d0-8b7b-cd8c2b8da84f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "37fce921-501f-41dd-9036-5f8e046d6985"
        },
        "item": {
          "id": "3b43388f-f8fb-4d75-a465-597d8adaa217",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "01fffc8d-601d-492f-bf5d-eddcaeeaec80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb111b0-b84f-4033-9a3e-78a9edd2b36d",
        "cursor": {
          "ref": "faeb55d3-28ad-41f5-b35c-20cde0a04dca",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "42a0a228-a132-4aa9-bc84-89907ce557a4"
        },
        "item": {
          "id": "5eb111b0-b84f-4033-9a3e-78a9edd2b36d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ae83c33e-b317-4114-a23d-d1ea009c7786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c22171-0934-40b3-a5ca-cc93c4345b7e",
        "cursor": {
          "ref": "6f845cfb-045f-418e-ac01-b4b0eda3093c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "24f90d24-fad2-4dfe-9383-805b3247966b"
        },
        "item": {
          "id": "26c22171-0934-40b3-a5ca-cc93c4345b7e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c36f3f2f-beb3-4b9d-aa54-6a536b5b94eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7061c0-0f4b-4be0-a6e4-03509f76163a",
        "cursor": {
          "ref": "97f05a8e-26d2-4985-a9f7-cf90a00e2275",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3b7bca72-9a36-4b97-a33d-08bdaf9e4ed6"
        },
        "item": {
          "id": "3c7061c0-0f4b-4be0-a6e4-03509f76163a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "17c3e51c-928f-4516-a614-bf9763d55257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43f5603-3ae6-43ba-8542-6ca62cd09d83",
        "cursor": {
          "ref": "f2430194-a900-41ff-86d2-f7b994c445bb",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ecf491b2-1112-4397-b540-46db64cd7ec1"
        },
        "item": {
          "id": "d43f5603-3ae6-43ba-8542-6ca62cd09d83",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "95849187-26d9-4adb-a298-bf96196345fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20299cfc-e662-4a93-b1f0-fb3b540c93c3",
        "cursor": {
          "ref": "3be1b0a8-4cc3-43d9-b179-f542392673ee",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "667a2ad2-743b-4244-9ad5-5121a05497fc"
        },
        "item": {
          "id": "20299cfc-e662-4a93-b1f0-fb3b540c93c3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "015f04c5-24d7-4cd3-a45c-f0bd2d41b4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73ea22c-254a-47eb-93dd-ab1412da4929",
        "cursor": {
          "ref": "f1ba3da3-43e5-49ed-ba6d-e3af5cd090c6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "48303909-a3bd-4bce-a0b3-5b33ccfa1c3c"
        },
        "item": {
          "id": "f73ea22c-254a-47eb-93dd-ab1412da4929",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0fea29b5-0b1d-4979-b42c-038210a33bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c03515-e567-4f95-9ed3-92196cf2a3d6",
        "cursor": {
          "ref": "862ac56a-7cb5-43e6-8b64-ecf01caaf1d8",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "48fbd07f-b328-4dbc-940d-c912c875d5c0"
        },
        "item": {
          "id": "20c03515-e567-4f95-9ed3-92196cf2a3d6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2a9fd06b-9982-41c9-89af-9d17574d1f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72698402-ebaf-4114-81f1-d963f2d1c3ea",
        "cursor": {
          "ref": "e2821c79-5037-406e-87c4-954eefd693f0",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e7218abc-9afd-4cd8-99c4-4cdc17581015"
        },
        "item": {
          "id": "72698402-ebaf-4114-81f1-d963f2d1c3ea",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "233a0984-61c3-4b36-bbef-c2d636516b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a11866b-4969-40d4-b1a2-13165c8bc4c6",
        "cursor": {
          "ref": "37ea92c2-401b-459c-8500-83e1de30bffe",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d71bd7be-8554-497d-a46c-2c71ddc1cfa7"
        },
        "item": {
          "id": "7a11866b-4969-40d4-b1a2-13165c8bc4c6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b0e02943-9602-4318-8640-73d5cd429b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413d42dd-43f9-4944-9521-6841678908b3",
        "cursor": {
          "ref": "beee7508-0ab7-401b-a606-ddb99087b92f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ff26a877-26c3-4163-9f2d-ae9084ff00ef"
        },
        "item": {
          "id": "413d42dd-43f9-4944-9521-6841678908b3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b1a697da-38d7-482a-a089-b48c91c05017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dedea8f-01a7-47aa-9eb7-756323fabd76",
        "cursor": {
          "ref": "a9c3c0fb-d61d-4a57-a5f4-605f0859ec90",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ed5ea541-e0f4-471c-b647-2feb35daaa7c"
        },
        "item": {
          "id": "5dedea8f-01a7-47aa-9eb7-756323fabd76",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "81219a1a-66c5-4d30-8dc2-af195f8e81d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cfad64-c420-4839-85ca-b9d8596ea002",
        "cursor": {
          "ref": "a349d49d-1ef0-4b44-b488-109d5af62eb8",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b9d08261-74f2-4593-8cc9-30939545a806"
        },
        "item": {
          "id": "95cfad64-c420-4839-85ca-b9d8596ea002",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "54ec57db-b52f-42ff-90fa-05c37db41284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd7e6be-bf05-421c-a718-65178758bcbe",
        "cursor": {
          "ref": "cc71faa9-f6a7-47a6-8a56-d591d6af24c9",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0629dca7-814b-45eb-9374-d0df8f4f74ae"
        },
        "item": {
          "id": "5dd7e6be-bf05-421c-a718-65178758bcbe",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b778a481-3b4f-4e2b-b2ce-c635a85b19d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4599cc80-cfc8-4a63-bdcc-a051326d380f",
        "cursor": {
          "ref": "6510dab2-dbb8-449d-b82c-9f14ec22ed1a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "715a8bfa-be56-464e-aedb-9300a144a314"
        },
        "item": {
          "id": "4599cc80-cfc8-4a63-bdcc-a051326d380f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "daffe767-72fb-475b-a125-ba554735b426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050afd07-54d1-468a-9113-4db1e7867de9",
        "cursor": {
          "ref": "a061307a-d375-4c48-a704-406b42921fdd",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "dcb89f24-b767-45ba-8e33-0de127a684f2"
        },
        "item": {
          "id": "050afd07-54d1-468a-9113-4db1e7867de9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5eefe070-3b9a-496d-b99b-ce1204311302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40b7833-c627-4f45-b67f-58ae699c5433",
        "cursor": {
          "ref": "0d4372b7-a0fd-41ec-8042-eabca9f8b99d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ac4b41c2-8541-42f5-8d02-a223f875f1c8"
        },
        "item": {
          "id": "d40b7833-c627-4f45-b67f-58ae699c5433",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "caf8c095-76da-401b-a8fe-d4d91ddfe862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35bb875-dbd1-4fbb-9356-a3bae6ca66a3",
        "cursor": {
          "ref": "fdc4dde3-f5ec-45db-8126-c6dd0effb9db",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "027a4cf1-c43b-4a5f-af10-1ace403c9076"
        },
        "item": {
          "id": "d35bb875-dbd1-4fbb-9356-a3bae6ca66a3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9e4a9b1f-93aa-4cc5-924e-4bc23117411e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a6f487-52c1-4b23-b1b7-c54e23ecc2ca",
        "cursor": {
          "ref": "664a76ba-5419-433d-9f5c-1f820f923679",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0145afed-657c-4c73-bc60-595c7191b394"
        },
        "item": {
          "id": "c5a6f487-52c1-4b23-b1b7-c54e23ecc2ca",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b9ec260d-1fda-47f3-b2fc-e3d51fd6aae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca726c1a-1563-434c-bb5e-b0346a488839",
        "cursor": {
          "ref": "c45cba6a-d6d7-4503-a439-f6997e5e28e1",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e7d15945-2519-4ee7-80e4-44dd27572492"
        },
        "item": {
          "id": "ca726c1a-1563-434c-bb5e-b0346a488839",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "644e9fc0-d8e4-479b-806c-a2ae71befd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7399904-4993-4fb2-a1c7-36cd5f62c97a",
        "cursor": {
          "ref": "8bb7dd6a-3894-421f-869b-0af510de6f9f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "30680173-5d72-49d2-90bf-85eb0b2d0866"
        },
        "item": {
          "id": "d7399904-4993-4fb2-a1c7-36cd5f62c97a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "67d0559a-2628-4e14-9b41-e672bbf40489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0641f1-6013-4633-b298-344e33570918",
        "cursor": {
          "ref": "6b843257-451d-418c-9712-3b203ddc7416",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e854b924-4815-4c84-9116-55d0e761ff00"
        },
        "item": {
          "id": "8c0641f1-6013-4633-b298-344e33570918",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "02b533be-b126-4de8-8afc-d253d1fa6bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d86bf6-1bf9-4671-8695-298982f4248f",
        "cursor": {
          "ref": "06a5a21b-f051-414f-9b79-ef4866969747",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6816a4cc-0ff9-4818-b2fe-f29e91da66f8"
        },
        "item": {
          "id": "96d86bf6-1bf9-4671-8695-298982f4248f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "932338e9-21c9-49d4-b80c-a736abe245e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a29ed0f-4b98-4156-90af-0b918f85764d",
        "cursor": {
          "ref": "fc5edd6b-16d1-4026-b938-372282fb7948",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b81b2017-3b57-477d-8c5c-de56c50be926"
        },
        "item": {
          "id": "3a29ed0f-4b98-4156-90af-0b918f85764d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c9124b98-cb71-4f95-aa95-c97a50546154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5114b5fb-74a7-49f9-8656-7685cb410e84",
        "cursor": {
          "ref": "d22219ad-102e-4d6e-94a8-3c98396fa1ab",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "41c70938-3ae4-4514-9491-64b3ac02514b"
        },
        "item": {
          "id": "5114b5fb-74a7-49f9-8656-7685cb410e84",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0732d8a1-aa9a-4090-b3ea-621a953e3cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5107de-c394-46a1-b354-2df32d93023d",
        "cursor": {
          "ref": "78cdc67d-edfe-4965-b482-88bd30ae25b4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a8b556ed-b2ad-4cf4-8e87-49fb4c3aa858"
        },
        "item": {
          "id": "df5107de-c394-46a1-b354-2df32d93023d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "40701e58-3262-4933-ab52-21cf47d901ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a93de0e-8f44-426e-bda0-7d4c8403781b",
        "cursor": {
          "ref": "f9ba968d-9b9f-431e-8df2-ee51aeba05c2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0b3cbe11-5c6e-42a9-8c72-59a70b59ce6d"
        },
        "item": {
          "id": "7a93de0e-8f44-426e-bda0-7d4c8403781b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "687fb7aa-c899-44a5-b142-6b1c1d1f99e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a17d49-b87e-4751-90d5-fac6a3049aad",
        "cursor": {
          "ref": "82534cf4-2720-48e6-a584-be3f684a3055",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b74f9f9e-3fa6-4962-aaed-a316c4f72e79"
        },
        "item": {
          "id": "f1a17d49-b87e-4751-90d5-fac6a3049aad",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "502440e4-0971-4816-a8ea-7c73b176f029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ec194c-31d3-4d4e-aef7-08fb2c6b3bbf",
        "cursor": {
          "ref": "27b309b8-9cdb-4620-82a9-05f3877c65bb",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "966dbd65-107c-4eb6-b467-78ef4486c015"
        },
        "item": {
          "id": "e9ec194c-31d3-4d4e-aef7-08fb2c6b3bbf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a3ae3ff4-0b72-48b0-94ad-79ac114a11fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa50975-7e0e-46d8-8388-b0c530cd4693",
        "cursor": {
          "ref": "7f4319ee-e4b0-49d6-b92c-c5266e58f04a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3163774a-a928-45df-adb2-13a4c5c4a753"
        },
        "item": {
          "id": "8aa50975-7e0e-46d8-8388-b0c530cd4693",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d380fb9f-af3f-4dca-b1aa-cda6aa7e89e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aec411c-c8be-4b6d-a3c7-e3f3cbb288f8",
        "cursor": {
          "ref": "33bdd6fd-f221-4ba6-8ad5-b1081cbd3a41",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "47d1fe28-4c3e-4fa1-bdd9-f0f12fe2e420"
        },
        "item": {
          "id": "1aec411c-c8be-4b6d-a3c7-e3f3cbb288f8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "03a49307-f7f4-4cd9-8f1c-791cd3ce145b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba1951e-d72b-4461-ab5c-c9c3f617786b",
        "cursor": {
          "ref": "0eeaa3c3-cb0c-4be7-96de-10611628a461",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e465c05c-7dd5-4bc2-bc3c-a3eb5df06aad"
        },
        "item": {
          "id": "2ba1951e-d72b-4461-ab5c-c9c3f617786b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "17a8fabc-67e5-4eae-90cb-83b3a1c825c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0788d6a9-ab94-4fd5-bfc8-74a737a9b91e",
        "cursor": {
          "ref": "2316b6c6-53c7-4a2b-ac01-f2011cf5d8f7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d9539961-4a5e-44d3-9bb7-54dd45a9e9c7"
        },
        "item": {
          "id": "0788d6a9-ab94-4fd5-bfc8-74a737a9b91e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "719097af-24d3-4f92-bc45-dc089b152b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d89e0a-14ae-415d-b197-b8b715613647",
        "cursor": {
          "ref": "54134a74-d813-4bcb-89fb-4b283c2b6518",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "57513472-1802-45d3-a716-46a32e19f531"
        },
        "item": {
          "id": "d6d89e0a-14ae-415d-b197-b8b715613647",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a2fceca7-2046-4a7f-8ecf-3b6ab7516786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca758b9c-fd4f-46c6-b5de-a27ac2e10263",
        "cursor": {
          "ref": "4c38b59d-024f-4cdf-b15f-6790ed34d950",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a572c274-b979-4a63-826e-41755041a489"
        },
        "item": {
          "id": "ca758b9c-fd4f-46c6-b5de-a27ac2e10263",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dbe831ff-0655-47b2-a433-971ebd6d4e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2e7f67-3ee6-48ef-bc0e-9c4a0843570c",
        "cursor": {
          "ref": "ed3686d8-b09b-4e1f-9ec3-d2cc8d7d66b9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8fbdd454-4324-45a4-af65-68338cf1c308"
        },
        "item": {
          "id": "fe2e7f67-3ee6-48ef-bc0e-9c4a0843570c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "56dd5007-c066-404c-9396-8d39191dbf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4144dde2-ee27-4db4-a413-1d18c9dc2ce2",
        "cursor": {
          "ref": "26a1c9ae-f397-42d2-b688-97dca8173b52",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f2d86d23-c7a6-40e1-93f5-527519d6a45d"
        },
        "item": {
          "id": "4144dde2-ee27-4db4-a413-1d18c9dc2ce2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ef68f798-4271-4010-9e2d-3987b42655c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1900401-be59-415b-a4e3-6000738d2ce8",
        "cursor": {
          "ref": "774e4de7-9abe-4dca-9ca5-1e6e60e44fd8",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "12d51948-25c7-4fa2-a88f-3fffe1d0d707"
        },
        "item": {
          "id": "c1900401-be59-415b-a4e3-6000738d2ce8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "652e0127-fe01-47d0-b57c-56bb546b69d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d0d1f3-0aff-4592-a2c6-984283d57aff",
        "cursor": {
          "ref": "f7b9676e-5bb9-4898-85df-d1ecce102692",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "67975534-79a9-40b2-93b3-3332d9214aad"
        },
        "item": {
          "id": "b2d0d1f3-0aff-4592-a2c6-984283d57aff",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d54a1ee0-4045-4a25-87ac-fb0f95c6066d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e42bd7-9a99-4a86-9d04-be5f0ac91dc3",
        "cursor": {
          "ref": "3252751b-4a9b-47c7-8812-27bf4f8abea4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "512e3bb2-3992-47c2-996f-8bf5ff796e20"
        },
        "item": {
          "id": "30e42bd7-9a99-4a86-9d04-be5f0ac91dc3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "01e85475-a18e-4b42-8835-6f58204974d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbebe123-6438-4dbc-b7ae-44145b841635",
        "cursor": {
          "ref": "6645e03f-8ee3-4e90-82e2-06a3441e8f56",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "080502e9-55ae-4d7f-a0a8-4cb879f7650e"
        },
        "item": {
          "id": "fbebe123-6438-4dbc-b7ae-44145b841635",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c1e0b5e8-9e40-4dc9-a8ef-cf952cacbbed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e738829-4a73-457c-a3d8-f5c64be9a1bc",
        "cursor": {
          "ref": "4aaa5f41-1f14-4c3e-ba7e-67195f65a7b1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "13aa0ee6-54b4-4a86-ba25-281fe2e77ebc"
        },
        "item": {
          "id": "1e738829-4a73-457c-a3d8-f5c64be9a1bc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0784e8ff-261d-43f8-93c3-18c879995e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4ec00f-1d98-41a8-ab88-3f8c80c81acd",
        "cursor": {
          "ref": "a25a8128-1e9b-40ca-a7fa-102d15d2265d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0ced7a8c-bac6-4030-9bb5-f112508807fa"
        },
        "item": {
          "id": "cf4ec00f-1d98-41a8-ab88-3f8c80c81acd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e8b88216-a4b6-4594-ae85-52791fe548e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5660cf16-4def-4b9b-b33e-bc4f8d92c214",
        "cursor": {
          "ref": "bd4142e6-f489-4e17-aa5b-1957201ff3eb",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2a110b7a-0490-4253-b917-153355125799"
        },
        "item": {
          "id": "5660cf16-4def-4b9b-b33e-bc4f8d92c214",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "53188a2c-7c87-4053-ac32-1531f2f92e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fc59c5-19d3-4762-a038-0eb1c002fde8",
        "cursor": {
          "ref": "65373a4a-489a-42fb-8c32-b57996b4ac39",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4b4c16e2-85c5-4873-acc2-b2f3c0be9bd1"
        },
        "item": {
          "id": "b6fc59c5-19d3-4762-a038-0eb1c002fde8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d3680c83-0bf9-46b3-afca-cf5661fa5208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4710fea6-c203-4762-b648-9fa0b222bcaf",
        "cursor": {
          "ref": "ab6b088f-5d06-4a8f-83a2-f71e16e88eb0",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6bc69f51-844d-4f44-9e2b-aa3226aca7d0"
        },
        "item": {
          "id": "4710fea6-c203-4762-b648-9fa0b222bcaf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "42712ca8-722b-4b13-bea4-eed2e82171af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35af6b3f-364d-4113-ab75-2376cfaef628",
        "cursor": {
          "ref": "784fe50f-2b02-4b08-b23b-c6d766267282",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5f76ad5b-b1e1-476c-9ca1-2fdf343a2f7c"
        },
        "item": {
          "id": "35af6b3f-364d-4113-ab75-2376cfaef628",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dc33975f-7ad7-4a4d-96d2-7397f89626ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f731667-d1eb-4013-892c-d2c9003cf387",
        "cursor": {
          "ref": "81ff60e0-4014-4cac-ae07-cc8d5b8a6e3e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8d88ae79-2542-4dd6-b641-5ba10391b5b8"
        },
        "item": {
          "id": "6f731667-d1eb-4013-892c-d2c9003cf387",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a13ecf38-16b4-45b0-9c89-7c7cc84e7fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaf70cf-e9fc-4125-8d6c-ac296dbf7be7",
        "cursor": {
          "ref": "a649dd13-74a4-4417-b5cf-9a286a13214d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5db3cbce-f6b7-41e6-bc97-d75f1e78a1ad"
        },
        "item": {
          "id": "baaf70cf-e9fc-4125-8d6c-ac296dbf7be7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5240a3aa-2701-449e-86ac-eccffe11e9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c01e8d1-7ae3-46f5-92b4-5debc0d67cca",
        "cursor": {
          "ref": "98a381aa-cbc1-410f-8028-d5be747cad1f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "19f0ac3b-70e1-4f4b-ad9e-f11e8632abf0"
        },
        "item": {
          "id": "4c01e8d1-7ae3-46f5-92b4-5debc0d67cca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c6a658ab-2d00-4872-97e9-54cbf1f1ac7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ccd666-5222-421c-85aa-99b402e9fdc0",
        "cursor": {
          "ref": "23b9c795-fa9f-4e75-b9c4-563ceb7465a8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "175393f1-ba55-4d76-a0e9-7e422ff65197"
        },
        "item": {
          "id": "40ccd666-5222-421c-85aa-99b402e9fdc0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7e0f803a-f68d-406f-8814-dcac7b10193e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63cb543-9e45-4d5e-93f8-a65283d8eb05",
        "cursor": {
          "ref": "0949f197-7c9e-445f-a3e0-3ee300ce3430",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9234ee0e-8fca-4996-82f9-2752d82cd26b"
        },
        "item": {
          "id": "a63cb543-9e45-4d5e-93f8-a65283d8eb05",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "780b8a13-2beb-4a23-9d9d-ba00fc0ccbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef4ec42-77e5-445a-8c26-f8d2443d5aff",
        "cursor": {
          "ref": "e653dc72-4380-447a-a312-87eeb2ba9d45",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4c9eaeb1-d567-4053-a5fa-c40a4bb081db"
        },
        "item": {
          "id": "0ef4ec42-77e5-445a-8c26-f8d2443d5aff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ffa40437-a511-46bd-b4b4-c887b825e7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a834a57-d79c-412b-958a-ac2a29a33834",
        "cursor": {
          "ref": "ab6b21f7-0457-42c5-ab08-2713610edfa7",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c8f1a160-8efb-44bc-88a0-cd130bdd328e"
        },
        "item": {
          "id": "5a834a57-d79c-412b-958a-ac2a29a33834",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b851ee36-3e2c-43bd-9ce4-9c774a8f4539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a1c3fc-b13c-48f0-92e6-a8e0ad66d48d",
        "cursor": {
          "ref": "d6fcda47-33a8-4e64-8185-31be302c445b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6b860e59-bf76-461d-a8f9-b30f7b73d277"
        },
        "item": {
          "id": "a4a1c3fc-b13c-48f0-92e6-a8e0ad66d48d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c428e90b-a2b1-4065-8183-bc8df3664083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7a12e8-e7cf-4d06-820e-5d2728e43b29",
        "cursor": {
          "ref": "1319673e-cbd3-4f98-8783-637b6e08d651",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "af2157eb-0c4d-439e-91d9-b2d74e3744b8"
        },
        "item": {
          "id": "ba7a12e8-e7cf-4d06-820e-5d2728e43b29",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c61296bf-2e33-485f-a4b1-7f375ded3955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab0479c-e840-4c2a-b0e4-e5bce2d10ea9",
        "cursor": {
          "ref": "e9f10ce6-417b-4eb3-9ff0-c5a399991162",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9817b421-c8fa-484a-b833-d5354c3e1f80"
        },
        "item": {
          "id": "aab0479c-e840-4c2a-b0e4-e5bce2d10ea9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3e097c8f-16f7-443b-8274-91703a038336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d107d1d-1e5d-44d5-92e4-3743fc719814",
        "cursor": {
          "ref": "4f5be3d2-a6c5-4878-9c6a-198fa77a9ed2",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "912a41b1-9848-4a9d-92c3-939945c826c8"
        },
        "item": {
          "id": "7d107d1d-1e5d-44d5-92e4-3743fc719814",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ff786f29-de67-448a-8a95-c77c4227f12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937e54e0-a57e-42c6-90cd-4fba15d34174",
        "cursor": {
          "ref": "816e1a38-70f8-4ea8-829c-6713babdf190",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ee5d7475-6a3b-433b-8c5b-ba66235a81a3"
        },
        "item": {
          "id": "937e54e0-a57e-42c6-90cd-4fba15d34174",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bdf0ec45-3439-4ce4-b33d-afa092eb44ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74f4cf7-44b8-4a4b-81f2-695d103a2f12",
        "cursor": {
          "ref": "0545057f-794d-4e86-9d4d-cff446ab7613",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "436511b5-b0d2-495b-85b6-9c11818075d7"
        },
        "item": {
          "id": "f74f4cf7-44b8-4a4b-81f2-695d103a2f12",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c6a02b9c-879f-49a0-8386-405001f18486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5c56d7-0cb1-4143-aff6-ecb989a16561",
        "cursor": {
          "ref": "ae6eb05d-589c-4ffd-9784-bd7f32089b26",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "82e67f82-a24c-4d55-ace5-8fd3621594a9"
        },
        "item": {
          "id": "6b5c56d7-0cb1-4143-aff6-ecb989a16561",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7162c88c-a52f-4533-bde2-0dfc4d736df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35139273-c974-4d45-909f-1e2306c8686a",
        "cursor": {
          "ref": "f53470e3-738e-4e4a-9b70-2146a38d1baf",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5bdd9fdc-766e-46cc-ad78-4ebb0d44edc1"
        },
        "item": {
          "id": "35139273-c974-4d45-909f-1e2306c8686a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d95e7833-cc48-4840-8d51-f0feed1271df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c79e3a-93e8-4997-a757-e386f8ea5a71",
        "cursor": {
          "ref": "44314c62-6f92-435a-b0c2-4b5f9c0387dd",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dbc83635-0618-4e3e-949e-1e0e38d98257"
        },
        "item": {
          "id": "f1c79e3a-93e8-4997-a757-e386f8ea5a71",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "328ce31a-0a4f-4508-9312-7e21c5cd3af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bf29f9-b564-41bb-b06e-822f68530503",
        "cursor": {
          "ref": "786e7c50-f43b-4571-b9c3-526d9ab9ca06",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c2b75656-7267-4e96-895a-f728bd50b36e"
        },
        "item": {
          "id": "d6bf29f9-b564-41bb-b06e-822f68530503",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0f638600-507d-4013-af1e-599068b6a733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fad921-46a0-476d-b078-f8f1dc113395",
        "cursor": {
          "ref": "0439b82b-a0ce-4155-982e-65c9dbbdf1a5",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "669f8097-3095-45f7-9369-d28b46d04825"
        },
        "item": {
          "id": "00fad921-46a0-476d-b078-f8f1dc113395",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "49e370d6-dad9-4306-b23a-84532bd3ecc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed9dc23-8165-4a08-bbe1-29666d57ef8f",
        "cursor": {
          "ref": "c41f979e-8b17-484a-b161-731cbf55ef23",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7d047150-74a4-4b13-be9a-19c5c7949305"
        },
        "item": {
          "id": "0ed9dc23-8165-4a08-bbe1-29666d57ef8f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1a660de7-2942-4902-a7b2-43619ecb960f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332eb479-8490-431c-b80b-4342c431c1a4",
        "cursor": {
          "ref": "f15bc846-8ac3-4fa8-887b-e41b2e8da81a",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7e522137-48a3-4791-b60e-fe6adfb20887"
        },
        "item": {
          "id": "332eb479-8490-431c-b80b-4342c431c1a4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9e5d0af8-dea9-4c61-96f4-d87198197ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02a3976-ff8c-4d1c-9869-4922cc88b3f3",
        "cursor": {
          "ref": "8f4d3d20-2a01-4127-b549-56568f498093",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3512d0ab-eb15-4a9f-8448-c05781b09e93"
        },
        "item": {
          "id": "d02a3976-ff8c-4d1c-9869-4922cc88b3f3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a9872075-27a0-44e1-9563-168a30106dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2bcefd-9913-4761-9b76-453552125063",
        "cursor": {
          "ref": "8d7a009a-47a6-4ef6-85b4-8b5eb7580593",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1fb80494-9e02-4c6f-9b50-9d63e2c908b6"
        },
        "item": {
          "id": "6c2bcefd-9913-4761-9b76-453552125063",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e31760d3-67c8-43a8-95b7-f077ba13e179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fe82b1-a75a-4b32-98ea-9c8c89b7a9e9",
        "cursor": {
          "ref": "8edfa105-2ab7-4662-a591-98989ef4f9fd",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cb5f5cd0-dd54-4fa1-ae98-c76f9bba1f10"
        },
        "item": {
          "id": "a0fe82b1-a75a-4b32-98ea-9c8c89b7a9e9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "88f043cc-f540-402b-a6da-56aac8fa07de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fb5f46-2597-4759-b0a0-dbe3f0262e97",
        "cursor": {
          "ref": "97c02cac-0f42-43cc-aaee-baa7b0cf7743",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "03bcf172-a2e7-4209-8ca8-fa7ea90488c4"
        },
        "item": {
          "id": "50fb5f46-2597-4759-b0a0-dbe3f0262e97",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "15fc5b0b-de9f-4890-821c-bd6fed47d873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69154935-d3b5-4bca-b602-e347d6d1cdce",
        "cursor": {
          "ref": "49c08bd3-1677-41d1-9e84-a105abee1cb0",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "587efd2e-2307-4887-9cef-bb6e98227d52"
        },
        "item": {
          "id": "69154935-d3b5-4bca-b602-e347d6d1cdce",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6dbc1cd3-8f64-4ea5-aa2b-b5806347c243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f299308-1172-44a5-9c67-ec64844e6271",
        "cursor": {
          "ref": "69979455-97e5-4b9e-b268-6b56b9560347",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "66d2cd79-9e71-49ae-a03c-2c6f4718ebc9"
        },
        "item": {
          "id": "4f299308-1172-44a5-9c67-ec64844e6271",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bb2be250-dc9f-480a-bee4-568f84f2237c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d643c11e-ec9f-4d6d-87aa-fa09b5a01309",
        "cursor": {
          "ref": "6661ae08-a45d-4a41-95ac-5a58de3c15a3",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "34a6e43b-8dd1-4038-a231-2ca8f05e525c"
        },
        "item": {
          "id": "d643c11e-ec9f-4d6d-87aa-fa09b5a01309",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ddb8d70b-044a-48f7-a939-73908741ddec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf7d12c-869a-4f32-99a2-110977a80271",
        "cursor": {
          "ref": "3344bc69-2f20-479a-b364-4f06b04c12d6",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9a3bdb92-24a7-456e-bda0-42278340f944"
        },
        "item": {
          "id": "4cf7d12c-869a-4f32-99a2-110977a80271",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b527125c-1dc0-4970-828f-b57837941130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7b3b53-030b-4a30-9922-6d6c9c1150a2",
        "cursor": {
          "ref": "4add5506-cb0d-48a9-91ec-5ba3570f09ec",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "aa554297-72df-4142-b0f0-8bce5184a287"
        },
        "item": {
          "id": "5c7b3b53-030b-4a30-9922-6d6c9c1150a2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "38656d99-90fb-4171-89cc-354e362ab6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0fdf47-ce2b-496c-bdfe-1ede1b16e02a",
        "cursor": {
          "ref": "6907e3e5-c7ee-444b-be9d-a3b2e4744d54",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0335d149-a058-476d-b790-adbac450c22a"
        },
        "item": {
          "id": "de0fdf47-ce2b-496c-bdfe-1ede1b16e02a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1f686473-80e5-453f-ae99-4cdb2e10a377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2432618a-b0ad-465e-b874-3d37337bfcfb",
        "cursor": {
          "ref": "00634ae1-0c09-4852-9d96-81752c055556",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9fe038ed-f6f6-42b8-9d3a-c594c0070451"
        },
        "item": {
          "id": "2432618a-b0ad-465e-b874-3d37337bfcfb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4fbcb126-82bf-4e52-93c2-61a510cf82ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f9213f-24f2-4995-a7e5-bd1616ef799d",
        "cursor": {
          "ref": "e9ad223e-c477-4902-aec4-a2b79daf876b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0452dd9e-a570-4dc2-a442-062469bf8cdf"
        },
        "item": {
          "id": "c8f9213f-24f2-4995-a7e5-bd1616ef799d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d770064b-3490-4687-ab4a-59ebe604ebbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8829113-ac9e-44e3-ab83-b999c5dc7819",
        "cursor": {
          "ref": "fe549cf5-7cbd-4596-abcb-565244d447de",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "abc4098b-0a30-41eb-a583-0edd8ad15f1c"
        },
        "item": {
          "id": "c8829113-ac9e-44e3-ab83-b999c5dc7819",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f1525b75-9427-4581-aa42-8f0cd1cd9ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ac2bba-d649-461d-984d-dfe28d0810b3",
        "cursor": {
          "ref": "68bf03ce-6906-4118-97da-6c1e4ebaee2f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3362935c-d249-48b8-92ed-af39c3280e12"
        },
        "item": {
          "id": "d0ac2bba-d649-461d-984d-dfe28d0810b3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "afd01e22-c010-4c1b-857f-2a900abf84db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8b087b-a3e0-4849-a4c7-a578a3273530",
        "cursor": {
          "ref": "0371fe17-a508-41ec-98b3-5b612a0a1b60",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ef5e4b0d-b0d4-4d0a-8d03-4da152ac61f1"
        },
        "item": {
          "id": "1c8b087b-a3e0-4849-a4c7-a578a3273530",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5539b8a4-e410-4e3e-a557-d10d7e930425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e940e281-71ff-4c43-86a8-654b0d3f34e1",
        "cursor": {
          "ref": "87a40e9a-b526-48f5-b8e5-466991e3f2a9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1acd9eb4-5d0f-4399-b5b3-513a82b06e28"
        },
        "item": {
          "id": "e940e281-71ff-4c43-86a8-654b0d3f34e1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cabc6e66-57d5-4c04-be91-ed7f7a430289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee7b6ad-8dec-4345-a6b8-1331cd7101f7",
        "cursor": {
          "ref": "c2c0af16-8edf-4ffc-9175-cfe6d1ebed31",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f85476f8-8d6b-43fd-bad7-ae07be5a593b"
        },
        "item": {
          "id": "0ee7b6ad-8dec-4345-a6b8-1331cd7101f7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d55c2699-2f44-4e00-ad3a-d4fd83b1f83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb92f13-fdc1-4922-a028-1f393f84aab8",
        "cursor": {
          "ref": "25dbdff3-0ff6-4580-b8f1-c2c7257d7bc3",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6d096273-b3c0-4b02-81e8-ed014d10555d"
        },
        "item": {
          "id": "eeb92f13-fdc1-4922-a028-1f393f84aab8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "63f8cc21-d9ba-4fac-a0e3-5f5eec85f30f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486b260f-4b77-4879-b1ef-1d8c7707c298",
        "cursor": {
          "ref": "6c37ac52-1035-483c-a60d-aae1a37cb105",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5fdac2c2-2c97-49c8-82e4-6b78b90bdba1"
        },
        "item": {
          "id": "486b260f-4b77-4879-b1ef-1d8c7707c298",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "972d397d-869a-4c69-b0d5-c9d380f4f5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "da80fd85-80ea-436d-9432-1c79fab35048",
        "cursor": {
          "ref": "98650953-fe48-44c8-97e6-efccb920cee1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c41452b6-5ebd-46ce-bb36-5e37ca14e446"
        },
        "item": {
          "id": "da80fd85-80ea-436d-9432-1c79fab35048",
          "name": "credentials_issue"
        },
        "response": {
          "id": "49b5afeb-aa1d-4b91-9eff-fd4d69e5bbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "37023db8-1f65-439d-8269-0a77da8f656a",
        "cursor": {
          "ref": "39f926b9-d879-4f07-9e2b-f8e7681dab71",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "579e24aa-e295-4f5d-915a-fcd1d925af29"
        },
        "item": {
          "id": "37023db8-1f65-439d-8269-0a77da8f656a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "79c6c948-0958-4c7b-84b0-e5ae3f6f518b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "073afdb7-58d4-48e1-95a6-8425703b9d64",
        "cursor": {
          "ref": "90f4b402-5bf2-46fe-bd09-f00b469c9b63",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a1bfd68e-db0b-49c1-81e6-ae87efe1eb45"
        },
        "item": {
          "id": "073afdb7-58d4-48e1-95a6-8425703b9d64",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d59efa5e-87cf-462a-a1a2-efa2d2579dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "386632b9-ed10-44c8-a9c6-c213dc84f733",
        "cursor": {
          "ref": "5c762f71-8112-4814-8a03-2a30a34f2f7c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "53814656-af94-4ac2-b818-2398b7d054b8"
        },
        "item": {
          "id": "386632b9-ed10-44c8-a9c6-c213dc84f733",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "06a8cf8e-e241-4bb8-ae17-35c17024310d",
          "status": "Created",
          "code": 201,
          "responseTime": 13794,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ff06ec-055c-4c27-9fab-be05c68e86a0",
        "cursor": {
          "ref": "2be33544-f24e-4ca4-8f34-ea0f7bb19eb8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "93c55303-1ee1-49b9-a66b-d550f56940ed"
        },
        "item": {
          "id": "35ff06ec-055c-4c27-9fab-be05c68e86a0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7bb71d33-93ce-4dc8-b4bb-c7ed30025320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b68d4e01-6b38-4424-a437-41cd8a2f25f1",
        "cursor": {
          "ref": "4e591797-24fd-4267-b811-3373a02862fe",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "802a9dbf-6a28-484a-8724-67301f8bfe18"
        },
        "item": {
          "id": "b68d4e01-6b38-4424-a437-41cd8a2f25f1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4ef91872-cbaa-44eb-81e1-c33d3855e585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1f958999-4c96-4e9d-bbce-da238ab8ba0a",
        "cursor": {
          "ref": "1132cb2b-a2d9-4742-bb55-d356a8e4e6c5",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "55fa0bbd-daba-44a5-9321-29dfe38766ff"
        },
        "item": {
          "id": "1f958999-4c96-4e9d-bbce-da238ab8ba0a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "94bd495b-c8a4-46b0-9677-547a6d061529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91e73a8-a50d-41e6-a950-ca1b33f0beea",
        "cursor": {
          "ref": "616d58a3-fb22-4222-a9dc-15ecf39a460c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "964cc994-16ed-46cf-9a2e-6c9bb99beba7"
        },
        "item": {
          "id": "c91e73a8-a50d-41e6-a950-ca1b33f0beea",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2a8bebbc-6c63-4e1c-bdf3-e5c2b40aa723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638e5c6a-272c-44a5-97ce-c90fc259323e",
        "cursor": {
          "ref": "2d9fe117-0ef0-448c-bef6-2d98f94b0bff",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "68ccf9b5-59e3-4300-ae0e-6bd96140b859"
        },
        "item": {
          "id": "638e5c6a-272c-44a5-97ce-c90fc259323e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ef8769a0-ccdb-4e84-a7cd-7b9d325c4d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1373df-cb53-4869-be2d-18f89d7a5481",
        "cursor": {
          "ref": "eb3bcb21-b66d-4fd4-bd4f-90d676280178",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e2da13a4-0ac8-439d-b320-6d3ccbe985a6"
        },
        "item": {
          "id": "ae1373df-cb53-4869-be2d-18f89d7a5481",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "41ea6b2e-9ae5-45e6-bc6b-7b7c86f8b8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f35c8bb-e12b-4385-b071-4f3e6071c9ec",
        "cursor": {
          "ref": "21675346-4be5-4775-b68a-a327e5e5cd80",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "241986f9-48a1-497b-92db-6fdda64adb1b"
        },
        "item": {
          "id": "6f35c8bb-e12b-4385-b071-4f3e6071c9ec",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "915cebd0-3ca4-4bb9-af70-6956b5dc7fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c32ff5-9de6-4a62-909d-935e3e8e80c2",
        "cursor": {
          "ref": "f994dde2-dd66-4e7a-a0d8-7a0322e9d6a2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3470b487-cd6d-44cf-a782-2d7739015423"
        },
        "item": {
          "id": "25c32ff5-9de6-4a62-909d-935e3e8e80c2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f2677616-cdfa-45c7-bc16-43800790a714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb7bfef-908a-4362-a485-e3ad193e239e",
        "cursor": {
          "ref": "ef12b880-68cf-425d-93a8-b05326a957a2",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "53dc68ae-b8ea-4018-af42-7493e24d88ae"
        },
        "item": {
          "id": "adb7bfef-908a-4362-a485-e3ad193e239e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ed09c1d6-79a8-4500-9382-867ecfd933c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1581f61-f4d6-44ba-8626-1a4c22139500",
        "cursor": {
          "ref": "3fb4f2cf-0569-4f3e-8ec1-0f0dd6031f5d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3da38b76-6a69-4b94-aa2c-75e87e19febd"
        },
        "item": {
          "id": "c1581f61-f4d6-44ba-8626-1a4c22139500",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "92a5cd5d-76e3-4715-9ac5-4aa33f5b5366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe18dec-ac69-4e4d-a89e-0e741f9685b2",
        "cursor": {
          "ref": "16345097-14f8-48e6-bdf7-8e34f108637f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "06ad4a70-f6a3-43bb-8d26-21bdb3206bbf"
        },
        "item": {
          "id": "4fe18dec-ac69-4e4d-a89e-0e741f9685b2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "41eed7f3-73d8-4ec4-8f5a-c43836999fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e65854-1809-4c19-890b-54063f5357e6",
        "cursor": {
          "ref": "81d744c9-ff58-41b1-9c08-41f14ff13f1b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f9551d7d-54e0-4c7d-a3ed-e733bbfa10a4"
        },
        "item": {
          "id": "15e65854-1809-4c19-890b-54063f5357e6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1355deab-b3ed-4a34-bb10-8e0ed1c25223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a061c0-dd4d-4cc5-a554-73ef1806e1ed",
        "cursor": {
          "ref": "95bede4d-fbf9-4f04-b81b-6bc2e99dd9cc",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d3018a9c-9a1a-4acb-80c5-203840b8c7c3"
        },
        "item": {
          "id": "61a061c0-dd4d-4cc5-a554-73ef1806e1ed",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2da14c39-60f2-4394-a076-9a2f9fa86e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829b73e7-f38a-42db-b935-e31b8393f666",
        "cursor": {
          "ref": "d5876230-1439-41fd-8b4e-59751a2c52da",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "733a939b-1294-4c26-a613-6d5487dc1226"
        },
        "item": {
          "id": "829b73e7-f38a-42db-b935-e31b8393f666",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aa37592a-a280-449a-9786-e509e2057d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8da28c-637f-4864-af9d-881c01eec7c4",
        "cursor": {
          "ref": "d787ddfc-c966-442e-9d11-65acbd3f9230",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0889d6f8-bcdc-498b-9745-c28f8290bb8e"
        },
        "item": {
          "id": "1a8da28c-637f-4864-af9d-881c01eec7c4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dc2593f8-c7b4-4f5f-a35b-d63c04f9f832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3877d4d-816e-4818-b3a7-6284176fad4b",
        "cursor": {
          "ref": "42745b0c-7487-49df-99e4-ab2d5391961c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4f636785-05da-43f6-a9fe-822ba041bc48"
        },
        "item": {
          "id": "e3877d4d-816e-4818-b3a7-6284176fad4b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5ecfb900-968d-43ff-82c6-258be46917f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460d0a93-db78-4a9b-832d-1b96528e6602",
        "cursor": {
          "ref": "3f7bd10c-0d55-4ab6-96cb-3985476f5892",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7b1a87cf-a605-4c10-8219-e644377448ab"
        },
        "item": {
          "id": "460d0a93-db78-4a9b-832d-1b96528e6602",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9d5e7803-427d-41f9-8f6c-bd05bf05a6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3c126c-9152-4c7a-8de3-9dc0b4e7cbd6",
        "cursor": {
          "ref": "70b4683c-ae93-4bdd-bcfc-08fd2f753af6",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b4fd1800-2f05-400a-99d3-041f3384c119"
        },
        "item": {
          "id": "2a3c126c-9152-4c7a-8de3-9dc0b4e7cbd6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "43bdcacb-59b6-4d5c-beb1-81a0009f0f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a3f419-6d03-4c75-bd17-1b4b918c4019",
        "cursor": {
          "ref": "2e3d3695-bc78-47a3-a886-7d945e5c5496",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "881104a0-9520-4ed9-ad07-5e40a3c26ba9"
        },
        "item": {
          "id": "54a3f419-6d03-4c75-bd17-1b4b918c4019",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "56e062e6-3b55-40c9-b6d5-6b4c048f35bb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "7e7c9005-1852-45d4-ae5b-a78901ecfef4",
        "cursor": {
          "ref": "5e127431-e8fe-4bf2-989e-aa10eb44b89e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "750e38c3-767b-42c8-932f-a7132dff9399"
        },
        "item": {
          "id": "7e7c9005-1852-45d4-ae5b-a78901ecfef4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b243e09e-782d-43b1-8f00-afba957aa5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ba45e3-16f0-45f5-ae32-9c2857f88ffc",
        "cursor": {
          "ref": "d1ee5560-4f27-4f4e-9ef9-ab8946267489",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1ea7967d-4568-44d6-bfa2-505aec81e1e0"
        },
        "item": {
          "id": "c4ba45e3-16f0-45f5-ae32-9c2857f88ffc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bf4de5bb-dfce-4809-800b-a5412aaf4a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c291e9-773e-488e-a2f1-f8c6e0b086f4",
        "cursor": {
          "ref": "8cafe14d-42a9-4410-962a-0e1714830b92",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e49c7b0c-a0da-4d06-a4d9-ed0079e27643"
        },
        "item": {
          "id": "b8c291e9-773e-488e-a2f1-f8c6e0b086f4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d67609ef-c6b8-4936-ab50-ec6c321c2039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4767833-555e-4a7b-b0e3-7d7d278928de",
        "cursor": {
          "ref": "ffd65968-ada9-4b0e-96a7-6991e1f98007",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cda4d916-cb87-491c-8b65-10315a88cac6"
        },
        "item": {
          "id": "a4767833-555e-4a7b-b0e3-7d7d278928de",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8af738c2-b596-4c91-bc33-5c317c96677b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260abe62-a9ec-444a-bb5c-de1b26879e3e",
        "cursor": {
          "ref": "3a178767-e585-4b50-8015-9c35a1aa6d24",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0f7e93ec-ec63-4a21-9384-cee62939b4f4"
        },
        "item": {
          "id": "260abe62-a9ec-444a-bb5c-de1b26879e3e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "85cd7b09-db75-462e-9caa-1fdd57b6fb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcd27de-f388-4369-8d22-b2a21790b487",
        "cursor": {
          "ref": "757b311d-5038-46da-bfa2-8fefe9896874",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "63b37616-10b9-4fb6-b3ad-b2d60d6231a0"
        },
        "item": {
          "id": "5dcd27de-f388-4369-8d22-b2a21790b487",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "79b29b6a-3c2a-44d6-9bfa-45180263ce16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98150c0-9f5f-4fa0-a5c5-b2bb0f5013c7",
        "cursor": {
          "ref": "90116a88-37b9-4661-8571-29feacd52228",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "19bc71b4-7f5a-4841-a922-ad6b520a5d18"
        },
        "item": {
          "id": "b98150c0-9f5f-4fa0-a5c5-b2bb0f5013c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e0e27fb4-e894-43ef-ae21-926af65d9ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc8dede-3384-479f-9543-7a8852c1faf2",
        "cursor": {
          "ref": "af29c2ad-f385-4211-bd29-7b1b02513344",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d9ddff6f-42cf-4260-81eb-5ca7aed64d50"
        },
        "item": {
          "id": "fbc8dede-3384-479f-9543-7a8852c1faf2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "20288950-a25f-4632-a0ce-0b46e398ae5a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "59e59bb9-e7e5-418f-8c6c-dbc3dc4aadfd",
        "cursor": {
          "ref": "6b0aab6c-8efe-42f4-9dc1-e64e5253a8af",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1bccc731-5f29-481e-9fee-e8acdb2d3bfd"
        },
        "item": {
          "id": "59e59bb9-e7e5-418f-8c6c-dbc3dc4aadfd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "70faab5b-d89a-4fb1-8a51-9504112eebd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b2494c-811d-4812-a37f-39a0115cb1bc",
        "cursor": {
          "ref": "bd7f8f27-fcad-4bf7-a98a-e9e8e0e7ef3f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6bab9b38-3948-49d4-b642-8167152df2a6"
        },
        "item": {
          "id": "e2b2494c-811d-4812-a37f-39a0115cb1bc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "88acd692-f510-4533-acff-c0e95b430a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4305a6-fec2-4cab-9cd4-fa0b8b9ce220",
        "cursor": {
          "ref": "72d95a08-5dbe-4566-89d4-fe8e8fdf6b46",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "15cfb203-4506-4e92-a2bd-7c6ab6747420"
        },
        "item": {
          "id": "8c4305a6-fec2-4cab-9cd4-fa0b8b9ce220",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "265af5e8-d521-4fae-8004-a369d65dfa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eae1464-84f1-49bb-8ad5-16d60b48aaba",
        "cursor": {
          "ref": "1d57f54d-db9b-43e9-90dc-18bfbf80c154",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3aa70c3f-615b-4bfe-aa0d-564c9f5abfd6"
        },
        "item": {
          "id": "9eae1464-84f1-49bb-8ad5-16d60b48aaba",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eecdc491-d873-41a9-a58b-c47b2c9cc586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80a673a-bd92-427f-b6d9-4015706a8f04",
        "cursor": {
          "ref": "9147ea8e-f7e9-4d3e-8aca-fdd023dd92ba",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2c638a63-ec3a-430a-ad3b-25b545e4d224"
        },
        "item": {
          "id": "b80a673a-bd92-427f-b6d9-4015706a8f04",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "88294fd8-0ae7-4aae-a509-e092d92ee251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a99954-5f74-449e-9c9a-536e74d63a5a",
        "cursor": {
          "ref": "60a74487-44d6-4678-9ec0-05dd3209a7a1",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c39c98bf-68d2-4784-939f-d7cfb17a379a"
        },
        "item": {
          "id": "54a99954-5f74-449e-9c9a-536e74d63a5a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dab2e379-4692-4581-9e83-c2be635642a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d6a2f3-47e3-45bb-a9bd-65be194c8ee7",
        "cursor": {
          "ref": "1d6ab4f9-1e72-4e28-bc17-7c15a839442c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d6a2a0f4-0583-449f-98d2-d5510a6194d5"
        },
        "item": {
          "id": "75d6a2f3-47e3-45bb-a9bd-65be194c8ee7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b0c06580-9885-43f8-8211-d8d8ba1cfcbf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 56,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "147b63b6-ac16-4c67-8181-378a161f5214",
        "cursor": {
          "ref": "84ddf5b1-564a-4af9-b7af-a5b78d5d53d7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1bc9719f-508a-4188-a89c-319d1aa7020b"
        },
        "item": {
          "id": "147b63b6-ac16-4c67-8181-378a161f5214",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bdd752a8-20da-4ec3-a377-2727d8496f47",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "346cb486-25b6-444f-add9-04f8150eaed8",
        "cursor": {
          "ref": "3ffaf99b-c9a9-49f1-95ee-ccb32aafd2b7",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a6fb930d-0d6d-4a14-a25d-cb310fe485d5"
        },
        "item": {
          "id": "346cb486-25b6-444f-add9-04f8150eaed8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "89803c38-9493-439e-81f7-2dd224f3ce6a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "b0fb0604-fa37-48c7-a06d-bfcbf612b605",
        "cursor": {
          "ref": "e50bef01-64fa-400d-b8bf-37d7d74f3c82",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1e1455dd-3218-4242-b788-57ec00851256"
        },
        "item": {
          "id": "b0fb0604-fa37-48c7-a06d-bfcbf612b605",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c7abd026-5110-48b8-80ab-934c09873cde",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "f2868f09-b594-4d38-b333-b2735b7b8384",
        "cursor": {
          "ref": "298f6535-9a7a-4404-82db-9543924a7b1b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "80d009ef-19b6-4fce-aa0c-49a2af586580"
        },
        "item": {
          "id": "f2868f09-b594-4d38-b333-b2735b7b8384",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "767e2d9f-d3d7-4da7-a8d7-6fb074b2ea68",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "ca2e7a8d-69b5-4ca6-befe-79d1f81ad31b",
        "cursor": {
          "ref": "dc35f179-5196-41a4-968a-e181a31854a1",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a161be7b-9755-4d0b-b969-4335ad5fee41"
        },
        "item": {
          "id": "ca2e7a8d-69b5-4ca6-befe-79d1f81ad31b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ff590f61-a2e5-4106-821b-a68f7a2ff86a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "0e1dbb0f-c226-4c61-a62a-732921d21cb7",
        "cursor": {
          "ref": "2c185c69-1012-42eb-955a-fffcb336e709",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9b230dbd-e4c9-47b0-9826-b1f36faeb444"
        },
        "item": {
          "id": "0e1dbb0f-c226-4c61-a62a-732921d21cb7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "47793f93-845f-43a1-a5c2-da9692de40d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3161079e-35e3-4694-be13-d4df712f3b59",
        "cursor": {
          "ref": "54607353-c3d2-4e69-819b-6fc5f264f260",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "76d83a3f-ce7c-4e6d-8a6e-a419f87bdf59"
        },
        "item": {
          "id": "3161079e-35e3-4694-be13-d4df712f3b59",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "38482468-b2af-4cfb-8a28-f449dc9a4c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67c0c76-0796-4d80-beef-3bad8080a64d",
        "cursor": {
          "ref": "824e0548-34b9-4163-8719-30249cbbad5e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "27b0f361-7d51-44c1-a7a2-9162db1b688e"
        },
        "item": {
          "id": "e67c0c76-0796-4d80-beef-3bad8080a64d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "82eddc51-da9c-43a9-8220-b6b30e7f412c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5921ea49-c25b-4215-baf8-8a4cc18a9d00",
        "cursor": {
          "ref": "7c4cffb7-f262-48e8-9531-5edeb1398d16",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5befecb3-9166-4347-9fe5-3dcd8329b4f9"
        },
        "item": {
          "id": "5921ea49-c25b-4215-baf8-8a4cc18a9d00",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "55993b65-317e-40d4-aa1a-7b8a1148e381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f5a68b-49c1-42f1-acf4-4f6edd32c5b3",
        "cursor": {
          "ref": "13b898a8-fdac-451b-85f3-d2baa2dfa853",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6612e69a-8882-44d7-8834-715c23c2cbb7"
        },
        "item": {
          "id": "07f5a68b-49c1-42f1-acf4-4f6edd32c5b3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d48a90bd-6696-49bd-804e-f94535cb1eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d982e11-8d37-4a8a-b2b4-89060dc298f5",
        "cursor": {
          "ref": "a48d7e84-43db-4a2e-98a0-312378c1006d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a541a8d1-d7a6-497c-94aa-993a95f3a027"
        },
        "item": {
          "id": "3d982e11-8d37-4a8a-b2b4-89060dc298f5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6084fd93-2f2b-4e15-861c-5df5732d9992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807eb8f6-6df1-4291-801d-b681d438b698",
        "cursor": {
          "ref": "3d90b248-3e7f-43a1-b0fb-c45c85740ca3",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "25d544a0-09ae-429e-8801-e1844321fd3f"
        },
        "item": {
          "id": "807eb8f6-6df1-4291-801d-b681d438b698",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "59e16785-102b-4def-8552-7cc12b11f703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87b720d-6155-4d85-b85b-acc5487295be",
        "cursor": {
          "ref": "bc7bf11d-6316-44c8-b6d5-4966b0a6794c",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "541c0fd8-f8c2-45fd-8adf-2ad01936c01b"
        },
        "item": {
          "id": "e87b720d-6155-4d85-b85b-acc5487295be",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b966148f-3ab5-4f9e-9e09-299b031fd574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcbb67b-7eed-4ccc-8eda-81b171ce2191",
        "cursor": {
          "ref": "b569fb30-1519-475c-b8a6-620808128a00",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ef51c86a-df43-4c4b-b863-5878f4cb9584"
        },
        "item": {
          "id": "4bcbb67b-7eed-4ccc-8eda-81b171ce2191",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "08caf60a-facc-4040-94e7-be78c8384111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bc681b-8fe3-4612-a89b-baabe92e949b",
        "cursor": {
          "ref": "9675037a-5265-4779-8a97-64f3b8cc1802",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "60a6f9e8-b38f-4d38-9793-3e3b8de4e0a4"
        },
        "item": {
          "id": "14bc681b-8fe3-4612-a89b-baabe92e949b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "59136226-e1fb-4628-9798-588e28953a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b462c167-95a3-4887-838d-1ec90b29efc2",
        "cursor": {
          "ref": "a5165dab-97f2-4d88-8dfe-6b786e807207",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7ae56194-d394-4f28-ba20-cfb1f3f2d811"
        },
        "item": {
          "id": "b462c167-95a3-4887-838d-1ec90b29efc2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "93eb47c4-1bf0-44b1-bde1-79bb9b1e8f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da0efbc-0bc2-4d46-9d51-e65172b873fc",
        "cursor": {
          "ref": "a908e714-ebda-4331-a81b-a58e9fa3f4ba",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7f3fb1ea-a3de-443a-834f-16f189f05b77"
        },
        "item": {
          "id": "2da0efbc-0bc2-4d46-9d51-e65172b873fc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "28a305be-174c-4fa7-bcae-887bf9539a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20b6080-c826-4ccb-a72d-5a5fb7bb760a",
        "cursor": {
          "ref": "e604ffbd-5a6f-4e27-a99a-22df59e32305",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "97578984-a6b5-4bbe-8a53-00bb1c4c6e97"
        },
        "item": {
          "id": "d20b6080-c826-4ccb-a72d-5a5fb7bb760a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "aca3dbbb-9aaa-4cec-89ba-f4c8b2b8f38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910e1782-25a2-4a62-84ec-dd5ccad15b12",
        "cursor": {
          "ref": "2ee732ac-feda-435f-98cc-54b6df4ac134",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9cd3d4cf-084c-41aa-be26-5da7843c99de"
        },
        "item": {
          "id": "910e1782-25a2-4a62-84ec-dd5ccad15b12",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "53027b5b-3cb6-45ce-8393-9c6347e788b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a918b91-0f3f-4693-8cf2-4d1192af5864",
        "cursor": {
          "ref": "e8e84259-1606-4b32-9144-ec0b6b05b8ae",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "500f42af-109f-401d-a4f6-bbe84cbb73f5"
        },
        "item": {
          "id": "2a918b91-0f3f-4693-8cf2-4d1192af5864",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fb2ef735-609f-42ba-b670-31ea00bfec18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6686b558-ab2e-4258-9eaf-9f86c6ce34f7",
        "cursor": {
          "ref": "b0d01e6e-a036-42dc-b923-24d443adc037",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f2de9267-fbd4-460e-85b1-cd215d0f93f3"
        },
        "item": {
          "id": "6686b558-ab2e-4258-9eaf-9f86c6ce34f7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f4a23544-300a-44b0-8244-de902717eb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d803bd-24b7-4ed3-8477-998e0217bf67",
        "cursor": {
          "ref": "e570b89f-ac21-412f-ad01-244caf224fc2",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c2884187-54f1-4735-b08e-4c48ca2db9e5"
        },
        "item": {
          "id": "a4d803bd-24b7-4ed3-8477-998e0217bf67",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ea643006-7a08-4c9a-9522-6ad85e47b4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620e1e53-0a55-42cb-ac94-c89ba7eccf4b",
        "cursor": {
          "ref": "fa4ee898-0b68-4357-8b57-5e40f29f9e49",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ad2eeeaf-b65a-4691-b317-f64175282c76"
        },
        "item": {
          "id": "620e1e53-0a55-42cb-ac94-c89ba7eccf4b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e1bb7f58-6fe3-421e-86a1-f16be66d1416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06482880-48ac-4b0d-8815-76c05968eece",
        "cursor": {
          "ref": "3920616e-c32f-4071-8a44-e02880b206ba",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "50d298cd-25f2-4148-8059-a47d6d2dab37"
        },
        "item": {
          "id": "06482880-48ac-4b0d-8815-76c05968eece",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "28db17da-6556-4f0e-b11e-9ee86f50b1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32c7967-fccb-4e82-87f5-e5aeb4074504",
        "cursor": {
          "ref": "cb47aa82-aa36-4657-a2d9-49e2a019cbfc",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "db17d344-b61f-4e20-97c2-312fb07b2815"
        },
        "item": {
          "id": "f32c7967-fccb-4e82-87f5-e5aeb4074504",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2a12b2b4-882c-4600-8c46-fa933195b0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59a2e1c-cd6f-45d8-908d-348c8f770b87",
        "cursor": {
          "ref": "46aaf606-8c83-4c2a-8c12-a4ce5fcdea2b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dec0cfbf-aaf4-48a4-8748-3a769b81ef37"
        },
        "item": {
          "id": "f59a2e1c-cd6f-45d8-908d-348c8f770b87",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0c7b1539-0e2f-4e93-8e5f-eb2c331d34ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd91d2a7-72bc-41c8-b82d-5d492d51d4dc",
        "cursor": {
          "ref": "1ab8c541-1816-4d50-9b18-b5fea16e1029",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ba46096d-da12-48e8-9e3c-a933111c0c8c"
        },
        "item": {
          "id": "bd91d2a7-72bc-41c8-b82d-5d492d51d4dc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "495eeb06-f2db-4863-b3c7-8c2beb9dae5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d563e05f-e3f7-4981-bc86-9225cd5ec4ee",
        "cursor": {
          "ref": "d44c8abf-49ed-4d09-9b12-fd79592b09f2",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ecbf0c82-4b78-4b78-b817-78c8cd4d4ab1"
        },
        "item": {
          "id": "d563e05f-e3f7-4981-bc86-9225cd5ec4ee",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e07f0b1e-7e77-4647-bfca-b05dff879480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00f0cca-ba10-455b-b98a-190792f00375",
        "cursor": {
          "ref": "ed48481f-de00-43ef-adc1-3745793560cf",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3ff0236e-d64f-42ef-9a0f-37de39c896ac"
        },
        "item": {
          "id": "b00f0cca-ba10-455b-b98a-190792f00375",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5de432f2-7a10-4436-9d72-f8c4ce742334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65565c5-7418-40d1-a94b-fa85c643dcd0",
        "cursor": {
          "ref": "8111c7f5-69f6-4be7-bf75-80787dc0a38a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "78ca13c5-fd6c-4caf-8838-0c8288242a2b"
        },
        "item": {
          "id": "a65565c5-7418-40d1-a94b-fa85c643dcd0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fbdf9099-534b-4858-a56e-458f2a085102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66dd5c9-ab9c-4d37-8806-3f08b22d6e2e",
        "cursor": {
          "ref": "a6a2fe3c-05b9-4777-b396-18d4fcb511cf",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d0c33a92-d9f3-47fa-8bd9-3ee711ad583b"
        },
        "item": {
          "id": "f66dd5c9-ab9c-4d37-8806-3f08b22d6e2e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3c3fbb9b-f772-4517-a10a-28d81e5a1c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7f363c-99cb-4493-a1b4-0f65fbe20e3a",
        "cursor": {
          "ref": "7d4d1297-a51a-434d-b6f1-197038bab853",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "098f9e65-68f9-4187-b3db-c9157182ee1c"
        },
        "item": {
          "id": "1b7f363c-99cb-4493-a1b4-0f65fbe20e3a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "69f7074a-464e-4960-8190-f2b8db9636f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d58af8f-4ad4-4b7a-ba28-6a96bbd20c8d",
        "cursor": {
          "ref": "2ec14ccd-eed5-4901-a038-575d2ef95a4f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fa7ccb3c-bb76-4c0d-9bbc-f947bdb77c22"
        },
        "item": {
          "id": "3d58af8f-4ad4-4b7a-ba28-6a96bbd20c8d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "71394b41-b893-4294-8197-c44ec23e55d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d101dcb4-5a34-4701-88bb-687570a058ee",
        "cursor": {
          "ref": "de27dd22-a9c4-49dc-807e-e42bc1164ffe",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2e28d26b-0bde-4e0d-b0b0-a16d674eb776"
        },
        "item": {
          "id": "d101dcb4-5a34-4701-88bb-687570a058ee",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "157866f5-06ee-40fd-9f0b-f24ee4da33c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a4d5a7-b4ed-48fb-b21f-9de48920560a",
        "cursor": {
          "ref": "0a2add49-4341-4f30-8fab-17b47b82595e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "38e14d9c-53c2-4eb8-89f1-df5183ede8f9"
        },
        "item": {
          "id": "16a4d5a7-b4ed-48fb-b21f-9de48920560a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "95a3409d-8c10-41c4-8760-150639a4fd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5beeafd5-c8b8-4666-ab9e-f45ae8179093",
        "cursor": {
          "ref": "ddf32ef5-a446-4e0b-a019-7cc18633148f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "acebe0e8-d677-48a9-ae23-6db1411da354"
        },
        "item": {
          "id": "5beeafd5-c8b8-4666-ab9e-f45ae8179093",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "31f868d9-23f7-4ea6-8d25-37b71591aeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e220d9c7-dadf-4471-83f7-6eacd1ebd3a2",
        "cursor": {
          "ref": "01a78755-585b-4a83-ab78-d3b91cf22bcb",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "310b2694-727f-4a51-aa5b-b3d5efd9a1ba"
        },
        "item": {
          "id": "e220d9c7-dadf-4471-83f7-6eacd1ebd3a2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a2b2b00b-b873-4600-8fbe-f254044d5054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6a51ee-469f-4fa0-baf3-0ec234c7719a",
        "cursor": {
          "ref": "abd5158c-cbeb-4d21-9ee0-2d95d9a066a0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f521a484-c0de-4d46-bca4-c2dd75d3620b"
        },
        "item": {
          "id": "fe6a51ee-469f-4fa0-baf3-0ec234c7719a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1a0adfa2-8af2-44d5-9ff0-a981ad8f8b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91cb354-400a-4432-94fb-122877c6a2aa",
        "cursor": {
          "ref": "e912b5a6-9417-4015-ac34-fbe9c7561f67",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "769fcc77-d59f-496d-b63f-c1f539ad73c5"
        },
        "item": {
          "id": "a91cb354-400a-4432-94fb-122877c6a2aa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e321d149-2c67-4336-b00d-2f08045cc73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1804b1c2-5ee3-4359-bea6-f38d97b365cf",
        "cursor": {
          "ref": "720dd9a9-285b-45aa-b592-0b788a5dc8b5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "43a460bd-80f1-413e-be4e-0765c6c3da47"
        },
        "item": {
          "id": "1804b1c2-5ee3-4359-bea6-f38d97b365cf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1470f605-13ff-4ec6-8aeb-076ea6e0e791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fe921f-c42a-4712-bf46-acd75b2435e9",
        "cursor": {
          "ref": "33b65c96-12db-41f4-af7c-23fcbc291b4c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2e648699-34c0-4b9f-934a-2475fe39989b"
        },
        "item": {
          "id": "e1fe921f-c42a-4712-bf46-acd75b2435e9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "10a1ded6-a716-4503-9ec4-6d28cd3eda1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb34fde-a02e-4fea-ad3b-2844b7aaadeb",
        "cursor": {
          "ref": "3b86c7fc-1768-4735-9120-a79246918947",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "98e35035-a0f7-4dea-8311-61558923655f"
        },
        "item": {
          "id": "9fb34fde-a02e-4fea-ad3b-2844b7aaadeb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "26a73cc5-0ad2-4b85-9848-51cd43c54ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688bb520-489b-4d35-a841-dbf8b268f71f",
        "cursor": {
          "ref": "12e8ed2f-31aa-4f34-9b97-316f1ef4621b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0acc9f52-f4a6-4be0-8aac-41f758ffc73e"
        },
        "item": {
          "id": "688bb520-489b-4d35-a841-dbf8b268f71f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f5c77e01-2a03-44d3-b281-9a2cac2626c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc821e2-471f-4390-8da8-70c5f66f8a21",
        "cursor": {
          "ref": "408adf11-888c-4e4f-81f1-8315d73fb695",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d9ebef10-105f-440f-aee0-fbb7438beaff"
        },
        "item": {
          "id": "ccc821e2-471f-4390-8da8-70c5f66f8a21",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5a1c8d88-17c4-417f-8d2a-b37a3e022b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9904cf5d-8ce9-42ea-b286-07701bb5055a",
        "cursor": {
          "ref": "c7c6da3b-2eab-447e-af0c-a641b6213884",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4f33a861-a656-4149-9d1a-e586c2998917"
        },
        "item": {
          "id": "9904cf5d-8ce9-42ea-b286-07701bb5055a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "62f74ab9-95bb-4195-9607-4c71d36cdfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2053eb5f-15db-4448-8e65-934b893e0c5d",
        "cursor": {
          "ref": "d8a7f234-7c46-4519-b7e5-c1c264d60dee",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8f5ffb06-94c2-4cb4-8527-b878ab1bb609"
        },
        "item": {
          "id": "2053eb5f-15db-4448-8e65-934b893e0c5d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a1dedc7b-2b35-46c8-9963-857b2d9d1c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554ed873-6e3d-4e8c-95b6-e890aa724189",
        "cursor": {
          "ref": "784b911c-efa6-45e5-b967-f94d35e7b0bf",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "403a72c2-b8fd-4f94-87b8-7ec0cfb2c2a5"
        },
        "item": {
          "id": "554ed873-6e3d-4e8c-95b6-e890aa724189",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7fd942d6-dd13-4c87-9513-323e0ddfc217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c2eceb-3ad3-4650-8533-66cc5a0142ca",
        "cursor": {
          "ref": "13ea3ec5-b348-4fc1-b764-2e3560516446",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a2d4f6c8-008a-40e8-9e8c-3bfe3e035dda"
        },
        "item": {
          "id": "12c2eceb-3ad3-4650-8533-66cc5a0142ca",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "03120268-9581-4ce7-a26c-948a38a33322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d46d8b-f129-4c1b-b0f8-6bcebafa0fbe",
        "cursor": {
          "ref": "f1189086-be22-41f0-b9e8-625dedbead6e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3e1fd34a-c62b-4785-be7e-c3625a539b6f"
        },
        "item": {
          "id": "26d46d8b-f129-4c1b-b0f8-6bcebafa0fbe",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3631656a-357e-41f7-8b5e-48812310ef46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28e4dd6-9480-46bc-9255-8028083696d9",
        "cursor": {
          "ref": "5642f031-f03a-4ce2-8fe5-dd342e2c2fa7",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "61517d91-bb6c-432b-b35b-0b59188f9201"
        },
        "item": {
          "id": "e28e4dd6-9480-46bc-9255-8028083696d9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f55f1aef-d0f1-4b3a-bf40-25282fa07247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7fc569-2ce3-48ae-a1b5-1a8ab2409ffe",
        "cursor": {
          "ref": "324f6d81-97fa-4293-a748-c4d158ac0a52",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9a5ce831-19f8-405e-a878-b2bc39b47094"
        },
        "item": {
          "id": "7f7fc569-2ce3-48ae-a1b5-1a8ab2409ffe",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "28e5fcaf-4f17-40e0-aa32-eb351c7a3b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e9132f-4f5d-4dbb-a35d-247a444112c3",
        "cursor": {
          "ref": "d29a51b3-4c10-4308-aff3-a0c9f1e638cc",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "38fe500a-1d13-4744-b45a-c5c2c9fb53bf"
        },
        "item": {
          "id": "37e9132f-4f5d-4dbb-a35d-247a444112c3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "691b2960-02cc-403a-bb10-d3b252378af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2d65ca-51d1-42c5-9f99-574aab57a836",
        "cursor": {
          "ref": "0e879b2b-19f7-45e1-b959-ff90b421b824",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bf5879d4-0354-4680-82d5-adf63a7156a3"
        },
        "item": {
          "id": "7f2d65ca-51d1-42c5-9f99-574aab57a836",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bf1cdafc-e698-4da7-82a7-9ff7fb8104e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae51458-88cc-498c-b7b5-a7291f286545",
        "cursor": {
          "ref": "12b9b1ee-a1b2-4ae2-b2a5-5e76d571aede",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8f805d3d-065a-49ba-8673-cdf8c70cba25"
        },
        "item": {
          "id": "8ae51458-88cc-498c-b7b5-a7291f286545",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "00162fcf-5d8f-48c0-8834-aac13f3a07d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c20173-8737-4885-869a-d02ab82162a1",
        "cursor": {
          "ref": "94e34457-606b-4233-9ddf-29531e0eb704",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c0232c0c-bd4a-4be1-afe9-32b97733e0fd"
        },
        "item": {
          "id": "e2c20173-8737-4885-869a-d02ab82162a1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ea865552-1990-49a3-8369-b7a390f0b113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2f5488-e924-4fda-8311-4169f3523361",
        "cursor": {
          "ref": "5cfd8971-0dfd-4b14-bfcc-e0aa3c19010d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4f47373a-6c02-413a-bb2e-d56db60b2c37"
        },
        "item": {
          "id": "9e2f5488-e924-4fda-8311-4169f3523361",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8545b169-db1a-4cad-9a56-2945439a89f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ab3c1d-c0af-4974-9c7e-01a9fec2cd1f",
        "cursor": {
          "ref": "deee5501-31f4-46ec-a2d7-e099f10d6659",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9423ad86-0e0d-4afc-885f-2e1ac603c4aa"
        },
        "item": {
          "id": "b7ab3c1d-c0af-4974-9c7e-01a9fec2cd1f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4be76685-bdad-4a9c-86a9-5577717ebd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97e38bb-c6cf-4f42-b787-606f0ad5104b",
        "cursor": {
          "ref": "59d8b0a4-7eb8-4dc9-8632-a48ffbf35be6",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "437099a5-9076-4bc5-b1af-a23dfdaf04cc"
        },
        "item": {
          "id": "f97e38bb-c6cf-4f42-b787-606f0ad5104b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e273f688-f42f-41f2-97ae-95264f4cb8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c4f9c0-2708-476c-b538-e25d8c98a375",
        "cursor": {
          "ref": "9297e595-9fa3-4d1f-8eff-71c2169ede8d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "33c4f1e6-bc91-4601-b657-86210c2bacbb"
        },
        "item": {
          "id": "78c4f9c0-2708-476c-b538-e25d8c98a375",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "551f3b10-270b-4b1b-b9e8-ae6af01455ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee47914-7526-4d78-b0a6-100007544e5f",
        "cursor": {
          "ref": "b7149fb8-36e1-4c5d-964d-b88e235306a8",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1133616d-db30-494c-97c1-7c72f90509dc"
        },
        "item": {
          "id": "3ee47914-7526-4d78-b0a6-100007544e5f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "66e1fbad-6eaf-4892-9ba5-74e58f391df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbd7746-5ad7-4ff0-9a9f-08fc9fa9f799",
        "cursor": {
          "ref": "f89992df-18d4-4a95-9321-2ec21394244f",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b296d077-a65f-4a00-8230-348053fbb545"
        },
        "item": {
          "id": "fdbd7746-5ad7-4ff0-9a9f-08fc9fa9f799",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6b464039-c233-4913-b608-28405b0e76df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5c8c8e-1b43-44cd-bcb2-d28a7c53613f",
        "cursor": {
          "ref": "1618ec50-1968-44cf-826a-b7f71197c1ab",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5ea9f7b9-3391-45ff-a907-380dd3426787"
        },
        "item": {
          "id": "6a5c8c8e-1b43-44cd-bcb2-d28a7c53613f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dca4b4c1-10c7-45bc-bad5-dae3829698dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6073508-91a7-45be-bc51-9caa9fc9354d",
        "cursor": {
          "ref": "22fc1f53-0105-4ab9-9a90-8bcef30e9d22",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fb739e9c-7256-4396-a138-a15b96ba0657"
        },
        "item": {
          "id": "f6073508-91a7-45be-bc51-9caa9fc9354d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c0b7882b-9c54-41cd-b978-ea12f5239707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1905fc84-0a15-4df6-9f3d-cc697abfb744",
        "cursor": {
          "ref": "18b83619-70c3-4987-9e22-becb181ffa5c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ad5dac1f-40ea-45de-8f79-8059a6f128c3"
        },
        "item": {
          "id": "1905fc84-0a15-4df6-9f3d-cc697abfb744",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d0b31c91-7783-43ea-96ed-dae40ebae518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ec1e9c-930c-4c3f-a638-0bd3e9d50392",
        "cursor": {
          "ref": "1270cb2b-70fc-475c-9ece-e5f49cb6a375",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ef934bff-e684-4091-a1dd-d1231a9d8433"
        },
        "item": {
          "id": "b4ec1e9c-930c-4c3f-a638-0bd3e9d50392",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1bcc943e-5f5a-4ec4-9da1-5fd1de6ef279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de47921d-cc00-4fed-b49d-5f487eb49cb5",
        "cursor": {
          "ref": "73470ada-4c9f-40bf-ad64-e2ad6d63d5ea",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a06a6f94-7f22-4f94-8b25-615256f9cbb5"
        },
        "item": {
          "id": "de47921d-cc00-4fed-b49d-5f487eb49cb5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "da6126fc-09f5-4f5a-a8e7-9adae39bf8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7689d3-5a43-4c28-9390-bceaa5526a18",
        "cursor": {
          "ref": "5a65bdc6-6ca6-4af3-ad24-4cbb60644544",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cf0381a5-b4c7-43c5-93f4-a7298fb7eac4"
        },
        "item": {
          "id": "1f7689d3-5a43-4c28-9390-bceaa5526a18",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a0f2a0ca-aaac-4d54-903b-45e3600cd660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f05874-aa88-45e5-bd2b-7000a9ec79b8",
        "cursor": {
          "ref": "d85c7c5c-6633-44d2-9ce7-51803d8edf00",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "89e8d68c-6de5-48c2-90e1-a0c4ef71abab"
        },
        "item": {
          "id": "36f05874-aa88-45e5-bd2b-7000a9ec79b8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "20b92b42-b2fe-433f-93f4-c15776a7032c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b3660f-d94a-41c8-9c72-ef8d7c372ba0",
        "cursor": {
          "ref": "f9860e71-1ce9-4903-8c32-0cc25597f441",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a8c74a51-9c60-40c8-8f1c-c92480e35634"
        },
        "item": {
          "id": "a7b3660f-d94a-41c8-9c72-ef8d7c372ba0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "06eb3641-ac47-497b-9d90-249cf1090371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25ca065-42d9-42f2-b4e4-e1084cddf728",
        "cursor": {
          "ref": "d4341eb2-abe9-4884-8689-e4783dcbc951",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5292c742-bb45-4732-aeca-2591397c2162"
        },
        "item": {
          "id": "d25ca065-42d9-42f2-b4e4-e1084cddf728",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e25ce53b-a23e-4603-9e5e-33ae7abb2e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b59bdf4-fc31-44ca-b36e-d1be8b2c91ad",
        "cursor": {
          "ref": "4e5ddf3d-7b6c-4add-838e-ee3f1d84847a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "53a18eee-5c95-4b0b-8b51-30adc6c832b4"
        },
        "item": {
          "id": "7b59bdf4-fc31-44ca-b36e-d1be8b2c91ad",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8f5a1cd0-f258-468c-b15e-358097004fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d04bc6d-b098-4cc1-a19d-7eba3bc26abf",
        "cursor": {
          "ref": "82b00db0-8b8a-4443-a045-50f859563f04",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3f563f53-df9c-4349-93e4-562d38a9e3de"
        },
        "item": {
          "id": "2d04bc6d-b098-4cc1-a19d-7eba3bc26abf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "db467801-9854-4a8a-baa4-3b7681875a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b82c9ba-15c9-4823-9b8a-a117ace10948",
        "cursor": {
          "ref": "87b9a33c-504e-4306-9a64-10744b062e89",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e9e525fa-1493-4b32-9026-414cda93ce96"
        },
        "item": {
          "id": "2b82c9ba-15c9-4823-9b8a-a117ace10948",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a0f21bd7-e0d3-45c3-bc57-92b618efbb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a73b5b4-5d81-4e9e-9be9-23948f6ca74c",
        "cursor": {
          "ref": "b80f5300-a2e7-4fc5-a15a-f1718b89478e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1ac27ad1-df70-4b4a-82f5-bf487851e425"
        },
        "item": {
          "id": "3a73b5b4-5d81-4e9e-9be9-23948f6ca74c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "34b6c70e-1220-40b7-acbf-36c9ede9fe3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0d976d-bdf0-4af8-a6dd-dd58842ddb42",
        "cursor": {
          "ref": "2f6e1622-63ea-47bc-b93a-eb3eee794241",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e0197b89-c8a5-4105-a531-eecdfcdd7373"
        },
        "item": {
          "id": "8a0d976d-bdf0-4af8-a6dd-dd58842ddb42",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fd65d74c-0546-4888-bfcd-5015d45eeacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404b7c4d-d3ad-4f24-8bc1-d42d8cb0bb04",
        "cursor": {
          "ref": "c7d78b96-b552-4f00-a684-59e4c43c3167",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7d345d9a-c83d-4b20-b4e7-8fca2c0ad877"
        },
        "item": {
          "id": "404b7c4d-d3ad-4f24-8bc1-d42d8cb0bb04",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "44afa0d5-4eae-4c68-822c-a29a6e762c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac285910-aeb7-4562-88e1-e7ddad543cb7",
        "cursor": {
          "ref": "b4ae1851-fb23-45b1-bfc5-31abc1613660",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ed0816ee-6f67-4ef5-a84a-1cf86fe4f376"
        },
        "item": {
          "id": "ac285910-aeb7-4562-88e1-e7ddad543cb7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "afca9d58-04f2-400c-af08-b650e5d29411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c59896-3fc6-4f08-90f9-843258a99af6",
        "cursor": {
          "ref": "690cacb4-18c4-44f9-afc3-725756572849",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9b718a5b-9348-43d6-8910-7b2de01027b7"
        },
        "item": {
          "id": "35c59896-3fc6-4f08-90f9-843258a99af6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4248dd25-8dab-4122-9fdb-9fa06b392ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb95ce0-13c3-403e-842a-671d64b574ef",
        "cursor": {
          "ref": "a057a160-d414-4165-81cf-57372ccd6488",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d6ddd386-17d8-4c9c-ba64-bbe5c8511b94"
        },
        "item": {
          "id": "2fb95ce0-13c3-403e-842a-671d64b574ef",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c2905de9-ea1a-4f64-8f6a-1e27ac050a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6d86fa-2015-43f8-b037-4e7ca16a4b47",
        "cursor": {
          "ref": "25e2100f-3d5f-4062-a646-b0008622639b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "316e41cf-2a48-4c06-a560-0b634d3dee66"
        },
        "item": {
          "id": "1e6d86fa-2015-43f8-b037-4e7ca16a4b47",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ec9a9ec2-f671-467b-8b05-168d19e5a76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc41dba-ee4c-42d9-9720-f77643b2687e",
        "cursor": {
          "ref": "6a4c8b52-19c0-45b0-814e-9f221683abdb",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3544faad-6db9-4a5c-aaaa-16a511886bdb"
        },
        "item": {
          "id": "7fc41dba-ee4c-42d9-9720-f77643b2687e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f5a728d2-0a3c-4082-af95-62c76e1c4b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c3bf42-60e1-46e0-a95e-a17d221a3bd9",
        "cursor": {
          "ref": "7ca7aefe-c5c7-4483-8daa-8c18735f7b96",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9c5a81bf-c3ec-4547-b7b3-ec4b1d733e2d"
        },
        "item": {
          "id": "b3c3bf42-60e1-46e0-a95e-a17d221a3bd9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b2362a23-4f51-4924-80da-89135dabb4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085e5574-f810-4631-bf3b-0a92c623a5c0",
        "cursor": {
          "ref": "708ecccc-857d-4c1d-835c-633742847241",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "003b97c3-7935-4dcb-bb33-f3d668caecda"
        },
        "item": {
          "id": "085e5574-f810-4631-bf3b-0a92c623a5c0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "95a02c35-7eb9-40db-b555-e0ecfd65e596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5198127b-70a0-476a-9a97-681b4c70653e",
        "cursor": {
          "ref": "f8368ad6-a854-4f21-838e-9b63002b0ae3",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "88d44d20-8347-4040-8ee2-e4e2d89cbb6c"
        },
        "item": {
          "id": "5198127b-70a0-476a-9a97-681b4c70653e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "be32d2d7-c6a5-4902-8953-78684f25667e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1178b1ca-a02d-4f52-a176-9613523d05dd",
        "cursor": {
          "ref": "9f93fc52-f3de-4b53-b38b-6ace700bbf34",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2e60f7d6-a06d-4870-9c40-d41853211767"
        },
        "item": {
          "id": "1178b1ca-a02d-4f52-a176-9613523d05dd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7e063aef-63cb-41c0-aa38-bf4b643eb254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020f4c56-b223-4710-b012-c0ae86d383fa",
        "cursor": {
          "ref": "67c99547-d256-4db1-9f45-3839a8a38de1",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1bbc8a8f-917f-428f-888e-17c8461aacb5"
        },
        "item": {
          "id": "020f4c56-b223-4710-b012-c0ae86d383fa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "dd8a953c-7fdf-47c5-93c4-4494b1756560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fad550c-d875-4f3f-a0d2-1b06846fdd3f",
        "cursor": {
          "ref": "5f9fa9a7-9d89-4050-9f75-bdb646e3e011",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ad28c4a2-9b85-4dcf-81df-0c96bbe29262"
        },
        "item": {
          "id": "6fad550c-d875-4f3f-a0d2-1b06846fdd3f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fcb8fb64-4353-439b-adca-cec4e975e7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e34cf06-dca8-4fbf-b6bb-8db0d955bc12",
        "cursor": {
          "ref": "a6b95cac-9197-4689-b773-e585169bea40",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a09259a9-e890-4c62-92f0-80c5f05ee1c3"
        },
        "item": {
          "id": "4e34cf06-dca8-4fbf-b6bb-8db0d955bc12",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "96e0f3a7-6aff-48af-b416-60bbe697946d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e83df8f-e2cc-4aae-9fce-038355c2e389",
        "cursor": {
          "ref": "fdab344e-09af-4432-9780-f5f2aebadfc5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b7a56cf7-88d9-4d09-94ff-f57377027c33"
        },
        "item": {
          "id": "0e83df8f-e2cc-4aae-9fce-038355c2e389",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8bbbe116-c489-4fe9-93a5-56ab87565a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a14df8-6369-4038-a346-c9669e34c0ad",
        "cursor": {
          "ref": "51679c58-e03e-4d28-96c5-0e92b00c1b27",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "09186255-f5e5-42b5-be97-c1838f5b3474"
        },
        "item": {
          "id": "20a14df8-6369-4038-a346-c9669e34c0ad",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "949cf3e3-079b-4b97-9ef9-3dff7db9f53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ce27e8-f213-459c-a7d6-a8003333805f",
        "cursor": {
          "ref": "e5d3f7b0-ff20-4753-8c2b-a40f29dc616a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f5500abe-ef7c-49d8-8b38-f1ac0aabb3d0"
        },
        "item": {
          "id": "25ce27e8-f213-459c-a7d6-a8003333805f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a9c12061-9d35-4fe2-943d-a57bf71d9351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a958a8-e6f1-4a58-bbd7-d05d6ba5fa23",
        "cursor": {
          "ref": "24f2c10b-1484-4e04-bf93-f365a3375b37",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "30783b9a-f017-4887-a316-c6a561e33c35"
        },
        "item": {
          "id": "91a958a8-e6f1-4a58-bbd7-d05d6ba5fa23",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "87ee01b1-83a8-46d8-8bef-4191d3c02d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c88878-6747-4044-93d4-5038f34b0e33",
        "cursor": {
          "ref": "6f516382-c074-4c7a-b68c-28cc7980f88e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "57fb3522-8319-4da4-b129-acd296f07f16"
        },
        "item": {
          "id": "d3c88878-6747-4044-93d4-5038f34b0e33",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f3c6ec25-de88-445a-8e01-7d9af35b45d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7529ca88-5c9f-4394-9c41-e78b3c6c06ad",
        "cursor": {
          "ref": "77da49c6-f5a4-480d-99b5-d041a465276e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e659fe36-2f6c-4f82-8594-c516e821c2fe"
        },
        "item": {
          "id": "7529ca88-5c9f-4394-9c41-e78b3c6c06ad",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d2eaa965-a4bb-41bf-8dcd-2cb502c63535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acd8afa-855e-4689-8ccc-a9138fb6a443",
        "cursor": {
          "ref": "d65ae417-1874-4126-989c-f00ff1ca9e83",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a8b7f737-1438-4288-819c-454b219edc6e"
        },
        "item": {
          "id": "3acd8afa-855e-4689-8ccc-a9138fb6a443",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "943dc470-d574-4cef-9dec-65cbaacb866c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a1d90e-3754-4365-ae22-7a3355ce5d0d",
        "cursor": {
          "ref": "d671a3fc-b042-42e2-819a-f5616dda47b7",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3de2f7b3-972b-4043-baa8-d27e928153fb"
        },
        "item": {
          "id": "93a1d90e-3754-4365-ae22-7a3355ce5d0d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e99712c3-c679-4151-8d5d-e07c4dc03161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34016146-8754-472f-bace-34f34d1ef254",
        "cursor": {
          "ref": "fddc82cb-a7cf-4e08-ab19-677b1b0ad963",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "894663e4-e3d1-4c19-9896-2a66927e406b"
        },
        "item": {
          "id": "34016146-8754-472f-bace-34f34d1ef254",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a6eb3d37-b374-4526-8015-a4c2656935f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d9be19-0fdf-4b16-920b-9ba7c9540179",
        "cursor": {
          "ref": "3617f666-b73b-44ec-939b-be7611f1d473",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "21a35c96-b68b-4880-9c48-c78a278758e6"
        },
        "item": {
          "id": "42d9be19-0fdf-4b16-920b-9ba7c9540179",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3c5c51ae-fdea-4901-97d3-de1558aad75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6f9b12-16f0-4ff6-8f9d-d90912cbf1d6",
        "cursor": {
          "ref": "3ef6be7e-37e9-4a46-8877-7dd5eb86ab01",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0263ccb6-deb3-46b8-a784-1e56f595240e"
        },
        "item": {
          "id": "de6f9b12-16f0-4ff6-8f9d-d90912cbf1d6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6d3f2226-e375-4bfb-890a-4e48ea36814d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d0212f-bbcf-4669-a7eb-57b7e938f058",
        "cursor": {
          "ref": "e13f2ab1-196b-4cef-8512-f942cb54d33f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ea581879-d194-4b1d-b4ab-d647263adbc9"
        },
        "item": {
          "id": "76d0212f-bbcf-4669-a7eb-57b7e938f058",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "00355c69-c79a-4d04-90ee-c2b99fa7948a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b635169d-b286-486a-8c73-86cfb40d118e",
        "cursor": {
          "ref": "4cd5f9d7-34d1-4bad-9da8-3bc40b57cc6f",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6a0c7a43-7092-4f29-a6dd-5672198af59b"
        },
        "item": {
          "id": "b635169d-b286-486a-8c73-86cfb40d118e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c6deffbc-1bcb-4afc-a298-3539a3b1d73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6386b556-69c9-4026-9780-88675683f7b9",
        "cursor": {
          "ref": "63f21ddc-26b4-406c-86b2-a612a880e47e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "210545de-bdd3-415b-ba92-010cc78dc332"
        },
        "item": {
          "id": "6386b556-69c9-4026-9780-88675683f7b9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "28210391-567c-4ef9-8bc3-fdf111541770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e49f798-4c02-4495-9ce8-663beba5b63a",
        "cursor": {
          "ref": "cca159f2-6f89-4065-a758-a2c5041060a4",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bdca387a-d3ca-4d0c-ad53-18009ae4f07b"
        },
        "item": {
          "id": "9e49f798-4c02-4495-9ce8-663beba5b63a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "86236149-9255-472e-b3e2-7bf9b7327e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea0b8c2-5188-40b7-9b38-d00cd0d8aad1",
        "cursor": {
          "ref": "92014d4f-bd38-48aa-9951-418739e4440e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4b1e9338-9cd1-4994-a3ed-bfddae52ef80"
        },
        "item": {
          "id": "1ea0b8c2-5188-40b7-9b38-d00cd0d8aad1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b5b21236-c7b3-4184-ae89-cee2222e4bd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdd2155-5a92-4fa6-86cd-c66567247d02",
        "cursor": {
          "ref": "a729b5bb-3eb3-40f2-ba1b-91b88bc254ae",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "01509aae-b4c4-4c84-9b7b-ed2ad78c293f"
        },
        "item": {
          "id": "0bdd2155-5a92-4fa6-86cd-c66567247d02",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2ba4d9dc-5649-43cd-98aa-f4bb8845409b",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abe0c98-e8ff-411d-b500-5322f76dc251",
        "cursor": {
          "ref": "91e42a34-7796-4e64-9839-8e050a132fa1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b75e4dfa-24cd-485e-8485-f365629e0608"
        },
        "item": {
          "id": "2abe0c98-e8ff-411d-b500-5322f76dc251",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e05aa1a9-f414-4096-a3f5-c7011ee9d5a0",
          "status": "OK",
          "code": 200,
          "responseTime": 2627,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f88688-bd27-4306-aef3-4978a5c980b0",
        "cursor": {
          "ref": "667c30ea-f5e3-4e41-b1a3-1745ed9b242c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f03321ca-52d0-445e-b025-24c8745ce52f"
        },
        "item": {
          "id": "f0f88688-bd27-4306-aef3-4978a5c980b0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "96adc50d-e7d9-43a3-bdb2-1b344631a91d",
          "status": "OK",
          "code": 200,
          "responseTime": 3658,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "407b26ae-9046-4fae-aacb-1579bff4041a",
        "cursor": {
          "ref": "4c7ae736-075d-4563-b34a-d9134ae007f9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8e617bd4-b97a-46ea-b246-48a04365dd63"
        },
        "item": {
          "id": "407b26ae-9046-4fae-aacb-1579bff4041a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aed35a0f-ede1-40b5-94ea-eab033f24002",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407b26ae-9046-4fae-aacb-1579bff4041a",
        "cursor": {
          "ref": "4c7ae736-075d-4563-b34a-d9134ae007f9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8e617bd4-b97a-46ea-b246-48a04365dd63"
        },
        "item": {
          "id": "407b26ae-9046-4fae-aacb-1579bff4041a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aed35a0f-ede1-40b5-94ea-eab033f24002",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6942592-fff1-4742-b583-f9cf7abf8c43",
        "cursor": {
          "ref": "4934265c-5a83-443d-a08f-6241e03c2ee5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4aacf1d1-4a96-4a36-9c01-2467e4e246c5"
        },
        "item": {
          "id": "a6942592-fff1-4742-b583-f9cf7abf8c43",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ee22f1c7-7cf5-4b5d-96ed-f2300edefb01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba9b8b3-b8b1-4a54-8590-5845c1310c92",
        "cursor": {
          "ref": "5b8e8916-26d2-4116-a604-98585f0d9e9a",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7739957c-d68f-4042-93f1-5db6ba987d63"
        },
        "item": {
          "id": "bba9b8b3-b8b1-4a54-8590-5845c1310c92",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b7aef7b5-8e5f-4b28-81c7-0f60da555967",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}