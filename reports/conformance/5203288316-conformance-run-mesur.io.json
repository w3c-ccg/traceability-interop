{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fd747020-446d-4b9b-aa3d-714bfd8fc087",
        "name": "Clear Cache",
        "item": [
          {
            "id": "559dcc92-6a75-408c-a5fc-53cd8f5bc8ee",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "957125d3-f986-466d-b674-252d7906093e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8649157e-25f0-4b6f-bbf9-aed016a42f02"
                }
              }
            ]
          },
          {
            "id": "a3d00e1d-d5f7-48d8-8ea6-c1f9ddb7ef47",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f7ffb40-8806-4b95-afeb-e33a6b7f1ae5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f4816bed-6dd3-41a9-b05d-04e871434b3e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d4a730be-dea7-40df-a224-d131cc9cde44",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a6d4faf1-273e-4ad2-8c1e-599e219eb74e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6003851-5967-464e-8068-94b5a716e262",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf2cdb6a-0865-4b6a-b8b0-0afecedb7f8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "567365f8-2387-4854-86ec-691c2af3fa1b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0aba0408-276b-4c7f-b90d-7f40c07b75bf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a6826ce-4738-4e11-9c7f-363a33000007"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f1259c23-ff75-4521-a964-3e3a40b5ab86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6d6e0c8-e11e-4265-a0ea-06d6338d5927"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e410f98d-22fc-445b-8d13-d45148418d42",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4f20e303-d3b1-46a3-9c67-437017d05315"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b9a27e5-9fc4-476d-876b-92dd4aefc4ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1f4c4ff-341b-4905-84f5-93438deaa15d"
            }
          }
        ]
      },
      {
        "id": "99759e55-5bac-486d-82bc-7b2722a86985",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9c04d573-2aba-4e1b-80fd-9f8ba5220302",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b97e32ed-7a20-400a-ab4b-c44a509d8f87",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "21ec5318-0200-4e3d-a9be-9aebe32452f3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ebc6c2-05d2-4072-a03d-2b1136c4186e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aab66640-9f73-41f4-955f-5fcfdcc4f5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f899af6f-01ce-47a9-bca0-959f3edb3550",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97860511-62c4-44d5-9936-d72bd5a81b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "033fd402-7ae6-41ab-b037-30579766a35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873daae1-0eb0-491e-92a0-09e44f391f22",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ba1bd9-e2d4-4caf-b099-c22936ffae37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1afb5c3-d3be-436f-b68b-af04d5f9a2bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18f11623-e5d8-45c6-9c2b-411b07ec7a03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8b981cf-cd28-4dd4-998c-99e906f9e3eb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c71e51-0cdf-4fc1-9223-d7af15c2f108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14953da4-9547-4834-81ec-6fbff780886a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe14dcde-721f-4003-b5f9-234d01afa65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb0b6e4-8dd3-4944-b332-cb2e49f21c19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "23ae411a-aed6-454e-be98-30b4c7a242a3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fef1cac7-5379-4a09-8375-f641f561ba77",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "010c08a2-b624-46a1-b1a9-5d5b436e6951",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b67b974e-7322-40bf-b05f-284dd4a6faaf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bf210f8-49b1-4448-bb6f-6edd94c5b0cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4f33c7ce-b9da-4739-9453-0d344ae4152c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "500861b9-f696-4de8-a580-ac8fb3c19ab0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c73e262f-a676-4f49-8df2-e7a6be17497f"
            }
          }
        ]
      },
      {
        "id": "daaf3153-42c7-4218-a565-7a78f70c2745",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "eb749d9d-7c89-4af1-9da3-8238d016decc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffbfe3eb-2799-48a0-89ce-f09a72398e86",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7d95619d-50d0-43ff-8975-f3d037d017c4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a101c2d-a741-4b2b-989d-bab0c73aeaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787e9e87-9f1d-44c2-aa92-f823e8fe5528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c407f1c-af2f-4873-9b54-6dfb99010d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7565b873-1304-4283-af7a-e3a40f7135c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a185dc2f-1a7e-48a2-9e00-b6052b0d1710",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1c0dbf-026d-4fb7-8b81-32dc62bfab27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78cd4665-e1fd-4f65-8b88-79b0a88a6c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9843528-5e7e-4de1-a1f1-c14be6102e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "557a6421-7743-4823-ac2e-b61e54ce6d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4704f549-1909-4e3e-a788-38550eb89091",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641e0e40-e620-4917-ae21-a838aaa78e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35229d7-a018-4224-9540-60b61bf5a9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daff5569-fbe8-4a47-9ba8-ae9b15a26769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00a68f0f-5693-4457-aae7-b65d937b4561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcb2ac1-5ad4-401f-9e6b-77bfe6c472fc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a4ddc5-dde5-4076-9c23-bad95deef34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf36c0b-94f8-49c8-bb56-04f6ebbe726f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda0b438-7563-4aeb-9f87-5e7c1f6ae2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ab61f1f-fa94-4eb6-8ca4-4b5bfbd65659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696707e7-900f-4c31-b1cb-fcb012ff708d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b43dc74-c29e-4b60-8f5c-8a0f02c663cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cfe960-025a-43a3-a350-77b599a95412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecf9591-74bf-4166-a40f-5b7771f22aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80fdacd6-67bb-4026-ba13-5bd36afb53fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e34a4a-3392-4d5b-9fc7-3b52d6e61b7c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c870d4a-c820-49ea-8b61-57ec0d5a9629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ea6599-a5d6-48af-90f5-07966de37160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47adefa5-441b-449c-98fb-f5833f0e12db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d082860-6a5e-4a68-b318-82a5096f2baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccca09a-92fc-414a-ae94-cdca05ac576b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c791a118-e335-4aaa-bd8f-5817cf6d33a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a867db59-5019-4ff8-b3ab-9fbcf6a06468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d76106-a777-4ff9-946c-e3aa96c84edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c39bb7f-90b1-4142-aebd-6f9d58e3ea41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727b85b7-8462-46c9-b98a-a13a57d7a728",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed73fa9-b6c9-4582-b3f9-125761af0ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1677df44-fcb9-4051-8fff-be228e689463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d81d729-615e-4b77-8b6f-fbe666b1fc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af2a596a-0b9c-43d8-805c-4796847ca8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a03cb63-6633-4cb6-93ce-2788c378b4eb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8392c2-9257-43bb-97bf-48049e1c4b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d532efac-1c4d-4f54-b41d-cbb6e3d0f5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6803f4-9029-442a-b3b7-ee148b30e4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bbec1a0-d1d2-4382-8206-89dce45689c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08862e88-d82c-44a8-83f9-c933906cd033",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e739de50-4f23-4862-9a49-371def9c4b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7002bd3a-4c24-40db-bd32-8336e373c351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b75bef2-560f-431b-a8db-3532c0507db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2624e4c5-db62-484f-be0c-cb9648946685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bed80e-7a93-4de4-9d63-1018e9c76c30",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e01288c-9544-4cd4-977a-ca061e859e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ce96f2-e2be-43c3-b389-cc33182f5314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165b81d4-4f59-46b6-a31b-4317989e4b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eae52789-fdcf-4500-9598-56f083ab7a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70417829-0094-450d-b9cb-25d4acb64e1a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d28fb99-fc78-4102-a4d3-888456a7f22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f915ee-4b3f-480f-9dbc-bf478a698c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec792ef-9caf-4f82-b46c-efb7dfa0ef50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a760dafe-ac15-4aa8-b1e8-9fc56bdd0ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d00e6a8-cc77-4f9d-be80-76af595572a0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c47f109-c038-4a5d-942d-e53cde5ed38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40800fa8-3422-4917-abb9-0871f6951486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24441dc-391b-40c8-9ab5-947771986f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b968fe3-d03b-4234-9507-e04542f06626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa49159-993e-4530-93ae-63312623204d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3309f04-b510-45ae-a365-cf7125f4eb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ac8c0c-e174-4077-85ce-a8accf39e6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c3e8aa-91b6-425d-b740-5da4df0548bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22e043c7-d6d4-4fd6-b043-66d963ff2e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d754907a-452a-4e98-9ae9-7ebde79ad375",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fd7378-bf7e-482d-8703-bd283048292e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5917b9-60c3-495e-ad06-e73cc3e96954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bfb7f1-6d40-4a38-ac01-f87aa7dc8ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4789b1db-ac30-46a1-86a5-0164b6ffdaeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e5dc60-4d7f-4402-9478-63d61e4cc87a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587f1b0b-82d6-4c01-8b8e-49a8513b3985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827e08ed-db21-47f4-a3af-f77522874005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47680e0-516a-4721-bd4a-4d4c7ab16d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "009a1201-1007-4e8c-97c8-78cd098ae093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589e385b-6692-4136-9831-e6dad8e1aa5a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e2a377-9004-4ac6-9ff7-671597a4b912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf653ea-60da-47fc-a80e-849b949f320f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20169d4-bd3c-451d-8e06-1319390ce449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d78bd615-243c-4a5d-a831-f532b58cb5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f6cd2f-406a-45f1-aec6-541f980c7a10",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51770d4-b32b-4d27-870c-0b85ccdad49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9fac78-1585-480f-ad26-474cc5bf646a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579f34ae-a003-4475-84fb-32da306d3a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1afb69-1b2b-4d5d-aa2f-426c27792377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caddf205-9291-48ee-a860-e00680f8d0a0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3967c124-8b55-4ddd-b1ec-4b1c713b1f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "462a73c2-879e-4a96-aefa-09440b154dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9ad3bb-5cea-4e65-ac5d-511648ef8848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d4c042-c626-4580-95e8-58942ababac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1d6d94-a58e-4fb1-a925-2858808eba82",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6334f563-ebcb-45ce-86b4-4f867437afe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addfdb29-e5fd-47f0-a22d-195e276ab3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f62125-288e-488f-9598-78781cd508c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3c7289-a25b-46f5-9134-715779dff7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26073780-0ce5-4eee-a703-f99206f6c60d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceea0f6f-1815-46a8-82df-86ea3e51c51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca4c705-2657-4f9e-b5ca-ccd6dd36757d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f092590-d5a1-4e4b-b4b9-8a94b0bf63fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd2adfb-7dd0-4a2c-905d-536e54726c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc70d45e-9c66-405e-bd89-691aa1987f4e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4cc9d4-646d-4931-8d55-fa6dcbc6f217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5932d72-efb6-456b-9761-87d4cb217de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0578c2ed-2918-4747-bf9b-442f4eda75d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c217665-1ac1-47c9-b294-81b925c25ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f67763-33b0-4581-a0a3-403ed8b0a2a0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df4866f-7503-4d61-a2b8-192c8cdefdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e6700c-94bd-42b6-abdd-261558e7ae9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbae6ece-798d-4802-b46d-d65735ce027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68d285ba-b888-45d0-a809-ec0e6e773514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc76be6-b84e-4128-8d6e-6bc33e4e3b7c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5a5163-e6a0-437f-afcd-78e319a66823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27905e7-69b1-4f65-a8f0-dd8d41dee62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffcdaa1-c6f2-4ac9-a7b6-818f583a023b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "066861c6-c45c-4783-bb9a-186b1d450211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e357d56-89cb-49f0-8855-546524d41abb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88e3e47-e335-4d18-afe7-fb83b3a3fae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fac4e88-69bb-4f65-822a-03734f654987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cf335e-f007-4727-a0ee-e3485ddfccfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2121737-41fd-4f1e-bdf1-d6964b07abbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a647b4-9fd0-4cbd-acce-568c98f03acb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8966efa3-6b56-49fa-844c-d78b3396f00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c778113-2145-457f-a9ff-18a863851676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e1c5e0-0720-40b2-b20a-1ae5fa92551e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09b18332-8b9e-4a83-97a3-3bb9f4963a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0b8d63-4c85-43f1-aa9d-dbe555380edb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159d6314-df38-4868-ab9c-df437dfd45ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fcbcc1-b440-4120-a686-207df3ebcc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59abd010-fc35-4e7a-84da-8a2682c2e2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5551086-816d-4864-aecd-513ea33808e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafa9e0b-63fe-4cd1-9e79-98722a9ad183",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d72993-76bf-4a4b-945e-2a128fb85870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24d2d8a-13d6-4ec9-b40f-0c13a1419709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c08386-bd6c-4409-800f-5c8721115f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2d4d91-b8d1-464b-abd5-65e032a493c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c839e8-d361-4dde-9fee-9de135b62cf4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b784d6-7b25-4c16-b0dc-0ee6acc4a2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff75f5c-0a90-4914-bac2-efa9c09e1c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2925f10-5aec-4bdc-9e33-a71844f09d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a561de-867e-4f41-93b6-8123c4ac1f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7699b8ce-ebaa-4290-b519-58750468398a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53de26fd-46b2-4635-afed-2b91e6dbe388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b57a4a6-ee79-4eb2-bf9c-1d58875c5404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507be032-afd9-4a4a-b5f5-2c8ca3cc6432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "16fa7e52-b73c-4594-8a0e-041b25aed069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08b9fea-2e5a-4954-a5a7-cb1f72bff44b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d05e61-4b6f-446d-a38f-42b45270bb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad3dd07-061f-4cfa-8f87-ab9b7ee99280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33ea4f1-5e69-4d58-b661-bd779907263b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3403e9d5-ef75-44a8-af3a-12a337e00a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556d8192-2e1f-40f2-9dfb-662fde7614cb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0841a2c0-7c75-4146-a3b1-e9fd6de53814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef37e10-1765-4e27-923c-5ce828352550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c1128b-9570-4803-bef0-c73d73270ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61db07c5-f256-40cf-b0ca-7079dec01f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b675e6-dfdc-42a6-abf1-0ca2dc9fb06c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada9d6c4-30a4-48a7-b150-4605d7b70f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61da8e8-728f-46ac-8bd0-83ee2379afb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc0df8f-d271-431b-ae12-96b74f18b01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4115452-56f3-42ef-afff-6664052d935f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4f1ffc-9179-435d-9e1c-69a4e3176042",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88367619-421f-4ff6-833d-e76766fdde92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa1be74-163f-45b9-a596-55126e25494f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f485034-a12d-48e1-a70c-409c083c3dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1233a4-938d-4a39-ad17-ca742e839b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c374da6-412f-4788-adb7-932d5d2cb4a7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72b8052-dc8c-4749-a0b5-48de1e8d7794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8029e96-1cf7-4bcd-b3cf-5f550c3eefbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2832cda4-cc72-4483-bb7b-13820f78de30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fbdce5c2-0699-40fe-8f10-cc254762b331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddb606b-d61b-40c8-8d89-2068f8918ee0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6314bdfd-484d-4309-9f7c-8a4d2e08b693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9096ede-db9c-430f-8ce9-6685fe80d7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dd39e5-22b4-4f8a-831e-a60cc9eebf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37bc2459-a30c-4e82-a194-12128ddf11f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc85050-6220-4802-b585-3c0fcb9da5e4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed54c210-286d-4d1a-a9ce-797009ff447a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854da0b6-bd18-4e80-a030-88fc85ac8fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b84566-4daa-420f-ab35-05e4ef8cfc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf3eff9-07cb-46d3-81db-f579eaac4329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cc4cab-960b-4192-bad5-b2eebed368a2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c00d17d-4afd-49dd-85c5-f48ab4310e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2c23de-2a1e-4a70-9363-fae5da67757b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dce5e5-07f1-4640-bdad-a32f3ab7b136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "090d320c-284b-4fc6-9e33-8d98e62dcc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be2fa85-d5f6-45f4-86bd-f0afc93014a0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da183bf-116d-4545-afcf-b337d42c036c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8782c0-2ba9-416d-a817-151dea0a81f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4f052c-ffb0-40fe-863e-5dce91cd8304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a5bffc9-adfc-424e-a49a-29169bf98a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb6f55d-6f4d-4ce1-a32a-dc7df4a3d30f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2371877-6ac2-4ce4-bb7f-a7af53ee5595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e14388-36b8-4177-9fc1-bfbc3fae6fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f3a2a9-3b0f-4282-852c-8b36ff56b415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "630d365d-15bd-4d09-9824-61fd6501ddf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8770ee81-621e-4a53-9549-0a6300c6884c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fee1bc-104c-447a-9572-ccff321a8ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489cfc04-7480-4343-9ff9-a7b449584bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e830a28-20a6-4626-b56f-61125d645060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e20e3cf-8a72-4306-856c-0784b797fa6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dfdc7a-80b8-429f-97c5-22a6deee2945",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffa8d7d-c3f7-4b9c-9dc4-3213dc701731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e07f69-c94d-479c-83c2-600de3d0aed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cdc103-f370-45c7-97c9-654e730e0a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "22ea16aa-de3f-461a-bc89-6df14d455aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378da175-d522-4c5a-b61d-6b3e7ded60f8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aaec520-19fa-4b6c-95cb-7336e2d1cb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0302eb7-e920-4e2b-af6e-7323ef55e696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa2a067-c119-467b-982f-1c695ad5ab7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a430fb7-cdf1-47ac-b038-51b223b36a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73c65af-42b4-412a-9890-2672e96a863f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41af14a5-b1d3-4903-b2ca-a403d1bb7841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6098421-1b2f-4dfe-9fd7-3b60a95ea6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8489c0bf-4d43-433e-98d7-7badc40038d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "852b6791-31d5-4ea0-98b4-aa74c34ed097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ab4923-13d1-45e9-bcfc-53ca17206c0a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11fe815-3e18-41d1-ab65-8e394e5eaa30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67093a8e-dbde-4338-b694-9fe76c10ae80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1647fdc-6491-4218-9c48-87516997a221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5985e4-a944-40c5-9a65-46a7690e881c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769406cf-d0c1-4c38-948d-424d424793fd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b85094-6981-4bff-8c74-b58e2c34cfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aad19cb-c017-489a-921d-b285e689fff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fc1d98-77bd-4287-87fb-b2ae5fd5a4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9cd330-d39d-4e19-8b33-7a93b070bddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4cf7b4-dc52-4566-9276-2f9c924325f5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062e7ec1-560c-4780-9420-44bf20697a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab8769e-f4ca-4fbf-ac99-f859b03e0382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f1d6e3-70de-4241-9b56-245868014d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abbb214f-690f-4e4d-ac88-6a2a7a65b2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9056b325-c806-4f5b-b454-18a7f22b1766",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddf8b92-1d1c-4fb3-bfb4-b23a7c539660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c806a23-c693-4e74-be28-c92da4a08442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f3f141-163e-47e8-9d53-531728a77fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b145b24a-a5da-4842-832c-fca48af10c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502b8f03-be75-43ed-85b5-b93a903fcf69",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1048cc65-5108-411c-b67b-413463f5a13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f482ad6-bd53-43da-bbc3-7e72612ce316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1325977-19b6-4003-baa3-a1f54ff5ad3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9297f94f-bbdd-448c-9871-7dde2f34c6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8566ac30-3f7e-4efd-84a8-c78ddbc85d94",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38160c88-7e31-4c52-baa5-201fc8ff37c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc61549f-8a06-4ea6-9c6d-74938ffb8bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7980c1-73b3-44e5-857b-5b874e5558c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b854ae-f7c5-404d-8470-6f74c4dacd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091dc7a9-758c-487b-8350-b9b92705c3fa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e4e1d3-f1b1-4700-9452-4c78d59ee1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b6f154-b6a7-4aab-b5cf-aecfd683a48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d786fd-d312-4059-8bca-72df7820ce8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7622f8-5d4d-478b-9c2e-5a541ec8e5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c82640-7907-4d70-b34a-52adcd7b1bb4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a8decc-7d86-481e-adb0-6927e95bda4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db2dc31-ef01-4681-94ef-59eb17a3897e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20f9b02-4ebe-4aa3-a869-ca9143999258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "017bd6f0-a8f2-49ac-ac05-0fc82e25b72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6d4efd-50b8-4b0f-93da-366687c799a8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236e932c-1eb4-4daf-b787-1923123ac899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92059e34-e4dc-47e6-bac1-0e18f9d2bf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd999fab-e6cb-411a-9533-06c887f93d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "358e2dcf-c0d5-4232-8fde-ed6f18ce86a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db919b07-12c5-4e9f-bdc5-9323fc4173ee",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8bdae7-62e1-456c-a84d-d2fc226ed46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa25c69-64f3-42dd-936b-a9edfd57fb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44eaab10-c84e-4134-88a6-a97ce20664c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43694516-3048-4661-a56a-0d87d041cc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee38ca41-1e28-418c-ad4f-8a31dbd2dfe5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34940c1a-2570-4639-80b3-f4addb4a2863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca54400-54d4-4c22-955e-f3129d36a0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41bf3bd-02b7-4118-b948-f9b364e4eb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89833a64-b83e-4462-a8b6-7674e827d1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18eee64e-f7c2-4545-b278-b5573c35a026",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b38c02-88ff-4be6-9b6e-8c0ff09b25eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f684856c-1427-4970-909e-95d27087bc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc569f36-f69d-42c9-965f-337f3012e36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e74c1851-f2a9-4693-a2ab-a6d049f9553a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62781a4-2bc7-4eb2-8b84-cd315855062a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065b6918-9d10-48f1-b211-fc54bfcc033d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4e90ee-9040-4202-9e1a-3e9f40420a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f78e2e-f501-497c-9556-89daefde6cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "249a5583-7396-47d0-b377-b080aea7ce00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c864052f-f021-476b-808d-0b78bcdee762",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5be3046-7814-4847-b5cd-c5dc6aa215e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a7bacd-f077-473e-a818-2e88a89820f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539525d9-d60d-41b5-9f4f-3f66df1d567b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b056ea7b-5872-466f-bb24-ad17ffc428d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ec916e-7be8-40d1-9489-3b40267bbc5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff53842-3080-4253-8ac0-91a0570120a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb96f402-1a8e-4c92-9ca3-9ea20b398912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d07a0f-fb0b-4f5b-a53f-9c7bd8388257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "86457be6-e57c-4444-9048-807e511e9cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dda9e50-ef7f-4360-8459-d856d4066495",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a54c67-afa2-411e-a85c-1fe8cb466f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac9696e-de77-44f8-ae23-fe6aacebd86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a097a26e-d84d-4f2a-9f62-94ec0a073fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3b1bb1-d29e-443d-846c-cfe5ca80258e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e445f90-d244-4ea1-a293-9b87582e53b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7171c6f1-4b38-4409-8d94-a4fa0aec12dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e78104-6fd1-42e0-aee2-ba3f44460cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d5e26e-fdd5-43b7-ba69-630d95ff1fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c14d7e32-aacd-4b09-b7b6-6b699d777300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47a104f-e5f2-4000-945b-47104ad95792",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e922720-c341-4f21-ad39-c63253cd4c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967fbc22-768d-4ffa-afc4-dbcfd730bba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed718d72-09ac-4c39-adc8-d0206454f6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2dd47f-3f02-47ca-a139-228b41a12ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd6e417-4c5e-42fa-848d-843c681faf6b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c058033-becf-4906-a7ef-6a602c0dcc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4698a0e8-a26d-43fa-974e-b1c031dd425b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9cbafd-88ee-45eb-ba77-dfa8dacc6086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b34d09ae-576d-4b5f-b957-b03a47fa69d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd00118f-4f91-4591-acca-7bbefb873771",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe30cbb5-6e36-46a7-803b-a49b06d2706f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ad2cc3-48e0-4726-9826-84a48ecaa877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964714bf-03c5-4c0f-888e-e47d7218d349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32b0a78c-4809-4ea3-a87d-68fad9009199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6495bcca-6686-439c-a771-da0c80314ce8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cba785-d57c-43f2-a719-539530fa20b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb35b4b3-947b-4add-bf6d-bbfbbcaa31cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b36f731-9a11-43cb-8ba7-0bf58e793291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "839470e1-f588-4a40-960f-e023434f6097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cadb9f-3b97-4ff8-827a-a5fe150d2809",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a44cebd-153d-497a-bddc-ed9b6176f6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883ff88a-a08e-4423-96f3-403f7a924d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ecf1e2-c84b-4c6b-967d-fa93ce4fe061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57965205-a66b-4916-bae8-d19c3848f103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731e0aab-f294-4139-b797-8b86efc892ca",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f899830c-5f28-429b-9f4b-baf7a6abcc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefda5c0-dc16-4019-ae7f-b3ff5ab64779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f858921c-acfd-486d-b293-df394c49d56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f31d07-eccb-4a92-8d1f-dac0f516d814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56264d07-9458-4a93-acce-a444d6779b27",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2106a7d5-67df-4a01-941a-1f9ddbb307ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0017d4-549e-4635-a4f3-6b9b07c73278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ef37de-9910-460d-9440-51fae583733a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f25a8a5-b8ce-4b37-840f-0382202529be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53aed18a-52f0-4596-acfa-f67735e2df5c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a3a866-dfad-4271-9eaa-fab0d99b1f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070811af-99d9-43fa-929c-deb3f0e2038a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db4d3f9-c27b-4560-a8a4-523b0a106687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7ce53c-aeee-4f25-8c2c-3fdc751b8495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdca9ce-898d-49a5-8330-aeff178d5cb6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5a1da2-2ca0-4d02-b893-532c4f9e3e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98d810d-958d-4d2b-9e91-bc81ce539e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de223fd3-3cf9-46a5-8754-22a8cde11809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66baabef-c8ba-4719-9ad9-da079df0e8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939d54d8-54f7-452d-a75f-065cd3366155",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5343002-276f-4db2-9dad-ea61aed673b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e18496-3067-49a6-80f4-e2babd256719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9179ea42-237b-41df-a4c5-fbea1deca48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c984af7e-5d60-4ec1-8a05-e6a988482b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dcbb32-3e92-4d69-a325-a916bb05366a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03732ca-f49d-41e2-998d-b03de03903c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af63374b-37a2-43e6-9afb-ed7f6052e4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37489702-b1a8-4d19-88d5-3b0005dda66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8254b89-8efb-4340-98ec-a3f167662273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2b2891-53e4-44c5-beff-a514242d8ab2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e33de5b-ba5f-47f4-91da-c316c7024f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6044169-527a-433b-9067-206ad795e9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2af4b3d-af79-4f80-a949-877f476c9bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "486b5660-4121-4112-8cbc-1602b0d62daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfa445c-a750-492b-ab38-239d4611ba77",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93159ac7-3681-4d24-9803-a9a368de215b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9044ec01-3203-4072-950a-3baf20523c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8f8062-143c-4b7d-b125-f13f437fc9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb9d448-95a0-4117-98b7-ab9a2a8fce9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0d5e5e-679c-4b61-92af-0880d99ddb0b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd12278-983e-4996-86af-afa80272aa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782ed13c-0956-4699-99c1-ac09d1a8a073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe410d29-42f8-42bc-a1d1-ac02b5d551e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae32c596-2491-4ac5-abf9-395d74ea3f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00eddd73-df1b-4824-b52f-fc9c0438e255",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc20aac7-e962-4700-8bc2-1f45f039102f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6d8ee9-b7a4-42e4-89df-55c9941c0707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b392ed9e-d39f-4089-8001-2813ccdbbad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0224fb-6513-4af5-96a6-5b7180379bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a54835b-6c05-4a68-a811-b93eb44952f6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d99178f-29b8-4d19-a434-8111b2c08b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082a8d74-9e78-42d1-bc80-dea3346d5e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f22c4ed-c99b-44b8-8e5c-f1775ffc6d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90a6f5b8-2b7c-4194-85fe-4a8ab8eb59fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58df8979-cb14-44ee-999b-257bde23d004",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cab4f2-6810-4ead-a2a7-7332a4660788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a57e9d5-a860-4fea-b7f6-4ecf0201b4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e695b073-9e4c-4c6e-8fb0-c10d4916f0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7008fca7-a797-4c85-9de8-c1cd7aef63d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97c0182-c634-4e65-8c29-0c0e70238a4b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bb4a13-856b-4c40-80fb-e06251152a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3888183-b6d7-4ba6-8003-cc873839dbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d42fa11-f886-4c8c-904d-f3110a7aa71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "799d1726-3fd1-41a4-b97a-4e0c1660e6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919949b6-561e-4507-a999-38459298ec0a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45469a61-dd43-450f-b801-7055aead8431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd3cb14-0712-4a2f-98e4-9ece5bcb7fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1537b172-d6a3-44e1-b850-27e0ace34302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66b5fab1-6aa1-43e7-8768-281aeb2f4c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97117046-574a-440d-8760-eb0280f414c2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf991936-ca69-4486-8745-e366f5805824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aceaef54-4bb6-4313-a55e-ed4c9597d211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcb748b-21b3-4add-a6d3-b57c3536ef2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5d7ab7-ad12-4b6a-8f01-ec9cf5ea681d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44319c9-d300-4ef3-b0a8-d09c4a17f0fd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9415e77b-dd26-4a6d-ba9e-7d1ef323e17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882028d5-52eb-4b93-8848-4eabdaf7c2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8200f3-4e06-48e9-8f0d-51993d186210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea11a58-72d2-4477-b9e4-ea16af19fa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bafc0f0-078a-4541-9039-44351a7b4c5c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f78bb73-be5c-4466-8ffb-67fb5f4724eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1568576b-5c47-4d95-a9e1-eb2e2b9c86cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cb815c-0638-4198-a1ac-534db5c8c184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca889958-9197-44f9-977c-41ba271c7795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef17fcf-0085-4ada-9085-d649d261318a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c33f07e-500c-4c77-af4e-cc1445d86252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff36f08-a1d2-4e77-ad8d-43d51b07bce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38459fe4-ffbf-4907-a003-b5cbabbda7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "354d4860-2e3f-4933-bbd5-4504880a3461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12034c5-c07b-478a-b0b8-bd53041862bb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a3f74e-171d-4c89-82d9-442b3e49a808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78622665-1fdc-40b3-963c-b34ee33bc970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40186d5-9266-422d-898f-7894f0da86cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "780d8cb2-541f-4a75-af7a-c5ec3a2e870e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac0475f-0086-47b2-bbaa-5e7b56dcc9fd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b9d81d-62b4-4f9c-82ea-481110291050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea8fea1-6e8a-4e5c-bfed-661b4558257f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6073120d-6809-4dff-a9bf-62307f686b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7f5682-87c5-4d95-8e99-179f57d0ae92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779a548b-0d73-4a30-a022-426128502a74",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ef6d5a-5c60-4305-a328-35933afe003a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd2c1dc-9127-4116-bc6c-23b9c374a694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434ba3c1-41c8-446d-9eec-c8e5ab6e4909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "27cd30e9-b871-4a13-a259-5e4b32b799b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4317e6-e3da-45ad-8d21-f36aded72b66",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58adef3a-20be-4476-936c-a517fe59a360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51559eeb-cd9f-4e58-990d-939c39a710ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2132d5d7-0bed-4211-b80b-a45535eac52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "94fa11e9-eb81-47d0-9d94-3808e97fba87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a255727-bdac-4c87-85c8-7b055f955261",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6917f78-8bb6-4982-bda0-71841b97e953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5e0177-b01b-4278-8003-f233d840aa20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f58569e-966a-47ee-b7a1-85c9b8f54406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb84c9ec-f154-42f6-97b3-554704e71d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf0fc07-249a-45b8-b291-9d2a393601af",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384a18f0-baae-4cb4-8e13-22230651def8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cc3899-a2a3-4198-839e-2979c513b002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f60c45b-3907-4e24-a65b-a14df71450cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3709c794-6a40-4e8f-be30-103f63976954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5894acb-cb58-4ba2-bb43-dedadad5a384",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d753eb-0b95-44e3-b47c-47336b1d076e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f7e82c-f986-499b-acd1-8830b2b614fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e27e73-4e07-4d20-beeb-956ac10f3b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "af460fa3-ec23-4fcc-80e4-ba29ea9008af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdfb3c9-b29c-44e7-9062-f4c78aa16a9b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2d24fe-1397-4bc3-b880-30b8d78c20cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "28fe470d-2722-4380-aa53-c8f9163fd21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3825c037-7a42-489e-982b-c94b7cb48881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c63c4875-c7ab-4586-a933-598ba06f6a74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a5df672-88d1-4197-9b63-4f577a7a8f7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38230416-be7d-49e7-9cad-58c6c070bf4c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67da810f-e88d-4910-b33d-0022b4630b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efe33eba-1257-43de-8d46-1e361701d88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c85377d-a2dd-4f90-a545-bf8c4a4782ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c320d039-aa27-4f27-949d-9208e204e21a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f39ad31c-bad4-4e0a-97a0-b2b70602e47c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c4897ae-e8aa-4a6b-9e24-e1675e9c1f51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1121038d-0ea5-4cd6-b0ee-b4e66c9abb7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43decf84-59f5-48c5-9f79-4a3a6fa42649"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1886718f-3714-4448-876e-e19dc35f5a9a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8acc157a-b231-4cf7-af75-1408a5df7572"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "73a9aea1-f6dd-4391-8d55-6376b3e84da5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38a11907-7558-49de-9151-54b037610449"
                }
              }
            ]
          },
          {
            "id": "38e27180-dd41-4cd2-bc4c-58e7c02d42ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "98069002-8ca4-4a9f-b28e-525ef7c18652",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0700794-2bb2-4345-a2d7-3deb80cca1d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9919b828-6cfd-44ea-a74e-efb8ba2927f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35f67cf3-d01f-439d-9bd4-7cba87d0c11f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e5d1d101-b795-4e8d-952e-57ac793e17ef"
                    }
                  }
                ]
              },
              {
                "id": "6bb71301-0d38-45fe-b68a-360e75cc1abf",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c2fef47-546d-412e-b4d4-94e26a58b12e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be622515-f856-4b30-a40e-bfb758de750c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ed84fd8-73fe-41b5-9d3b-98e43e1cf623",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf078b2b-50fa-428f-b1c2-ef84d35bcaa1"
                    }
                  }
                ]
              },
              {
                "id": "469c61bf-2db4-4830-9456-d99f3d391f1a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f277f86-1d6e-4a54-b37d-2fe3a85b1246",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81ddfa5a-206a-4564-8316-4096e8a31939"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7625e9c-7f48-467a-905d-d0e7308985bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ac2a5c0c-c6d3-4f2c-99a0-5113927f6863"
                    }
                  }
                ]
              },
              {
                "id": "c4219910-59dd-447b-aaae-c42b07bb96dc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33a65638-e47f-4abc-91fb-b0ba21094de4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df7dac38-d894-4a9f-a146-88a519440b30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6206ed69-a191-4785-abab-5063fe145795",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d3a31d68-e3f9-40f5-ac81-2c8591ddf219"
                    }
                  }
                ]
              },
              {
                "id": "8186adfe-76b6-4345-b517-bc0dd4630ba3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2e36396-ed4b-4f16-8d5c-7d33ce3c5cbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae783ed8-1b85-4462-b680-4f318b814754"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a455f26-4289-48bc-8a89-69064ed74662",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4bbb2b7a-c54d-432c-87da-611975cc6658"
                    }
                  }
                ]
              },
              {
                "id": "ff38f770-1ec8-41c2-96bf-b9906e99e8b5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "431858be-e746-457e-863f-4f4b5a4bcf7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ff90da4-c5c3-4cf1-8061-2cf9fd553c4f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b2bfd1e-1230-4966-9af2-2ce903dbd36b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91a905b0-d259-4357-8c3d-b544c1120514"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cd884cc-14fd-4a01-8440-17ce480afa5e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f545c631-e77b-45b6-a43c-c2499872bd8b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f0b31ecf-7b2b-43c5-a380-d1f3c06ed5ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59da6a5a-7e86-48cb-b207-4a4fc1f0fffe"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d7b2a11-09e1-44e6-b402-87153cf72c18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7decc2a5-3761-4a3b-96f2-7addd92da28b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f4b0fb3-1bf2-4205-92e9-84cb0a0e20d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d2b51cb-204b-4b19-92a0-9f29971bdf91"
            }
          }
        ]
      },
      {
        "id": "42e068b8-71e4-45fb-ba1e-8d25765c7dc0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "84e89d8b-ed07-4140-9dad-da349115c885",
            "name": "Negative Testing",
            "item": [
              {
                "id": "522014ae-7b86-4e7b-a234-93856b7fe224",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cd02d56e-3cb1-4502-bab1-48429173611d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b42557c-ca8a-46d8-b0bd-3d412e092579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4251cf29-e6ad-4321-a828-00ce485d4e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d59638-3e09-4f2f-acc8-c7e8a69fc540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f79c6c60-a812-465f-a334-9f8dbcd97a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e56ce23-9917-4791-97ef-641728ecc82d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e73054-4b7e-4b97-b1bb-1ea80a51ab26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e139cc-f56d-4f3d-aeb8-4e3916a10179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05470498-1df1-4fe3-b515-288852b74d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da24a3c-3012-44b4-8786-9d4c7e90aee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1424941-3f3f-41fa-9215-1fd61573da0d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd0c6a7-dbd5-4df4-a856-2776d8290845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0aa946d-c466-4015-acd5-1eb974571af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ce5366-d690-474e-9290-fa17b6d02309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1b865c-74a6-4273-9a4b-64723ef51692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5291fa57-f2a3-48a6-a53c-5a7af33b686d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c726f7c9-0306-4e66-9f8e-5f099b87afcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1800b4-b553-4659-915b-1d66362e6b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badc875e-96ec-435b-ac84-0fc14d325a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58827dbe-4d28-47fa-aa78-1d8fa6f8f2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696be766-3fb3-4c3a-bfa7-76f9739ea35b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99fa8b5-40a5-4efe-9204-5efce8f42be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5629464d-3240-44cb-b5d2-3157f5ba6a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93968e2a-5271-40c4-8977-c851bdd06cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a97b180-49c9-42d7-a739-443c03b2ec0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2ad878-44ba-4039-ba75-2da8a9a07515",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5814cb6-1f83-4a7c-8619-20b72aded2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b3e1a8-e30d-46bd-92ce-bd1ade03967e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b4102b-84a5-4e7c-aa93-22f6225ff747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2461b1c8-1dfe-4584-bbe3-66f5daaadb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e722ddf-470d-487b-9b98-1775a4066cb6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324aee4c-188d-4ba3-b9e6-d6aa067882e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08347699-3812-452d-8b29-867f48f2e2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf14ec3-b7c4-466e-8c0b-7a9f2dc4ddc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ea0703-9c89-43d2-832e-da4535dbb43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696ae078-0456-40f7-b25a-4eb8ae4c17de",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164bfca4-d3df-464e-b956-02312b9454d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4062b5a-2bff-4b31-a33c-dac0f731c002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b240c480-26c4-4bcc-ae1a-8311f087b7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc3b4d4-ef26-4499-a7cc-857b02c41d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53431835-36cd-431f-b6e6-e724a30e1a86",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ae04ad-04b5-4c9e-b7fe-832e1729811b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135ffe95-e2d2-4a46-9197-1ca49e5553b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b80863-37b3-4063-b105-4f1efa5ff7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "575893fb-93f4-4a2a-833d-7b24f5f22c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7dedad-637b-451b-91d0-37539b4ce32e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62f6baf-ae59-40af-ba99-a5e23886a43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f745a1c-eca6-429f-96fc-73e043bc06f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed97a2a6-1705-4e4c-8816-9fe3ecf80848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f283d7-4a1a-40b4-a787-96a3a5becb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf062db5-7d6c-4c7e-9803-564ce761fdb2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05210850-699b-4ba5-9c80-f92955d73eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7316f2b9-eecb-4ec2-bd6e-90f8c3f19f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b052504-473e-447b-89c5-89ba56cf8361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7b61a0-5186-4d8c-bcf1-cb22c31a32dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739dc94c-cbaa-4310-89c4-839f7800d1fd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cb3630-1e11-4183-8e40-0e759654348b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf22741-1579-4e31-9bc2-3856262ca701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab50b2b-092f-4a50-8927-55784735b561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5043e9ec-c049-4a18-a63c-f9264f310835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60f377f-39cb-4011-89bf-20caff50626f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44255002-2052-45f3-9a92-9b73cfd6c46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3948328b-fa4d-427c-beb8-b9355e9d06cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83dbd0d-dd63-4d83-b872-24356c5b9917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6950aadc-ef0d-4b8b-8012-1ec21ff07ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d18e8a-861a-4e37-b21a-249c671905fb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e237a94-5ecc-433b-9368-637d62ab885d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bba3e6e-a160-46e2-975a-845e8ee995c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385a22fc-879d-44cd-b11b-45f12050b97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "82589b70-26fc-4e73-bb23-2fa7d419764c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6618da4-278c-42b7-88cf-bfdccf75c3c7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a14c41-bfb7-485a-aef2-d46f0c65ac8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64630e69-3aa0-4ef8-ac30-bcee615da452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40ae1d8-ecec-43a2-811b-a581f6294bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f028ad6-0801-4644-92d4-acf9ee67c09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9211f4-7d86-4c46-a134-c914c9137280",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c667f71-fea5-4073-8973-0602e324ab85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd5a2cf-f53d-4fc2-af52-5cda61830631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fde58a-e918-40a5-8923-89e82c17300b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2446070c-5141-4132-a188-1f15248fe5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7490b8-487e-4061-844e-86521ac004cc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335847b2-ae28-48dc-ab78-4b97bd41af58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d4e119-23c3-4cc3-a254-9c5d89cb8955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4418df13-f671-482b-b201-3128b007d13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b482cf7d-58aa-48b4-9ea1-698adb61d5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc688dd2-0654-4e3d-9695-c1220b9c5d54",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1c6432-872b-47e7-949c-a5947af35385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e65808-107a-4b12-b26a-a557731c9879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a53d51-565e-4d6e-8af9-3b528d69ad62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67ad88d2-7369-4e40-b25a-316ed29623d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543a4846-87d9-41f8-9898-848cb3e4f0e3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f34821d-daef-4f98-9dfb-d01415502d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd61e1b-9a99-44ce-bc2c-36ec4a25ebdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446e0571-298a-4417-920b-41540ae14ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9347df2b-a699-4b68-b503-ede631c1ffe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390ff213-f949-49c0-9fb4-dc3ba85475d0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc07323-d50d-418b-85f0-40f65445e42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bec74a-b0c4-4166-9dad-186b2543dc3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b364b4-7907-4bbd-8945-cbdad549b9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4508ad4f-7577-4ebe-8d1e-c9d5881ad391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c498c4f-f9be-48aa-9374-dc53abe7e5b9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dada36-cdef-46a8-9ee7-d618505437c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d599602e-8420-47a9-9b9a-5fbfc3f948d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c511d09-7871-4b0c-9125-a8b2a928ccfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70e2cec3-100a-4b71-959b-c95d6f0edcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e3936d-4168-4b53-9be2-1a4a4c679f47",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf970ff-667b-461b-b378-327b613fec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadb87f1-e7bd-4703-9f47-c30e2e1fef9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9d13ac-8c85-46bf-9e36-4de7f04d5ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a84db302-b3d6-44e3-8116-ab83b9947d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b7fbbf-bf97-49a5-9f3b-cd2939533a4c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5823e1c-dc1b-4d07-8a8f-2ff53534d261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771a1143-e5d0-44ec-aa17-6b74bd1f01b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3803032e-0af2-44bc-9e6b-96443af62133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc0d360-4671-44d9-8115-93a7f3494ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d94a717-4d1b-451c-aaaf-3de5734c4d21",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e396009-6da0-41d8-8c95-45aa1c562a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83dfe821-1584-420e-a4f6-096ec29eade8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22f2be3-66d2-4884-9bf0-12d15cb9c979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8ec966-12e8-48ff-af2b-9a7b45b75f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b8699d-a213-46b3-8945-a1a10fb7107f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c1b9ff-e9f1-491f-b552-5d5b2a6e632c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73dc8668-9f05-4ec3-8f70-43429470607d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3ace94-adff-4330-9626-e9f32a9b8d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b79053f3-5aa7-40eb-94ac-e81e40f7d5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27d59a1-9f4e-49cc-8119-aa17e8ace507",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955c59a0-84d6-454f-964b-31da10223aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f1ed20-b62d-4695-8252-a43ba75d70a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffac7c6e-20c5-4b04-ba28-c0278da9fbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "890d50b8-6f50-4a6e-9ca1-ee96e8a74bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25547946-b05d-45ca-86a8-c1f6dd7e61cb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bc6e4b-78bc-45ac-9162-d53d60097215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dccc622-5f70-4e32-a807-24d6be4fa47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3d5f06-3532-48d3-bb80-b0a16d0d4096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "978161b3-f094-47a7-a62a-bc70a4a983bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7b4ac1-5a7b-4ada-83b2-4d93477c8a9e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6aeb4c-c75b-4497-adc8-3b4de9228e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9a00be-7861-4e5e-a49d-1fde2e89dfaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139e0dd6-4462-4c80-b303-1e426f791ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f409bd3-8793-4cff-81c4-62a54b73ecf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e012aa8-3250-4ef0-a25c-4792abbdeb78",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17eb8d98-fbbd-4652-8fb7-71926d28ca7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def3b8d3-7d22-4ffb-be43-21753625f818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca387e8-518b-4820-a8e8-7f1ae3399169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c240a9-cbb1-4ba5-a887-4f35780ebd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc83868-46eb-48a0-8599-a6c7d2de463d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c907e2ee-e2a8-4e6d-998a-90de910bda9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01db035e-71a1-44b4-ad2b-aa34c49a826a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653f5d85-afdd-42f1-99f1-e0d27c79ccab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61cfc9de-380d-4a3e-a30b-d920f4aedbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f23c5e-696a-429b-9b13-84c467add0c8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5557d1da-652e-4a1f-8efc-6ddf837639d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cce4af0-ac4d-4056-8df8-d6c9e589a512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f1fcc5-f57c-43b9-b885-46e6fe093fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99f7a422-fb09-4e27-978f-516c382ee2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8801cb6e-1339-4ce0-9da8-7216939b437f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf453b1-b511-4834-86b9-5180c6dd7551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7b6623-291e-40a3-8e18-685062852ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45713ee0-cd6f-4c01-b98e-5dbc8a7a332c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "146cf6a8-f0f8-4f6a-9ad3-503e161354c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a34addb-6fdc-41da-8f76-e23e659ac495",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9bff919-a81b-4a24-b8bd-2730f585160e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdcc79f-387b-44ba-94f0-8b68e84a5cf1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a26d93cb-b0e0-4c75-b0e1-3f7ce1627f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1e8d28-071b-4b16-b7f2-791c3f85e1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "578baa8e-5cd7-4330-8803-1f335ed379ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2141dc7-c74e-4f38-aee8-a32cfd659a82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62e2ce77-dbf1-4d52-ba4f-180d69bf206a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31fb66aa-eb6c-4bbe-9275-a14ed259f735",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "290c0d41-fd74-4748-9009-28bfc80a359f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eed5dd4f-9678-49e7-ab41-fe32d0991752",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "34274db8-f5d0-48ac-a0e3-fe21587a083d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96963a05-ea06-4ae5-b989-cf9b70f3b5ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5a05abe-486d-467a-9a0b-f2220f5ba1be"
            }
          }
        ]
      },
      {
        "id": "32bec154-ac8b-47cb-ba4b-2a394373fbde",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "448542c6-a14c-422e-93b0-ba30193bae0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34f44d0b-4fb2-4afc-841e-5dd30ece5f1a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fcd2294d-f2ae-4ccb-9594-d69c53eb8016",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efed1a5a-4692-4589-b7bb-962fb455094a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ce6b91-1e44-4051-a5e2-7525ab6a79d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f74ff0a-1802-49d2-b182-515bf25bb405",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103fd125-0f0b-4d28-931b-d54a79b222f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f3c6fc-651f-4cd5-9795-5f65872eeaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8b0e6d-a545-4938-aeb9-41d3e27b6b40",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b650fc75-d3dc-4c7d-80cb-4202e266a27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3c5a40-00f6-473e-99db-6684bbece7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf6e3f9-19f9-443e-a539-36072699bc6c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06204432-2547-4cce-849c-66353c8929ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1448c179-2d46-4372-ac1d-ea819d712c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc27022-c4df-4465-a25b-be862021b424",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7486be-5428-4b69-b428-7f4f79193f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8feb0e-9d9f-4bf3-b476-aa4ed5c88d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17db746e-891b-440c-aea6-fd686cd724c2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ac1b7b-8116-4081-80ca-3c09dfa4c264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cacfa7-5049-4c23-a634-19804dfe98fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91589489-4039-44d1-844f-f7ead133c03a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978dfe01-0b75-4861-ad40-4641fed5c1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19429caf-3de5-43c3-8957-1851a6dd1836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c773beae-4d57-4ee7-a14d-c1bcb69a9e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d674d7-acad-4a38-82c4-97563d7c89e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d27d66-2bc7-4b1e-9f79-ecbdf0c25a70",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69b16cf-9ce1-4b95-adb9-4ee8e185e688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ece5111-0638-4b20-b792-f7b200349180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e6a42e-788a-489e-b738-92cf4bf51299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c5ca0f-11dd-48b4-ab69-f67ba97e45ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615bf24a-c755-4076-9ac0-04ff85a0849c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bb1288-712b-4341-af12-c7950de589cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "674e4793-4eeb-40de-9d12-ea09f6982197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdbfc7a-0af0-4dc3-9fc7-2cee977da06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfd74ae-4fbe-495d-89f8-1ab53326d15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5675293a-056f-4954-b30a-4dc07af8ce60",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edd2fe5-f5c4-4bb9-b5bf-54d9cec038db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0face1c-537d-4a0c-993c-9d80c89d6089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673c562c-c692-425b-8a5a-eacb0b2a3411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4107a4cb-157d-4c84-bf0d-b81f199af0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a67c88-2083-4859-8631-f16599c2f8c6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0fcfa2-dbb3-4082-963d-96065850b6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9eefc6-8b3f-4a30-8d2f-fdae0a43cc3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1409ba2e-4e78-4d36-99a3-89573c6caf73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e986a2c3-8bac-4aac-873d-f5a367a92f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49e466a-daa5-4adc-911a-9a5ded7a1578",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14df7ded-2ba1-4269-b9be-0942a4707fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c29396d-f9e9-4402-9ea4-66ed357e51d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dff6d75-4be2-4c46-baa0-d5d0aa0dc5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de207828-5d01-43ba-8d65-f78f82520578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1b65ea-9a24-4285-be22-871174ea2f8c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb59c767-e9da-4b6e-a1bc-3efe54371b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92014192-fc67-466f-8159-fdb0df121ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f868da-2da4-46e0-854d-1742d29a1834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4836e9d2-763a-4390-9fe0-1925a833c7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57923ac-63cf-4039-a4b2-29d887607711",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c1ca0d-eac7-4007-adeb-e825fdd61078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce191686-568c-4a64-a464-62f4859c1477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b70fc2b-aa85-4c07-b9aa-4bb00d02c0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f6c8ed-af91-4a17-9d3e-e4e0e948b5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9e0de9-d34b-4aaa-b5b8-483a31bc3190",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038611f7-f022-4f58-bd61-3cfcfd784a44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a27645f-f484-4773-b4c4-94db02ed547c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d467b77b-da74-4374-98ce-5591b07eea03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0a7887-9f0e-4bd9-a4bb-b5b8da6330a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60b59b5-e1a3-4b00-a11c-ce321ccb73ad",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499b418a-3ec0-4a61-8d94-b649a95e2ed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3f3641-b46b-45a9-94a3-74a1178de4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67d42f7-4c96-46a9-be22-76e2ee0a6855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f14e98-af88-466b-9230-f60130fa15ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f7f2c6-5bc1-4591-b2b2-f01a27b301d1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b2037a-d8c1-4535-9645-b9c47ca4bc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c3d8ca-1bc2-4dab-b0d0-1af8cedf038f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fcc95c-2e0a-4915-acbc-4e458b78e480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8794277f-f8f8-4833-a440-71c639d2cd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09739005-d270-427e-9217-a0878963f21c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fc6033-f767-42bd-a75a-a0686eeefb61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170f0c0e-01b8-4fc7-8353-4b219b82b221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67bd045-c177-4015-a3bf-481c407fc100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47b0a41-c367-43ca-97e1-d8035f3ecdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153963ed-d981-4738-876b-b4127436f53f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa324b8d-d75d-4a85-b7a1-c367623166ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564b02d1-decc-4b6c-a15c-20a308f3e2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f64c80-e2d0-4e8c-a777-1361ffcb0b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a00ab81-a1d3-46b4-afcc-85c20b1e9fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48514cb-279a-4de2-b336-d63316a9603c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c90b8b-265f-45c5-a81b-7bee227074d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612b207b-e0c2-44a1-ac56-0390a3c5118c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7dca7b-3746-4fe9-ab35-eda4ddfd2e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52834561-d823-4884-a2c2-936f92dd37a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba88ebe-8471-4505-8661-ad629a97614b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f51c5e-2765-4738-9e19-f75001a3de12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6a6b1d-5257-4772-bc81-b1c60b0a9645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db2e6c1-3c29-4140-982a-cf7fd6589a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2ddf0f-b8af-4216-b8a0-c4019323f5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09159a25-c4a4-4086-897a-b4ecc0b6f021",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e78d7b-ea4b-468b-b72f-0c46a52939b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6f53dd-b122-43de-9ca8-4e2e691b57fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fd8f90-0a90-434c-80f8-4770dc7b6335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c1a8e3-a214-4d28-821c-39d20b830515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e3817a-b2ef-4c36-80a1-e8612ca0036d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ad7c38-065f-4711-a5d1-e63deaa9b9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da12897b-8c70-405e-ba0d-90fd1c2a907a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728cedb0-5ea6-48d1-bf9b-d5faf1784973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cee3b2-6356-4132-b51d-659d694248e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3309e1cf-417f-4ff3-8b14-9eede21cff96",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ce6028-45b2-4c33-81c5-df7b5f3d9027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac23da7-39d9-4ebb-8bb4-de7ee33770a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2d96af-615e-49d2-b0e3-9f83a7ddc638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b693f8-8f10-4cd9-a3f0-e5ca93d27e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30b6fc1-5f65-4b1b-8630-9f77b2f7d638",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debe180d-867d-4232-983b-6678b144d9b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa72ff34-38b5-4c46-a4d9-1613150cc41b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d723155-78fa-467f-ac86-911afbe1180e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7b82c9-ce03-4bc1-8e63-c4aaa642dbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545306c2-539c-45d9-94b0-4d8becdb4703",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf2e13c-035e-465c-9e31-e7d97c695373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46c5f268-6301-49ba-ab08-67eb1f991fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efecb167-db5d-4155-af9f-48663f56ac46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96ca757-e8d6-44b4-a773-66af673829a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02cbe80-ee10-4e2e-af91-0f906bdd5a06",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ab46a8-63e5-490a-97fb-b0549fe1b511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0e250f0-4908-43dd-9b35-90244ce7fdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94350b6f-f10c-4142-962a-676cbe22bf20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d89ec0-5254-4355-8e20-b712200273ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e15ebbb-ee73-4ea5-905b-a9cc7e96a501",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d610504-765d-4a86-a6f6-6bbdc59ed298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcadcaca-b4f1-415c-b26b-4bcddfc21c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301bf208-7c9c-46a9-ba22-bca5acbb562d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffddb68-b303-4f65-91eb-fd8e09dc973a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4e8afa-5440-447b-94f2-622c956c5886",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743c16bd-2c64-4149-b9f4-6495d0fcaf73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1797e733-b251-46d8-a31d-6ed3909829af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ac838d-95ff-4c4b-887c-7d925dbaf6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6444b87-73ae-4841-929c-c11a183d4500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9878fc5-a94b-4cb6-a779-52a3675b58ad",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca907e2c-94b1-4d40-b6c9-ad35045c60fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d96f80e9-8600-4ada-b14b-a46180e9997b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d1e8d4-e072-4a1d-a9b9-1a139d334fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f677c8c-89e9-4ea3-8232-0e3b3b3e2e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c401c988-aa28-4a6e-93bc-12166cf9e269",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534e3a08-10fe-4579-9f2c-08b8b84cafd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e40a63-dc15-4ad7-ba0b-d79095a23503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4c46cd-9aba-41c4-a68f-173c4e20c30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eefa4823-5f91-4911-b52a-4e28fdcfa211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10881d6d-e89f-4ce8-9680-3f78e01dbbe3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a13f801-b46b-4b2a-9e93-051dbdfab7ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ba56252-0ed4-423e-aa85-34c4895e29ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9b7051-0e4a-454b-be79-38d1bde1e77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac81e3f9-41ca-4d0b-be1f-9d789dab2181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbc8505-4771-480d-b628-eb97798c908f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82cd863-115e-4202-a70e-b9dc7d7cdb75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8215e3b-ba0c-4d27-9114-05c6b8afc844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc48aba-cadf-46c2-be07-2494ae0b28b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05731477-8a36-443b-9cef-326636fe08b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbd62f4-a2f6-4c92-bcc7-22abf4f10b79",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fe1fe0-eef8-41a4-9d06-5cf9cf71a87c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba87b86-e175-47ba-902c-9a69d6fecba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296ed10a-700c-4ebf-8c8a-a856e557bb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc93600-b1dd-4fd8-9479-6bde3ae9bb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d992aff1-f58c-47a1-8cea-9f4ddc9d9644",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae64a95-b857-4611-a597-d4822ced5eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25cc66f1-901a-41bc-8435-6147b71334dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffe361d-9e0c-4046-8159-41db3091d69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fa4d1f-2e43-4ba4-9780-e3c00802caef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57bcd42-69ea-4e9a-a775-658a41b89e49",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11ad8e1-1517-43b9-afb5-02a6821b5613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381f5b51-4ad4-4f17-9939-bd06dedb8a7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b1c979-4c9d-42f1-a49d-8b9ea5859a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a74945-02ea-4656-afc7-7b6e10745118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af996800-5ed5-45df-acca-f353bb2f1339",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f139336f-ba29-47ad-99eb-9143795b96d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc197191-c9b4-4ed3-b64d-01d8fb51da6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2b08e8-975b-443c-8320-2d7adf21ae86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bf2c6a-70f8-4326-b856-fe3e36c6852d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f4775b-6715-4ace-a011-8ea066f4dbc9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799303c1-3cfd-4473-a426-7b5c72a6707b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167ad2ca-dd4a-4fd3-bee7-173daa809d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a38003-ac18-486f-8ae5-80dbf43670c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e19bca1-d3a2-4e3a-85ef-6d547541850a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d524700-f9b6-4059-a37a-7edca1700ab6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7978975-0871-4dca-8f8d-526168639425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15666247-4875-48e6-9d4f-06cebacc3c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44775fb7-fa2d-4cb7-b95f-dfadecc308d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a43494e-0c3c-47be-bc96-3abc0979b61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52904494-6cfe-40d9-a949-2d9c860a5495",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0152429-9232-4851-b119-c3ec3d832a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ee1f93-0956-47c5-abe4-3230e5e4e367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54225fa5-7695-434f-bbf2-fdf9948921c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5a7481-5840-4f6d-a659-46f396e02a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9035112a-6bb5-4b16-b0b6-9ea3e9c4b826",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4d83a5-50ff-4d74-8620-ef4fcb2df114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577c5ea6-5ebf-477e-b0bd-a699f56e28c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310dbe80-3e42-4759-afda-76ec2de9deea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269c3693-03c5-462d-9ff6-98998b4a3b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ce7ebb-c753-472f-a957-38610cba2bc8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab6c201-689f-4564-9a1c-e8475e808e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5addbebc-a50e-41f7-ba8d-65843cdc8b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3eceb6-d2ab-4c4d-8326-8ad26d78af8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a793726-9231-4871-8386-cac8b28022e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a487853-8983-4b93-a8d1-77500cf034a8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67756ffc-fe3c-4c15-8c6d-ea6db3dd2adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370324d1-ba3f-45cc-afa0-47b21915a126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d03a8ec-9f8d-4d09-96fa-1281418ea9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7944600d-32d4-4c62-8c20-ee79e8b75ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419423aa-cacf-4849-af28-dff32411920c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304d77bf-41ce-4e33-a6bc-bd4d1808a9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7fc708-4b98-4195-ad37-c06dd583c11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec13b273-0ab1-428c-9166-0a76b704d40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163cc107-2a37-419b-977e-682ca1d917f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa02ee4-ac72-483c-a6cb-92fafcc1f2fd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1fecdb-d00a-40f2-acac-217f755ca67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770c53a9-0792-4efd-a6cc-634f00d34983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddb9d3e-ac92-4a12-979c-b5c56b4c6780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77227fb3-467e-47ee-a3ca-75d2b40df5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdbb47e-f4a1-4266-b919-8f4892c7897d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc2b450-5533-442d-a1a5-8a0c0640b303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67d0436-fd93-41cd-87f7-c7939e802eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584c78c8-99a4-437e-9847-dca14347963e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39173ce3-f0a2-4614-a24b-9915592e5dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5956c79-394d-4bd5-bd1f-207323067cd6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7de41f-1a0c-401a-93be-b18a6c052a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f1dbcb-51cd-400e-86ae-6c0169be8283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1e4f39-d5a5-4aaa-8595-055b40f1e857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ec9425-cf32-4576-8698-7d9dc8e08eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd4d91b-cb07-466b-8b07-4b2c07cdd75f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1851e9c-6b92-4c56-a8ce-37210b1caa6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c1e575-49d5-49b5-af7e-5e5cc8b65ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8f6feb-949d-4a21-bdc5-5f01b3966afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4665624-466a-47de-ab6a-a449de66d9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a92feb-f5da-456e-b872-677547eb9f24",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e259d402-60df-4b96-b668-0674516fccd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950aba2b-e488-40e1-b21f-559d99434fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83de09c4-8385-4354-9bc5-011db0e694fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce69b39e-5aec-402c-9867-b0ad5ac09c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdefa349-586e-4a29-85b4-517f0d7bf557",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d844b7c8-244c-46b7-8ae6-70b5bbea4ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca276936-0a8c-48d9-b39a-189953cc4f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fa0e14-b8b0-47df-8834-9c9957087bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73b8e99-bb49-47d1-b54c-79991d5eb340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afeaa74-8748-4666-b57d-abeee95727c4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f49da97-55c2-445b-8750-2ffcf8748e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98044b59-94de-4dd1-bb36-1c83c2f8efcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580937ad-09fd-4523-901d-cc9d76ae38e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292e2a44-fea2-4dbd-b8ef-cb3d02ec3dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e866c53-73b3-4b3c-8aba-e9d6c55de0ab",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed60c218-e810-48cd-93b6-eaa10ff97b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629f0098-cf66-4c88-9390-3120f2e7893d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd6aa77-3756-4202-9618-ef5aebffcba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2ddd12-1b41-4f93-be41-130cdb74032d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfd330f-2edc-401e-939b-578876f0bfd4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb09f872-edaa-465e-9420-77235ad7beaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5c2be3-0021-499c-a226-65712c26be62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f8dafb-0f43-405c-9d0f-bbff789b651a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c68bd3-ac77-472e-8471-15195c7418f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6038030d-1fe7-4015-9ac5-5a5b7bfcc03b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd99e81-6005-461d-9233-8e00a2ca6974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a8ecd9-fd13-4149-a5f0-7baf560bf3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8783ae2f-a695-4275-887d-b7ba0f175969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b474a865-f847-4451-b994-805f984843bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a93a54-5cf0-4991-86cd-71fc1ebab282",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9e527e-5f44-4bde-ae1e-901d49e84494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94d71ca-3051-4642-8df9-bb57118ac4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b602b4-4867-4135-8f5c-7e9483d26533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e2e38c-fdec-40af-b8a4-185e8d122507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d0bd2c-715c-4f1b-bbf2-5e716d7a1413",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77054aa-a566-4735-a039-f09a31afeca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1152703-85a7-4e06-a635-9657c621c796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0559094e-dceb-49f9-8a6b-6d2102d1dee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168cb844-93bc-4405-9c03-273d2630482c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3233a071-033c-471c-9801-de13105023f7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2b5b35-aa09-47f7-b967-7fff9a20e610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0816d1-d52b-48e0-b05f-d026c6eff4f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf28d5b-a853-4395-abb7-45fc18ae60ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2664313f-567e-42df-a3e7-036157637b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4576f321-2801-427a-95f0-a06a0a5019de",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14dd86f1-f81d-41e1-80f5-b3c6746f33e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9265c1f4-5f8f-4149-a934-f3eac476e51f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1eea88d-a4a0-43cf-accc-170a01b003c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adff5237-61c0-4f26-a8a0-62c0e46f41a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0f6225-4127-4f6f-b19f-a33f25a00d80",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd53c559-a439-4649-935b-141bbfd16eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f02c75-72b3-459e-b282-4297378286f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907d882e-dc69-4dec-8cf9-4fc60291387c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3414ac97-f98d-4867-a278-e1adf7daa504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9c5f1a-96bf-4997-8fc6-8cddad34b697",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d0238d-3a6d-41b6-b54f-1933155aca57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0239c92-8b04-4054-9a08-e0cac076d9ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d81ce4-396d-4e98-b199-8744671262b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad60fc62-f590-4382-b3ad-20379922d13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2debb718-a984-4fb3-8eea-b1b68b9eee90",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46de407f-54d4-4770-8e98-81169110f036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3833eff4-059e-4d0f-9e5b-c4a9a3f445db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde060a1-a466-4218-ae41-987199691162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9360e2-ad80-495a-8c92-fc13d66a3d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b379cd2-fed1-4d6f-8ffe-96cc4d5af91d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8fc017-e761-46e0-a579-f3861660f479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6531f9f-34d2-44aa-becd-cc9089ee1987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d631068-e205-4a18-9575-3915938d5a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030c853a-4555-4b66-b972-1e1769755ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147771d8-a8ce-42aa-9b60-5dcfb89cf56e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6ca2fb-0090-42a0-a9d7-5496ab760ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a57191-0f28-457f-893e-097e96a18a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0ad925-2959-4f86-a848-45dfeb13374a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243b64e6-f779-4d0e-a9fe-278e49debf98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b56b60-e290-424a-9f29-d484282ddae6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c497931f-57d6-43ee-aaef-123ed21ee6db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd342141-d21c-46ae-bda1-46506267c14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da64a3a3-a969-4a1d-8d1f-55983211f029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae680558-6bed-4444-91ca-24c0e7c85af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b43b64-06b5-4264-a2c4-cac9b8882f61",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cdf72b-a3e5-47ef-a52f-bad8d5009f5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b895ca3b-f679-402b-bb9e-da8a9ebf8e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b8d73a-3339-4744-8f75-0040c996123d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a6c4f9-9d57-4431-a52b-7ec3170bbdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc346769-b611-4896-8f08-2e4bdde62e19",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf49c899-a420-4b5f-8d2f-540a3a550f9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6e3418d-72af-4d24-8664-33d742d05d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a863886f-48bc-4287-93fc-cb3aae0171d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a5d07b-1d83-42d4-9979-0b15b69970cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d536afd-1804-4ba3-a517-e444f2b82c88",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721bc95b-e005-4d30-bbf1-a90496ad3bd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6768b3fe-864b-48c2-9dd1-0b3b023bc1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c9e7b8-2d38-416e-b359-dcd99aadc71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3e9e59-980f-4b80-b88e-78c2c425b06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176bd213-a959-44cd-9e6e-aab79307a76b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a94b39b-10f4-4367-8cae-3453264f2130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8bd5bea-587a-449a-9189-78af65b0d504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0518ff-f9e7-41c8-8e1f-7542911c2988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edc4d59-65b8-4cbc-bdb1-bbd3639cbc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611d952f-9669-45f8-99a8-eb0e72a503d6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb4ddcd-d44f-4bc8-81d3-bb6f37277bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fe0da2c-5366-4afd-8946-2e8b7eedc5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b47aad7-74e5-4e13-9ccb-600b9b5d839f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5629fca-f2f1-4a32-8eb9-c5911840a8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1462689e-23c9-473f-bf0a-9f9f3311b364",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21defeeb-a663-4182-9b78-8644ce09b59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20a8ad1e-f4e1-438d-beaf-5a07c0679280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ab88b6-b120-421d-b5cf-3c8e766427b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c505e971-02b7-4d44-bab5-3df9b871623d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b037a68a-ed27-4a0f-a863-ee8149c1cb8c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d56e27f-be4a-4009-ad5c-9b507493923a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "004fec9e-ed90-4418-aa2a-4e247568b297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3301d5c-6c19-4e41-bce5-bb57104cbe48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74d2a6b-6b94-4093-9363-e9871cdab319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5529ba-821e-4157-b1c8-1ebd775f39cb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4889fbb-190c-47d4-bedf-555f534aa1f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08ac285-4315-42e0-930a-49ba6a9044ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f927235-3e66-484d-8d18-ca7b56b702a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f00b0c9-c126-4ae5-8eff-ef3801afe3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bb016e-5ebd-49a6-956d-8132b83446da",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea35aeb4-997b-4cc3-918c-3065a1458312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a19ad291-df03-4f33-8d05-d8007edcc928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a2d67e-e0f2-4ff4-858b-b8972ecfa746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065589fe-7a3f-4893-963d-a94656d16f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd8c20b-0b52-4dc2-803f-b54e50e98aea",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8faa9d3-5d70-4bff-b458-09d8b151840d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f7ed5b4-51e0-42fe-80d1-c538901dca06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82ff532-5fb1-45ba-a2a1-2820e66c6553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272cb146-43f9-47e4-b42c-ba80b1715708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdb6cb8-81fa-4712-8365-6223664c4ed2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ccf3cb-e6b2-438d-bd75-79521c078ce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "963b7ea2-6103-4d4d-adb7-bdac172ffd19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1997036c-2f97-4b70-9421-40175af95465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b48f8e-9250-4b04-9542-bc3d92bc4719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c810b5-2086-4524-9299-82a55965980f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1731bb-db80-4eef-b6d6-1f93ae4cfe0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d221a2d-ce6f-4383-a5a4-418905e2b830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9669990-97e3-4cd0-bbfc-77bdce2f8a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1ad545-3782-466d-8ff6-1ebe6dfb73f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784bb722-499b-4da9-b953-d32faac2d04e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f097db1f-6585-4e9a-9a93-0b253d7009a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d51927d-2292-45d2-b67b-e11e22ab54ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc04cd21-6f03-4bd6-9a4e-aca8511b16ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505b36af-e9e8-4a9e-a697-44011d7dec02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aeb40e6-e5cb-4ae1-a080-80aeb24f0368",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1f670d-7188-4258-adfd-dd8b7b4814a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbefaa1b-bec2-4879-a955-d7aa08488fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72eaf96d-8d51-4e34-9e65-f8e8eae76784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5065599b-b3f1-4f29-a826-4450c6ecb82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a89e50d-51b7-4cd3-bded-5ac0dbde66b0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8d9cea-ac13-4ccc-afed-c8335c55f49f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0c15cb-115b-437e-a92d-e4a5244de5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e2ce51-2230-46aa-a62c-e6def5ad5d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f451bb01-cf03-402e-9cb7-74bc6b66b2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e9d7f9-b875-41fc-8cba-e24e354003a0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a0a4a7-1a5e-41a8-87a2-b0a421ed6435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9f219c-b981-46ed-ae97-3e9207e0d69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647a885c-cf98-4acc-81b7-bd82ccf05708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38441d4-fc55-4bca-83a6-9546a3eb28af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3d4953-7f5c-488d-8533-6a4a22a9631e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98cf170-1a5a-4c19-88bb-55fffe442685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf7a8987-2817-4de1-a0ab-6d05f217f139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722371eb-af0f-4589-b58d-ed5353ecc863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ef6021-a3fe-4ac5-aadb-2815ea1f97d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a84d01-0bc8-4df8-9684-f57d863bec9c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b855d690-5e23-4a16-a988-c13676713934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74f1dbdf-5ee7-413f-b46a-8e734400f05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cafcb2-c12b-40fc-8ec9-56d50ceddbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d569ab7b-a2b4-4bba-90d7-9ac3bd892324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052347fb-9bfa-4a7b-8006-7eaf0e5beaff",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8d33ad-61f1-4a66-8a80-3a0589bb2604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a76a6bc4-92c9-4971-9f1c-f2a896fd1a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb96607-6311-43c7-b3ac-4db96c166234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09792aa4-1576-480b-ab4b-32eb13557f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfdaebf-343a-4944-aa83-e999305468b9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e253ef-012a-4fb4-87d4-a6e453440f90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d22be14-b41e-48ed-87a6-b956e94230ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc0d383-0cf0-4bc7-a888-dd6d1b810d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebdbc11-f367-46d8-8c45-e1152e78320e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23f1e55-326b-45b9-8cb6-fd98ba4e9450",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b182db-550e-4116-9ad6-265afe4d8088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc89d75a-bbdf-4a01-89ab-b1f34cad63ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3560cf6-ba13-4838-818d-6950aa1423a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12086622-ee49-498e-b8ed-2ddb7c4110ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da92c1bb-9f9f-46e2-a09d-94aff8326a7a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4b58a5-0319-4a62-9f70-20343f3ff1e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba15becd-c93a-4831-9945-16fcbd27fdae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0188a86-6a62-419b-97c1-5289e1da088c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eac0118-409c-4f67-9c60-5d56af4d6e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ae8c03-64c8-4403-8fba-2907ce4dc9dd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b939a78e-0954-487c-8342-cb90e0aab6a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a35062-4d7f-40e3-b668-903013be2d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c9163d-7bfc-4dfb-a5ed-40471ea00021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188fa40f-7a44-4b68-b877-10714c67ff8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09089d05-84aa-4b49-835d-0866eba3931f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a1691b-f28f-4cae-acdd-abc385b626df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98a1398f-dedf-4aca-824c-91c98f78f67b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea756308-c66a-4c3c-ab54-1dd7f53c8375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c0ecb6-4756-4327-b48f-4ee048ab3f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4e7638-cd8a-4bd8-8ec4-dddc28ec72e5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c391f22d-d1fc-4496-80b3-fce68040dc29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00e2c201-26b2-4c83-9614-76192efa0ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073ffbb7-9f4a-4c4e-b2cb-72115eb9bd0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3dcc039-ecdd-430f-a384-ef8c64dfdcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c1d2fb-01e0-4556-b219-75cadf6a270d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d2eb8c-120a-4877-bb10-5ab68ac21c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8c452ca-f90b-40f6-b673-9c7a589ce370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f08bdc-93d1-4e98-a825-205119a087e4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d60d03f-cbde-4e3f-a45b-6071e8ff4767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caf7383-1526-4bd4-b4b0-faed65c2a0dd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf4a5ab-356a-4712-9e3c-40c12e9add38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd349a0-ae77-44ce-b743-47ff34b488eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459dbd9f-47c7-479f-989a-11d3f62aee69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609e369f-8ad0-48ed-973f-913110d55517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4979c8-e3f8-46e4-a820-e6aba8439c81",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b34d817-2fb6-4d7c-b286-f04c2abfe1bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a016d6ab-91f0-47bf-80dc-b5ec4acb6af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685c31a0-e600-4f0a-a2d6-23cabeca810f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da9f0c7-071a-4bfc-988e-e58330f67109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1d2d2f-9ee7-47dc-b3b3-1a97ef901f76",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a73d99-d093-4752-9412-69191833c615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fee5f4d8-f63e-4313-a4b3-e0cd6b5bbe83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1250b92-7853-485e-9087-637dcb830f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ea93aa-0a07-46bc-9823-a5ea11a8dbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8ddc92-c442-4cfc-b79d-f1e251c896af",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2fa325-a4a6-44b6-84ce-dfa353dcf153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "813dcc5d-bda5-4996-b2b4-662dfca6c841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149802ca-9470-42c8-b82a-ad3d8d5cbabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b43348-ee8a-4809-9973-e4bea8988d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55aae3fb-1e1a-4d2f-90da-9e3fcb7c75ff",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff2f856-b121-440f-aa0c-114b56a6b8d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c40fb86-2b0b-4fcf-93ae-1394b0360a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce20392-1b72-4f26-886f-34f0085effa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d792370a-8d4a-4db2-a249-79eff5571371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dae590-febb-46a5-91a2-56da5b6cb61c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e8c462-1278-492e-9cb6-09befba71884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da882ce9-e9ea-472a-b763-90c6aaf65d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae1e397-4dbc-4439-afd7-bf7e21336b7f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f762bc-80ea-42cb-8b05-f30521aa88eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14497c6b-ea36-41bd-9b58-a214c576d750",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378c5b18-1a23-4ca7-8d10-0744641f1609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92db69c8-a6a7-4606-b10a-0825bc9b5bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce48302-d1fe-4bbf-8ad4-3c7b7de45e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77fb35d1-f53a-4bd9-b32e-8f71c296efd2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff269e60-67e3-43b1-99a4-df5ef6cb5152",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7ec4732-831e-4997-b98a-8a9a18d7cecd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bb92f6a-6d2a-4c02-a670-38eedf36c567",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8a3cc72-2a03-482c-9b30-1bc85202c4f8"
                    }
                  }
                ]
              },
              {
                "id": "4498e5cb-160e-4a18-81ac-71175439108b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "484cf91d-bf95-46a0-90d7-501e7d11fb1d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1925b6f4-c408-41a9-9eb6-c77a555f5b64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3709e629-e3a6-4096-98b6-19fff967a070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31ca06c-33d4-4daa-9990-313410a1dd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "feb15238-5eaa-4f7f-8c87-d6e2a87f924c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d92e1d03-215d-43e8-9171-827ad10f039d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d066cc85-cd08-4fb0-bbbc-41d18512673e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3873fc9-857f-42c3-98c2-1776def0616b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b1fd561-b723-48ef-988b-b52e5c9a2c7c"
                    }
                  }
                ]
              },
              {
                "id": "3a964bbf-e3bf-4fbf-8744-db0fdfa3f731",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1fcacaa9-a84e-4fd2-b861-ea53d2f12557",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501cbe84-65de-466e-b28e-cd3ce068b6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f66a4edb-6d04-4c76-83c5-68bff23e115c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264a1c52-baee-4521-a925-e2c2a65dd435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1819073-d747-44b2-b693-ccb86b586d35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "da315acc-1393-47df-8230-2619b5fce8f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7cf884b8-af19-414a-b6d0-43fffbc80449",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6150564-8d45-4cb8-8ce7-bd092e02065b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b64df939-fc9f-4a6b-b90a-55735a990df9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4d869cb-adfd-4427-a7cb-38682ce1ecf2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19798726-a334-45dd-a27c-17b393964080"
                    }
                  }
                ]
              },
              {
                "id": "6d6727e4-8e03-49ee-91c3-15f6cbe70db3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dd38204-705b-49f1-8a05-689a59ee1edd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8c064694-29f6-4c4c-9c33-ecd56c5bcec9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27f5cd23-fd9b-47da-9fbe-9135b4d3b12a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "439028a8-df77-4513-a52f-2df5ef99e350"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d92264c5-e668-4c5c-84c0-e67bf0f3f015",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "22fdf7e4-3295-43b0-b8c5-b66c88e5d10d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10d98021-8e25-4a9d-b7e5-51e5b2706789",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd66a972-c54d-442d-8c71-332c048c35a0"
            }
          }
        ]
      },
      {
        "id": "7ca75f63-21d9-4bd4-96e2-5d6b95238280",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1b0764f4-eb3f-4c34-a204-d7a1c98290fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "278e88fe-db06-4d27-a391-acb5ca8d5301",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "136b2a2f-ae89-485a-aecc-0235300d14e8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f765c31b-aefc-49ed-9744-307cc3cec721",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eb875097-4b04-4fd5-bcd6-f97c05b7b3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999837b0-86a1-4af3-9062-1bcbe306e838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08068060-27fb-4499-9b23-11278cb2c9f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30097444-e46d-425a-8db4-2bc3df904d9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5906537-084f-4587-a4c4-103a26e22ca9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "535deb44-dd06-4604-a2f1-4fc4e87d504b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e045de50-1f03-42f5-8aab-0f14531b8fa5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07eb8df7-1d66-485b-b346-396b659706d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "35d9b571-dcc3-4628-8139-d6ec51d4f483"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a62ea7d9-01e0-4d0b-9556-ee1e14760f4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e3b6e5f-22cb-4d97-9366-a1a6dd4015db"
            }
          }
        ]
      },
      {
        "id": "09f0dcc7-a335-46f6-9276-e08eb765ee1b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "08fb53b0-b5e7-4dd1-b439-98882e5a8a6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "769b26a1-a71c-426d-8454-dd823b222c0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fd41bed-de5d-49f0-9959-9415db604cf2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd6356c-fa96-4c51-b2f0-a3e2aa377b91",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4eff7e5-9d1c-4007-a862-8c24ddab1431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b40928f-2491-4be0-8f2f-7046387ed75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b49f6ee3-9964-44a7-8992-26610cf7ae18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0be3580-dd7d-471f-8ab9-bb2f37f9fa5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec41b0dd-01cf-431b-92e3-58c90d6063b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e297338b-a514-4f0d-b3d5-22f45bc6dcc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bfe04c8-cf86-49c0-8e32-920dcf0dab95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff5d41ef-decd-4621-a817-591f92ba193b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac3ca3b2-c631-41ed-bc2a-810d25bdce85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20018b85-a558-44e4-a6cd-0327d68bb9b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7985d652-8eed-4473-98e2-c4f5fc20d372"
            }
          }
        ]
      },
      {
        "id": "895cc7f5-9cb5-44f4-99a4-07351fdde36a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "def62bbc-9af3-41bb-9a75-84f2a55fe674",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f142ae5e-12aa-4140-8fd0-a6864229d116",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a44ad451-6053-4c34-881b-1ab0c1b865de",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cda8e8-f2e2-4736-93f2-638d2b68958d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0cb9197-41e4-47a1-8092-e0cf0512c5ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5279fc08-a648-4a7b-b54c-2dc8095fb5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f238282-26ea-4c7b-bade-6c1e36d4474a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e5cced5-4094-4c66-b3af-7ecd70dad76a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19b6de07-585e-4f9d-aab5-98ee9681c0f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdeba661-af2c-4ee3-af8e-d599f743a6e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11f468d4-9da5-44b5-954b-066dbd515483"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9deafc1-b5e0-4316-9c4d-d5749f6e4b5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8fbf7fc4-1e51-4b94-8934-adc23dac5d06"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de197e11-8cd5-4ce0-a504-878ee564e6a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "163b82d5-03b5-46ee-a61b-cbe2a26b60d1"
            }
          }
        ]
      },
      {
        "id": "d075f9a1-d109-434d-bf09-924e6d6d1c92",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "070d58ef-87f8-4f73-b28b-646b07b8272d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4ce45bd-1063-41c1-84c8-357761956795",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9d793614-e2cc-45b8-bb24-a0aa22f94846",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d707fa4b-63b0-429d-a39a-719d28b9d56c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8007cc77-0936-4b4e-a837-2bc220b8d9cd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.317073170731707,
      "responseMin": 3,
      "responseMax": 251,
      "responseSd": 23.289034746016217,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686161875436,
      "completed": 1686161887760
    },
    "executions": [
      {
        "id": "559dcc92-6a75-408c-a5fc-53cd8f5bc8ee",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a61c8175-2a3b-4845-a3c4-b2ca8eab10dc",
          "httpRequestId": "7b063a6f-6c59-4b14-b48e-e021961a6dda"
        },
        "item": {
          "id": "559dcc92-6a75-408c-a5fc-53cd8f5bc8ee",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "441ac841-2dfb-4c17-9174-e7567d6bc04f",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "a3d00e1d-d5f7-48d8-8ea6-c1f9ddb7ef47",
        "cursor": {
          "ref": "0e346516-acf3-4eb7-b0db-9d588c9750df",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b4d275c1-e274-4d4b-ab66-bb7810b9bb6a"
        },
        "item": {
          "id": "a3d00e1d-d5f7-48d8-8ea6-c1f9ddb7ef47",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1e6c08b8-5077-4b5c-ba67-3357b8675199",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "f6003851-5967-464e-8068-94b5a716e262",
        "cursor": {
          "ref": "c5f5b412-14a6-4848-b7cf-0fb011b3c28e",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "abb96ab4-e7e1-4dcc-b825-ee1f2730113f"
        },
        "item": {
          "id": "f6003851-5967-464e-8068-94b5a716e262",
          "name": "did_json"
        },
        "response": {
          "id": "071ab0cf-47fb-4484-a73e-5d63c566b6ac",
          "status": "OK",
          "code": 200,
          "responseTime": 251,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ec5318-0200-4e3d-a9be-9aebe32452f3",
        "cursor": {
          "ref": "b8627975-795f-4130-b76a-e25ceb07f3c2",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85fd056f-b33c-4767-8da3-3226123f9fdd"
        },
        "item": {
          "id": "21ec5318-0200-4e3d-a9be-9aebe32452f3",
          "name": "did:invalid"
        },
        "response": {
          "id": "ae4b6e89-625c-4548-950b-7da273e62a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ec5318-0200-4e3d-a9be-9aebe32452f3",
        "cursor": {
          "ref": "b8627975-795f-4130-b76a-e25ceb07f3c2",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85fd056f-b33c-4767-8da3-3226123f9fdd"
        },
        "item": {
          "id": "21ec5318-0200-4e3d-a9be-9aebe32452f3",
          "name": "did:invalid"
        },
        "response": {
          "id": "ae4b6e89-625c-4548-950b-7da273e62a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f899af6f-01ce-47a9-bca0-959f3edb3550",
        "cursor": {
          "ref": "71378704-6fd8-4ce2-b6f9-eb0a17667306",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a56a2d91-4eae-4bbf-87e7-79814ec3f20d"
        },
        "item": {
          "id": "f899af6f-01ce-47a9-bca0-959f3edb3550",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3c1f6d22-096a-492b-bea6-c5d8e7ec6e7b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873daae1-0eb0-491e-92a0-09e44f391f22",
        "cursor": {
          "ref": "6a56c013-a1ff-4e6c-9bd6-3652df6c3e40",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ab3d607e-983d-455b-b0db-a4c9b56eb481"
        },
        "item": {
          "id": "873daae1-0eb0-491e-92a0-09e44f391f22",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "62c601aa-13c7-406b-937b-a4e2356d5973",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b981cf-cd28-4dd4-998c-99e906f9e3eb",
        "cursor": {
          "ref": "b2eb0f0e-2a59-4206-a72f-e7602bcdc749",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "31b97d15-4721-4346-a7d1-b05652b21498"
        },
        "item": {
          "id": "a8b981cf-cd28-4dd4-998c-99e906f9e3eb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c03a18b4-18f1-4dab-b643-4cc79bbc1ce9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef1cac7-5379-4a09-8375-f641f561ba77",
        "cursor": {
          "ref": "4477baeb-7612-4580-9786-751b88c894a7",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f9224f2a-4fd6-41ed-bd96-36568739f40d"
        },
        "item": {
          "id": "fef1cac7-5379-4a09-8375-f641f561ba77",
          "name": "identifiers"
        },
        "response": {
          "id": "7461acda-7275-41df-a132-21e2dd028862",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d95619d-50d0-43ff-8975-f3d037d017c4",
        "cursor": {
          "ref": "06939435-ba33-4a78-9235-131bf9534b9b",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ba4cc67e-7096-48bf-85b7-eaa87028b441"
        },
        "item": {
          "id": "7d95619d-50d0-43ff-8975-f3d037d017c4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "47dd5fe3-f59a-420d-8509-35e420c9cb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a185dc2f-1a7e-48a2-9e00-b6052b0d1710",
        "cursor": {
          "ref": "e509d7f9-0377-4ebc-a07b-8d02cecb93bd",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba85f538-1e15-4e88-8087-36c979f4f74c"
        },
        "item": {
          "id": "a185dc2f-1a7e-48a2-9e00-b6052b0d1710",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cce1cf60-bb4b-4f6a-98cd-e7248123e937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4704f549-1909-4e3e-a788-38550eb89091",
        "cursor": {
          "ref": "064ff04b-dfb0-469f-b8c1-3135e308cd78",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d6be7e45-0187-49f2-8a44-e1b55e3ce72e"
        },
        "item": {
          "id": "4704f549-1909-4e3e-a788-38550eb89091",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "122716b7-c6d6-4c65-afc8-63f81dd2bdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcb2ac1-5ad4-401f-9e6b-77bfe6c472fc",
        "cursor": {
          "ref": "2d4bb235-e568-418c-8c6a-c8869685c89a",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "625d6c1b-fc58-4d08-914b-856c719ee939"
        },
        "item": {
          "id": "edcb2ac1-5ad4-401f-9e6b-77bfe6c472fc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "36fdf195-8f0e-43f5-bdec-89c62afdd54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696707e7-900f-4c31-b1cb-fcb012ff708d",
        "cursor": {
          "ref": "156b881d-6e35-404c-8d1e-fcf834563f81",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "17ccc795-2fef-49b2-b881-74d58ef450e8"
        },
        "item": {
          "id": "696707e7-900f-4c31-b1cb-fcb012ff708d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "eb29a99c-5ccb-40d6-9ae8-c35a3e2eeba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e34a4a-3392-4d5b-9fc7-3b52d6e61b7c",
        "cursor": {
          "ref": "80b1f7d5-0420-46a5-b087-4a627e85f485",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b95da568-d632-4676-8ff7-82f5b072d21b"
        },
        "item": {
          "id": "f4e34a4a-3392-4d5b-9fc7-3b52d6e61b7c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ef6c74c4-9dee-4f69-8cc2-36bd99b19f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccca09a-92fc-414a-ae94-cdca05ac576b",
        "cursor": {
          "ref": "a3a86e73-c38f-4ea0-a9f2-70eba3e19ee8",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c05b3220-eff5-4f0c-9dba-cf2ea421d78e"
        },
        "item": {
          "id": "3ccca09a-92fc-414a-ae94-cdca05ac576b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e9bfe658-508d-494e-bc97-d38e2296fb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727b85b7-8462-46c9-b98a-a13a57d7a728",
        "cursor": {
          "ref": "b7911b12-02a4-48d5-a332-e70cca9d9157",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fb5a78c3-aab7-4978-913e-8f51eea138a4"
        },
        "item": {
          "id": "727b85b7-8462-46c9-b98a-a13a57d7a728",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ea2ccbb5-1f73-46de-90d0-577de348037f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a03cb63-6633-4cb6-93ce-2788c378b4eb",
        "cursor": {
          "ref": "40e8f10e-8cc0-44b8-ae90-f58a44560b7a",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8bdc2838-795d-4686-b68f-6e63924dc004"
        },
        "item": {
          "id": "4a03cb63-6633-4cb6-93ce-2788c378b4eb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "94315cdb-817e-4273-8d80-5205e8073841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08862e88-d82c-44a8-83f9-c933906cd033",
        "cursor": {
          "ref": "9b8b253d-0f29-4d2b-9cb5-d29c702fbbd3",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e0d895e1-d6dd-4af2-b028-86ebf2215746"
        },
        "item": {
          "id": "08862e88-d82c-44a8-83f9-c933906cd033",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fbf1b727-3b6a-4a0d-8d94-482ebfd0aacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bed80e-7a93-4de4-9d63-1018e9c76c30",
        "cursor": {
          "ref": "9e1f9926-ad0a-44b9-8018-a0ee69268996",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6a7107fe-afcc-427a-a370-c3653a109a44"
        },
        "item": {
          "id": "78bed80e-7a93-4de4-9d63-1018e9c76c30",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1a8297db-5129-44bd-94f9-62469641054d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70417829-0094-450d-b9cb-25d4acb64e1a",
        "cursor": {
          "ref": "30a2b4d2-17b4-4b9f-855f-a55dcb59ae22",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "98d45a3b-c833-4a6c-95d0-5336ccd70a45"
        },
        "item": {
          "id": "70417829-0094-450d-b9cb-25d4acb64e1a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3e177534-50f9-4c58-a1ed-589409de7c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d00e6a8-cc77-4f9d-be80-76af595572a0",
        "cursor": {
          "ref": "1912e873-9b09-448c-b1be-9d587337c86b",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d1337cd5-03af-4e9b-9a2e-f9a9b7213883"
        },
        "item": {
          "id": "5d00e6a8-cc77-4f9d-be80-76af595572a0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "830f6e3a-abfc-4550-b7ef-adccacd0fae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa49159-993e-4530-93ae-63312623204d",
        "cursor": {
          "ref": "054c3aba-67d7-49b1-9053-c02076ef0896",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e9211ad9-9e8e-4d13-bf63-ea6a38964249"
        },
        "item": {
          "id": "cfa49159-993e-4530-93ae-63312623204d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ebe90e2a-92b8-4bad-9f1d-d0c72b304204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d754907a-452a-4e98-9ae9-7ebde79ad375",
        "cursor": {
          "ref": "eeb6f586-42ce-4c02-8b27-b2af0613f599",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a3af5b76-0208-4bbd-b841-bc4ade9a694a"
        },
        "item": {
          "id": "d754907a-452a-4e98-9ae9-7ebde79ad375",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dd126165-d1e2-45de-8dd5-a6543a6824a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e5dc60-4d7f-4402-9478-63d61e4cc87a",
        "cursor": {
          "ref": "43a7ae29-753b-4311-b529-e409a134f8c3",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "94027802-8e9d-4f48-be6c-a29aaedd5061"
        },
        "item": {
          "id": "57e5dc60-4d7f-4402-9478-63d61e4cc87a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e310fd89-6c77-45be-9b5f-fb8696ccfbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589e385b-6692-4136-9831-e6dad8e1aa5a",
        "cursor": {
          "ref": "a6a100b4-ddfc-4b1c-b1d2-6e2497be58fa",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c6c4882f-3d25-4505-880a-e56a352cf15e"
        },
        "item": {
          "id": "589e385b-6692-4136-9831-e6dad8e1aa5a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "73aa5a2a-2f1f-478d-9594-8b321fbd57da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f6cd2f-406a-45f1-aec6-541f980c7a10",
        "cursor": {
          "ref": "57b60368-f093-4f53-9f35-c2779a6e0967",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7a63ad78-f48d-43b1-90b7-a101fd949438"
        },
        "item": {
          "id": "e2f6cd2f-406a-45f1-aec6-541f980c7a10",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "10743d42-cd2b-4303-9e21-57c5ed51f790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caddf205-9291-48ee-a860-e00680f8d0a0",
        "cursor": {
          "ref": "c380111a-59be-41ea-8f78-39a256e76f05",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a686944a-f895-468a-930e-77c4f7447d7f"
        },
        "item": {
          "id": "caddf205-9291-48ee-a860-e00680f8d0a0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0f923636-7a7b-4d59-966d-6377f69f8ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1d6d94-a58e-4fb1-a925-2858808eba82",
        "cursor": {
          "ref": "a5803714-aa1f-4348-a968-08dbde198e36",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8de47f0f-6b61-4cc8-b658-0dd4eeb1a6a2"
        },
        "item": {
          "id": "cd1d6d94-a58e-4fb1-a925-2858808eba82",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9028b030-50e6-4f38-8a8d-fe13085e2d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26073780-0ce5-4eee-a703-f99206f6c60d",
        "cursor": {
          "ref": "cbca6868-9bfd-4de2-9098-07673d863f80",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cafa92d5-561e-4751-847d-e9b691c78312"
        },
        "item": {
          "id": "26073780-0ce5-4eee-a703-f99206f6c60d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3a93a669-81bc-4119-8818-535e49eafe3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc70d45e-9c66-405e-bd89-691aa1987f4e",
        "cursor": {
          "ref": "2291a16d-ec9b-4759-8d80-71eb70625a85",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bb9d0ed7-d940-4513-aa10-85ba2d93b45f"
        },
        "item": {
          "id": "cc70d45e-9c66-405e-bd89-691aa1987f4e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c5a56afe-7cbe-4f2b-9000-51f297c81436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f67763-33b0-4581-a0a3-403ed8b0a2a0",
        "cursor": {
          "ref": "ca5a0cf2-ffa4-4965-85ff-f66069cb2afe",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0922769a-c740-4d74-af1a-a297ee55545d"
        },
        "item": {
          "id": "85f67763-33b0-4581-a0a3-403ed8b0a2a0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2be6b43e-f89f-4988-98e5-d78742d9049e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc76be6-b84e-4128-8d6e-6bc33e4e3b7c",
        "cursor": {
          "ref": "ef11f817-424d-4a7d-b251-4fd661cd9845",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "59939056-503a-40df-905f-01b6a948d525"
        },
        "item": {
          "id": "bbc76be6-b84e-4128-8d6e-6bc33e4e3b7c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f5278e73-eae3-4769-bce3-d9475ad929c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e357d56-89cb-49f0-8855-546524d41abb",
        "cursor": {
          "ref": "7c458e4e-4274-4819-b426-f0fc5c74ef74",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3be128f5-05b2-467b-b9bb-2ae901bb5255"
        },
        "item": {
          "id": "0e357d56-89cb-49f0-8855-546524d41abb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b7025d57-c7e1-45a2-8d2e-4820ba1af4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a647b4-9fd0-4cbd-acce-568c98f03acb",
        "cursor": {
          "ref": "cc539702-3a5c-47cc-a594-0d1ecd4a9853",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "53f083fb-2759-4949-86a5-a0abcdb4f2a0"
        },
        "item": {
          "id": "42a647b4-9fd0-4cbd-acce-568c98f03acb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0e52ee79-b556-45c2-acc7-f6ea936c454a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0b8d63-4c85-43f1-aa9d-dbe555380edb",
        "cursor": {
          "ref": "9f7720f9-6b6a-4134-8d4d-a93f3eddb306",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d6062a52-9a6f-4c56-834c-162e7a779246"
        },
        "item": {
          "id": "ab0b8d63-4c85-43f1-aa9d-dbe555380edb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ff465132-54d5-45d5-acd9-cf779f4d3e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafa9e0b-63fe-4cd1-9e79-98722a9ad183",
        "cursor": {
          "ref": "cea071a1-7237-4989-a164-c8256b80f873",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3dc77c79-ea0e-4321-841e-3df1e3009929"
        },
        "item": {
          "id": "eafa9e0b-63fe-4cd1-9e79-98722a9ad183",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1db2e3a8-21ef-49d7-8530-7863ac9ac509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c839e8-d361-4dde-9fee-9de135b62cf4",
        "cursor": {
          "ref": "8d9efd45-c0e0-42fc-bf3f-8170c43d1aaa",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7c09f4ca-1802-46b9-a328-d4c9871f040d"
        },
        "item": {
          "id": "13c839e8-d361-4dde-9fee-9de135b62cf4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b81ef2b1-6dcc-47e1-b683-528d8784a359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7699b8ce-ebaa-4290-b519-58750468398a",
        "cursor": {
          "ref": "f0517546-5624-45da-9074-e44347f5b36f",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "066edafb-2612-4c82-806a-82acc9ef8e90"
        },
        "item": {
          "id": "7699b8ce-ebaa-4290-b519-58750468398a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3c8057a1-1f8d-4fd7-8aea-628a22e5ae10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08b9fea-2e5a-4954-a5a7-cb1f72bff44b",
        "cursor": {
          "ref": "8f85b06d-10da-49ec-a4a9-11fd1cfecb36",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "528588f6-9deb-481f-94b8-806387ce4294"
        },
        "item": {
          "id": "f08b9fea-2e5a-4954-a5a7-cb1f72bff44b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c47fff38-1eb7-4827-a430-3b9130709420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556d8192-2e1f-40f2-9dfb-662fde7614cb",
        "cursor": {
          "ref": "9ac273cb-ccea-43d7-be05-1870186006b7",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b80c2a08-c3cf-4b71-b890-15e91bf8b4a9"
        },
        "item": {
          "id": "556d8192-2e1f-40f2-9dfb-662fde7614cb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4af09153-b831-4e2e-833c-0baff2e1aad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b675e6-dfdc-42a6-abf1-0ca2dc9fb06c",
        "cursor": {
          "ref": "2f583f2b-d686-479b-8ade-c7b392b615e4",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "56615533-27d0-4d18-b140-abe5f3b1029f"
        },
        "item": {
          "id": "80b675e6-dfdc-42a6-abf1-0ca2dc9fb06c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "906be837-2b68-4e24-9d6b-c5a4cf9d4a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4f1ffc-9179-435d-9e1c-69a4e3176042",
        "cursor": {
          "ref": "0c0d2582-a1b0-4695-bfeb-af53ef710b97",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "638f7d03-f42f-45a0-8df1-80d2b8c4698c"
        },
        "item": {
          "id": "dd4f1ffc-9179-435d-9e1c-69a4e3176042",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "deb4e6fe-6357-42fb-9854-cf5fdd764b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c374da6-412f-4788-adb7-932d5d2cb4a7",
        "cursor": {
          "ref": "a2da55df-1147-46d3-8365-1b9a681be530",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "59199f4b-5681-40a5-8c25-fe07cfd43e40"
        },
        "item": {
          "id": "4c374da6-412f-4788-adb7-932d5d2cb4a7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fae8ac5d-8073-4031-96f9-70f558c4b2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddb606b-d61b-40c8-8d89-2068f8918ee0",
        "cursor": {
          "ref": "9819c7bd-e864-40b5-b18a-3d33db43d713",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2e36bf82-5b23-47cb-832f-b9b696d1dcf7"
        },
        "item": {
          "id": "eddb606b-d61b-40c8-8d89-2068f8918ee0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7103dab7-29ee-47a0-b656-332272414650",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc85050-6220-4802-b585-3c0fcb9da5e4",
        "cursor": {
          "ref": "6029c90d-5f81-4ee6-ab70-56d9568a51d2",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "438fb19f-b2fe-401d-9946-7d5c22a8be94"
        },
        "item": {
          "id": "3bc85050-6220-4802-b585-3c0fcb9da5e4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4277b7c3-57ed-4331-bc42-b2a1784618e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cc4cab-960b-4192-bad5-b2eebed368a2",
        "cursor": {
          "ref": "4d6e3149-b58b-44d4-b021-1356d6a1115b",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "91489f59-c7c1-4b99-8e01-6a3efd83f6b3"
        },
        "item": {
          "id": "19cc4cab-960b-4192-bad5-b2eebed368a2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "75aac856-386c-4b66-8e28-fd00136b0669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be2fa85-d5f6-45f4-86bd-f0afc93014a0",
        "cursor": {
          "ref": "6162b939-42c3-4b1d-8084-537c85462b08",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d61ffafa-eddb-4cc8-a869-3bc3b8b6af46"
        },
        "item": {
          "id": "9be2fa85-d5f6-45f4-86bd-f0afc93014a0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b082225f-499d-469c-bd8a-32bef0066810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb6f55d-6f4d-4ce1-a32a-dc7df4a3d30f",
        "cursor": {
          "ref": "368886ac-98e6-4eb6-bf17-bbfbd4dbe845",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b15fb8ee-822a-4bfc-b9e0-3a329eb580ee"
        },
        "item": {
          "id": "ddb6f55d-6f4d-4ce1-a32a-dc7df4a3d30f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9e9f3907-0ce5-4a51-ba8a-437e3c843254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8770ee81-621e-4a53-9549-0a6300c6884c",
        "cursor": {
          "ref": "6eb293c4-4693-418e-8bfc-53f3f245cd3a",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "96cc614d-5c77-44e8-932f-4841b9e28dab"
        },
        "item": {
          "id": "8770ee81-621e-4a53-9549-0a6300c6884c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "856ee318-375c-4ce3-9d7c-ad1773fba0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dfdc7a-80b8-429f-97c5-22a6deee2945",
        "cursor": {
          "ref": "2c22e604-131b-4f57-bc8a-4d085c7de21d",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "347d096a-3849-484d-a3a1-10bb1cf304ea"
        },
        "item": {
          "id": "54dfdc7a-80b8-429f-97c5-22a6deee2945",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c6557a3b-07cb-44e2-b7e6-2b6d190f5837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378da175-d522-4c5a-b61d-6b3e7ded60f8",
        "cursor": {
          "ref": "95a4eaa0-a21c-4827-9587-dfdbf1739f0e",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "db4351cc-df9b-449a-8e98-8b154e7a2c44"
        },
        "item": {
          "id": "378da175-d522-4c5a-b61d-6b3e7ded60f8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "50569101-7831-4e09-8601-c5b2bbb53214",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 12,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73c65af-42b4-412a-9890-2672e96a863f",
        "cursor": {
          "ref": "3323fcf8-1566-4c0e-9a32-faf3a9e16a1f",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f1d3c857-9f16-4bdc-a17d-3854fca32c62"
        },
        "item": {
          "id": "e73c65af-42b4-412a-9890-2672e96a863f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2cded761-a267-4f8f-84ff-2cfc9b5d138c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ab4923-13d1-45e9-bcfc-53ca17206c0a",
        "cursor": {
          "ref": "a0bc3408-9d80-424b-9ce6-ae570efab885",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d0b2b38b-b6b0-4da3-97d9-2a4af70fcc9a"
        },
        "item": {
          "id": "90ab4923-13d1-45e9-bcfc-53ca17206c0a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "80df759e-0715-43e7-a6f5-64b22af0cefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769406cf-d0c1-4c38-948d-424d424793fd",
        "cursor": {
          "ref": "d42681a4-9f65-487c-ac25-dff8ebb8e48d",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7d4d4cbe-6ed6-4bf7-95c0-6aaf7e30904f"
        },
        "item": {
          "id": "769406cf-d0c1-4c38-948d-424d424793fd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cefc1099-1bf6-4707-8dbc-3fa19830c14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4cf7b4-dc52-4566-9276-2f9c924325f5",
        "cursor": {
          "ref": "6e118987-537f-417f-8e6e-35d7a5e35052",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "23865d94-cb22-4a33-8dba-4f9836b8b908"
        },
        "item": {
          "id": "0b4cf7b4-dc52-4566-9276-2f9c924325f5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2c2f5116-7951-42aa-a99b-722551f3aab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9056b325-c806-4f5b-b454-18a7f22b1766",
        "cursor": {
          "ref": "81cd735d-44be-4791-b516-09b9c5a8f64f",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7a1942af-4a63-495c-b3fe-c191d510c46e"
        },
        "item": {
          "id": "9056b325-c806-4f5b-b454-18a7f22b1766",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a5eee208-da75-4dc1-8652-55c1a1634585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502b8f03-be75-43ed-85b5-b93a903fcf69",
        "cursor": {
          "ref": "391d9347-9b63-4517-8c62-9912c49af0e0",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "71241946-6306-4388-9f24-e79669e21774"
        },
        "item": {
          "id": "502b8f03-be75-43ed-85b5-b93a903fcf69",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "30310c2e-4c23-441e-8cdf-0f2ebb171c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8566ac30-3f7e-4efd-84a8-c78ddbc85d94",
        "cursor": {
          "ref": "13ae6905-529e-44e1-830e-d205159a161c",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "59823ccd-18fb-4a02-837c-a7b543b3c38a"
        },
        "item": {
          "id": "8566ac30-3f7e-4efd-84a8-c78ddbc85d94",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7d8de1ad-181f-4a15-9761-9dd0308ea85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091dc7a9-758c-487b-8350-b9b92705c3fa",
        "cursor": {
          "ref": "ffaf8044-5382-4904-87f8-a6ef9ad51e0d",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "89c4282b-06cb-473d-b3b8-e9381b3f4f52"
        },
        "item": {
          "id": "091dc7a9-758c-487b-8350-b9b92705c3fa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0cd9d5e2-66c1-4206-beea-cb930da14875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c82640-7907-4d70-b34a-52adcd7b1bb4",
        "cursor": {
          "ref": "ba029335-c55c-4867-bdf3-77de0de4bbe9",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c303501d-7ddf-4ca3-a997-4c1ea0f5d150"
        },
        "item": {
          "id": "28c82640-7907-4d70-b34a-52adcd7b1bb4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5ff62793-487d-40c5-84eb-64d068cea7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6d4efd-50b8-4b0f-93da-366687c799a8",
        "cursor": {
          "ref": "5a320c96-cb6e-474e-859f-37b637218c81",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "507077ce-dccb-41c4-85a4-acab25d53d4d"
        },
        "item": {
          "id": "ba6d4efd-50b8-4b0f-93da-366687c799a8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e88d7624-ca70-4ff6-b3fc-cfda502d16e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db919b07-12c5-4e9f-bdc5-9323fc4173ee",
        "cursor": {
          "ref": "cb3407d3-3bb0-4e8a-9b1b-140c091e824a",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9c14c498-48e3-46c8-96d4-b2e8665e990c"
        },
        "item": {
          "id": "db919b07-12c5-4e9f-bdc5-9323fc4173ee",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4081c1ba-fb87-44cb-ac96-562f9adc974c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee38ca41-1e28-418c-ad4f-8a31dbd2dfe5",
        "cursor": {
          "ref": "64dcfbc1-c2bd-4912-b93f-a4cee56198e2",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7594b8df-4a09-4fb8-b284-e56291ca2bf1"
        },
        "item": {
          "id": "ee38ca41-1e28-418c-ad4f-8a31dbd2dfe5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "36d86baa-c1c7-44e8-bfdf-42be9164a995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18eee64e-f7c2-4545-b278-b5573c35a026",
        "cursor": {
          "ref": "2d7a229d-4b61-47c7-b680-e4094cd06458",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8bbb176c-5690-4dc0-b0de-47b4cbe7be06"
        },
        "item": {
          "id": "18eee64e-f7c2-4545-b278-b5573c35a026",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e6c72807-63b5-4334-ab9f-90c7ea83e1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62781a4-2bc7-4eb2-8b84-cd315855062a",
        "cursor": {
          "ref": "928bc6c1-fde2-4912-905d-13cb0702ee71",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c2a36220-1c42-4d90-88c9-54b747f620c8"
        },
        "item": {
          "id": "e62781a4-2bc7-4eb2-8b84-cd315855062a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a7b786e6-9b12-4376-a114-8c798f972d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c864052f-f021-476b-808d-0b78bcdee762",
        "cursor": {
          "ref": "015d42e7-dfa9-431e-a6ed-cd1e1a7ff838",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "18814abb-9b4f-43b6-b066-53f965e72787"
        },
        "item": {
          "id": "c864052f-f021-476b-808d-0b78bcdee762",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c7f85436-2ad1-4ac2-ad48-d725af8c83b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ec916e-7be8-40d1-9489-3b40267bbc5d",
        "cursor": {
          "ref": "765c928f-0012-4eea-9d1b-b8e29952cd47",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e165dea3-4441-4e67-9d12-0ed46df6a51d"
        },
        "item": {
          "id": "81ec916e-7be8-40d1-9489-3b40267bbc5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2d4299ab-6120-4d47-a1c9-c7b239e71345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dda9e50-ef7f-4360-8459-d856d4066495",
        "cursor": {
          "ref": "1b384a54-b8c7-4e21-8bfb-99e26f19d26d",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1a71139d-59a8-46cc-b872-f587da9be732"
        },
        "item": {
          "id": "0dda9e50-ef7f-4360-8459-d856d4066495",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1f7fbe3d-aa05-478f-b577-f46478137d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e445f90-d244-4ea1-a293-9b87582e53b9",
        "cursor": {
          "ref": "1b1ba134-8f73-4e2b-9232-4b8a197c7839",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "576b5bc2-694b-4718-8379-845e52bf1ead"
        },
        "item": {
          "id": "8e445f90-d244-4ea1-a293-9b87582e53b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5832ae9c-0872-41e9-8e6e-e5e6a2ecd489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47a104f-e5f2-4000-945b-47104ad95792",
        "cursor": {
          "ref": "f8a77323-1733-488c-a3d9-5c3276ac07ac",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e8a922d0-7e69-44e3-97a2-2a1193334eb2"
        },
        "item": {
          "id": "a47a104f-e5f2-4000-945b-47104ad95792",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b81493dd-04d3-4458-b054-5f9ab72beee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd6e417-4c5e-42fa-848d-843c681faf6b",
        "cursor": {
          "ref": "93184fd9-ee99-443a-ae10-d50cf29cb9e6",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ec07f8dc-4369-45e5-b6bd-21696e9b6492"
        },
        "item": {
          "id": "1bd6e417-4c5e-42fa-848d-843c681faf6b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5bc54986-54f9-41d1-82da-0a178b2c0bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd00118f-4f91-4591-acca-7bbefb873771",
        "cursor": {
          "ref": "c0c5b2ee-c61a-48b6-a995-1a687c4ad145",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "18cbe683-00ce-4aeb-8606-d4aaf435bc8e"
        },
        "item": {
          "id": "bd00118f-4f91-4591-acca-7bbefb873771",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "862b8fe5-8222-4173-8b31-39769863a083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6495bcca-6686-439c-a771-da0c80314ce8",
        "cursor": {
          "ref": "63ded14b-4661-4bc1-8c7f-c101de6ddb45",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0594cc30-7a83-41e7-ae4d-0e37c1faeea6"
        },
        "item": {
          "id": "6495bcca-6686-439c-a771-da0c80314ce8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "727c0844-2a6e-4730-9c83-fcf1802ebbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cadb9f-3b97-4ff8-827a-a5fe150d2809",
        "cursor": {
          "ref": "a478ba07-0a2c-40c7-a1b9-f85501c06242",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6ea02ec5-d409-4dc8-8248-1b9a2d578319"
        },
        "item": {
          "id": "27cadb9f-3b97-4ff8-827a-a5fe150d2809",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "96c06d47-5ac3-46bb-8492-a5fda4fc7af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731e0aab-f294-4139-b797-8b86efc892ca",
        "cursor": {
          "ref": "c9f6257c-6c08-4038-afc0-9f84aeb7236f",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ef32d4cc-2bea-4574-a3c0-a46061c1ccc7"
        },
        "item": {
          "id": "731e0aab-f294-4139-b797-8b86efc892ca",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "55ac0378-d13c-40ff-9770-3efb0e72f43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56264d07-9458-4a93-acce-a444d6779b27",
        "cursor": {
          "ref": "62a3ed3b-e58b-4e8d-b807-a2180ca0bff8",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "32f3ffc0-f451-4ee9-b332-6958112bcb23"
        },
        "item": {
          "id": "56264d07-9458-4a93-acce-a444d6779b27",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "37c416c6-b33c-4b9c-820a-d34d31315d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53aed18a-52f0-4596-acfa-f67735e2df5c",
        "cursor": {
          "ref": "71881a92-2003-48e5-962f-c99d1ae50956",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dc629668-8cf7-43af-8a61-f6267e8e87a2"
        },
        "item": {
          "id": "53aed18a-52f0-4596-acfa-f67735e2df5c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "74fb7b89-cc82-4f1a-bf77-cfcca9ed8234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdca9ce-898d-49a5-8330-aeff178d5cb6",
        "cursor": {
          "ref": "8be9d25d-2901-4286-b58f-b51327b6b7f1",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0419971a-febf-4a27-aaa3-49407a237dd6"
        },
        "item": {
          "id": "dcdca9ce-898d-49a5-8330-aeff178d5cb6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "99213046-4ae9-4b7b-95b2-8322714216b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939d54d8-54f7-452d-a75f-065cd3366155",
        "cursor": {
          "ref": "9aafd846-ff91-4e59-ba1c-9762b4bcabbd",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c3779e80-6cb6-44d2-b060-54015b3da7c6"
        },
        "item": {
          "id": "939d54d8-54f7-452d-a75f-065cd3366155",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4e1891ae-7553-4c95-a0a0-dabae2de66bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dcbb32-3e92-4d69-a325-a916bb05366a",
        "cursor": {
          "ref": "111a19ac-f1f7-482c-b5b4-41905d1366cc",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "63189674-eaa0-4838-8fe3-99a755e5d4ec"
        },
        "item": {
          "id": "f3dcbb32-3e92-4d69-a325-a916bb05366a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4cd2c3ed-c411-4205-8955-df926e4ec607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2b2891-53e4-44c5-beff-a514242d8ab2",
        "cursor": {
          "ref": "424b5fc0-5364-4c74-8a4f-7ebcdd35703f",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6319b4f9-527d-4a1c-a780-9a42963e5d9b"
        },
        "item": {
          "id": "4a2b2891-53e4-44c5-beff-a514242d8ab2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "44f660e5-9c87-4e4a-abcd-d343982b4ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfa445c-a750-492b-ab38-239d4611ba77",
        "cursor": {
          "ref": "edae1f06-8c2c-442b-8527-b44338dc57a7",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4997f697-482a-4afa-9472-c9bbc253935d"
        },
        "item": {
          "id": "6dfa445c-a750-492b-ab38-239d4611ba77",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "354edb3d-754f-45f7-b519-f5908ae8f03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0d5e5e-679c-4b61-92af-0880d99ddb0b",
        "cursor": {
          "ref": "3eb3aa76-65c0-4a98-bb5e-18ce1a6f39ac",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d0e41902-d69d-4456-90e9-82e846fdf6e0"
        },
        "item": {
          "id": "9c0d5e5e-679c-4b61-92af-0880d99ddb0b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2bba996a-4c8a-4e20-94d9-879b24733af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00eddd73-df1b-4824-b52f-fc9c0438e255",
        "cursor": {
          "ref": "ad698b12-ea56-48c9-8dca-29c51658b97d",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8b3f28d0-2b4b-4c4d-a958-73833b3aa6a7"
        },
        "item": {
          "id": "00eddd73-df1b-4824-b52f-fc9c0438e255",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "233e15fb-bc2a-4b4f-9a1c-115ade522442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a54835b-6c05-4a68-a811-b93eb44952f6",
        "cursor": {
          "ref": "aaee6a38-0f51-4c18-b3de-0bcdeaab2705",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "77d990ea-21a7-4f67-89fe-34defb0cdcbb"
        },
        "item": {
          "id": "9a54835b-6c05-4a68-a811-b93eb44952f6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "304aef98-561e-4af4-ba07-504202861c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58df8979-cb14-44ee-999b-257bde23d004",
        "cursor": {
          "ref": "70d2a471-70ea-4d51-af07-8808beedbbc0",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "191f5442-78c3-4832-b7bb-2aaec521324f"
        },
        "item": {
          "id": "58df8979-cb14-44ee-999b-257bde23d004",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "544fe95d-d49d-4644-bbcf-c782180cabad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97c0182-c634-4e65-8c29-0c0e70238a4b",
        "cursor": {
          "ref": "c93de03e-adf8-4cc4-93d2-83577aa492e6",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cb89f94b-7cc8-42d7-bae6-5933e329dd88"
        },
        "item": {
          "id": "d97c0182-c634-4e65-8c29-0c0e70238a4b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "af1a143a-f4ea-49dc-a32c-bfb502a90648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919949b6-561e-4507-a999-38459298ec0a",
        "cursor": {
          "ref": "860f9e6f-2cc2-4d23-8ec2-40a26caec73d",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "83ff5fdb-4c56-4a50-a7fd-1245b6a87382"
        },
        "item": {
          "id": "919949b6-561e-4507-a999-38459298ec0a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "38395ad2-0ebe-42f0-a4cc-16c80818e095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97117046-574a-440d-8760-eb0280f414c2",
        "cursor": {
          "ref": "b6da67e0-81c0-4a29-b1a9-f93486bed9b4",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d03df763-fcdf-42ee-8871-a52b0b5fc2d6"
        },
        "item": {
          "id": "97117046-574a-440d-8760-eb0280f414c2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f24e93e4-cf19-4b7c-80e2-17e724e763c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44319c9-d300-4ef3-b0a8-d09c4a17f0fd",
        "cursor": {
          "ref": "47715065-559b-4f36-89f6-e30193b01821",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "78890d41-7b5c-4df1-8014-7b957580865a"
        },
        "item": {
          "id": "e44319c9-d300-4ef3-b0a8-d09c4a17f0fd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8bf3d888-7cc0-49b9-bf89-a938264e7e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bafc0f0-078a-4541-9039-44351a7b4c5c",
        "cursor": {
          "ref": "d0b64963-6172-45bd-9a21-0d1155ce208a",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fc67f21e-e547-4fee-92e8-7f12b441b80a"
        },
        "item": {
          "id": "0bafc0f0-078a-4541-9039-44351a7b4c5c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6244a46b-9e28-4038-b886-ce77c78efcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef17fcf-0085-4ada-9085-d649d261318a",
        "cursor": {
          "ref": "62b83ba7-df7f-4809-81c9-a30bbe97d8c2",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b612d4c0-5c67-4950-957b-d55873139962"
        },
        "item": {
          "id": "aef17fcf-0085-4ada-9085-d649d261318a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2e8b63d9-01e5-4ca8-9299-c018a28f81d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12034c5-c07b-478a-b0b8-bd53041862bb",
        "cursor": {
          "ref": "5e2fce50-2ee5-4670-a17b-689de778c04a",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "117795cf-927d-4a27-90c8-70189d10b5aa"
        },
        "item": {
          "id": "b12034c5-c07b-478a-b0b8-bd53041862bb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3a98033a-6e0c-4d5d-b16e-bc5ebb768abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac0475f-0086-47b2-bbaa-5e7b56dcc9fd",
        "cursor": {
          "ref": "96062ecd-3919-488a-b34c-9767d62a2fbd",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "011a947d-7b88-426b-bdb3-5a650bf8cd98"
        },
        "item": {
          "id": "eac0475f-0086-47b2-bbaa-5e7b56dcc9fd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "81e6a763-0595-45cf-aaba-5fba8f2fdbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779a548b-0d73-4a30-a022-426128502a74",
        "cursor": {
          "ref": "8b328f46-a91d-41e5-85fb-7a0454ca1933",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "10b830ca-7211-4d47-8a18-a3e3549118f9"
        },
        "item": {
          "id": "779a548b-0d73-4a30-a022-426128502a74",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c7e50eeb-bce7-43d8-9049-cab5231b2e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4317e6-e3da-45ad-8d21-f36aded72b66",
        "cursor": {
          "ref": "3a7bca9d-5323-4510-bf05-79f7364d23fe",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "66a97e2f-f975-410a-bd40-a611e7f47f86"
        },
        "item": {
          "id": "0c4317e6-e3da-45ad-8d21-f36aded72b66",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4e9d2c32-d95d-4d40-a38c-b7d0452733a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a255727-bdac-4c87-85c8-7b055f955261",
        "cursor": {
          "ref": "37ff304e-7a2e-484f-9aa9-a891069131bb",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8ce6798f-5096-457a-b18b-572f814806d5"
        },
        "item": {
          "id": "8a255727-bdac-4c87-85c8-7b055f955261",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "161a7a9a-2b25-4226-8511-8914a5f0b014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf0fc07-249a-45b8-b291-9d2a393601af",
        "cursor": {
          "ref": "a9152e4d-a43d-4703-81b4-ac453b17faaa",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "36c77a83-34b3-45d4-ba99-37c557bb76a6"
        },
        "item": {
          "id": "7cf0fc07-249a-45b8-b291-9d2a393601af",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1910061e-208f-447a-8789-52fb11939ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5894acb-cb58-4ba2-bb43-dedadad5a384",
        "cursor": {
          "ref": "4e8a8c0a-365d-468d-a962-9a42dd7a4103",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6bd811d7-2fb7-4bf6-8a89-cdd8db001379"
        },
        "item": {
          "id": "e5894acb-cb58-4ba2-bb43-dedadad5a384",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "817cd6ec-67dd-4482-926a-ab88a258166b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdfb3c9-b29c-44e7-9062-f4c78aa16a9b",
        "cursor": {
          "ref": "04e4aa72-ad0a-4a4c-9f83-bcdcd9f657bf",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "adc3284a-7aa2-4570-b2dc-c01ef4c0bb3f"
        },
        "item": {
          "id": "9cdfb3c9-b29c-44e7-9062-f4c78aa16a9b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "19c250a4-56a9-436b-9bfc-8288c7aaf3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38230416-be7d-49e7-9cad-58c6c070bf4c",
        "cursor": {
          "ref": "618a04bd-bd19-4818-891e-a254f4c7d4b3",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a4cce833-5023-471a-ae45-823ab6e9c2dd"
        },
        "item": {
          "id": "38230416-be7d-49e7-9cad-58c6c070bf4c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "838051e2-1565-4063-9b84-78cc721b72e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98069002-8ca4-4a9f-b28e-525ef7c18652",
        "cursor": {
          "ref": "ee70278e-ba32-4f45-8781-ea9d0e77b2d0",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7c8392fe-f983-4945-a2ec-6e1d76df0c88"
        },
        "item": {
          "id": "98069002-8ca4-4a9f-b28e-525ef7c18652",
          "name": "credentials_issue"
        },
        "response": {
          "id": "31f89ae6-711d-42c8-8150-dbc30d5cd019",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb71301-0d38-45fe-b68a-360e75cc1abf",
        "cursor": {
          "ref": "406116a7-c0ae-4aa7-a4bd-a85d470091ec",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a2d9875d-3d3e-4a47-b605-474a1db1ebef"
        },
        "item": {
          "id": "6bb71301-0d38-45fe-b68a-360e75cc1abf",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5ea702d9-8fd6-447a-b18f-9a9026d5c1b5",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "469c61bf-2db4-4830-9456-d99f3d391f1a",
        "cursor": {
          "ref": "bbba92a8-9591-44bf-9c68-47389ffa727c",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f874b7d1-53f9-4311-a74f-6abd8133d6f6"
        },
        "item": {
          "id": "469c61bf-2db4-4830-9456-d99f3d391f1a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e7629e24-47cc-4d36-9013-1e860bb0bb24",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4219910-59dd-447b-aaae-c42b07bb96dc",
        "cursor": {
          "ref": "20531672-16ad-46dd-a438-97fac4bba94a",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0e5dd1ce-201f-4a97-bfbc-21e3a92f7cab"
        },
        "item": {
          "id": "c4219910-59dd-447b-aaae-c42b07bb96dc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "70d6651b-68ac-4414-904e-f36daca5f229",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8186adfe-76b6-4345-b517-bc0dd4630ba3",
        "cursor": {
          "ref": "01f16df4-9a98-4601-a69c-eefa2c989853",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2a421549-7114-4d8a-8a11-d71b29e4d43a"
        },
        "item": {
          "id": "8186adfe-76b6-4345-b517-bc0dd4630ba3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c94cd55d-2ece-4f2e-b560-c0771e32c51b",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff38f770-1ec8-41c2-96bf-b9906e99e8b5",
        "cursor": {
          "ref": "aa6e78e7-b9e6-4583-b794-8eb693fa4aeb",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5ed262c4-1f1c-41a5-8aaa-f8f7d51d8046"
        },
        "item": {
          "id": "ff38f770-1ec8-41c2-96bf-b9906e99e8b5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f7c48df3-5cfe-418e-be45-9c23a4754ccf",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd02d56e-3cb1-4502-bab1-48429173611d",
        "cursor": {
          "ref": "f49b6a7e-3d1f-4d1d-9e9c-b9d1e23f16c7",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8f72edb0-e3ea-49c0-82c0-14994172db62"
        },
        "item": {
          "id": "cd02d56e-3cb1-4502-bab1-48429173611d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "64a6f8ef-cca2-421a-9115-f2535149df40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e56ce23-9917-4791-97ef-641728ecc82d",
        "cursor": {
          "ref": "b60785f2-4031-46d1-a05c-136590c4b995",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4bd69ed6-e5f3-415b-9dac-df7d4404ea13"
        },
        "item": {
          "id": "3e56ce23-9917-4791-97ef-641728ecc82d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a6831a28-67f1-4477-af64-ac8206a515cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1424941-3f3f-41fa-9215-1fd61573da0d",
        "cursor": {
          "ref": "d804f007-2ede-4efb-8d77-f11f8464245d",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cb339de6-7311-4fb2-acaf-9483b0fc4129"
        },
        "item": {
          "id": "a1424941-3f3f-41fa-9215-1fd61573da0d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "18470a23-0697-4a20-a9cf-60da5156a15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5291fa57-f2a3-48a6-a53c-5a7af33b686d",
        "cursor": {
          "ref": "a0341016-db7a-418e-9d31-34e1e3382cee",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bea85588-ea45-43d7-a4bd-2f2b32d41f9d"
        },
        "item": {
          "id": "5291fa57-f2a3-48a6-a53c-5a7af33b686d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "660018f2-be8f-4f01-85fb-583683e3fa4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696be766-3fb3-4c3a-bfa7-76f9739ea35b",
        "cursor": {
          "ref": "b9daba8b-5cc3-419b-8843-a898e1a78c59",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f8eb64f6-7e7e-463b-90e5-34eb64f05907"
        },
        "item": {
          "id": "696be766-3fb3-4c3a-bfa7-76f9739ea35b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "db69bb4c-f5db-48d7-bd77-bbb3001b7fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2ad878-44ba-4039-ba75-2da8a9a07515",
        "cursor": {
          "ref": "529c6198-6f34-4f4b-9b81-da47268db505",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "61afa998-4fdc-4c8d-9909-338eb0b396d6"
        },
        "item": {
          "id": "2a2ad878-44ba-4039-ba75-2da8a9a07515",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "359cbbc9-0cda-4189-95a9-0990ff5cadd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e722ddf-470d-487b-9b98-1775a4066cb6",
        "cursor": {
          "ref": "57a4187b-a240-4869-ab41-389109698919",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f601a0c5-574d-44ad-9750-ace3d5ed9ec7"
        },
        "item": {
          "id": "7e722ddf-470d-487b-9b98-1775a4066cb6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fc010920-2d44-476d-ad2d-d5edb7b50ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696ae078-0456-40f7-b25a-4eb8ae4c17de",
        "cursor": {
          "ref": "a6d4741b-3757-4f16-b6d5-c2d2d8d5d66f",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ebc21eac-09b4-40ac-8069-4dcbb45fec61"
        },
        "item": {
          "id": "696ae078-0456-40f7-b25a-4eb8ae4c17de",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "59bb3cc5-4192-4d65-b62d-61893dd8226b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53431835-36cd-431f-b6e6-e724a30e1a86",
        "cursor": {
          "ref": "62223ed4-1c26-47e2-a1f9-1dcb1496a6c7",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "233d9a24-3d8a-4ec4-8f03-7c1809d66901"
        },
        "item": {
          "id": "53431835-36cd-431f-b6e6-e724a30e1a86",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7c4f681d-a9e7-424f-9c3d-5a3695077021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7dedad-637b-451b-91d0-37539b4ce32e",
        "cursor": {
          "ref": "46f633a7-f81a-41db-a9ab-d1f33d4e934e",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0604175f-a196-4f55-ac74-3386a3839d0d"
        },
        "item": {
          "id": "df7dedad-637b-451b-91d0-37539b4ce32e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ac56c66f-7916-42f6-b421-c76847e33495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf062db5-7d6c-4c7e-9803-564ce761fdb2",
        "cursor": {
          "ref": "881344e7-fc3a-4340-ae27-6c821ad37c05",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ad0f238d-9cd1-4ec2-ad90-0727be48845f"
        },
        "item": {
          "id": "bf062db5-7d6c-4c7e-9803-564ce761fdb2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d3a90b63-0465-4f07-bb69-9feb27f5aed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739dc94c-cbaa-4310-89c4-839f7800d1fd",
        "cursor": {
          "ref": "28037ad6-3bb4-4128-b8ad-53b3a063235f",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9c9ff449-07d5-4b95-a0ff-586d34596fb0"
        },
        "item": {
          "id": "739dc94c-cbaa-4310-89c4-839f7800d1fd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "35191a5a-7045-4016-a2bb-8b9133a37929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60f377f-39cb-4011-89bf-20caff50626f",
        "cursor": {
          "ref": "d54453a4-d8eb-46a8-924f-a2d452f037e0",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e36ca949-efe0-4e60-9298-69d71a69ba21"
        },
        "item": {
          "id": "c60f377f-39cb-4011-89bf-20caff50626f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "50dc250b-eff6-4894-8f86-d87f33e33f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d18e8a-861a-4e37-b21a-249c671905fb",
        "cursor": {
          "ref": "77de07ec-9aaf-4a8f-a407-b06728bc7822",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5529b044-e5f4-49d9-a564-e3d563cc6e0e"
        },
        "item": {
          "id": "e9d18e8a-861a-4e37-b21a-249c671905fb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fc70b475-fa4e-40eb-89a3-c46655885ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6618da4-278c-42b7-88cf-bfdccf75c3c7",
        "cursor": {
          "ref": "24474358-e0f8-4b6b-aeeb-70e19339e8d3",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "48d4577d-8f15-411a-b7c8-fc7a6d309617"
        },
        "item": {
          "id": "a6618da4-278c-42b7-88cf-bfdccf75c3c7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e4a94759-dc4f-4b21-a138-ab31ec78ac05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9211f4-7d86-4c46-a134-c914c9137280",
        "cursor": {
          "ref": "6d36cfe4-2012-400e-8119-4149be5b911f",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dae187c1-bef9-4c19-b021-24866f85c99f"
        },
        "item": {
          "id": "ae9211f4-7d86-4c46-a134-c914c9137280",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dd044e01-a406-4c17-a491-13a52a5446ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7490b8-487e-4061-844e-86521ac004cc",
        "cursor": {
          "ref": "1e9724d2-ee83-4fb6-a88d-7e849915fb0c",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8862a4b1-6b86-4d8b-a2c4-a939a2c9cedd"
        },
        "item": {
          "id": "dd7490b8-487e-4061-844e-86521ac004cc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4e35a4c2-a902-4d7a-8c5f-c11fa7836f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc688dd2-0654-4e3d-9695-c1220b9c5d54",
        "cursor": {
          "ref": "c6e11453-a1f6-4b5d-98c9-345684a4894b",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d4f8c1d1-6e69-4fb9-acfc-f4815f04f1ab"
        },
        "item": {
          "id": "fc688dd2-0654-4e3d-9695-c1220b9c5d54",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "04cd70a3-8f36-4dae-b787-b143afcc3d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543a4846-87d9-41f8-9898-848cb3e4f0e3",
        "cursor": {
          "ref": "6539becd-d06d-4c76-b7f3-b1bb69ff5f7a",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1558baf5-150c-447f-a8bb-ad351466b213"
        },
        "item": {
          "id": "543a4846-87d9-41f8-9898-848cb3e4f0e3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f6aa544c-1b92-4c03-b399-50c702b74404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390ff213-f949-49c0-9fb4-dc3ba85475d0",
        "cursor": {
          "ref": "e6baded7-8cbb-4572-a85c-3475c1c2ba82",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "82924f91-ec37-4195-8cc8-06cb1756210e"
        },
        "item": {
          "id": "390ff213-f949-49c0-9fb4-dc3ba85475d0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7b1b3f20-e03f-4f2c-93c6-bc19fc67db5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c498c4f-f9be-48aa-9374-dc53abe7e5b9",
        "cursor": {
          "ref": "8520bb49-c68f-43c6-8ae9-6beee003d421",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ca19650e-9603-4856-8543-4f6c6c33d505"
        },
        "item": {
          "id": "8c498c4f-f9be-48aa-9374-dc53abe7e5b9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "55b2409e-b690-477a-a426-d5d3d7ea0e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e3936d-4168-4b53-9be2-1a4a4c679f47",
        "cursor": {
          "ref": "db2ac4ff-c136-4f72-bb49-ce7b0592d993",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f0f37558-45ef-4a78-97bc-635b38686b16"
        },
        "item": {
          "id": "21e3936d-4168-4b53-9be2-1a4a4c679f47",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "56b021f9-c916-4aa0-bc21-8e28e06221ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b7fbbf-bf97-49a5-9f3b-cd2939533a4c",
        "cursor": {
          "ref": "4660e3a5-95cb-4b46-9369-73e0326f79c9",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0e5e2e60-3473-4842-911c-2983073f8c4a"
        },
        "item": {
          "id": "e1b7fbbf-bf97-49a5-9f3b-cd2939533a4c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "96b74911-11f9-48aa-8df6-b9e08bc96d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d94a717-4d1b-451c-aaaf-3de5734c4d21",
        "cursor": {
          "ref": "1d4572a5-d3f2-4b57-9c25-963be3669e17",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8f662171-241a-4b4a-8281-4d41b0a6a7a2"
        },
        "item": {
          "id": "0d94a717-4d1b-451c-aaaf-3de5734c4d21",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c85ccfda-607f-47ad-a756-48632bc7b987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b8699d-a213-46b3-8945-a1a10fb7107f",
        "cursor": {
          "ref": "44dd89b7-5a68-4498-803e-faffa35bb424",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b6f757ad-0e0c-4ead-bdf4-031a27b4a3b1"
        },
        "item": {
          "id": "70b8699d-a213-46b3-8945-a1a10fb7107f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "42de397c-d441-48d6-8a6d-3df4ba12e3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27d59a1-9f4e-49cc-8119-aa17e8ace507",
        "cursor": {
          "ref": "91deb736-6cbf-4fd9-81b0-eb68f73bce8b",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "35d36797-16d2-4254-89bc-a86073b0c401"
        },
        "item": {
          "id": "f27d59a1-9f4e-49cc-8119-aa17e8ace507",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8eff3d4d-7abd-42d5-b577-6557fb570c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25547946-b05d-45ca-86a8-c1f6dd7e61cb",
        "cursor": {
          "ref": "afac7353-71cc-4bf1-a2e8-3b8f49f2413e",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f2a935f0-ed2b-4729-b084-fc507c84e286"
        },
        "item": {
          "id": "25547946-b05d-45ca-86a8-c1f6dd7e61cb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e540637b-0e46-4316-9f25-34c11ad67b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7b4ac1-5a7b-4ada-83b2-4d93477c8a9e",
        "cursor": {
          "ref": "845cfe30-c08f-4ded-94e1-5736137c7b13",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a9cb4226-ce1f-4210-b333-537cfd0e6b42"
        },
        "item": {
          "id": "ef7b4ac1-5a7b-4ada-83b2-4d93477c8a9e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d9878b3a-aa0d-4506-99e0-41747b77bd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e012aa8-3250-4ef0-a25c-4792abbdeb78",
        "cursor": {
          "ref": "ee1f8cdc-8a99-4e14-86c2-d8733bc064ef",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3562e7c7-dc59-44ce-bb00-5d4221ce1a16"
        },
        "item": {
          "id": "2e012aa8-3250-4ef0-a25c-4792abbdeb78",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b87f9e89-15c9-45a1-8bf2-99dc767a9b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc83868-46eb-48a0-8599-a6c7d2de463d",
        "cursor": {
          "ref": "0666059b-8bfc-484b-bbbd-bed2559ae22f",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6d231e28-0923-4c9d-b0c2-38a122848191"
        },
        "item": {
          "id": "1fc83868-46eb-48a0-8599-a6c7d2de463d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "07ddebb8-9119-48f1-86bf-ca2c4b48b9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f23c5e-696a-429b-9b13-84c467add0c8",
        "cursor": {
          "ref": "6b2f60f7-b5e8-4aaf-9f19-da38973bbcd2",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5efd9017-8464-418c-8f90-1a5af0f8ac03"
        },
        "item": {
          "id": "10f23c5e-696a-429b-9b13-84c467add0c8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d2776226-b658-40a8-b773-892e04d0cd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8801cb6e-1339-4ce0-9da8-7216939b437f",
        "cursor": {
          "ref": "1b4faa0d-b7d0-42c6-96f2-8c5f68c3eb69",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7ba81d7c-ea3a-45f1-8080-48fc8034b6b4"
        },
        "item": {
          "id": "8801cb6e-1339-4ce0-9da8-7216939b437f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9fc2e5e1-9ed4-44ba-bd8d-d8778063368f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bff919-a81b-4a24-b8bd-2730f585160e",
        "cursor": {
          "ref": "79a7a80c-6cc0-47d7-9eda-c587dbb7aeb4",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "70e12ef4-d078-4358-98de-27f42bc08b46"
        },
        "item": {
          "id": "c9bff919-a81b-4a24-b8bd-2730f585160e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2430ad17-d439-4b16-a284-2a095bf7295e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd2294d-f2ae-4ccb-9594-d69c53eb8016",
        "cursor": {
          "ref": "af71957e-cfaf-46e8-be96-8939b791abea",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0b2a26c9-03ff-4911-99f9-c6413fd7324a"
        },
        "item": {
          "id": "fcd2294d-f2ae-4ccb-9594-d69c53eb8016",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "59c7785e-a549-4785-b0d9-f376e751ac02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f74ff0a-1802-49d2-b182-515bf25bb405",
        "cursor": {
          "ref": "9760036f-5997-45d7-87cc-714a66a0fc4d",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "369bd2be-cfe8-46f2-948c-e6f8b531eb9b"
        },
        "item": {
          "id": "0f74ff0a-1802-49d2-b182-515bf25bb405",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "51e12cc5-799d-45e1-b00e-ff0c5ca90224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8b0e6d-a545-4938-aeb9-41d3e27b6b40",
        "cursor": {
          "ref": "24336256-1caf-46d9-9818-10cd523f7805",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "01a55bc8-3bae-4569-9ba6-81bfef05afb3"
        },
        "item": {
          "id": "ac8b0e6d-a545-4938-aeb9-41d3e27b6b40",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "948e1b68-9d63-48a6-84e4-a8119bc7598d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf6e3f9-19f9-443e-a539-36072699bc6c",
        "cursor": {
          "ref": "e033f605-0f17-4920-a4d9-11a72de961b9",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "918658df-f1c7-4163-a624-efbe0268847e"
        },
        "item": {
          "id": "6bf6e3f9-19f9-443e-a539-36072699bc6c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "932583d7-00d6-4220-9c09-768d3bd881f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc27022-c4df-4465-a25b-be862021b424",
        "cursor": {
          "ref": "62ee0a85-e368-4d72-9a8f-7a2fcd13a933",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "62cf7166-4f55-4948-ba7b-8f303b7a215b"
        },
        "item": {
          "id": "3cc27022-c4df-4465-a25b-be862021b424",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "264872ab-fa7d-4c0f-ad5f-326011d5410d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17db746e-891b-440c-aea6-fd686cd724c2",
        "cursor": {
          "ref": "065fc934-a1e0-4a25-9d7b-c08409097658",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "33e6a548-760f-47fd-864b-c42590dbd101"
        },
        "item": {
          "id": "17db746e-891b-440c-aea6-fd686cd724c2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a8c0dc18-1a21-4de6-8fbb-027b69fb246a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91589489-4039-44d1-844f-f7ead133c03a",
        "cursor": {
          "ref": "c2f22c97-1616-4571-9a96-a19949f3e7fb",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "874fd439-44e1-4cbb-a1d8-2c66625b9b7c"
        },
        "item": {
          "id": "91589489-4039-44d1-844f-f7ead133c03a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bfc9186a-2f3f-49f5-915e-326821e38a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d27d66-2bc7-4b1e-9f79-ecbdf0c25a70",
        "cursor": {
          "ref": "299e4c31-d02f-4fc6-9c84-330b17704b66",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f70fd532-6156-4a7c-a303-6327b1f12626"
        },
        "item": {
          "id": "c1d27d66-2bc7-4b1e-9f79-ecbdf0c25a70",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "448112c8-cb4a-4086-b2aa-ac8c5f92898e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615bf24a-c755-4076-9ac0-04ff85a0849c",
        "cursor": {
          "ref": "9b5809c9-e0e7-465d-9ed1-d2f5f47a06ea",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c459abf5-a21b-4c67-a472-3e59f25673f0"
        },
        "item": {
          "id": "615bf24a-c755-4076-9ac0-04ff85a0849c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9f7dc66b-b698-49da-b6e0-766b1b1976e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5675293a-056f-4954-b30a-4dc07af8ce60",
        "cursor": {
          "ref": "8b80692b-82af-4548-98ce-25a8760602f4",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cc0ec46c-4a01-4fa0-9bef-cebd27a83fc8"
        },
        "item": {
          "id": "5675293a-056f-4954-b30a-4dc07af8ce60",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3cd3d71d-3c58-45d2-8dfb-538195292699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a67c88-2083-4859-8631-f16599c2f8c6",
        "cursor": {
          "ref": "2c54556c-ae37-4d2d-8e13-d95fd31944c6",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ffa2afe3-8459-470f-99ea-65819f8adf48"
        },
        "item": {
          "id": "f7a67c88-2083-4859-8631-f16599c2f8c6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3130db42-49ee-430d-a1be-1d99fd34bc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49e466a-daa5-4adc-911a-9a5ded7a1578",
        "cursor": {
          "ref": "4a17d071-33f0-40d4-8a7c-c159c566f9c2",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "af58e2d0-4211-41ca-8a96-d8bc2461ea7f"
        },
        "item": {
          "id": "f49e466a-daa5-4adc-911a-9a5ded7a1578",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "be2b5e34-f12a-4b39-8d3b-6fb990ce80f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1b65ea-9a24-4285-be22-871174ea2f8c",
        "cursor": {
          "ref": "f8527097-df2d-439e-9894-39c963afa9c5",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "39f07f34-0571-4907-a456-b1c10def042b"
        },
        "item": {
          "id": "9b1b65ea-9a24-4285-be22-871174ea2f8c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ce4caa00-1be5-45f9-809f-723dcc1a65f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57923ac-63cf-4039-a4b2-29d887607711",
        "cursor": {
          "ref": "caa28f4f-7598-469d-affb-2852449ca480",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "00de7dba-eb06-4e5a-aadd-5062f84e24d2"
        },
        "item": {
          "id": "d57923ac-63cf-4039-a4b2-29d887607711",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "569b1043-f26d-4e0c-a706-c2f2982b73df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9e0de9-d34b-4aaa-b5b8-483a31bc3190",
        "cursor": {
          "ref": "7fb2cac8-0161-4b9c-a4dd-97d37bc9321c",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "23f33996-de84-4a7c-8076-a41394f9cf5f"
        },
        "item": {
          "id": "5e9e0de9-d34b-4aaa-b5b8-483a31bc3190",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6c3ae78c-2db5-48e2-bbd5-8fdd3d38b754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60b59b5-e1a3-4b00-a11c-ce321ccb73ad",
        "cursor": {
          "ref": "c294251b-1907-43fa-8419-6f1e523dfb8d",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "72faf994-4aef-4d75-a29e-5ed78815bf9f"
        },
        "item": {
          "id": "a60b59b5-e1a3-4b00-a11c-ce321ccb73ad",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3e6ad081-badb-4442-a07c-7852993e4d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f7f2c6-5bc1-4591-b2b2-f01a27b301d1",
        "cursor": {
          "ref": "6b1ffbff-090e-4ee4-983e-8267ae061092",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9f41788d-e9cd-42a3-ad79-5d143e505723"
        },
        "item": {
          "id": "f7f7f2c6-5bc1-4591-b2b2-f01a27b301d1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c79091ce-3902-4e55-922b-fdff740d89fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09739005-d270-427e-9217-a0878963f21c",
        "cursor": {
          "ref": "883d43fc-a0ad-4067-a716-0c6a138ed3bb",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2ad66916-90db-4f17-91ba-bf634f074881"
        },
        "item": {
          "id": "09739005-d270-427e-9217-a0878963f21c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a82ac0b3-1e50-4e27-81a0-5ec61229bc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153963ed-d981-4738-876b-b4127436f53f",
        "cursor": {
          "ref": "f7b9e405-021b-4f7e-a0dd-3bb76bbbac1e",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7467f900-585b-4135-ac6b-e54fb7889df2"
        },
        "item": {
          "id": "153963ed-d981-4738-876b-b4127436f53f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3284e35c-7a07-45f2-9a7d-799b52b6e7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48514cb-279a-4de2-b336-d63316a9603c",
        "cursor": {
          "ref": "abda0fbe-e759-4cce-8bef-def654dcdbb1",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c1a3ee83-3ca6-458c-97c5-6f34e09c666d"
        },
        "item": {
          "id": "e48514cb-279a-4de2-b336-d63316a9603c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8c301410-87e0-48a8-bef3-3197f4c1b239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba88ebe-8471-4505-8661-ad629a97614b",
        "cursor": {
          "ref": "fe0b0008-b34c-4a67-a8da-8f662367d009",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bdcfe7bb-ad9d-4bbf-8343-83c07ec3ff9e"
        },
        "item": {
          "id": "dba88ebe-8471-4505-8661-ad629a97614b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1b8abe49-6939-4ae4-a925-7072dd65400a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09159a25-c4a4-4086-897a-b4ecc0b6f021",
        "cursor": {
          "ref": "6df3042f-f88e-463b-95fb-501377d0df5a",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "178f78b9-82e5-4d21-8c07-82725aa8aa50"
        },
        "item": {
          "id": "09159a25-c4a4-4086-897a-b4ecc0b6f021",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c0ca2964-8616-428d-9d22-8c5ed5cc13a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e3817a-b2ef-4c36-80a1-e8612ca0036d",
        "cursor": {
          "ref": "238e04e5-a2ce-4adb-99d4-c10f08f18233",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "eff905a0-0125-469e-8193-a52237b0227a"
        },
        "item": {
          "id": "18e3817a-b2ef-4c36-80a1-e8612ca0036d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8bb0f4e8-8639-4c0d-b618-5d88bd811bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3309e1cf-417f-4ff3-8b14-9eede21cff96",
        "cursor": {
          "ref": "ea876c54-556f-4c3d-9afc-fcde6e6def72",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "90ac28c4-20ea-4ff7-88a8-f49fd5789c2f"
        },
        "item": {
          "id": "3309e1cf-417f-4ff3-8b14-9eede21cff96",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6e1b3b20-4210-4e75-9763-6fc96efa3d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30b6fc1-5f65-4b1b-8630-9f77b2f7d638",
        "cursor": {
          "ref": "7711fa14-c304-45e0-ba2f-5268851ed9e5",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5bafe155-3ee6-47ac-92b0-bdd9cd37f548"
        },
        "item": {
          "id": "c30b6fc1-5f65-4b1b-8630-9f77b2f7d638",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ed21b325-8a2c-4aa3-a351-8781fb937af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545306c2-539c-45d9-94b0-4d8becdb4703",
        "cursor": {
          "ref": "493446ca-0e10-49fb-a0a3-ddfb81f79d3f",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d3324356-52bb-40ff-9c24-704d291a3017"
        },
        "item": {
          "id": "545306c2-539c-45d9-94b0-4d8becdb4703",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "83caf539-7ca8-4ebd-81c1-e1a6a712d48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02cbe80-ee10-4e2e-af91-0f906bdd5a06",
        "cursor": {
          "ref": "c5ee3cfd-3d23-4bb9-8d99-33a03294b2d9",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e7cd34e7-300e-4f34-8683-c00bbdb51dbe"
        },
        "item": {
          "id": "b02cbe80-ee10-4e2e-af91-0f906bdd5a06",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0959a65b-af66-43e4-98f8-ea3174d63877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e15ebbb-ee73-4ea5-905b-a9cc7e96a501",
        "cursor": {
          "ref": "a5b3fd80-2e31-4bd9-b301-04b580630e1e",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "52b9564b-c685-4180-b901-10acc06bb1c0"
        },
        "item": {
          "id": "6e15ebbb-ee73-4ea5-905b-a9cc7e96a501",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "992a0359-2ae0-4ed8-a622-76d57f967ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e8afa-5440-447b-94f2-622c956c5886",
        "cursor": {
          "ref": "92458f17-f21d-4fb3-8e73-d07f5cd1ded5",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "24d05f0d-dfde-4b25-9aae-15eeb9af17c9"
        },
        "item": {
          "id": "bc4e8afa-5440-447b-94f2-622c956c5886",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b7fb0490-9cd8-4a43-98c8-92d14055289e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9878fc5-a94b-4cb6-a779-52a3675b58ad",
        "cursor": {
          "ref": "ca229cbf-2d68-4b25-a2a2-f03383193717",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2421a2de-6061-419e-9c67-816daa7f548d"
        },
        "item": {
          "id": "a9878fc5-a94b-4cb6-a779-52a3675b58ad",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "92a31de2-59a2-4297-9b8f-3b96a53d676f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c401c988-aa28-4a6e-93bc-12166cf9e269",
        "cursor": {
          "ref": "2937c695-09f7-406a-a9f6-5fee0d3b9bf4",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c44371a9-c155-4d4c-a1da-2b7192d1c707"
        },
        "item": {
          "id": "c401c988-aa28-4a6e-93bc-12166cf9e269",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ec3d7305-52cb-4b66-9740-6490e7eb2b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10881d6d-e89f-4ce8-9680-3f78e01dbbe3",
        "cursor": {
          "ref": "3e438a64-2d62-42c9-afe8-67de357a0255",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7cbefe39-b522-4671-9525-f492bdd2bf15"
        },
        "item": {
          "id": "10881d6d-e89f-4ce8-9680-3f78e01dbbe3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7ea3d338-9156-490a-bdcf-63f55eb96ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbc8505-4771-480d-b628-eb97798c908f",
        "cursor": {
          "ref": "567a0704-ad38-4d37-85c7-49e5b278fa13",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "675d74b9-fe8e-408f-895e-89f5577d4e1a"
        },
        "item": {
          "id": "8dbc8505-4771-480d-b628-eb97798c908f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "58b88031-42b7-4d2d-a4c3-624788cd272a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbd62f4-a2f6-4c92-bcc7-22abf4f10b79",
        "cursor": {
          "ref": "153d6fea-f3c1-4dec-8cef-159397b33760",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0adbdace-66b4-46a2-8a49-2a878030deb1"
        },
        "item": {
          "id": "1dbd62f4-a2f6-4c92-bcc7-22abf4f10b79",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c8fd78f8-ea04-40a5-8d85-45f51ad9313e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d992aff1-f58c-47a1-8cea-9f4ddc9d9644",
        "cursor": {
          "ref": "c916a011-c6a2-4071-8cf1-6da673972420",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "92c9e73e-c45f-44cd-837e-ec856545a35c"
        },
        "item": {
          "id": "d992aff1-f58c-47a1-8cea-9f4ddc9d9644",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "12067017-9a64-4d93-a1ea-de73daebd759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57bcd42-69ea-4e9a-a775-658a41b89e49",
        "cursor": {
          "ref": "8bc580d0-0c36-4830-b4db-3511a2437147",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9bbaca40-4725-447a-8d76-adcdc026dc4a"
        },
        "item": {
          "id": "d57bcd42-69ea-4e9a-a775-658a41b89e49",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dcda4ab3-64fd-40c0-ac19-5c21a59d500c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af996800-5ed5-45df-acca-f353bb2f1339",
        "cursor": {
          "ref": "4204e796-4e55-44f6-b6ae-94950eeb0ba8",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4be0c82d-9cad-4c42-a3a1-edb7aaa18178"
        },
        "item": {
          "id": "af996800-5ed5-45df-acca-f353bb2f1339",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d191cdf3-39a0-41ee-888b-b6dddab547f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f4775b-6715-4ace-a011-8ea066f4dbc9",
        "cursor": {
          "ref": "40255b26-a4e3-4d61-ba8a-0c56085b5889",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ac709bad-f7a6-4463-a53e-1058a1874410"
        },
        "item": {
          "id": "a3f4775b-6715-4ace-a011-8ea066f4dbc9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6f4924ba-3e09-4e0f-95a7-97c0bbde5d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d524700-f9b6-4059-a37a-7edca1700ab6",
        "cursor": {
          "ref": "518d3a16-5483-41c5-a7f3-28a9b9139684",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2b0d6f9a-c546-473f-8528-c0e4f337dc2f"
        },
        "item": {
          "id": "0d524700-f9b6-4059-a37a-7edca1700ab6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "12d7a9a0-683d-46d9-94f9-15db252dcc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52904494-6cfe-40d9-a949-2d9c860a5495",
        "cursor": {
          "ref": "115ed267-7545-4fea-9608-05f272efe94d",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f91485fc-0ffd-4766-a49b-76530f4e3492"
        },
        "item": {
          "id": "52904494-6cfe-40d9-a949-2d9c860a5495",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0987cc82-38f5-467e-8f25-3f3f5eb15956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9035112a-6bb5-4b16-b0b6-9ea3e9c4b826",
        "cursor": {
          "ref": "3c10eacf-1337-4081-b2ce-fed386b69fe0",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "856901c8-7a3e-415b-92ba-217f51525e1b"
        },
        "item": {
          "id": "9035112a-6bb5-4b16-b0b6-9ea3e9c4b826",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0ba76171-a8f2-4bdb-81bb-276a8e8abfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ce7ebb-c753-472f-a957-38610cba2bc8",
        "cursor": {
          "ref": "46c0dc70-7474-4402-8106-d3e069bdcf81",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7a59d932-235c-45a7-8cd7-b3dc77ffc6be"
        },
        "item": {
          "id": "28ce7ebb-c753-472f-a957-38610cba2bc8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dd704a36-9f87-42f8-87ee-33055e78f151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a487853-8983-4b93-a8d1-77500cf034a8",
        "cursor": {
          "ref": "a6aeb699-36db-42dc-bcbb-95e3842dab01",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8745a82e-0de5-42e4-8767-7f778d68dd4c"
        },
        "item": {
          "id": "9a487853-8983-4b93-a8d1-77500cf034a8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "90d1c01a-c294-4ca3-917c-754f86b85d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419423aa-cacf-4849-af28-dff32411920c",
        "cursor": {
          "ref": "15383f06-a8e1-4c33-8844-4b5e26340124",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b5663b6a-6ead-4801-b73f-44e57f17cb2d"
        },
        "item": {
          "id": "419423aa-cacf-4849-af28-dff32411920c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e9dacba2-4f5c-4c72-894a-b0180aeb43ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa02ee4-ac72-483c-a6cb-92fafcc1f2fd",
        "cursor": {
          "ref": "abd8e577-b793-4008-b13c-76de9f37f9c2",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "69657fb3-7e7f-4762-9bef-d674eb93af3a"
        },
        "item": {
          "id": "2aa02ee4-ac72-483c-a6cb-92fafcc1f2fd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b03cd4f0-35b6-4d11-bc71-ebac1b298a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdbb47e-f4a1-4266-b919-8f4892c7897d",
        "cursor": {
          "ref": "5275489e-1405-4d19-baaf-d3ce351f3871",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "54e33b86-0c9f-4f46-b7d7-f375f6520041"
        },
        "item": {
          "id": "1cdbb47e-f4a1-4266-b919-8f4892c7897d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e8d1d735-8ced-4f89-8e97-07639d890a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5956c79-394d-4bd5-bd1f-207323067cd6",
        "cursor": {
          "ref": "a849d396-5229-4d9d-acd4-bd5757551eed",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d6694b7c-ab20-431b-87a4-10f22a513f0a"
        },
        "item": {
          "id": "d5956c79-394d-4bd5-bd1f-207323067cd6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0ac56e20-b6b7-499a-94c9-d263b5755e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd4d91b-cb07-466b-8b07-4b2c07cdd75f",
        "cursor": {
          "ref": "8eb88595-0a25-4e3b-b97c-0cc4402e14fc",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "91fd9468-ce6f-4551-8eaf-182f240a2794"
        },
        "item": {
          "id": "4bd4d91b-cb07-466b-8b07-4b2c07cdd75f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9e98fd96-ca16-42f6-84bb-308b3fa31f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a92feb-f5da-456e-b872-677547eb9f24",
        "cursor": {
          "ref": "4810a027-488e-43e8-a111-b3ef871ff984",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f171d14b-37f7-4ac1-bf94-3c948ea9c91b"
        },
        "item": {
          "id": "77a92feb-f5da-456e-b872-677547eb9f24",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e3917d7c-c8fe-4705-ade2-5514cc66b6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdefa349-586e-4a29-85b4-517f0d7bf557",
        "cursor": {
          "ref": "35fcf3ba-3dc5-4b37-a2e6-48236b16a9ad",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "40dd8b79-e5be-4596-8de0-7cc8979da78c"
        },
        "item": {
          "id": "cdefa349-586e-4a29-85b4-517f0d7bf557",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d3acd2e5-28a3-4827-ae04-535fdfd6c8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afeaa74-8748-4666-b57d-abeee95727c4",
        "cursor": {
          "ref": "f123e909-7ee0-4dc6-8af3-3d67905f27ea",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a408c33e-3edc-4262-8790-95fa17165822"
        },
        "item": {
          "id": "4afeaa74-8748-4666-b57d-abeee95727c4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "48b3c8cb-b14e-4eff-a2cc-003a03a794e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e866c53-73b3-4b3c-8aba-e9d6c55de0ab",
        "cursor": {
          "ref": "04be11fa-e1a9-4e68-8f4e-bb60fc1fd2b1",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6d78145e-d6d9-4a3a-bb83-29358e64b229"
        },
        "item": {
          "id": "9e866c53-73b3-4b3c-8aba-e9d6c55de0ab",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "aa8e50d2-c655-4fd1-8b79-e3fadb0644e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfd330f-2edc-401e-939b-578876f0bfd4",
        "cursor": {
          "ref": "463a47d2-7a2b-47b1-8352-0d57e81b4534",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "527fd137-8e0b-4ca5-b977-6a3af02c3a22"
        },
        "item": {
          "id": "5cfd330f-2edc-401e-939b-578876f0bfd4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c2a67cdf-7a45-4e7c-b1c0-646e34e9592b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6038030d-1fe7-4015-9ac5-5a5b7bfcc03b",
        "cursor": {
          "ref": "99e4f3a4-7c23-4ca9-b728-079d9e6fdbf4",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "32b4ba3f-7ee2-42d3-8ee4-47f40e03f23d"
        },
        "item": {
          "id": "6038030d-1fe7-4015-9ac5-5a5b7bfcc03b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "79ff5b53-89f5-4c42-b6bf-d6441ca8f84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a93a54-5cf0-4991-86cd-71fc1ebab282",
        "cursor": {
          "ref": "98c16197-2820-455b-900e-2347317da344",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9c69cb5e-0431-4ae9-b400-a090f199dea3"
        },
        "item": {
          "id": "b6a93a54-5cf0-4991-86cd-71fc1ebab282",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2ab45870-1b1e-47e7-b398-448086ea0497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d0bd2c-715c-4f1b-bbf2-5e716d7a1413",
        "cursor": {
          "ref": "d34d1528-7a84-4a85-b3e4-62ffec540f05",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "90856177-1ab3-4102-a401-9c7ceb9a174a"
        },
        "item": {
          "id": "f7d0bd2c-715c-4f1b-bbf2-5e716d7a1413",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "53356bd0-ef0e-4e0e-aff0-bfd76add42c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3233a071-033c-471c-9801-de13105023f7",
        "cursor": {
          "ref": "5fba2de6-a1b4-4bcd-9963-b745760e665c",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e83a999c-02c2-4fb8-a200-293b350fbc91"
        },
        "item": {
          "id": "3233a071-033c-471c-9801-de13105023f7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7acde96c-636f-4c45-8642-011511184b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4576f321-2801-427a-95f0-a06a0a5019de",
        "cursor": {
          "ref": "4c5f2ee0-9ee0-4c44-8206-15a979a66651",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fa71f707-8892-4590-ace4-4b22063cd8ce"
        },
        "item": {
          "id": "4576f321-2801-427a-95f0-a06a0a5019de",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f5536ddd-11ff-4d57-837d-812a67940216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0f6225-4127-4f6f-b19f-a33f25a00d80",
        "cursor": {
          "ref": "341ae49c-f3dd-419f-ada9-417cf4ce237d",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "656bfae6-de04-4785-a6b2-3a543eb298a0"
        },
        "item": {
          "id": "ec0f6225-4127-4f6f-b19f-a33f25a00d80",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9ea664e7-14a9-4caf-89d7-3e101caaf62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9c5f1a-96bf-4997-8fc6-8cddad34b697",
        "cursor": {
          "ref": "2c0c3e17-4b4f-40f7-9c40-6a8a541062e7",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9ea77787-2021-4dda-8d3d-2b2e2b02ef36"
        },
        "item": {
          "id": "7b9c5f1a-96bf-4997-8fc6-8cddad34b697",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "39c19498-53ea-4cae-9452-ed2b198fae8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2debb718-a984-4fb3-8eea-b1b68b9eee90",
        "cursor": {
          "ref": "7bf19a6b-ca53-43bb-961f-c01682c69697",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "86a9a161-2d0f-4a07-a6c9-d472b463405d"
        },
        "item": {
          "id": "2debb718-a984-4fb3-8eea-b1b68b9eee90",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2d44edac-cf3e-4fc6-b801-9e0de7866240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b379cd2-fed1-4d6f-8ffe-96cc4d5af91d",
        "cursor": {
          "ref": "1ef9b8ef-3ead-4b2e-a6e7-adc397a84b48",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "34486981-9e2f-4926-8982-3cf4f9617a32"
        },
        "item": {
          "id": "2b379cd2-fed1-4d6f-8ffe-96cc4d5af91d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c485d970-3c87-4e06-8d48-d3105556f18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147771d8-a8ce-42aa-9b60-5dcfb89cf56e",
        "cursor": {
          "ref": "cf968f76-1e32-4cd7-90e2-5b3d10a6babf",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "373f9309-18da-441a-8622-35a684758e03"
        },
        "item": {
          "id": "147771d8-a8ce-42aa-9b60-5dcfb89cf56e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d228012c-3c90-4106-b6a0-9fcf3a3ad6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b56b60-e290-424a-9f29-d484282ddae6",
        "cursor": {
          "ref": "195ed1f8-6989-495d-88cb-fd9bccde6060",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "aabe2dcd-e4f7-42e6-9a4d-406821d765b1"
        },
        "item": {
          "id": "f7b56b60-e290-424a-9f29-d484282ddae6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b7c4a7a1-f0a5-42ae-a2b0-266661fced5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b43b64-06b5-4264-a2c4-cac9b8882f61",
        "cursor": {
          "ref": "9eaa01a4-5966-4e33-bac6-26ba03adfae9",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "afccfb96-3856-4350-8df0-5965df663e03"
        },
        "item": {
          "id": "16b43b64-06b5-4264-a2c4-cac9b8882f61",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bcc54984-19ab-410b-a1ef-35204ed9f381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc346769-b611-4896-8f08-2e4bdde62e19",
        "cursor": {
          "ref": "5c75cac2-55da-48aa-b247-061282cd9514",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "027327c4-aa04-4ce0-8367-a7302b119284"
        },
        "item": {
          "id": "bc346769-b611-4896-8f08-2e4bdde62e19",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "11d08588-dd63-4622-8f50-afd9c578ca0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d536afd-1804-4ba3-a517-e444f2b82c88",
        "cursor": {
          "ref": "79500ba5-dbaf-4400-a85d-97f8a675a168",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "df77f6a5-1de5-42ae-b6fd-a3b11a57c8de"
        },
        "item": {
          "id": "3d536afd-1804-4ba3-a517-e444f2b82c88",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f5cbb142-be0a-4fe4-8428-e0b4e43a56c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176bd213-a959-44cd-9e6e-aab79307a76b",
        "cursor": {
          "ref": "1793630f-24a1-46ba-b3ee-7378409a249c",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a51aae77-ef51-4fda-81e4-907b51c8663c"
        },
        "item": {
          "id": "176bd213-a959-44cd-9e6e-aab79307a76b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9d111d3e-f2cd-4a50-87be-38b94a77bf17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611d952f-9669-45f8-99a8-eb0e72a503d6",
        "cursor": {
          "ref": "5d994ae0-ffc0-4e75-a370-2e128a6bbe5e",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "793b222f-5a53-4221-a67f-5f8949131c61"
        },
        "item": {
          "id": "611d952f-9669-45f8-99a8-eb0e72a503d6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0761230b-2c96-457c-9352-e3c09d0c7f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1462689e-23c9-473f-bf0a-9f9f3311b364",
        "cursor": {
          "ref": "b1c26af6-b3ae-4815-8621-67d99fcf6b17",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "299a9bbc-7830-499d-9b72-ad80bfbb1fef"
        },
        "item": {
          "id": "1462689e-23c9-473f-bf0a-9f9f3311b364",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5a95f505-9c34-42d9-a360-322ef77280f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b037a68a-ed27-4a0f-a863-ee8149c1cb8c",
        "cursor": {
          "ref": "49264ffa-7657-466b-aa30-bdbfa9931b12",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "df0f82e3-175a-4694-84f2-5a7b6cca142d"
        },
        "item": {
          "id": "b037a68a-ed27-4a0f-a863-ee8149c1cb8c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fd433cb9-51f6-41f9-8b80-1672f84efc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5529ba-821e-4157-b1c8-1ebd775f39cb",
        "cursor": {
          "ref": "4192d5a5-ab52-4225-8716-5da43a18da56",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2333debf-cb67-4a71-883f-fdf077b90b1e"
        },
        "item": {
          "id": "dc5529ba-821e-4157-b1c8-1ebd775f39cb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0eea3a22-6707-4725-924e-ce04abb0f0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bb016e-5ebd-49a6-956d-8132b83446da",
        "cursor": {
          "ref": "88bdc8cc-5203-43a3-bcf0-23ae0ab9bfc5",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0530c08d-bed5-42b6-9d38-e665697bad3b"
        },
        "item": {
          "id": "a4bb016e-5ebd-49a6-956d-8132b83446da",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eb4158db-a5ff-4d20-ad03-439498bf290d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd8c20b-0b52-4dc2-803f-b54e50e98aea",
        "cursor": {
          "ref": "5985f682-384c-44b7-a694-05d4a31c2d66",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a9b3c6bd-67b8-467c-8738-b7f083ac8258"
        },
        "item": {
          "id": "0cd8c20b-0b52-4dc2-803f-b54e50e98aea",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1ae33309-d573-41cb-a672-3ec13615baf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdb6cb8-81fa-4712-8365-6223664c4ed2",
        "cursor": {
          "ref": "0b706c3a-9a3d-4d41-bb53-08e47221c23d",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "44b5e3d6-c6b0-4709-8783-1e9983fd9ca9"
        },
        "item": {
          "id": "4bdb6cb8-81fa-4712-8365-6223664c4ed2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7f24278e-e697-4f5d-98ed-4ab4e1d1f762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c810b5-2086-4524-9299-82a55965980f",
        "cursor": {
          "ref": "e670ac0b-30b9-4e3a-b9d4-e72ae8debf99",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "05130469-1455-4034-83c9-b4e9b7aa26a4"
        },
        "item": {
          "id": "31c810b5-2086-4524-9299-82a55965980f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f60d6c86-887a-4f85-a4a6-b07a3e1b580b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784bb722-499b-4da9-b953-d32faac2d04e",
        "cursor": {
          "ref": "3cc79b24-625a-4575-8eac-c5cb15097a9b",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4fdb3456-66e3-40cd-940e-b7676473d08b"
        },
        "item": {
          "id": "784bb722-499b-4da9-b953-d32faac2d04e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f78041c8-8e1d-433a-b685-98db81500273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aeb40e6-e5cb-4ae1-a080-80aeb24f0368",
        "cursor": {
          "ref": "647414a1-59ce-4275-accb-70889dc5dc32",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "80a05b3d-f590-4e94-82f5-10e19fc9f144"
        },
        "item": {
          "id": "5aeb40e6-e5cb-4ae1-a080-80aeb24f0368",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9e910a22-6707-4e0f-93a2-c5dc3ac5c59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a89e50d-51b7-4cd3-bded-5ac0dbde66b0",
        "cursor": {
          "ref": "f1f3a38c-9a8a-4ce3-b05c-331579b72074",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "db0e4e3c-ead8-45f4-a6a7-432faa3ff291"
        },
        "item": {
          "id": "4a89e50d-51b7-4cd3-bded-5ac0dbde66b0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a4833072-f9d3-4347-adb9-c3a63ba17aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e9d7f9-b875-41fc-8cba-e24e354003a0",
        "cursor": {
          "ref": "1ac47fbe-11fb-42ff-a977-14847f6338d5",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "15059326-eb47-4316-ad80-c0dedf9271ec"
        },
        "item": {
          "id": "a0e9d7f9-b875-41fc-8cba-e24e354003a0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f99b8d15-fbd8-4a4f-8720-beb4094ceceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3d4953-7f5c-488d-8533-6a4a22a9631e",
        "cursor": {
          "ref": "11d91426-066e-4bd4-920f-d9860365351c",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dfbc6c16-7825-4f4b-a09b-eb1792e01314"
        },
        "item": {
          "id": "ee3d4953-7f5c-488d-8533-6a4a22a9631e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c3975c26-4488-4eb7-8b6f-4f535a73a9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a84d01-0bc8-4df8-9684-f57d863bec9c",
        "cursor": {
          "ref": "28b6f393-4380-4ace-90fe-62f9f64c9ef6",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a945d651-9ac3-4fa4-97df-956b2adcab22"
        },
        "item": {
          "id": "71a84d01-0bc8-4df8-9684-f57d863bec9c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "20518579-de19-4848-b7c5-a6e2e24d0021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052347fb-9bfa-4a7b-8006-7eaf0e5beaff",
        "cursor": {
          "ref": "e480eccf-81be-4cba-bbd2-8559d1b189ec",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "49b0cd43-6aeb-4ddd-858f-54474c0c27ac"
        },
        "item": {
          "id": "052347fb-9bfa-4a7b-8006-7eaf0e5beaff",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "31380187-6a5f-4850-ad9f-8c8c079cb09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfdaebf-343a-4944-aa83-e999305468b9",
        "cursor": {
          "ref": "cdb1a060-a4fa-4ae8-814e-9f1d4052483e",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "59c3cb17-d4db-4da8-a74e-2b95466fedc0"
        },
        "item": {
          "id": "9dfdaebf-343a-4944-aa83-e999305468b9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1b99f25a-e875-4c37-9efa-53dc91b07e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23f1e55-326b-45b9-8cb6-fd98ba4e9450",
        "cursor": {
          "ref": "cf4aebc8-df34-4d81-8b05-fe6bbc170950",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fbad0fb9-f754-4106-b01a-fa544fe39627"
        },
        "item": {
          "id": "a23f1e55-326b-45b9-8cb6-fd98ba4e9450",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ca3005fe-3007-4df5-bff5-1d4bc3a35a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da92c1bb-9f9f-46e2-a09d-94aff8326a7a",
        "cursor": {
          "ref": "6bc6073d-15dc-46fe-889f-b8e367413772",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "74882220-9eaa-4e5b-8197-e2ea1519c7bb"
        },
        "item": {
          "id": "da92c1bb-9f9f-46e2-a09d-94aff8326a7a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a74f1ed0-87d4-4610-a29b-d4d363eb2eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ae8c03-64c8-4403-8fba-2907ce4dc9dd",
        "cursor": {
          "ref": "84c77a18-0205-496a-80bb-862a1c3ea708",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c3fd1fee-e6e1-4198-8e2a-fcb86302b31d"
        },
        "item": {
          "id": "e4ae8c03-64c8-4403-8fba-2907ce4dc9dd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "29666cdf-f445-4ed4-b31b-e1b55147d18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09089d05-84aa-4b49-835d-0866eba3931f",
        "cursor": {
          "ref": "1461db50-1ae4-4f9f-b1d0-d1ceaff764a9",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fe1bc838-ad81-4bea-9c6b-94b5cbec31a4"
        },
        "item": {
          "id": "09089d05-84aa-4b49-835d-0866eba3931f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a72d619e-f2b0-45eb-855c-947ca4ed14a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4e7638-cd8a-4bd8-8ec4-dddc28ec72e5",
        "cursor": {
          "ref": "dcb6098f-60bc-45ec-8af5-688e520acf02",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e0c1f6fe-6d97-4f90-8118-1084617d64f5"
        },
        "item": {
          "id": "0d4e7638-cd8a-4bd8-8ec4-dddc28ec72e5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d4fa34f5-5ae8-4799-9e06-5c0ebd4e04e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c1d2fb-01e0-4556-b219-75cadf6a270d",
        "cursor": {
          "ref": "42cb3240-07a5-4893-8b70-c394198ab0e5",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d5fbaa82-8177-4b4f-ad12-9f6dc8739e25"
        },
        "item": {
          "id": "57c1d2fb-01e0-4556-b219-75cadf6a270d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "550a8d53-4760-45b8-8119-7c80583b3e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caf7383-1526-4bd4-b4b0-faed65c2a0dd",
        "cursor": {
          "ref": "65167ed7-7417-4cf5-8994-b12ba8af32ad",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8b14937d-f034-4f44-b76c-cce64d436366"
        },
        "item": {
          "id": "2caf7383-1526-4bd4-b4b0-faed65c2a0dd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7e2a7133-8bed-4fdb-8bf2-7d8c0856183e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4979c8-e3f8-46e4-a820-e6aba8439c81",
        "cursor": {
          "ref": "bd0908d9-491f-4e06-82cc-ff8689688a8c",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bc6d08c2-8328-45bf-984c-010b23241316"
        },
        "item": {
          "id": "2c4979c8-e3f8-46e4-a820-e6aba8439c81",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9097844d-fa36-4f5e-aae9-c166a1e44a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1d2d2f-9ee7-47dc-b3b3-1a97ef901f76",
        "cursor": {
          "ref": "caffec39-f9e9-4104-ae91-e8b49e089156",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "84dd594a-ab58-429a-a7d9-2d67c7dc940b"
        },
        "item": {
          "id": "2a1d2d2f-9ee7-47dc-b3b3-1a97ef901f76",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "69229826-b35c-4820-a6cd-d490cb2270c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8ddc92-c442-4cfc-b79d-f1e251c896af",
        "cursor": {
          "ref": "804ebdb9-0dfe-4892-a043-6330a130d26c",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "26214457-b64c-4815-bdcf-c4e5a8a55faa"
        },
        "item": {
          "id": "4a8ddc92-c442-4cfc-b79d-f1e251c896af",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a13f8149-c614-4466-b2e5-621cd0915511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aae3fb-1e1a-4d2f-90da-9e3fcb7c75ff",
        "cursor": {
          "ref": "e8300502-a142-4612-b79f-e2463266ad2e",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b426a7f4-ccbe-43fd-9bfe-94e2d5b18ba8"
        },
        "item": {
          "id": "55aae3fb-1e1a-4d2f-90da-9e3fcb7c75ff",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bcce5220-24df-47b6-9707-33d4b53d71cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dae590-febb-46a5-91a2-56da5b6cb61c",
        "cursor": {
          "ref": "3718e5d3-f3c9-480e-bd11-15756fcec393",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e846ae0e-88cd-42a5-abe1-ece232efb3bc"
        },
        "item": {
          "id": "a5dae590-febb-46a5-91a2-56da5b6cb61c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a7950f52-ed97-4da8-ac48-1b79eafcee61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14497c6b-ea36-41bd-9b58-a214c576d750",
        "cursor": {
          "ref": "0298d1af-2ecb-4dee-8a38-ecac471c8d29",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7f11d360-83d0-4834-819e-1b3a34939435"
        },
        "item": {
          "id": "14497c6b-ea36-41bd-9b58-a214c576d750",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dfc46756-84b6-44f4-ad83-12634881eafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484cf91d-bf95-46a0-90d7-501e7d11fb1d",
        "cursor": {
          "ref": "54c3770c-f6e9-4f62-a319-9ff8b47cc181",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "68d55f80-d125-4a82-aa4b-75aae16f4e12"
        },
        "item": {
          "id": "484cf91d-bf95-46a0-90d7-501e7d11fb1d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "09412287-8a1d-4c4e-9fbd-208772425b12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcacaa9-a84e-4fd2-b861-ea53d2f12557",
        "cursor": {
          "ref": "01668736-0a36-406d-86f1-b5f1b3341079",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cee7b8b5-668c-490c-a553-c3edfbbf1224"
        },
        "item": {
          "id": "1fcacaa9-a84e-4fd2-b861-ea53d2f12557",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f0600f0e-99b7-41b1-93ff-961132b71f08",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf884b8-af19-414a-b6d0-43fffbc80449",
        "cursor": {
          "ref": "68a24c8e-4af9-4c95-a78d-f90966c03062",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d93ff389-2e0d-4ef6-bb8d-62dd0f9687ea"
        },
        "item": {
          "id": "7cf884b8-af19-414a-b6d0-43fffbc80449",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7e55c102-4cfd-4e6a-9cb9-72ab071fac8e",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6727e4-8e03-49ee-91c3-15f6cbe70db3",
        "cursor": {
          "ref": "a21a646c-6046-4226-a5cc-a3f3c45be3cf",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "90c2b348-41c9-4a37-b472-9a86d6424353"
        },
        "item": {
          "id": "6d6727e4-8e03-49ee-91c3-15f6cbe70db3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8a2aa0c6-6dbc-4d9d-9b38-21e8a04447c1",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "136b2a2f-ae89-485a-aecc-0235300d14e8",
        "cursor": {
          "ref": "71bfa0c1-d704-46fc-a666-1cef6467c641",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b0fd6ede-042d-4a52-9cb9-a15ec78ae8c9"
        },
        "item": {
          "id": "136b2a2f-ae89-485a-aecc-0235300d14e8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8a90a70-3f5c-4804-b120-dfde2feb0566",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136b2a2f-ae89-485a-aecc-0235300d14e8",
        "cursor": {
          "ref": "71bfa0c1-d704-46fc-a666-1cef6467c641",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b0fd6ede-042d-4a52-9cb9-a15ec78ae8c9"
        },
        "item": {
          "id": "136b2a2f-ae89-485a-aecc-0235300d14e8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8a90a70-3f5c-4804-b120-dfde2feb0566",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd41bed-de5d-49f0-9959-9415db604cf2",
        "cursor": {
          "ref": "eaebdeab-ed69-433b-a1cc-1675d07f3bf6",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7848e460-ce0d-4d31-b04f-d8d29f278d9f"
        },
        "item": {
          "id": "7fd41bed-de5d-49f0-9959-9415db604cf2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "de4eebb0-71db-4045-bbda-9f9b9bbb2377",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44ad451-6053-4c34-881b-1ab0c1b865de",
        "cursor": {
          "ref": "4114cb5c-3bee-4053-afe7-7ad1893bec89",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "babda2b5-0a0e-43ec-9885-9bd7de397b3b"
        },
        "item": {
          "id": "a44ad451-6053-4c34-881b-1ab0c1b865de",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e92f8ece-cc43-4410-9c71-6f5c6726cd77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}