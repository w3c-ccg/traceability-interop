{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0cb54741-cd17-476e-ae77-95855e24aa87",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8f02d356-37cc-4c71-a8e3-587f33b954ea",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "207c9022-39c6-4798-8b69-36652796d95a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e19a4a38-dd13-4125-9a30-4d2aa27d4267"
                }
              }
            ]
          },
          {
            "id": "735c61a9-26b0-4184-ae38-bf8756f5a1f0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f335cb1c-4d8c-47f4-b09e-e29f565babc9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ec1d4ff8-34fc-4dc9-ae6e-18f5e0500a43"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "01fa57d5-0490-4f2f-8a44-38e311459dcb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6c5f5e88-0fbf-4a67-bd1f-d7c98588f44d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7996ec70-5a52-443a-b8ed-ae880ed2ea25",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d56c984a-e818-4615-a211-2edc1630625e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e627add1-dd01-4bc4-b082-96348db4e16a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "449955da-fc06-41ed-ab99-0dbece2fece5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5152a15e-d8ad-45db-bb2c-33cb6667a2a3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4c9e478f-6e3d-4331-9ce0-48ba0dcb4b6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78b8cfa5-4054-4029-8cc3-39dcbecf5975"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "715d1202-bcf0-4a7d-8eb2-14162b0502f8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "57c43660-aa19-4e90-8bcc-91ad6951983b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94b314fb-63c8-4000-abd6-55a42b58c4f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "531e5902-438c-496f-a74c-a3798a75c3c0"
            }
          }
        ]
      },
      {
        "id": "71579053-321b-4483-86d9-b49e624d80d7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a3e31795-c3df-4c5a-ab56-113f1647f1ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0de010d4-21c7-4665-888f-6cf28b3eaedb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9efcadba-212b-4bf8-87a1-0d492dbaadce",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ca2ac3-5f66-4427-9fe3-f6840e4c783c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82b174c9-75de-44d6-9175-6ec5cb7449b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c38cc7a-59cc-443a-a187-1cdd8c90f3f0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfa45f0-06e1-43a5-a2f6-74b24d8c8823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebf80b83-a108-4cca-b5fc-5d3af293985e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f28c0b2-b1c2-4a53-9e53-7505bc52466c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb535f26-2608-4808-b353-b742bdb63e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13671626-915b-4529-9307-a29d420a4b9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0b4b318-1e6f-4ff1-8bc8-a4ad4b9e2392",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f488170-f2eb-4b7d-b673-6851a75eada5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a49dbe-b944-4d65-8a07-35348c40d6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f85a2103-e6a7-460c-bbe5-32b3f606ff47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20464c91-1b4a-4a39-8489-f1572b7299df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a0ab49-a53f-498c-8a28-27d557a86531"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e52f58f5-10d8-4cf5-9d0c-3cfaf7212ac5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "30f23336-1136-4b93-b2da-919e3d1afc7f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53af7794-22f9-4572-8040-8125088add7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "93640914-df91-4b62-9bf8-440df66af48b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d5fe7fe-05a5-4eba-9fb4-205ade3d8741",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3e019d07-dc6c-4a36-a5d2-8bf844e6633b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40df7e68-4cfe-427c-8260-f7687adf5a5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b296c844-6f66-4dba-8706-9e33d05e5b29"
            }
          }
        ]
      },
      {
        "id": "0c9e88fc-57ce-49fd-a4ed-9b74ded724f3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ffdebc8d-647f-4489-a7f8-af875917a883",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09af7052-6bf7-4373-bfdd-3b15a1b8dd30",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "864d8eda-a0ed-4612-bf71-30e9e5583c80",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520f09b3-68b7-406c-9f5b-638068de6f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6d11c2-cea3-4ce5-98e8-88212a8019bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a37a46-9d44-4797-a3c5-6ba92516d46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3c679ec-b326-4260-9421-f0a5f4fbda68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44c4bca-c27d-4d91-a8ed-605ff3b3dee2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6a5c65-a102-436b-b6a5-597273f14995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85567685-56d2-453d-a1f3-50effc320fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b93307-3525-450f-ae06-1347a8fac25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aec1bb3c-ca6b-423e-867b-916c08ffa6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50aaac38-b36b-4f01-8ce8-f3c173ae7018",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6a4e8a-4e9a-4513-aa56-34a6697e5137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d502f5-ad11-49b8-95e0-bca19ee010aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bd4791-7c29-40aa-8255-afae74379b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "949d8cfb-1030-414e-8c93-6f816db654f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d842ce-6ef5-4e52-90f9-ed5492ce8e49",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77412e36-f17c-4de7-aa41-fb8e5cb7e9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a7711b-3670-47f0-83bd-f9c3c981b478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58494951-0cd7-41bc-8257-423e54393673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbdf6c2c-74a6-4245-8a1e-aa3419a10cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f50f49-ff83-41f5-ab6d-86938f08318d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10336d12-3ede-426c-804c-60f25c48879d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1330d6f8-2274-4f5f-84dd-fbe3d9d8f182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33ff932-3ae9-45a1-874e-cff1e9aef76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11a6ea21-6cd7-40f2-a154-2cfc45d590e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a511f7e4-dece-4379-a445-17b7616ce408",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c523216c-6fbd-401e-b058-2778bc4bb8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902f55c4-f249-4d67-9276-62a9c4b80c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94baabcc-5020-4916-9279-9e6d4519ba58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1716db17-03b6-4157-9719-6da989ccc455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59fbff6-8fb6-4a82-a439-6b5c32095242",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a40148-2730-4f21-80b7-a44b6f8df92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7992e4bf-7fbf-4b46-b5dd-1ef467796135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc25a3b-9b09-4d87-bd6d-c8bdbb3cd036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67f261e6-20f7-463f-a9fb-4dd10d202179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc28e1f-7474-4fb0-bc27-38567bc2f594",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d5448f-9cd5-4223-9c7d-4d38ea362844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6e93d1-4e2c-48f3-9ed8-1864cf2a7823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f1a013-6bce-411e-a888-27286fdd7e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "672b1058-730f-457e-973f-7fdac798cdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6ef010-12f4-410b-adaa-26727bd8de8b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5131601d-7c79-46d3-84d3-bc8695e7a6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9af8ee-df23-4f7c-bc92-9e3e673146e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1891831f-d44f-4516-b6ae-a943b43ba915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "babcf713-d7dd-44a4-a4b2-7122b9b86161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e6d332-0191-4007-8341-1130f1d47f58",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6125ca06-d7a5-45fb-af9f-19e856331156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b277a8a-60c1-47d5-bf78-65de49a6ea0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db123f6-c654-4c6d-9524-101c0a459f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c5d97db-e0bf-401a-b992-09bd8fb0ad7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ad2bbf-fe80-457c-b2d3-7ebc4de964d6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa77813b-9755-4240-9acb-3223a6cd4973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55864a62-78b6-42bd-ad18-b826ea625630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfbf571-f661-4b29-811f-68bb24857aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9f28af3-d464-48a6-9185-7ef32def527f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426d5c46-1378-4310-adfb-7817e2f30d7f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b34b7e-4936-4bd6-8a91-537aaa784195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1d49d0-2452-44e9-818d-fd6a0ba83e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f708ae-903d-4ca0-b29e-7576725d0ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64be3d6e-a7db-4294-8b03-68b3046d6113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476bd7ce-3506-4488-80cc-e11626185da4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdfd06f-7d5e-40c4-acc9-8e4c7fbc1318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371c359b-caca-4fab-bb8d-47adc5a8e6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd06d8d-5af6-4bda-9e59-4cdbf58df964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eecc99d-8532-41f8-96ab-e3468e77c29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5715fbc5-01bf-4980-b045-607da83e5ab0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4d7035-546c-4721-be62-c38e0e3d7ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61427f41-041c-48cc-8fe9-faab4b4a417a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecc7eb2-c1bf-42ae-bb67-998ad863dc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b228a045-fcff-444a-8f02-9b6ac48893c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03b2793-d871-4c2f-b8a7-31330ff40ceb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa0be76-df55-42a1-90bd-f8c3ee5ea88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e416ecd3-cb46-4381-b9b5-cbe142ef0173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b79cbe-3402-426a-9d7f-7cf495f76c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff0dca91-8ee0-40b5-8296-dca396ba7468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffff3043-1c9d-4423-b08f-2732bfae9fee",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a82880e-5e3c-4b5c-9cda-f7e846567b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70df90ac-965b-4ee0-833f-3691bd99ecaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d248088-bbc0-4968-b611-dae59d098030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26492335-49dc-49d5-9895-87368c473c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fb946d-f080-49aa-a5ce-2d55610a6037",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e061c03f-1063-402f-b9de-37ad98c61f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d80508-5972-4a32-8490-4e58abf061e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c52c04-fd2c-49cc-b93f-adef2fac0712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1438f72e-e1b5-47ed-80de-a7e62f2ecd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa4dc05-9437-4833-9e16-564165a0e56e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a9895d-2a8a-455a-bc2d-d2ccb11030cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49849d24-1a08-44e0-826f-dca2e0f3de4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bb3664-54f6-4924-819c-2710da6ce8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "09161906-fa70-4271-a90f-e8da0d1330ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3e524c-a91a-4e5e-b930-0275645ba3c4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c12f0e-7a2b-498e-a14b-635b36ea6fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554bf1eb-e7ad-4ae4-b7dd-d07fb40a4330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7675f79-b352-43f9-95c0-b3ebe2b09f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a873c9c-a073-4c1a-b3e1-ed566ae96e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332dea6d-aff5-4f5f-833e-b3612a91c79e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d33a4fa-1e97-4322-9417-5446de330239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e0bd5f-e10e-43ba-9869-410c2c3898e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6166b97b-ef41-4652-869b-8468bd1c8f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2453b091-4f04-4d93-b452-fa959f2a5378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853aa7dc-7d18-4b3c-a8dc-6b6883934d89",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156817b4-5216-486f-81ea-04dffa995148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee40fc02-3db1-47ee-812f-b660b4d2165d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf1c297-07f0-44eb-bfb8-b3bf937ed555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5d01b0-bae6-452a-9d3b-fcd58b460a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c65cbe-e618-4d4d-a8db-8c24402b9ab6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0365a816-b448-4454-b07d-2a4644668460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301ff182-a6dd-46c2-ada2-9c5ede800d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bf0fc9-cda7-4506-9252-3d2e05ee99ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "906601f3-5655-49ef-9ba3-36949ff1639e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edab370-0be3-49b7-8b68-b038fc15ec72",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a10377f-e5a3-4054-93c6-b40a4a817398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf470539-77ac-4855-8c04-65a4dfdfe29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a946bc8b-a45b-43d6-b61f-fa3b025b78b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c62def1e-8109-4e26-88fe-5b9b68c9f59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b80e0f6-0bd5-4392-9bed-cd1de23f4c38",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad4c278-d07f-4000-8d6e-c1f3403ae207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34285a46-1a4d-4dd7-ad2e-e795f8e83083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b774384-f4ed-4f83-a702-19de49ba416e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "91c7ed68-8794-4711-adda-19b5e75b9256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47c0d61-43d7-41f0-9412-5ed86954a184",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ccc7be-b146-41fe-b3f9-6a6a790b75f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863a6050-49b3-477e-9791-92fab1c87a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c7f043-d183-47f0-95d5-256e8b65f29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc95d89a-b3e4-404c-9bb6-f529b1e1900c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f784e8e4-4d22-44d4-98ce-1cbf8ad11bec",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cff1468-4acd-40dc-8026-56c985c10d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4d4482-d6e4-49e8-bb5e-bbe4d20b2b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8123d14-aabf-4644-889b-1c8f5d883290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4757171-9a1a-4619-8fbb-240c733824ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacd5944-bbce-48b2-9a55-cdf064ac35cc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff576f48-3647-4163-86a9-cfc900948482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1ad55e-86b5-4539-9606-b255b08a2f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26237568-d9d0-47c3-b1c0-58edddd55093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db3ed9eb-9f0f-472d-9721-9172ad0678a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e82b0d-adf9-4823-82db-e86275144945",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90804b66-39d9-49ab-a070-77dca62a9dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2cdc58-9dce-48df-996d-dd503f2123b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d253eb7e-a1c1-4b6a-a634-fc359b3d9755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c61a60-857a-4b32-95fe-e94aba3275a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2072f32b-fa53-4cc6-954d-cef5b36d1492",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faab5d62-8488-4623-a893-897b9ef0f2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f65bc4-d9e5-44ee-9a83-7b2fbf5954d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e1abf7-7032-49ce-b1b9-047ef8312085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb095177-24ed-45e2-80a5-951e93a69ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9023d53e-e4d2-4643-9a94-ecd213355b1d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda274b1-9544-422f-97ec-b831fed8a253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e60143-329c-4d5e-aa55-d8c2d983987c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0767d9e9-493f-4c37-80c6-11ddd18fa53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7cac79-9dd7-49db-a3be-4355807c5266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca476b3b-113f-4656-888a-e205a7e36dba",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c64407-bd3e-42c9-8a81-c273e3c5d016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5da82c-19e9-4c39-842c-647de6667bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669ebfbf-7ab7-4e26-981a-cc9a7aa2cdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0357c3e-bc3e-4e42-9c84-80fdda3544e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289e1e72-0fc0-4fcf-9b04-98f2a9c4ccf5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f321c588-a0fe-4f68-b1a7-89190f3978be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9d9714-7e35-4869-a3eb-10280f7afcff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e302429f-6676-4a24-9bc2-9a8eca6c1619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fdbf6b-c6aa-4e41-b73c-b978698a977f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01c8779-2d8b-4d49-afd2-142d402a8581",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697ed2db-83cf-4d54-b212-95f18e94d3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f06d567-23e3-4697-86a0-39fda97a40ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf66f54-315d-4922-991a-acef469f24d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f5a29f-63de-4c29-8985-504a364c93c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e63190c-0e32-44d4-a411-cba193982243",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b14b3f-9c92-48df-b5ea-ef6234548a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eae3174-f5fc-4825-9f99-13c4f1c978cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7610aaef-9ce9-4065-a744-3e20a3041afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0859be58-0e69-47f4-a4dc-5bc1ec40766f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2d3526-4b4a-4849-aca4-4d50905cc730",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a89d1a3-7582-4c31-9263-7f7b522ca5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b97502-e436-4efa-802d-20316f869862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c835ac01-a9a4-46cb-97b8-a47c2cc4d895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e9280b9b-43c2-465b-ae10-b71da88b915b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdb116f-4cc4-4a7c-9d84-2cd48cf3c1de",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7a7aa4-1dd8-43de-8040-73aff8160847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05356259-60b8-48e9-bc53-cdbe7d9018a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faaef61-9c60-40df-b0cb-82dc1a7a4cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1688e0-5836-44a8-904a-84495a434525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee55a875-6f78-4714-8d3c-85a8fbed8ab5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f19ff0f-bd1b-489c-9a9b-50c73ffbd0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d14399-ddef-4386-a3fc-33bebf3730c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5d68cc-4605-44da-94ff-b5120892d7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bef3025d-67ca-41e2-bb64-fba42ce7ed54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1caad50f-b3c6-423d-bf5b-df73a7a7e753",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5551aa4-16ec-48e8-a868-bfb32a3f6347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7589b1e-98ee-4f7f-be31-dd1344ec2ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea2c96c-cc5e-45ed-af30-b08098eecb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "422a05b9-ede0-4e68-bed6-f6795174f1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdfcfdb-3f29-4a49-8117-1ee2ac840332",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba36069-5aea-49e3-826b-29e2d56377d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043d967a-1602-4fbc-b4eb-83196b071fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6f0c4f-0660-4d72-bed3-c6a98fa938b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "047d6560-0ba2-4afc-aef8-032bfdbe8418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c39e11-64fb-44ab-af1a-4f4e79d578ad",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcd0dba-4ada-4061-a578-6eff76fb6fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677579ff-f6f4-488d-a4af-4a833c4c48a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a19d93-651a-489e-8f05-d6fb0f25c0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "18eb790f-6c24-4f95-8bb7-c7ca680584ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5990469b-d0b2-4613-9c86-d74803e3e9ca",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440e6375-c3c2-4553-9e65-62822e728a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6b3b7e-e35e-4484-8d35-b92bd1c0005d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff9b91c-a2e5-4718-8972-6fff5d0da057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5f894d-c4b8-4bdd-82f7-528ba5cb1364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c517a0-756f-4587-b4d3-a3bbd99cffa8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d369381-7a28-4069-9d2b-66c0d728c50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb0ff4b-b08a-44a9-aaca-1cde29d77ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831031dc-7af7-43a5-8966-b5fca84bbdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "222bb570-2307-4825-a4f5-4a7012f0ab81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9792ba6-8138-48d7-903e-029d2ffa5339",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b203db9f-4721-4082-9ea2-7d07f0843568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8664176-c05a-4c3a-9a65-b98056cf121e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b275349e-603f-4e43-a11d-741254318944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff639892-e719-4116-9fc0-3c7300f68d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c4f737-42f6-4fee-ab30-e74092d324da",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f874d120-ade4-4d29-a6f6-f16b12cdaa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb521f01-fe64-4c6e-bfa5-fab20194e5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa603448-32dc-4bc0-91f8-062261a80ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "495c2ad7-b091-4f9a-b091-74999cfc91b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5392ff0-e094-4a10-9e01-72332e3928ac",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eed1cd5-0bcd-4750-a781-f7ffb7cb30f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378d6d2b-eefa-4494-b1c8-8c2486375ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10f3a1e-07ce-4557-96a6-a5ffaaabea78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b607b05-c0ec-42d9-b318-192a97b86028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2a1c41-de47-424c-b6b4-f8d142501443",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d27eb83-e7c7-49eb-94e2-ec323f19a540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b107aeac-7dcb-42d4-b8db-214393f1b967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385a362d-8a11-4199-b3f0-504efb7f9808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07e6016b-1d73-44fb-bb66-697edce45154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2339bdd-2c2e-49fc-ba70-728236dbd7d8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc821023-3447-4ff3-a19f-cad2810e5a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaada334-7a73-4903-8f03-14ca8aee643d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c4b922-1727-45af-bcde-78e6adb2d2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97e8c660-0273-48cb-a700-cb6c3c562327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce9ea76-a5af-4c50-85ca-03f6403b022a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b895852-0ecc-41fa-9d29-ff2e4595f384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a125e56f-0a72-41e1-8b1c-2094bd722817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b0198a-e253-4af5-b7b4-2c8ea9b8cb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8dd9246-fee9-4b3d-acb8-ec0414f34fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c686416b-8bab-460d-aea8-f26fdbec8ac2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2da351-d377-4310-b75f-2b522a60edea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e92b3c-0cf0-4c8d-8e78-e34b40a267c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf765cc-51ca-4785-8886-b5e1cae81449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7a9160-829f-42d7-a46f-73049cbe2ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b7b8da-705f-4d56-81c2-2af9f564e541",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3450740c-2124-49bd-a5e9-f0fb93ec1d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf8f33a-a0af-4551-829a-fb98d2d9e749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704e3be4-2863-47ed-857f-1792f1408ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1975edb2-616f-43e9-be1d-e51f6e2249cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6fd8a2-90d4-4399-98b8-8b508da3b3fe",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6cb7e6-a5e3-4345-bddc-d6d07f78cd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6518516f-e28e-45e3-bfe5-fc6d281856ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7da7e7-4b73-4df6-9968-769100423a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e58f6546-6738-455d-9957-20f8f9e60354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c91f5f5-7b5e-4946-8266-edac851acab4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dda2782-f980-4f3e-a96d-20496100abc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59516a85-b6fd-4ea5-b1b2-480cf9507ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315d08a0-57e2-4e57-ae9e-f2dbc78bb70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d94633b-c4a9-4371-b02e-aa35add01e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b31ce8-d0de-42b3-9c74-faff3c6ee80f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5b6fa3-2e27-47ec-aeec-cd4d273a764a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847732d2-c59b-4ca1-a741-7764444fce2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a63db5-78ce-4ef6-926b-331a0f581a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f76f83e7-9d77-4a2b-b886-1eb0329f3edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7120cc-dbf7-4ab3-9aa5-7b0f82e323da",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6359e0e-0c4f-438e-a340-43aec01cba93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bacae66-d068-460e-bd9a-42a2935fd821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f51a87-8cf9-4c25-b3d4-612b6806e76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae846f9-6371-420d-bd90-2ac5cfdb4579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8437a077-e1cf-471f-b0aa-8816039dd9f8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0b66c5-cc49-480f-b1e9-60854c0bbfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07c19c0-aee4-46e2-aadf-232c5589255e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd17ae08-d1fc-4306-b2d5-973aa7704d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70774d7f-1699-41cc-8afe-01d9bde123a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e87215-eb86-4886-b01d-704ead63a93d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bbf6fc-a158-4fcb-8b9b-cc713af57527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c4752e-ba13-41f2-9c64-e80f53ef9857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b093e4-4594-4027-8535-eb318112cdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc3cd25-4096-4033-b9e7-50bc583ce7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17168228-bed2-4528-8387-39181dd3ed09",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4184cac9-a1c4-4a39-9fcc-c4db02613e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892b5494-0ad2-4c96-bf4e-a216b9345eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85847556-9aca-4b48-84b1-777eb63983ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8a5b0c-8257-4f4a-bcb5-2c1b4e321700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fb8013-4493-4d8d-850c-72eed0aed3f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73df549-b491-4da9-ad69-26d169181361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deec3ed2-382a-4863-b13e-517995111b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bc657f-84b0-46f9-8b5a-c213873ca3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e315d2a7-3ab5-4da6-bbfb-09c43e4342c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76c6df4-a6ec-41ad-989e-54cdb732ffde",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f9b82a-e9ba-487e-a1ed-5ae0ddc21ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480d99f0-1043-41d8-82d5-c4486b0cba16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23f560f-0d3b-4a09-a830-adf08c00dc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f8997a-c021-44aa-b2d6-39a9e8959e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e46587e-de31-4e22-9085-1e8acc0d7df3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbaa8cd-3078-4456-a968-5d31bfa03361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f7c8af-d75c-45b6-a68b-3b5bfeececad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0691251f-0cd2-4e6e-8505-8052e4eed2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a745a35b-d05c-483b-827f-3504b754ef2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd2ae52-28c2-4bd6-ae76-513160ca0ad5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac0c2a4-2dae-4785-b98b-cedda68b9a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74aca494-b2a6-4f69-9ac8-33eb98935d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc27286-4c96-4d7f-85a2-c19a7e91e1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe95cc5-c91d-49e7-934e-232090a22ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adf38ad-6d58-40e3-a701-2a1e6233273b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad81da8-ec78-47ea-a5e2-8479d090f9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de06e3b-96e4-49a9-b76c-fe77e7b60128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a71ff6-8262-46b6-bdea-49602d73cf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "10fd703d-ca4d-4d7a-8c11-cde7dafb6f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd627a1c-ce16-49a6-985a-e893cc7d7e22",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaa4b70-95bb-4df6-87c0-638416d49fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee7b711-de39-45f7-8f47-c71e4e731bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ded894-dea5-4fda-a3f6-2f4a25193711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c71ab4db-70b5-4268-8a20-e71a19d192cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea154e3-92f7-421b-bf22-317a7bfaac6e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9417852f-d082-4257-877b-0822247f5ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4424a886-9833-4455-82c9-95c3d7941ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c57219-9d53-4af2-a157-5a36e4a6740f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60f99ce5-84f4-473d-bbff-8b2073e00a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8003974d-2701-4a15-a2ee-bd04f9a29da1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7de8979-0105-433f-92fa-8029683e300d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949d15f1-be23-4200-b4e0-50e1fdaf7b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dda7d7-de67-4fd1-904d-fc4b91d2d72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ae3c39c-14af-4d90-82e7-139ff28ccf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a91cde-3c24-4aa1-b549-6c2eb5ef2484",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5419a645-f1af-41d4-91da-95be17de39bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb1d614-4f16-4182-80a3-05877499a21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daf971d-8d02-4e98-b02c-437c4c7d56a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43f624b0-ba96-49c2-aeaa-49868682ac4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a04406f-a6ef-4c29-9ee7-a6d60113c350",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a866c0-42ac-43a0-9ae4-aca41db3f3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2851b836-0333-41e7-ae26-16f19ad80107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a035fa-056e-4b06-8a53-b14c0a6470b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c25b4a-6ef1-42fc-9acb-dfd87e72d90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0571240c-8112-438e-bc2b-51c81992c8ce",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b43c2a2-3a80-4e30-9b73-23c1a82b1528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b1bc69-ca81-4bbd-999e-4ac1a97e9f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20d2d97-22ed-4b35-92c6-4a7d792ad409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe818fee-85b8-41d3-b597-39fc3aad0cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a91129-69fc-4564-a181-ba42d42d8a24",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab335bd-8c32-4cfe-a7f0-8edcf1d609bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4588cc28-158a-431e-a140-fbbc8a5fca51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd26486-6da7-4884-b525-d967820309fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2b076b-c325-4c80-912e-0a26e6fa6563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37321d0a-1599-4bb8-8ad4-fd70c5551d9e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5783f27-992e-46dc-85ea-51cef41c5187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8481cb-7d18-4a2d-a69b-7ddac324ec63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30028b0-54f2-46a8-abd3-a17179b5fdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e058d5e-73c3-45ae-a26c-94aba39342dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba520178-14cf-49fe-99e6-e928c5fc9ad1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6fcc80-35c2-4f82-a1d1-b17a844da957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc5fd56-f165-4adb-8ef1-7738bc8e2d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915d03bf-ad97-4d58-9cd9-22bcff77553d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21f86cf7-ab32-4304-a239-ab5fbded0eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3607ef6c-34af-47c4-a41b-788570d0c6a2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df86dba8-376e-49b6-8733-3dda316879af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35035a30-9ad9-4cbe-aa39-8801bd710251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7b367a-a1e7-43d9-9e18-611c7206afc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b799e6-620c-4356-a67e-4f32cd2efaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf953972-a05f-4dea-8317-94e4456c6bb7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23078672-26c1-448d-9125-7450493de073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc77e01-4aac-4c82-aea3-112b9831090a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e0f74d-114c-4488-b674-c381c31d7173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92f5513c-ef53-4652-b398-b263ffb6db90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdbed5c-e805-44dd-9499-0037da486b74",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ab6524-6699-40f6-9872-e38ded025395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bc07e1-89b1-4259-a428-a46fa013a97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c6e929-3d94-4c10-830d-1df5febaae59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e247166-97cc-4521-aece-df27f5b104bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a3fd03-21ee-48cb-a63f-46533029df88",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ddae2e-6d99-41e4-9605-ea3ad5e2a6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad2c37b-9962-4fd1-979e-40bab709fb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff542aa3-eed0-4409-98fc-3191931981c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc9e568-3638-4563-9146-7f85f27bb3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac2f87a-134f-47d4-9c94-498832650fc3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee749683-f5be-4b30-b1b9-87f015e8d6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807ecfe6-62a1-4c2b-8a1e-8e0f3f59f25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254abf1b-c50b-4e09-af7e-f2b3ddd9109c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "928cc978-1554-4aae-9348-1428fee43880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f254923-40f0-438c-91ee-094b90442a0b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d4872a-bece-4b96-a77c-69c0c0107820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9225d3a3-baa3-42a1-8ca4-fa8fe5277927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1379cd-cb1f-4fe9-a1ce-e3c4af8d0efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e6d868-34a3-4899-a757-1d60c25c1ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd74f50-7933-4054-8691-92d610222720",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e4516e-f428-4b47-a8ac-7c8929745bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c15e54-4792-4985-ae96-8b90b862f838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0360bb1c-6cf7-4b9b-8709-af046d802e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6db752-0569-4183-b0f2-8d3a44de1180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94148e6c-d799-4d5a-91ee-fa66c97c6a62",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e03bec3-be68-413d-9001-124e071327c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d531ea9-eae7-4c1f-83e4-2e04e3029953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d093af0-f69e-4344-9840-b282a487ed7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0559cf39-9746-4ab3-99a8-177b45c29e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97585e1-ff0f-4cfb-ba3e-0d56907691ee",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8425bea-8fd1-4b07-bbce-fecfd80678ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8f4702-e866-472c-987c-8d156eaa64b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadd2029-db98-41c1-b12b-1b690dbc639d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dd9a52-4c48-4b52-8212-0906cba57758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d9507c-a054-43c4-9243-c01a3a8a91fe",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3991ec62-fe57-4b71-b3a4-8237d9eaf2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f72a792-ec71-4083-9fce-1c1c22f0896f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2c13f3-9535-465d-a360-365838cb2e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "22bae304-bf0f-45c3-9d7d-c4fb9beff4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c64dcad-ae3b-4a03-bba4-98e61b7647f9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24f5472-b0b0-44f6-bad1-372db37a74e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ded8e0-9444-46af-ae8a-67ab66cbdcaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c0533a-ffc4-46c1-8fd2-7e582208ad1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3803907-c11d-4206-b6fa-11d72caa4b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e502aa-76c8-4e4e-936e-e988056b54aa",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89feb5f9-d28e-44ea-9621-86672136833c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b76a668-b19c-4f59-bacb-33493598f59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e85472f-5535-4989-9b8e-e0d1026e932b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f97a56a1-05a2-4ccc-9af5-4c4c3ef0247a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52398ae7-8b41-41b6-8e4c-d0b2c68f6109",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f938f62b-ed27-414e-b6a7-f9f03cd86883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacd2d45-a99e-4725-874d-d115b39138f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5411490-109e-448d-9ad5-b13319aa2d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "270dce7f-0500-4762-8116-af6e74cf7ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d58dd9-9eed-45ea-aae9-d025a315ee62",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fc93c6-5681-4eee-b9c0-b79a54cd24d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4519e85-1d10-45e1-b665-11e3c0e636bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bab3fa-31da-4699-8111-d9ed8b551115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04f48db2-d077-48d3-9b1c-87c525ab4361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca0df39-24fd-47b1-bf6d-7810333c1b6a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab20ebb-c9e3-4ade-8ac2-1840205f5e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43731801-2d6e-432c-bd75-5e7c9c4bb88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de448e3-18eb-497f-b137-a084bf898621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15a66f3f-f2c1-42d2-871b-3fcc85562c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df39306-f15a-4bc0-90ad-1f23137e17d5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e68458-cd6c-44e7-bfc7-e26740778131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c40ac1f-951c-405e-b09f-b6dcb7e547b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ac805c-388e-4e88-922e-254aad05ff08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "182052a2-304f-4b82-810b-1d76245d574b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c425cdd-386d-4dde-b4ba-1ad929e7333e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3735b0a-edc5-46b9-ab58-18218ff45cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a40c56-22a7-4f0f-84bd-f69d3742a03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e11250-3504-47e6-bd82-3270fd2c4cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38497aac-405d-4dbb-ba62-ca22058aefd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc32a58d-ccef-4efc-865c-e983b1fb002b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03f638f-44cf-4fb9-9aa0-254e5f8353e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c16ac2-d5af-4961-9868-ca66366a5969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2ef0ef-7e65-4989-b28c-b17670e11b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "819bfe79-b4d8-4752-a090-b804d3d100ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1243764c-d409-41a0-8a42-39239f8f4acc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62ec2eb-9b61-4f90-a624-b8717ec17c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0db36d-e350-4dac-8444-071adcfbd70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5eac38-500e-43f3-989a-30b5719f3077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd86a2b-45e9-45e5-ad4e-df573de8f6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025f834e-821e-4a7c-a91d-571477ddaaaa",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f9eb27-334e-41b8-ac96-d62b3c7605fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41610fa0-a4f3-47e4-b175-16585db1b895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9211be-fbd1-46a6-867a-d4e4fe360c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc524de-0f16-48c4-b594-4b7b222a6504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b69d0d-9630-44fc-a569-46fa3c4f7ef8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0769a2-3aa4-4f65-8931-b55dd5b6c73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5255553a-12b9-4917-bbc1-86170985a934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a378c9-902b-4ddc-993f-5789fd548f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "11df966c-9af2-4c2d-aebb-4f497c13f9c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3484bbf8-fdc5-4d52-a61c-b44246c83a9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b0d1989-f377-4e7d-9f99-7ad26ebeeaca",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6036af67-3094-46e5-b142-54bddd050c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c88169a-c8e6-43a8-92de-592593573e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e42b102-37ad-4562-be0a-941a33a41326",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c596fc38-4d1a-4cd7-bc94-c30b342c7f88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d5b25d5-f60e-4327-a844-b7f1b3db6d29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b33bd254-f6c9-4315-b282-def300607d10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1a841c7-b4e5-493a-81ac-79710cb0c1e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f53cd2eb-c80a-4532-94a0-318fb226fb51"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f63b3a4-17f6-42aa-9245-cab2962a80c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "489e14dd-5c22-4d57-9dd0-2712e9e4ea6c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9c6ba07-5ef7-491f-b5d5-897f2ba22508",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67cbb3d9-8ed7-4913-9dfe-7df7d841a546"
                }
              }
            ]
          },
          {
            "id": "4138ff27-238a-41e7-8d61-d0a0a07d77d1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ccb708e0-bbe8-474b-973a-23d4ff3a2b58",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ea8c4c9f-b626-4d8f-946e-6e546f23c42a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa13d616-080e-434f-95cc-4ffff0b5e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a8891228-a83d-4ed6-bd7f-ede455d82732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea2896e-6f62-4ad0-a1ed-ef891d5205c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632fa801-424f-42b5-9d51-1cea58a11264"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "01d5e1b0-ddc4-43a7-aecf-063ac2000994",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9225007-5cf3-4044-ba8a-d039d96c9501",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c40d52c6-848c-4bc8-b3ec-fa8e6c94fbb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0330127b-788a-444b-9a99-fef2093c3eb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "da694e76-7ec0-4c89-a385-138fe5ceb08f"
                    }
                  }
                ]
              },
              {
                "id": "bab92283-f371-4453-bb2a-b2f915812f09",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4176306-5dca-4e4e-bdae-9685ac5a6a2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f48f8d60-ceda-4c19-9c6b-929d24326701"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2724c171-5d2c-41f4-828f-78f8cf62f4b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb312f7c-0df0-499b-bff3-e315a218bf3d"
                    }
                  }
                ]
              },
              {
                "id": "aec2870f-6efc-40ea-8352-1d4163deaf7e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1db2e005-d8ad-4275-bf7f-78e60d9f4895",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97877f98-eb46-44ca-a79e-f06a42e24b35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c6b8556-095c-478b-bf40-fb8d6319e30d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3102561e-d8fc-4abc-b6b5-45fb27f3c85c"
                    }
                  }
                ]
              },
              {
                "id": "210d5acc-aec2-4f5f-80e6-2c4cd8366765",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23a466c2-2096-4bd3-b5db-7403318da695",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "880b07fa-db05-4d4a-bf4b-ee70dc500862"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45de75bc-90b9-4561-ac50-ae1c1285b7c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e3306427-9526-4fda-a584-212e6a73be0d"
                    }
                  }
                ]
              },
              {
                "id": "d4e66fdc-6353-4724-9780-7dc0e0cdef8a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d42f7b65-6bb0-4c2a-833e-e7b8e154840b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f05011d9-8823-4e81-bdca-bc3532851e95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8933ca7-dfea-4b98-b959-0c7b47fb8859",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7798f3ae-8377-482a-9655-f914188eb88c"
                    }
                  }
                ]
              },
              {
                "id": "fc3264b1-6f80-4730-a23a-2237b590277c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62f0a021-c2f5-4f1e-ba9a-c9967ab7f89c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0315751a-a09d-402f-9a58-5d1623d4c1e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a331381-2efb-4561-b801-13460d041927",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80c82ee9-8d1f-490b-94cd-3b1efa589d8d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d92fd494-a2f6-4faf-83eb-b0226320fd0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7138316c-d8ae-4311-a9ca-f02aa197caac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f177a0c7-a41a-463c-af6a-41ef6dcbd21d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c24e9f80-045a-45ee-b1b4-46d6260aa524"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "202eebf2-d4da-40cc-9b76-703747336819",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b436363f-f50b-48cd-9fb1-d8166eefe7ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "143ee635-e74d-42bd-8ef4-25d616dd459a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a09edc35-209c-414b-9085-e6f6aa56bd21"
            }
          }
        ]
      },
      {
        "id": "f0df69b9-7aba-4f54-8266-e5e5c379100b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4ebed5b4-fd93-4ecd-9733-f4ef7d131a6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7e29809-8987-4ce8-9b55-e388d354a9db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71c72aee-9f99-43ef-a244-2a5d521abb96",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134b0361-0532-492b-84ef-b2f03aa1db80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df09dcc-bd9b-4f79-9386-5376c8848e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290f10c1-cdea-4269-8566-1cfa8286348b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c26b90f9-1e59-4c97-a94d-23007b64bfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be74f352-653b-41ae-b829-5d9a1f0c99bf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0da9144-be85-4ffa-8dcb-99c6d85671e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e1d165-8d75-4f18-bbf0-ef5deccdf0c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e44d6f-ec71-4698-a9fa-04c61aad1947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a9ffee-9859-40fe-84c2-cbc6305d691a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b3b4fd-6985-46a1-aeaf-2889f5e28a6b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4855d144-7dd2-45db-9d6d-8f46104b27bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44aa3027-4e79-48b5-9a27-934082a214e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f20ff34-c0d9-4aab-bef6-4690c2b36ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a748d19-fa8b-4490-9e85-e1c60066d5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9954fafa-0afc-4dac-8f6b-72cac3173a65",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4804ee39-4639-44fc-b252-7b33f5823f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42915af3-51f0-4fc4-9b85-b888b58edf0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23653c51-c1a3-4c44-9da3-e376055d669d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9819ed3-8b11-44c6-a7bb-cc48c88032f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffa1208-d7de-4ce3-b2c3-9b7fffe09de0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f705c3-3194-4ca3-ac59-b7df49cb7fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f2e8e7-8615-49df-a6be-246fd6728aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae22671a-b685-46a6-b55b-7ae1347eb9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "713eef35-0413-4775-a31f-28809569e5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a957e15-cf61-460b-b0b8-d935fd168be7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7779ac8-c538-4767-ad41-2c6ef2e3f95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8012451-fdba-46ff-a0f3-52e9ac5eba21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20e8c88-81bd-49df-af56-62de4bfefe7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0d4a57-be5c-4f1c-8961-c6b61ad69faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7108c7-524d-4a87-916d-0dd37cc3b3c7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411a1946-b739-4040-a094-9c2ee54012e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a78f876-aafa-43bf-bf6b-c28d3417ad41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866d0c48-170a-4020-b6d6-d4b2f055bb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de0ff8c4-3b02-43a2-a2e0-01e416dd0b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb07d2f4-605e-401c-81a6-b576b71f74e3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9898a907-8838-46d1-af98-6a5e1d90b410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12eb0d0-c07a-4296-9b98-889b893cb499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6c121c-3226-49e2-8f8d-71049aa731e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc48ae3-380e-48d0-ab3a-566fe5d3efb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876a40f7-d4cc-412e-b133-b5ee3a03df34",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba695176-df57-4968-8a7a-97ba0143af24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051bdd58-43be-4fb2-a92e-3a068094bfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5da1db-2b78-40ff-89fe-45bcddd77f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7bef08-e839-4688-8611-4628fbf58a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7777a14c-247a-4d65-9295-ea00d415a2cf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7951d4b7-5a59-497e-9915-32d450080c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640afa65-206a-4bb0-a410-db957372bc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c1aa6a-9b67-43bc-9c7c-0a7db8065d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e253120-ff9e-4f4c-9ae8-37b85d1c6974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35ac136-5ee4-413f-9e93-f0c1e0a0f175",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef2576e-e571-46a1-8a22-ed5267f96d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a496ad-265a-469f-9dc1-ae83342b4457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12947c7a-5352-450c-98f2-0a03b27ab0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "37063fc6-b5b3-4df6-b7b6-deffdfdeddc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb14a5a-9f0f-47a3-a563-d17378784241",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb94db59-f4fb-4ba8-8332-c03e54255e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8767795b-bd1e-4589-bc0f-c503369768ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b648388e-74ce-4135-b44e-f85e7f35dc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34b7e5e7-3171-4db1-85c7-88a330f37ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cff0ce5-ce74-4f79-9714-752b8d8d2539",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453f2ac7-0954-4452-913b-e8e9a3f28912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd7d5cc-6ea0-4cb0-bc8f-64443d2ae462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661fb183-2a30-404c-b296-154415214ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c951af3-9651-4e41-80c9-5c9f7bbc8c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa55e9b6-8761-4805-a12a-08b4b7a522cb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1031a0-57d5-4eda-8946-ed0b12e18471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0b41cd-5478-496e-b284-4fe54b7825cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f6c19b-3b9c-41cd-9320-830600792275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "883e0528-bd0f-4ea1-8545-8f643f5c246f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f279a09-d4ab-4dd6-91cd-6a4835741080",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7d59d6-fcdf-462f-8f00-eeed9d1015b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98be33f0-dfcd-4bd2-9d54-4aa1483403d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a77dc16-0d0d-437c-93ec-95751e47b45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f37e9fbe-844b-4aee-9f86-90b1385a7374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d812f23-3bb0-44be-bc73-90706f83952c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c13c0a9-b8b2-48b7-bb0f-302ff1786752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e983b2-ebf5-47fd-92aa-c1f77fa0d4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376a8411-b0bc-431f-9c71-1d15273b9a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6129612-d306-436d-aa5d-8808ce295bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec71a418-9ccd-4418-924e-b6dfa6990c9f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a903e0f8-f2c3-4e6d-9c40-1a6c2856cdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb2f1bf-558b-4e66-aee7-af268f1fe8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00e12bd-b1e8-49fb-9a11-cd4233f60f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9434297d-d5ad-4dfd-89a7-a76208a7ecdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05ef7b7-a978-46bc-b7e6-81f9edf79d3f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7834e00-8d5a-4fef-9fc4-7df7715dc5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51b2dec-1313-4320-9d12-d68b174a51ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc667d4f-ae55-4f34-9cbf-dd23facabaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67b5151-ddfb-485d-a4d3-5f852e2388b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df81d05-74e5-4fc2-b2e2-b536f03508d4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3a764b-311e-45b2-a3b6-f01ed5b5be63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8d4a4d-e329-4fc9-a58f-87bccd7abce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566127bc-2f39-42fb-b3ea-4fd33d4b0e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "488bb9f1-fc29-408e-a1ea-a2cd21cf3714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26d3347-c739-464e-b195-9246d7c26fbb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86a04eb-a419-4666-84d2-ae1ffe33728a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314fd6ed-d469-43dc-844f-1d3aa523ced3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19172fd7-289a-4eee-9796-64b49739c28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37bfbadb-bb32-4b0a-8652-8ca17909fc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e843ca-8e4c-46e0-b5b0-fd794bb69229",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e13ce28-49c3-4689-858c-acee654dfae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b69a083-aa45-4ac9-9a82-6781103a40d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1ff59d-adcd-43e8-b5d0-aeae3fb07a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef37e0f-4071-4213-a347-5dbbc3ec55d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb57dbbd-6f29-416a-97a8-29b62e736f8f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e734186-3b08-4287-a238-af2651851720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2e5a1e-d57d-406a-bafa-7ac281a2df75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138676c7-ba6b-4d19-bf29-58914d61845a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0476a9cc-94d9-4f5c-b142-12e5a136e385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825c5604-9e42-4a3c-bac1-b9da85f47217",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b0d830-5e3b-475a-835e-14a0d49b159a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a5d3be-9328-42ae-bdcb-6964ba7c913b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc38ff7-43b4-4907-b881-02cc825944a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deef173d-45eb-46e2-a031-fb99503a2566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fc41f6-d696-4012-b238-ec5951137bab",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec81780-cd51-48ed-b480-296eeec6b26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33311dde-6fb9-40be-afba-57adbe721875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd6ba05-2a96-4794-b361-560019edee09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "956379dc-742f-41fe-b7b2-b7425575e831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2623ab2e-0047-4600-bb87-888900b8aa36",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689842de-9221-47f9-8aaf-98babb00ca5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130b4c8b-4927-42c9-ad7c-90a0ad68da3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b5937b-1dd3-45bb-85be-b92afeb5c5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0dae341-9a2f-4dec-b61c-fd24e020e5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ada7484-34ad-46c3-8daa-7f96906710f1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f36d4d8-6c33-49db-9172-c392f9ef4ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8befdfd2-8bfc-47ae-ad7a-e48673e0d964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866d580f-fac1-4e3f-8e26-5e6bd2b60de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c07bc2-69ec-4faa-b762-52a4b6271043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab85d698-877b-4878-ae5f-8e8ce774a1ba",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352a25fc-4cc2-4413-92c1-06b28f4067a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f20041c-c5f8-42d8-ba03-137ef858efa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59486574-a7d4-4b09-adc6-3b220a02d998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60da6a4b-8789-4425-be5b-e08343d9e2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed345af-ac2b-4f59-9aff-f8003d63f517",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b770c10-d995-40d6-8b05-9729ab3ff6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140417ea-bedc-485b-8996-59f0abe834bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db90281-7c1b-4aab-8938-c99bac64d46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d06607c-2745-4029-a759-acd198219ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2111a67-3a6f-42b7-a901-989eb4e58626",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b470ad02-017e-4e9f-b5fd-8422b676cc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc7f2ec-2f21-4d00-8bb1-1a70bfb2681c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a95a422-156c-4a78-8627-ae7c260128bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40638adf-f35d-4977-a94b-c9977cd2d5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034de922-4fa4-496e-9163-48887c8ea59b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5db91b-5cd7-4ae4-9a51-f6c27c36deb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67988b6-46f9-4f09-8b26-d59dd1584730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702b1c0e-b9ac-4d66-815a-34598c922423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "768705a9-918b-4f17-8a0a-a95c6fc0d30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a641b2fd-6123-40b8-a4f6-81fe2ae00eed",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab37e6a-7178-41aa-a0cb-894065f55f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a63dce-d478-4e9c-b10a-5b319479f7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bccbe15-81ce-451e-a299-62d320cf92d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2266b7-30ba-43ed-891c-45b5ef29feb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cd4bd7-ff75-4716-b907-6758a1af2f6d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52feecbd-dcb2-4d36-90ce-9d397f6ef314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8193101-5261-46ff-954b-f87b63b0c1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906f301b-2216-4ba3-ab50-6e051330f5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc574d7-4e32-49c9-aa47-d4e03c8a9ab7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aade7ee8-ead6-4dbe-9335-f454aa868f34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa314663-3b37-43d0-b47f-489cde73fee2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddb75c6-8e9f-46d3-ade2-a44196513a17",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f9d0a2-bae8-4fac-8367-d0d68ab8377f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa02893a-1598-4b2d-984c-3e47891346ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ced7330c-2410-471d-829c-3e7098b8704e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75246b7d-50e7-406d-a5a4-0822c2c0ce42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1be63f5-6c75-488b-9093-ff091a7916b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ab89d38-12d9-4abb-94aa-6282af30c641",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42a00303-5596-4d47-a400-e807a02ae9ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdc9c13d-b76e-4a2c-98f0-53f8c9267c54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "81390ddb-cde0-47ac-bc12-2135ed345d79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "abe85829-6c6e-48e3-8cd3-0c3d1ba30231",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bc556af-4c2e-4d9b-a31a-4af300f21914"
            }
          }
        ]
      },
      {
        "id": "dd6c7310-e318-4a22-88a8-8cd6a57fbd61",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cb796d32-ddf3-4af0-ad22-d94573835f73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ffce5a4-6b6b-4bc4-95d0-b3deae976b59",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9321830-b835-4cff-a092-a71ab5bc6a5e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc739fab-f6e7-4075-ae55-88925c22bfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a03636-2268-4fdc-983d-7ad4de4ae7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a24ba4-4ecb-49f0-8c40-cec0fbd07f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b65e5fd-e061-45c0-9b07-6bc1d673761c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b9b7ad-5c04-40db-88cd-5596cab6706a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437683f3-09c9-47c0-88f4-6d83a97b9870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e135321-320a-4cf6-a866-5b4957254bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1165d89-6df8-4826-bcb7-bea96fa48568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6c6c95-5218-4186-b7a5-9ab581e2d3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f561a126-8643-4f17-a7f4-3a0de3ac94b8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde3bb2a-630d-4990-ba0d-e25039d2d1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df4e385-d0d3-4c04-b199-65f51f2ffb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5d9569-14d5-4a2a-a52b-2fc213f48c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bdfbeb6-e381-4a5c-b8f7-f52cf86670b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b23142-2b26-4916-9a8b-a22982950b34",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a65a4db-c0a0-4b68-9900-37f2fad2abd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348d2519-1ab1-48b5-ab44-bab592c646a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b5f0d7-7de7-482b-8379-1fa1da4a0dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3567c176-80ed-4e37-9429-01a5b5692c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b75a38-b680-4e0f-a193-ea642037dad6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f16e99-34fb-4910-aade-f23795a09f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3338b7-1eb1-4959-bfb2-baac7bbb5557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d59d0d-9d0f-4903-b15d-7b0d322c5ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff458ac3-1082-4e8b-a28a-9e977b9d21e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8173591c-7aa4-4755-9eea-ed950a4438a0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e495bf6f-5450-4623-832e-0f4a3db51f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b47a407-2178-4d43-baab-d4a237dffa72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cc6dbe-5934-4092-9fee-7ec2ba9a2ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53a6038c-53dc-4d4a-af10-cdd5ba3e1228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f41df2f-94c8-4012-b687-2c70bd8f380b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2beda3-91c7-4714-93d1-6f1585ea4959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe353b01-6579-46bc-8239-882605e51ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4afed9-2813-4458-bf21-9856232b9735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4978272b-27e3-4c95-abd0-d678bb2edc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d5e5f3-9cd0-4f44-bcfd-012683dfd7ad",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe386473-5eba-4d47-be33-ff6e337097fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58be8be6-e359-480c-92dc-7c914c2070a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faac1c34-31d6-4d67-bea6-4525fbb00f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e949ac37-32aa-4d10-8c61-0129ac23359c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4121acb-4c32-47aa-bb29-b9675cc92a13",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ccba22-4cad-4f78-9212-13b45a8b2fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb7922d-f4e4-42f9-84c9-87d110a46935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb89c64-8a8a-49be-ab22-a5fe2edbee65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6341b1c5-d2e5-4a0f-85d5-c5e8a7969bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5590e4-14d2-4ec2-accb-21406ecc5cb3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2deb01a6-7543-471e-aa46-3c92db387bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a387db41-58bf-41e4-8bfe-59c52e96f1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ce1ffb-5758-4902-a5f4-8b5c039d07ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccfb401-2eb3-4d2d-9bb6-b37b05b4d7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9051e54-0f4b-4d0f-ae43-d8c64174c73d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d35899-cdf3-4be7-9361-498b4b02d7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9c20a6-ba1f-4bfe-a8b7-1570eabe8f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2bc5e3-3800-49db-a1e1-e6d5e14086a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e5223c7e-c434-4fab-bb7b-674111314273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbd26c2-91dd-4cb0-9558-790c5ea66c21",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be16d85-8612-4f0d-9dcb-f54c377e41b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aed770d-d475-4861-812b-aec2d2805226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c71de9-48ef-4048-a7b9-43e6699ebb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9dcb720-4110-465d-b02d-7a2b262fe18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccfa68b-8030-4a01-92b2-d2a42341b5a1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b41c4ee-eb1c-49f8-be8a-27c2b03a7446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9f6cd3-c470-4d48-a12f-853ef232ec38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb836f6d-25ee-4865-9a79-c8a706981582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b598ab-6d45-4e9b-9b41-8823468b4a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cabd12-3947-4a80-bf65-467ef85cf572",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a9ddd4-f699-41b5-ad3b-4b51f20e6f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163ed6a9-3b36-4415-b44c-902a52ca7d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e10d08b-ada7-484d-a3a1-67cff33ad86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e44163-1f50-469d-bf71-a86f5cc8d3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd049e73-007d-43cb-8bda-4a72b27291cf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6304b544-eb5a-49ed-9bae-e6d4924a68a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41668340-9d40-48ec-bed7-a48f04cb2e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39358c3-2835-45a6-86e3-2fee9c3bd9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b191a14e-6760-4394-8bc6-7fc8265a97e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1ed7c7-9ff4-4168-a476-dd0ee465e6cf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43966e6b-abc5-4ff1-98eb-9871e8de0b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fb0c08-c3a9-45e9-a1fe-217425bbbbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972b168e-aafe-4c68-a515-beb4e8620041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d27ef83-98ec-41e8-b09d-a0767ac75c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f1028d-ce07-41ed-9ff2-6d454f73a807",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16237990-81a9-4da4-8c0a-8e7dc3082029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0ac245-238b-4bed-a290-777d3f2c6f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d711dacd-2e42-420c-8367-1743d0c16979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "893e8312-bc8d-4bbd-9a75-9b85f07fd51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f86b02a-53fe-49c8-8d6c-0eb876621b9f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6b9153-0f7f-4597-a0b4-dae0a3f9452d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321a215e-5ba1-4605-8d85-50de45207a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb35144f-047a-4c58-8bae-40f2d1c984d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "79187a96-c1a4-423f-89b4-4a6650131c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4e130d-21c0-42a6-b473-493b0b8b6edc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127b4b89-e6dc-44a0-8eb2-62e59208d29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32daa144-8fe2-49d0-8995-b6124d50e168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c0687b-eff4-46ca-a7bf-0acf8993b728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac8b881-602e-4fb7-9388-cff8a655096b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2f683f-021e-4e71-b797-d65310146acd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ae3b02-e39a-4296-a47b-6e0c3d732471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97dfd108-ad3a-4ab8-94f9-b3f0fb647b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb18ce1-de54-41ff-b46c-0ad008c8aeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef535ca9-edf2-4fcd-93bd-2f9308239d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10062c6-3b25-4134-a7a1-0662b4a541c6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5afd46-39b2-41a8-b0b5-a1da9b8302c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dc9e63-6486-40a4-962e-4cf62b0739b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6a3e61-ff09-4424-b30c-f33dba07ff27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "007d3bcc-bd3f-4027-b9a8-c50279fdc9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551c8c5f-3ce5-49cc-81f1-fa9fbcb2f9fb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b34d152-1666-4e33-a4b6-8594907da175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ccbfff0-50ce-48ff-b6c1-9fa425ae412b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b453888-db2b-47a6-bb1d-878edc7e7d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef99629-409e-4c96-b29c-5602c76a8250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8783cb-c403-44f5-8fe8-240e19684c4f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdefb339-f008-4139-85fd-e37c84e48d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55d038a-cb81-4cf1-a208-6656eeda63b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726a6821-782a-4935-bd5f-8027a8f6d0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ff708e-ddc4-4d12-aca2-8dd9561e20e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5fa29a-4598-40ac-bd2e-ddd9ee13f2d8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb0fd24-39be-46b5-97d1-320dcd1d875b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188e40ab-b1dd-4e96-b15b-79deb3550cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bafb8b-a645-48da-bb65-01e2afc16e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7952ef20-3cd1-4acc-97d7-7c891402e649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82b60d7-3d15-448d-a230-237f7314459c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcedcce1-13bc-448b-89c0-8b79e62a08ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12af3173-5efb-4a53-9eae-257e5950f34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e150e2fc-0f0b-4bf5-9630-e30221806f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a416278-a6c8-4c81-b45b-501a2cd1c906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4f4736-819b-411a-b8b3-d3874cfabd41",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e66df1-f5d1-471d-a2fd-900eacadf2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad270893-1ba0-4ec3-a867-dd0b2d5e2636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904edd76-b915-4fe0-8264-0ee3f5d9c8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f10bfec2-02d9-4bbb-8d79-760708bbf0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e9b281-15ae-4d8e-b699-8ec403568d27",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac0756a-91ef-4159-9ec8-44730a82527f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5eb1d63-8db6-4ca0-9c42-a8a2e59cf6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11963fe0-b2ac-46e5-86dd-31857b58e9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9403142e-fedd-4d39-9fc3-0d0870cb1288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b173a94-8121-4f5c-baf1-77dff0b926f2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aefb0ea-57e7-4594-b16f-eaddea3c9871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f017315b-042d-454c-9430-113335b47f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5117c31b-b526-4df8-8a05-b5f625a71e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c111ea60-78b4-4b56-9809-fa56e3d4a514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912686b9-e441-4fc3-8063-a1d3c0c495a5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a4ace7-019d-4b06-b6ec-7376cbefd370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa76db2-cd31-47dd-be3a-ce1e5f42539a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5490c6b1-ae1b-4c7a-ba86-b7fbb8f63e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57492c88-cf6b-41a3-a806-72a7da5850d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ff5374-9f93-4fd7-b285-4338cd782882",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c805f941-0c02-41f0-a060-662f44678b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a96d0c3-8c16-498e-96b1-0668d9f4121a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358b091e-ac7a-4bfa-9b0b-4f5b703bdb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d670dba-1f00-4229-b76b-50ba934b6c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183bde83-d8d6-47f7-b589-5cb51ef5f806",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325b38c0-3487-4399-92de-afdce0b6000a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519b48c0-2f4f-4277-98b2-3345fef99b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4502f512-8c59-4f4e-b3ec-8c638111a06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f269d45-127a-4000-a497-6c69610da424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180c2239-03e1-4158-8090-85c177d9ba79",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cf19a8-1865-498c-a4f5-185115b50ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016820d9-ecd4-4bf4-903c-65cfdab3f74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400c532d-522c-4560-88c3-6d6bd133b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf52518-9c2c-4923-a0ed-9afe93692a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97ede33-10e8-4df0-8299-e92ecd324d8e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41949cf6-d513-4894-a2b9-de1373cc7bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8323d121-1ec8-4838-a670-a45674d812d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c1b997-a321-430b-a8d5-45039f8030fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5643339-52c9-472b-8a98-65385464750d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a598b53-ae12-48bc-b35f-e8766ecdb4ca",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f04109-f4f8-47e8-9d95-75c9f62ae4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79c7d60-8f04-41dc-881e-6a700b35d55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2db4db-a6c7-47d9-88c3-fc42b2df5a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e78ab3-d6fc-40de-a6ba-2037c77c7608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861a7420-1830-4b46-b639-da1c1c95670f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d6668e-cc78-4d76-a13f-7ed2491be123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913bc6cf-18bf-4b98-bf85-3453c472f7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a74fc33-2cff-4616-bba9-a8f81db80dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d42fdf41-6908-4bda-a532-fe267585e0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a245cb-9fe4-49ba-b20a-884d1b9a0a99",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4de373-05c5-409c-b56e-fce2415c0101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9013b950-374e-43d2-ad19-facf77c08bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbceb073-2fef-4402-a335-1e374f83d79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "761cad28-2e81-4d89-b6ef-1836d13ead57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d7b551-4a7a-486e-af94-14656febdecc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a071ca-b932-48b2-8114-a0ce92c9c128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16aaa36a-b6f7-4c25-90f9-a1d4d3bd9add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b2f4eb-4ce4-47cb-9a3a-1e0cd274747e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a25dcca-9380-4287-b068-42e0b34f1d50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c3b8c03c-768d-45d8-9958-fe5ba804e459",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0772327d-be50-4fb8-8cff-9ddbe57dbe8a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fb46c3-8bd9-4184-908d-a6481ff75d3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "66038828-58a4-4abc-9fde-bfe1d3d2f1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a03e99b-2e12-4200-a8f2-d8fd3787474a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59b1067f-6a7d-4088-88e8-066ba783fcc5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e477b3f-e28b-489f-bda8-fcf445f82730",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c359338d-4fe7-4d4b-9879-a016950e2004"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c1b9a0b-5df0-439b-aca9-57672e8812df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e70041d-3218-4653-bf97-2ac2794b7064"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52559348-d2ef-4d30-883d-f97b35f266b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a800bcc-63da-419e-888b-6b1332364ce0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff1ce33a-3ca8-443d-aca4-8603073ea5a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "969bbd03-fbe0-4cb4-abac-c68bf944126b"
            }
          }
        ]
      },
      {
        "id": "9f55dd03-e7e9-48fe-ac7c-96b63855c264",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fe9c46bb-2f3a-40af-8546-577bd05aaa8d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8771425d-bb8b-4686-905e-cb6b8a80fa56",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2fca44e6-4416-4b63-a1ec-cd1ecf326148",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c89eb6a-c17d-4434-99c7-79281e34315f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e934f6d4-9c37-4025-af30-de9bd01d73c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ea7134-32f2-436f-a978-486d0147ae6b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1b4fa2-ce03-4892-ae25-f2161f860c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcef0385-8feb-4d85-b411-6aa98ed73c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80d9265-0b8a-438f-8ef2-5d2a4dbd7442",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915a3d3e-c4bd-4543-b0cb-59d87b6fbfdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93740454-2167-49ae-9e78-15d6b6e226d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbd7b93-3857-4503-a619-e8c038ee1d8d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adb3bf9-2223-4a7d-91ae-aafbe9867d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e999ce-6947-476b-a871-4f8130db32b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcf25f2-c6f2-4e35-ac17-d8913f59d320",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd1fc89-d2d3-4453-86c3-aa8566b67613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82eb9040-185b-4e27-8e48-845ea56f7986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832dae35-ecd9-49ec-9782-cc97b3b4ed31",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5750f9-37d7-4990-8579-da1cd1d34edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e671a75-f6d8-49a2-835d-355eda52541a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cff28d-b98d-4fbb-b6a5-1a99cfa00c22",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a26796c-abd7-4eb3-81f8-0d5e41ce14b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6353ccd7-8256-4f34-917a-504590bfed73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f9a24f-aeb0-4983-9e8a-ad0b0ffa4dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10e13ed-b26e-4aca-8d6e-4cb80ba146b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36759e9-60b7-4cbc-8fe1-29dce0f9f6da",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e08544-91a7-4613-b0a0-a3122a41b4ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e76e663b-264d-41ec-ab39-51ece3174017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7519b240-536e-42f6-bb78-d3a0e5c15b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8940dfa-1236-4ef3-aef6-854e6a4c70ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d5bc87-a048-402d-9d9d-62b7af2a9169",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6609d126-1541-401c-b6e0-d1ecb07d5680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2533a2b4-9a00-451f-92de-18dbb30d6b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc97a4b-a37a-4e1a-bdf6-a11c9b8be184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86f11f7-8946-4df2-a323-c944bbdb16fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d4adf1-d00a-4cad-88ad-684a9a1dd956",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2485965-17fd-40d6-a6f0-bac949baf737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11646e9a-730b-4095-809e-fd6c5c55814f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f36a028-3667-4341-8df0-38e1bdef9e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3825fa20-146c-43a2-86e3-0eb3c623d859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b8e924-03da-48d1-912a-3656cfff82a1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015f1837-ef20-4069-9f09-4e215b8135aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ce0141-9ca0-418e-b08d-6fb682db1473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca31eaee-1c67-4fa2-b9c1-973d05c27c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b87b475-d304-424f-ba77-0b720466748b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef6aedb-46e3-4383-9e27-1e3453db3a77",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2654de-e748-4dee-b45c-e76ee68222a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb27dc5c-3d90-40e7-8d62-b6bff9172d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e882dca-e7a8-4063-b313-e34402a64835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10300632-a73b-4a1c-86b7-d3d581851bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98de36a1-cb85-4499-b7eb-93bb5d7271ce",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa1c83e-bbb3-4b3e-ad9e-df75dd40170b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f08204-7e04-4854-8b61-8b1113d28dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b756f392-d6da-428b-894e-b2bd7507736a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadb3ddb-f8ea-4085-b4c4-b1ececc1739b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66055132-1210-4fa3-a74f-257a8e6a3c47",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9680a1a-1a8c-41d7-b19c-a7636684a23d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc783c2-fba8-4b7d-81c4-064e625e6911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddbc3a4-d3c5-4588-b822-e518db47e396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed332ac-140d-4191-9024-252da7e34403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974e3d0d-dc64-4e09-a8e2-e4fc04921a2a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994e9cde-b9b8-4158-877c-45cb4934baff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2578123a-6244-4fad-b917-955deb5dd167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4fe676-45aa-4d20-8c21-508eb7f7698b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1acd13-f099-4edf-a464-b7cf6840f7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b74a88-2175-4b1d-a2e1-c8c8b9a24320",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6338413-5297-436f-bcaf-b820ba3bb0e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f411148-3f63-4ac6-a95e-901ba37aee39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fab17ec-9f36-4552-b08c-0e7d304f87c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07745714-84f8-4ba2-b3b2-b1e869720ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30318604-6b44-4517-aa39-96b177c2ed5d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f6ffda-7b47-473b-b38f-023e7e5b00b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505ab615-2b28-4d27-adde-f4fd29318540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef17c12-cdeb-4c33-8e1d-5d516f653673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29386baf-720e-477a-9e0d-c4f0386baf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf997f5-61dd-4564-8da7-9f7497dd4f7e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d00f74-1e68-4984-8c50-c81ac919c883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fc2427-5236-4853-869b-f1464c0cfcb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1256e54f-c043-4385-b857-a4eb9b157dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a727e17-6fe0-4e0e-bb95-6a8097aff3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e56ffa-e18b-4287-91e0-338343f4285b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f80ebbe-cc46-4886-84cd-43e467cc3329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e86a546-1734-4ce5-85a0-d68fa16efad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76844c4-74df-411e-a24c-5463879e9885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25595be-0dce-4b81-a4c9-a8893df1bef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8764b2a8-3d67-41da-b80a-18caf8780c72",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b988519-2230-4af5-a44a-0b1ca51a3350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edebe181-ec57-4b95-8bb8-b13b5e80c577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98148024-2e7b-4b38-8e46-989e9764c380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10ce8e8-9fdd-437d-a784-234e731268ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f602f38-f834-44a2-b598-408981331995",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37ac1d6-994a-4af9-9de8-261efd6de375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20516fdb-83be-4151-8aaa-7901f3fa423a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e02ad23-b161-44b3-b888-ff9611ec6d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e835eb6-bee9-4d7e-bd85-8735f7a68da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4ba6d0-5f5a-471a-84ec-1b109a29bef1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea53310-e1a6-46d0-ae92-bbc44fdf64f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523bdd57-8ef2-4ebe-8bed-d23858064370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ad5a49-695c-4953-8291-9f70d48a07eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1238eb-4135-4bc1-b737-ece1433eef9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90172cdb-770c-48a8-959f-a48d35c5207b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e87bb8-334f-4d42-925f-8cd265bcb722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc91805-dd83-4b33-8a0c-0b4c24c0f05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f9999f-99f2-4299-b030-17092e6b96ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4f067a-0e49-4275-a4c2-3333ffd503a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430afafa-3390-4468-9f55-7d77f44d209a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684d9dcc-1bda-4a26-95e0-73f905337615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "190b374e-b54e-4023-a4e5-c21d8f3f6d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a519642f-95b9-4097-98f2-73bf8564b527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809ad8f8-b089-41a9-8de6-51736dc23025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a23666-bf37-41d6-ba89-0ef83c1df214",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc0eab0-0c24-4bee-9280-0a82c430fc43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d6f56fd-a752-4559-8566-e7d64cca41a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6757cfb2-c448-4d94-8b23-700c88be5461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97a3e2c-7436-41b2-b2ed-22c9a6f21daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001916d6-ba33-41ba-b451-15feddff553a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2c7d96-d899-492d-a11e-76abd69ab383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69dbf528-fe56-41e6-b994-29c69c2ef1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dd1759-f259-4917-b743-908a052135d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbfb308-fac6-4681-85ea-31f6b90b743e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fa4902-8f7f-4c9e-8ae8-274f69b8709d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8596556-2768-4cda-95ba-a65bacca8ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d33e9c-580f-4225-af8a-10d52d85bc7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8761d9-10ad-4850-8924-92e81727129b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696aa171-401f-416b-8e3a-7025634a9fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d3bd5b-4d03-4911-bd1a-3b20a859ba6b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f0072a-6160-457b-bec8-6467bf5d282d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84cda97-2d86-445d-89a8-367f005de3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71272da-55e2-4156-ab1e-87a84a062049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a3fb6b-d48c-4f45-8dea-1532176374a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44230862-9208-47b8-923a-3ef3c7194fe6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bfe0a7-6b2d-4d46-a75a-9649fbc19670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "824d17b7-3f10-45e4-b894-3ea1cfc9351e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbbb8bf-39e1-4169-84bb-a576d1b71a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b4d2b6-4509-4c3f-96f1-e7b65c108b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fde57f-7158-4d7b-942b-8e1377c2aaee",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf23bf3f-0c07-4296-90ae-cb4b34041c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aaa0742-1f72-433c-8f86-4eb26da59d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512aa987-1645-474b-bd6b-26a42f6be347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0232479c-c661-4233-805f-9b8af2cd9618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27513cf-8a18-4a39-95d8-edaa3edad138",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060725af-730e-4402-ae69-48ac9a07e15c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40772f58-4d65-4642-a13e-12234b445b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058129c7-785f-42a1-a4a3-d2263a86ddab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac43b46a-fc08-4b3e-85b5-3da1330c01f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f768127b-79d5-46a3-97a6-97a93f296484",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9a383a-5678-40ea-8afb-f850be89a9d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c4b517-2672-4eeb-b626-ec5f2fdd039a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f4e618-1b0e-426b-ba4a-f3d475efe5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fed161e-869c-4295-a160-3feb454fc4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d28252-d5c5-426c-ab66-f00134fd58bd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a0838e-9ffe-447b-b679-d8da0e5e02ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53e09f1b-8973-48aa-b961-48cc80a7016f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc518bd-2fed-4fcb-a46d-ce2a3d4c9eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869c641d-e8c2-4f9f-b47d-fc01a96a5120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43726cde-e357-4c85-9226-bad863b48eed",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616549e7-487a-49c3-b162-d865b000d408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51be8769-cdd8-405b-b267-34edcd2abb3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64cb746-b2e8-4544-be76-bdf3d898676a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2979f2-752c-4a9a-8688-586b1ae48e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bcbbe1-e8b6-4080-8b62-9f3980fea6f2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1730fe-1562-42c2-a8fa-c761a4c98c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9919b770-90ac-4581-b821-5be2dc8493d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f22bc8-b40b-4cd4-b979-18784c757af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df606846-222e-4076-bbc1-be4fa8c81526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4779ba6f-05bc-4aab-a4a5-4c977aae1441",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d2cf1f-9a6c-4934-a858-75684be20ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb00428-24de-4a59-90ac-1699cf2b6f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d07a2b-ce0f-4611-8016-1498f8baf829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac25946-d8cd-4939-8615-a3741ee99fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7900978b-d496-4c99-8643-4f71f016eb42",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd49c052-b76d-4d2d-8f20-92df3ac41d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbeb743-fbe5-47a1-9166-f8b83afba33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58679ab-d956-4ec4-9786-fe7e77973326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43db62b3-039d-4ae5-be82-f2f3d13712f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3339c681-9a74-491d-9ee9-a0790c589d3b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde23f2d-c9ea-44e4-87bb-682c032647a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546412ac-ab3f-47eb-af20-ab42e79620e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b13890a-ec31-4e6e-9400-717d9dd474bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec694e7-4fff-49cc-8330-0446ace918c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b204f7d4-3649-43c8-969c-d1b3d69cb1e9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4465bd-b6fc-4a55-9148-49302c0d415c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cfa6d6-1159-41f1-9a0a-4525a864926b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19becb77-8798-44c3-b0b4-c2c290bab241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f97d14-6fd0-4362-b103-ecfa2661bdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38b8582-850b-479f-8a61-1b1b235bbe67",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab2d7be-9e4a-4e17-8c4c-4485eed16a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a44832-f28f-4749-beeb-e1bd0a85c91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab24b98-7bde-4a15-9d95-ae072cd43b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de92931d-a8fd-4661-8071-8317925e13f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3fdfa4-08eb-4308-ac0d-ae3babe8f7b0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0805bc93-f19e-4b99-8b7f-1ddbfd74372c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ea0828-4638-4cbe-a881-b0e5b807c772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935ae730-683e-47b7-97d7-4d8c2e504456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd61bc10-e48c-4e00-97e7-84ac167a9e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76a039a-6242-4987-83b7-56d5b3628f35",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc0040a-202e-4495-ab0a-85cfac073a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6813e3db-188d-4022-bc2d-468398e61e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c49ce27-cb88-43f2-ab16-c40cc4d2c576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34491c54-1094-4a1d-9d68-b9d5b6d004cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c230d0ef-9b33-4e8e-b03d-f77c6c676578",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844ab43f-5237-47e1-8406-a5b9592e2e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37274082-b154-41b2-8d4d-2baab190d359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aafe98-477a-44b5-ab72-2b72fa890253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d2b784-88f3-4ef2-8729-492c5286d14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c01556-9cb6-4855-ab1b-1a44f6119c93",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3795b1e-408b-43a9-98be-37e7e0504dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ca87dd-b451-4c3d-a4af-775770bb4e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626379d5-383b-427b-a962-844d29a55359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4a05c5-e2f6-4692-a0ff-a58c6689eaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c3621a-00b9-46a4-a7e1-cb8767c412ab",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5bec42-2405-43e2-ab96-2d0858314418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a3b511-3387-4294-8d7f-994701a8e42c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b658a413-2133-477b-ab0f-db23376fc7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f065fde6-a61a-4b05-a4bc-0651c17a391e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6bbecd-3064-4f42-889d-569af78b5f9f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142590d5-17b4-4c81-b578-21719cac6eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537ba9fe-2360-49c9-b013-3fb836a67889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849b0bb5-c3e9-40df-963e-50220b8c5178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22029865-9123-4153-b088-cd60cffae785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecdbe7d-90c2-4063-865b-dea29a7f3a2f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185e5c38-fadb-4971-ae1d-15d37781131b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11b5631-b4ba-4033-a95a-882a494aa6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996c8914-478e-4663-9744-713e7e8df822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2b7316-93d6-4e14-be8e-34ba663744f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79c99cf-3752-4a05-b056-714ff341fc98",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b07011-6093-4c7a-b769-7727840126fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39ab7a6-d323-4c0b-a40a-45b95ab1fdd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298ca320-f463-4398-9918-b1562bd3a5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064cbf91-6f9c-430d-b5ba-d5cd0f82b618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fea1ec-3d8f-43c7-9d15-cc825c23e634",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b2700a-fc61-43f2-8102-a9ec1e094eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134fbce8-ca49-4014-aedd-6ea43ea62c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23efe328-bd94-42eb-8de1-0c8adffbeca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c42053-ea0a-412f-99e0-75c8983d6315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6327900-c12f-468d-bcb3-e47b694bc6de",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e003e2a-ef64-43c3-ad66-1efe4132e71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129a8f66-888c-4cac-ac49-89e4b67384ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b7c587-b8ae-4e27-ab75-01c727adb891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6022096-514b-4a92-ac64-2e27a07d0fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb0ede5-cde0-4f02-84d8-8973fa992580",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057b4490-50ef-4ffe-b059-074b652cc4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39cca94-844c-47d7-8c20-3f4959bcda0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391cd16c-bc7d-45ca-9f46-a012b9989aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa59fbaa-6fed-4db2-9115-6042790ae581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2860bc-d2e0-4e09-98ff-4630b05ada7f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9f6bf2-ddd8-443e-a438-b0d039740ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ecd561-cf01-4e70-b461-cc4be5a80c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c57f147-440a-4655-974f-58bfcf0e4df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fd4670-d082-4ec0-91df-e6af447f68f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959d0801-d1b8-42e4-8bb8-9aeed7429796",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfbc684-cf2f-4cd6-8985-d64382553b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db67a3e-49d1-4ac9-9cc5-99b22877ba86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9002bdde-aaa5-40ad-8b84-50c5d5274de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873457d8-4571-4d92-a2bc-a88f1cfd8108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7de150-ee96-4a54-be7a-8677fb2e4cf5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f833e1-01ed-422b-a844-53e6ff6c2d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b275a3e6-5c3c-4ed9-95b6-76471325f8c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cede27-8576-4748-ac25-9ff9cace396c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8993af8-9f7a-44f3-8755-287eee860b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebbca87-a903-4869-84f8-0e005902fc06",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fa3d5d-2156-4221-af08-1d39a48f492d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689ed1cf-7f63-45cb-b932-3036443e14a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6733d6b9-0911-4a8a-8b93-08f1f6f2e982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07eb8043-ad73-450c-b267-3aa6b1f67324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d12884a-4a9a-4cdd-8432-623b9ffdedfc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c25360c-1f4c-45f6-8d60-ccfd657b5b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abd789c-fec9-4a6c-8152-66975acc48b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b988c855-70a7-4308-83e1-191ce31b8c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c96df6-48be-41a8-8750-a72867c9aaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4dfd6a-017a-4384-8006-9949cc42afaa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ff4f20-5bc8-4813-86a2-6fcea14935dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea21557-afbf-4de4-8b49-52a98d6d23c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4894a8-8a24-47d2-ae24-1e6c362f45f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece53ac0-bcdb-4bd5-a0d5-5298487e267e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0814a52a-af4d-4d78-803b-acc0b8bc3269",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd2099f-0587-4f1a-ae1d-5be8154b4afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e67912-724c-4717-a9a7-0e354dc153ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edf17df-944a-46ee-b34d-c4306c17b6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0489f30-9445-4c3b-8b8c-2e033e4a4d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0ef267-6b1b-404c-b7d6-82a5efdd1a42",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2a54a4-2e14-417a-911b-5291e7cfb99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4974cec2-f993-41d7-aedf-461ca0743a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09612007-4eba-4e90-a4ae-d2f0e086667a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738a5ec7-b67a-4376-a70e-161230260fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f0f6a6-200a-42c4-aa49-7cc2804cb573",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92992c0b-b833-4b79-8ada-1cb7acecb07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7f2f35-a9df-4e8e-8850-225d326da23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb7d905-68a7-4b3f-9098-37eae117273b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5378aeab-20b9-49c1-993b-8ae74468be1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922b3633-4428-4ba2-892f-796b360dc9a5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f19b00b-0687-46da-9aa0-695a66bde1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2eda8c8-5890-4bf5-90a2-ad799f6fdee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ea55fe-04bc-4c62-8d4d-7c6b089c19cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8674f9-78ef-434d-b46c-e01ec6cef783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b32ba1-e410-41fc-86fb-f53913a49419",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c0f2be-750b-4b78-9785-9922dff300d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee648a6-bbe4-4610-bb73-81ea0dc67749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7549acf-2eaf-4aa7-9c30-881d29087ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87557dd-bb90-4d50-b3c1-88d983b1517f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67428c23-ac38-43b3-ab7b-feafa2a5d859",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3b7bbb-14d7-48f0-8d1c-2133f2544bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3747340a-6315-4250-ae59-fbfb8723d41a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41c79f0-720a-429b-8f71-c2b67a61651b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dcc4e24-b4a1-4dac-91bc-1b066189f82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19032f04-11ed-43d0-8fc7-85637708435c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d10718-b8e7-4ba7-bf44-80bea020be8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b6b97d9-83f0-4db2-be3b-4ece9b8b7f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90214f1c-5d4b-4ac4-a155-d05debb14a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64399b7f-fd6e-4eea-bf4b-4916613003f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a94f12-635e-40ac-bcf6-1ad47828ea6e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a0d64a-1c74-4a49-acc2-a6235ebbd8a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dd69509-dbba-49f0-bb28-372bc2fcdc2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa2a886-c8bd-45f7-8ee4-6feafde2fd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3e4add-5cb5-4d39-a86c-09da867c1aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d0b5ad-b46f-4334-9246-581d09e72f41",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15778516-60ba-44d8-a996-0f5f571f6dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d9a2ae7-74db-49f4-9347-e83a7436cd57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5a4a7c-14a5-4c2f-8d98-a5717d5fdb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21250011-3dd2-4058-abac-1a3efa2f0f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c46620d-ef1a-418b-9eb1-505a67cbb18d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ead431-895a-4fcd-a5dd-1db9d781380d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d362c2c4-1347-4885-a251-104da07dd74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec7d14c-2649-4ecb-936d-233a1169b4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a112fd3-a4ea-4858-bc71-e61f2568bc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65be6c3-54f1-4633-be02-fd8ebdc1d599",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57a40c3-7075-4893-bffc-ecf6442d04b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8131244f-1266-4c69-a648-e10deb60e0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd94c4d2-aa52-4a67-addd-429003b3dc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4e2f10-9809-4e82-b5e5-0d3c7534ef95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2e6eb0-a8ee-4ea8-b210-b66c656b5913",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e8b296-cf8c-4b1f-9e84-f5b00baca220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55759bfd-c889-4fd3-bde2-406026d9d5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58745110-143e-487f-854d-ad2303d62fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43184439-94b0-4eca-a7e7-b7f3eeb1d99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4369e5a0-ab35-4e3f-b4e9-0244e6cd9482",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb95d74-8112-42fe-9036-6bbf3357866e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41e8e1ed-f5b7-4461-b6d9-8479d1234be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aaa4702-1716-4fee-a966-9c5caa785c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e53f47-7669-4781-9f6e-a0c57bbc7e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614834d5-a1af-482b-b089-37a3cf49a503",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788128a7-6e70-4273-985c-b7152442ac48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac20ad1b-7213-4361-bead-0d91c1b4c08a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4717a6-3ab3-4671-b841-c89b614cbd4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4eca0a-471b-4965-a4b5-2cb367123e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5828ce68-e013-4a68-888f-1deef97e0c9f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda53b45-29d0-4842-9bb6-ae788e111cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "220e044d-e720-4e73-8526-27e5de1c18bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ef48f3-8de4-4be1-901a-ff49b40b1c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627f7b3b-757a-4667-b83f-cf3b67cbe94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e50bb39-7fdc-4c2f-a77b-01433417f9fe",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d0f2be-330f-486d-9bff-1249ef00fe4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f260a240-8d0a-43cb-94fb-3335c673bc5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e22c51-6a49-4f75-95a1-c3fc4cfabb86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e852546-cc02-41d5-b2fa-34928d9a9a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3d2c45-965a-4176-99c4-65279168c0f2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd503a62-0807-43d0-ae86-c26c42a0f2ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "342a58b8-1c43-49c0-9e46-43afd42f0a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6a99cf-9afb-428f-955d-a4fddff5d0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d4dba0-b992-431c-a709-ab3141ff1198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82febc0-6e8e-4325-b8c9-4ae2f288989a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a551889e-eea8-46c6-ba1c-87863f30a599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac549242-86f4-4022-adb5-70b1cccd3dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00adc400-c2e1-4ee0-90f1-43f16b923ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277f57bd-0327-43c5-93dd-248e2e966521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9761775-7d65-461d-bb83-6ec7b8412ea9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a62de80-fdbe-4bd6-877a-80d1bebd8380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "143aba6f-3c04-4ee3-86a2-7ec2aa1e4739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475de188-ab95-4caa-844a-033422091673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a747d3-8845-4bdc-8790-3b3ec5781d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c724c809-f849-46d4-bc4f-a932fc4dddb1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0649aaaa-6f47-4a1c-a64b-853d766c09f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0b188fd-58e6-4b17-ab87-0348b86de513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad41a584-9b76-48ec-b63c-3bee51b0f473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d23e81f-81f3-46f4-962b-7e100b934b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01b1961-c655-4685-891d-cf52ed14bd74",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1da7ec-8bb6-4092-978d-42a80a14114c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3168196d-ec6a-40c0-8a0a-60367e90674d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743c5953-8d85-4bba-a3c9-4082105ce69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0b6610-a058-443e-86f5-1c5ca0c3132d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028eacfd-3a13-4d85-b977-aeb20ae24b9e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3028eb97-b6f5-46b6-8863-29dcc4494b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7d22a51-f0ff-4fae-9866-b52b09124f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca81256a-d78d-468e-a559-b9463e8f9d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72e37ae-91fc-4d5a-af2f-8d30b2fc75c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edd8c09-8d79-4a8d-bfe7-985b0651bfb5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df56913a-1f4a-4d0d-ae5d-e8f108eeddf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f7e30e6-29fe-40bc-8f86-23b0a1e0f30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c69044-1012-44bd-8ffb-5edfaa352f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44410ea4-f0ea-40f9-94d3-aae21438f822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1782001a-fad9-4db6-bace-4414fd37e7a9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c6de6e-8397-4a6e-8d1b-bfe09789a24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3807fc-5e6d-4344-a4e0-f3ee41e5ab27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d98694-9fde-420d-8505-70af99a3e41d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f154416b-d969-407b-93c4-81125ee56dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2119f7d6-d005-4724-a41d-5b805baded02",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce71c6e4-ffef-45bd-8a3e-4d812838745f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba740e78-0837-4909-854a-87be6cf82d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc13deb-dc46-446e-8e33-03923156ed2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52aab5c4-5ad9-4378-8552-8d1e121d32b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12f9477-c089-495d-ba10-0b5b5829d07d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ecddae-9c13-4218-bacf-e6db07158f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e40e3a4-2308-484b-80d0-92d587e72cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a3906d-faad-4654-b5e6-b6aeaeae69b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbc80c8-5dbe-470c-8656-d54d599a2051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86416ef-424b-455e-b79c-87ad53e9113b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8c585a-769f-4d6c-990f-a79ff5b870d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d90c4e2b-9e10-4cae-a92a-98e80fe5bd1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bad0c6-3702-4073-b526-ccf3837cc7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ea1e9c-b444-4d88-882b-744cb73ff99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4a5c33-0baa-4481-9a90-f04323411750",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d8bf82-ca5a-46b1-b0ac-b0adf27110d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20f08c0c-f418-4903-a513-ee41be564bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ef89d7-f24d-46c7-b39c-73bbfa31af81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c678329-3055-4d2e-b6c0-c2fc741f80d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f21a1c4-b43a-4fd7-811f-8439aea3cffd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a9d418-ceae-497e-a2d0-40a5abbb8960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1c5932e-94fa-4d54-beca-c625cef056e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584bf2a1-642a-4b2b-a11c-493154bd9cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc051724-0ec8-42f8-a735-dee01145a577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33098e22-97a9-47c2-b5c4-34a13a865969",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6c77ec-37fb-4998-ad3f-7f80eadb5ebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f7a194-1149-4179-b3d4-e2be03628a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9880eae-be32-4d7d-90f0-61eb1e5d0bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8f500e-db42-4f29-a207-612c81594632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ba5e6f-097b-4e81-84d3-48b3f74db980",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057104bb-18b3-4af7-9b85-21ae9afab77c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9418776-90f5-4d49-8c3a-7fb8d1aad6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2786d8c-0214-40e1-868e-d37ac7447698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b65aebb-3ac0-4760-9976-148670b3146e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8234a3a-b8a0-47bf-af1e-6992a07474a0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c866cbf-cd26-48db-ac82-5e5ac3e3a011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e28f7f6-73f4-49d4-892e-0f0dc6bd97f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcbab1f-457b-473e-8979-cdbdd5a8a05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca7a81a-bcb8-48d0-8758-4e99002dbe9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3e3c37-d584-4578-8bd4-f62e8565ec56",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1773946-e485-4b71-9c28-3595b7fe9714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d6a0c4-233e-4846-ab98-a9101a59653e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ca9053-f4d5-4e07-83ca-b166cac6a532",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8283203-f9bc-4fd3-a39d-0186ff35bbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bee95c-22fa-4cd3-9986-feb034bae703",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743db110-4937-4691-a012-7f053d817c34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c1a617-01fd-4e1f-96ea-d8604fbf3561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d5677e-b83e-45e1-b9d5-150acc559059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b3fc43-fbcd-4f7f-bed7-3b9542bb4f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc7d7e3-ce35-4d28-a469-1bb42f88e94c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee5d761-3f7d-41f4-b6e4-bc0ce2b2f001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d257a3-f423-463d-9f54-74918123f5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b75ba0d-b349-4001-9001-167bd53ae0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d985a5e-aee4-4e3e-8c19-cbab543efb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26aa1f2e-ab0a-4e93-8fb6-851504a24c9e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622e9157-b32d-4896-95d4-fb14412b9816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9290958-fbd0-4121-8c0b-63f45b760d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54df8273-77bb-438c-a9c6-aa48f5292fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fb8dcc-86c3-4d06-9e55-47af1136ee02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c795e0-e5e9-4ccf-918a-56892c0154de",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2728ff73-239d-4bc1-9f6a-408545e3b248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2c31ac1-042a-4292-80df-4b0589e4aed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc0391a-53a0-4a90-9322-189fdfaf4262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b1c178-2e3c-47b7-ad6e-aa00ae760749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4dd106-9375-40da-8790-f06827c40b26",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c962d6e-4d07-43cf-8543-dac9d22c11a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a59901a-8cfc-4b74-aabb-38d4028a0dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627aea6f-5d64-4c31-8f2f-7583318a2fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a802132d-e80d-4e2e-a39a-39fbc9eab8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd9774e-1454-4fe4-bd56-1fd57780eb6e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f627bd21-ee67-4bf4-b6fc-8c6f30d34ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2985012-dafe-4647-9d76-f16c08067ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a0b12c-bca2-422c-a4ef-f63a56bbec72",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea1d87d-c15b-484c-aaab-bb8f9fccf519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86c8117-8c3b-4905-9cbb-145c46910abe",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f484859-7546-472f-9a8b-517a73c3218e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40ad5bac-7e35-40ea-8957-a2b2b9369c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e256b508-4a75-4622-8125-198f0b18b618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8bada3-18a9-4fdd-b809-be736f7680a2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ccf9027-b238-4ad6-aa36-aad83b55a638",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbaedbea-f221-43f5-a3a0-4c44f774100a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39cdf90d-4035-4be9-9ca3-4e5fd87c9abe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8c083da-1819-4e3b-a15b-afd78e2dba55"
                    }
                  }
                ]
              },
              {
                "id": "ef2d7800-b096-41f5-a893-5e1febc56a1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "141f78c3-d41d-4813-8cbf-2893d9a57fd0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85f0734-cd83-4017-9da2-2f4b76073ebe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2e4ccfd9-6398-4be7-b401-385ac9af889d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b13ea6-60c9-4135-8da3-db0cbaf3481a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da07c996-f1e0-4936-9f3b-17a7c05a5d1c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c059958b-f9b7-415c-a86a-ec3711ddb08c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4fe34dd-32dc-4b71-b638-936f04232200"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67add913-9cf8-44d6-986e-ad511d64b8b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8ee6370-6ab9-4ddc-9772-38c6cd4ea522"
                    }
                  }
                ]
              },
              {
                "id": "081e3863-bebe-4e21-9080-07ac22205778",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3dbd4e87-ca32-4eb7-8057-184f3464a892",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aff59ed-b0e4-49ef-900d-58c241df6d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9d6c9c75-b0dc-4935-849e-c8f6a9c4c93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c75ad0-2aca-4cdb-ac40-24c3bee40c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da50275a-fd7e-4ca7-b7ce-c87e9916ca81"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e14d0ecd-9f16-4ad1-9406-213d83b93664",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6bf2b037-6f83-443b-ba06-45138de71cfe",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c347540c-f5c9-4f68-b29e-8e827dc74ed2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1dd1afa8-ba9b-41f7-8ddf-b5c8e34b7494"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b543f5e-97e2-4eb6-b65b-5bd12499f6a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b961d45-da3b-457f-85f0-c3ea64c41456"
                    }
                  }
                ]
              },
              {
                "id": "66a12131-1b08-4bcc-a7ca-ac5f75205ed6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98b666fd-108e-4225-951d-68166ef0eac9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "56ae2eb9-ec0c-4ee9-9263-ac8fe4ce86dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7dd98e9-2977-45f0-a26d-ddc8c0b3960d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7482b940-992b-4ba9-8cf5-e2a018917420"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f49f080-6d78-4e51-8e69-5b4517b38c11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f88b7b99-441e-4b96-8f4f-e137c07846b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c69a481-6cb9-4575-bc4d-f33d627d090c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33da1808-8995-448d-9ec0-d3b74c4b83e0"
            }
          }
        ]
      },
      {
        "id": "26d7c635-f7d0-49ba-8ce5-08d6497a753a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b8892b4e-9c88-47dc-b858-dbea5b9b162e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa6c867b-80e5-4158-94d3-3294d6afb80c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43a9af30-0e15-45b3-bca9-a9bc1dce559b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e1550b-351a-479a-9e4d-dfec9d73b845",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a944ee25-9e7d-40e0-85e8-11e2c7ab1708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb083d0-9108-47bb-9baf-727d59bcfce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf491eca-7311-4147-8b36-a2489ddc7cb3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afe22fc0-ddc2-442c-9517-417c38e0c12c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d63b1b4-673e-4360-bfc9-425c951a517b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a52a5be8-6298-4aa8-b95e-35f37740e0b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb7c6acd-de37-4d41-aff6-709dcd774acc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64bc3b86-a60b-4940-9a63-26fd9005ba43",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0edbedf0-e922-48c8-aa6b-86c258b758bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5be3461b-8d65-414f-92f8-289a82268107",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d9f5542-851f-417c-a030-36976d8796a4"
            }
          }
        ]
      },
      {
        "id": "0a0204bf-a5e6-4fb2-bd08-8c3ba4f077db",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ccccd4e5-7e45-4b4a-846a-0d4b0ab4cc64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af411071-3bda-42a7-9179-46794b55e419",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0cb094b5-e355-490c-88f3-75eff0ddc395",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9464241a-5dde-4e9d-a38b-649f7b8b58d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e07c381e-5109-43ef-a22d-d0b76b0a7403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a955e355-2880-471f-90ba-0fb06d9ea15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b2c84ac-3e55-42df-b2bf-0ab28f3c599a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9c2cd9f-c333-41b3-b930-120f357f1836",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7d435b4-9029-4485-ba55-1d8fa2298f60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf875e8a-6739-4498-8c71-6a51efe877ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b1a898d-4cd7-4f2e-8c55-ca26b98523ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d938aa01-f787-4738-b951-aa5d5edd92c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "76613978-d06c-45e0-ac4d-e795c534b938"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54a3f5d9-fd7c-4a39-8a78-a8899ed7bf3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4da11ed0-64b1-4486-98b5-72d4d853bcd7"
            }
          }
        ]
      },
      {
        "id": "5befcd56-2853-4c6d-a5f2-f873ede14d7b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dd3b5209-cccb-4b82-8bdd-32f7958f2817",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14354203-b304-4ff8-9caf-b2b063ab29a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dce32f27-1149-4ff8-8277-8a5da7204fda",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064ac36e-3d5d-4f19-9f50-a88cc4f876e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f66623b-4f36-49ed-a242-26d77a2122a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3dd5f71-2d54-46f0-845a-c6577fc6d5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52976a71-21bb-4bcc-8757-26cb23cf33b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "367b59a8-0b6c-4eb7-b3d1-7138ce145018",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "495c925b-1088-4267-a96f-7e6acd89b403"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58191375-4f48-4d84-a63b-ec4e9ae7eac6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c88d468-aec2-460c-b578-ae7ba7df5523"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed9032e0-7405-43a3-824e-6e2db8bde227",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "02d5278f-f934-47f4-98ad-ed2229305539"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b0c852e-25c0-4e76-9591-80ed12f9a6eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5ee4498-fe49-4bd8-ad09-c9a1feb6e0d5"
            }
          }
        ]
      },
      {
        "id": "ba0a7145-3e0f-48b7-ad28-179ac0655932",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5af4815-790f-4172-a27b-2bfadcb66a3d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65559ffb-fa97-487a-a4b5-5bf17becd39a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2a7cb476-eb86-41ed-a7e6-2ee0bbe5e466",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2062da22-f40f-4fc3-bd5e-cfaa0065c430",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa29f37c-5074-4695-8a50-75817857f4e8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.922807017543857,
      "responseMin": 2,
      "responseMax": 315,
      "responseSd": 30.56590818212089,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708648418869,
      "completed": 1708648430275
    },
    "executions": [
      {
        "id": "8f02d356-37cc-4c71-a8e3-587f33b954ea",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6fbe1cb0-7667-472a-a7c0-8e76ed644d61",
          "httpRequestId": "192dde0c-776f-471c-977d-214446b7ce54"
        },
        "item": {
          "id": "8f02d356-37cc-4c71-a8e3-587f33b954ea",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7529ba54-ea9d-479f-b78d-9ce21e543b39",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "735c61a9-26b0-4184-ae38-bf8756f5a1f0",
        "cursor": {
          "ref": "8dd8f47d-5031-47ee-bc68-065b757f1880",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7e4f997d-07d6-4c00-91d0-d9bbcf495410"
        },
        "item": {
          "id": "735c61a9-26b0-4184-ae38-bf8756f5a1f0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e9719c15-f328-4ee2-9cdb-9564a7022b2f",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "7996ec70-5a52-443a-b8ed-ae880ed2ea25",
        "cursor": {
          "ref": "4273949c-8c1b-4d76-acd0-45ca648d4730",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cb3b65c2-a2c1-44fe-813c-316ac098b3de"
        },
        "item": {
          "id": "7996ec70-5a52-443a-b8ed-ae880ed2ea25",
          "name": "did_json"
        },
        "response": {
          "id": "e7b01d84-f175-4e9c-86f2-93e2b9c05678",
          "status": "OK",
          "code": 200,
          "responseTime": 207,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efcadba-212b-4bf8-87a1-0d492dbaadce",
        "cursor": {
          "ref": "fd13a3f0-bf44-4718-93e6-33546543eed9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bd569d4e-7223-4cc4-b5ad-029b6964b913"
        },
        "item": {
          "id": "9efcadba-212b-4bf8-87a1-0d492dbaadce",
          "name": "did:invalid"
        },
        "response": {
          "id": "0162a36f-a667-4e8f-8fff-225869011c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efcadba-212b-4bf8-87a1-0d492dbaadce",
        "cursor": {
          "ref": "fd13a3f0-bf44-4718-93e6-33546543eed9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bd569d4e-7223-4cc4-b5ad-029b6964b913"
        },
        "item": {
          "id": "9efcadba-212b-4bf8-87a1-0d492dbaadce",
          "name": "did:invalid"
        },
        "response": {
          "id": "0162a36f-a667-4e8f-8fff-225869011c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c38cc7a-59cc-443a-a187-1cdd8c90f3f0",
        "cursor": {
          "ref": "859997f7-4833-4078-ae6c-a15092507550",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "48796ca5-369b-4cde-9ae4-92fd5acdb0c7"
        },
        "item": {
          "id": "4c38cc7a-59cc-443a-a187-1cdd8c90f3f0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "abe82c1b-1c78-4fc6-bfe5-0f2acc55fd61",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f28c0b2-b1c2-4a53-9e53-7505bc52466c",
        "cursor": {
          "ref": "13f77e93-4b66-405f-a3c7-e791cf076c43",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "86392e07-8b9f-4fe8-9a3d-75f760721f79"
        },
        "item": {
          "id": "3f28c0b2-b1c2-4a53-9e53-7505bc52466c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "842efb2b-c0ba-4f06-94e0-f96168654703",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f488170-f2eb-4b7d-b673-6851a75eada5",
        "cursor": {
          "ref": "2ae71b28-3296-4f3f-85df-f22394884639",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3fee1b52-bc14-447f-9404-fb951fed7e60"
        },
        "item": {
          "id": "5f488170-f2eb-4b7d-b673-6851a75eada5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ddddcdc5-680a-4fb1-9cb8-259d6a57f857",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f23336-1136-4b93-b2da-919e3d1afc7f",
        "cursor": {
          "ref": "7530acf8-1901-4403-b5a5-dbf2cefa9bae",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "09e960ee-26d9-4fde-9479-99fa62797bac"
        },
        "item": {
          "id": "30f23336-1136-4b93-b2da-919e3d1afc7f",
          "name": "identifiers"
        },
        "response": {
          "id": "0dc7ba83-22d1-413a-a696-55d2237641c6",
          "status": "OK",
          "code": 200,
          "responseTime": 242,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864d8eda-a0ed-4612-bf71-30e9e5583c80",
        "cursor": {
          "ref": "729935b9-5ae8-4e28-92d4-efa88f4a4b2d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a85bfaa0-0765-4bd6-a97c-3e645f7df713"
        },
        "item": {
          "id": "864d8eda-a0ed-4612-bf71-30e9e5583c80",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "165ec34d-0297-4925-b3a6-f85aa2a26a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44c4bca-c27d-4d91-a8ed-605ff3b3dee2",
        "cursor": {
          "ref": "7575c6c4-5378-42e7-b242-eeb7bc0016e1",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "41d3fe92-9298-4acd-8f8a-6682db9eafd2"
        },
        "item": {
          "id": "c44c4bca-c27d-4d91-a8ed-605ff3b3dee2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cfecfd12-40d1-4e8d-a89c-ea4c6c260997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50aaac38-b36b-4f01-8ce8-f3c173ae7018",
        "cursor": {
          "ref": "a823f2d9-0aed-45cb-a0c3-10b3d859f0a0",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1127f398-f56b-4bf1-bc47-ac56003bd471"
        },
        "item": {
          "id": "50aaac38-b36b-4f01-8ce8-f3c173ae7018",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5afaabed-0b3c-40af-b5d5-4f92261f67f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d842ce-6ef5-4e52-90f9-ed5492ce8e49",
        "cursor": {
          "ref": "7b2d2115-38dd-4138-8e73-ea6aed1bef0c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bff62c8e-1dc1-4211-ac37-03da2f2a817e"
        },
        "item": {
          "id": "48d842ce-6ef5-4e52-90f9-ed5492ce8e49",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ad9c3363-dbb4-4e39-957a-3b9ec34f6fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f50f49-ff83-41f5-ab6d-86938f08318d",
        "cursor": {
          "ref": "4b90dbdb-78a1-4585-9246-f3fd34500fcd",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6e3abadf-b28a-4202-b1ce-043accac1c84"
        },
        "item": {
          "id": "d0f50f49-ff83-41f5-ab6d-86938f08318d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c8cdc45d-ac8c-4399-a147-796b9ed2df5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a511f7e4-dece-4379-a445-17b7616ce408",
        "cursor": {
          "ref": "15850961-2274-42c7-8f4c-483f254a156e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4dddc69d-3794-40b6-833b-9bf73c80088e"
        },
        "item": {
          "id": "a511f7e4-dece-4379-a445-17b7616ce408",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2b94a0cf-69fb-4430-8813-de26b38a2e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59fbff6-8fb6-4a82-a439-6b5c32095242",
        "cursor": {
          "ref": "f582cb00-fe8f-43bd-8ee5-9a3399d5279a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d6fdf662-b05a-421c-a0e9-8bd0b28fa3c8"
        },
        "item": {
          "id": "b59fbff6-8fb6-4a82-a439-6b5c32095242",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d38a4eee-2c67-4688-b577-0ec4a7f12a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc28e1f-7474-4fb0-bc27-38567bc2f594",
        "cursor": {
          "ref": "b8d01ab3-4098-4663-8bc8-53aeef9f6fe2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d0c69aee-0d41-4ea6-81e1-42f906d20ddb"
        },
        "item": {
          "id": "0bc28e1f-7474-4fb0-bc27-38567bc2f594",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "03d4dce8-effb-4b78-830e-5daabba6e572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6ef010-12f4-410b-adaa-26727bd8de8b",
        "cursor": {
          "ref": "91b0d9c2-0f07-49ea-85e1-f4cbee6099d8",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "38b467e5-82ba-4e6c-91e4-a2ef8d51b67f"
        },
        "item": {
          "id": "7d6ef010-12f4-410b-adaa-26727bd8de8b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "408a5f55-5bf1-4bb3-b427-7c33feefd843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e6d332-0191-4007-8341-1130f1d47f58",
        "cursor": {
          "ref": "2c27a6c8-7cf8-4416-b091-8b722cc2b697",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d3c7e671-8f4b-439b-af6a-631541b89588"
        },
        "item": {
          "id": "08e6d332-0191-4007-8341-1130f1d47f58",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5f80c65c-2949-4c0d-ba92-629380b54383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ad2bbf-fe80-457c-b2d3-7ebc4de964d6",
        "cursor": {
          "ref": "44d38abe-94b5-4643-a539-5a53f6026095",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "39b2c12d-d95a-4fe2-a81a-2c50f1a6c64b"
        },
        "item": {
          "id": "a1ad2bbf-fe80-457c-b2d3-7ebc4de964d6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "36ace390-375e-4222-97fb-66c0e77ec3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426d5c46-1378-4310-adfb-7817e2f30d7f",
        "cursor": {
          "ref": "b714b50f-3747-4bf3-b293-697988d8363d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "505707bf-e33f-4121-9174-036250a3ab2a"
        },
        "item": {
          "id": "426d5c46-1378-4310-adfb-7817e2f30d7f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d3ca995f-21b6-48e9-a086-d2f350cbe870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476bd7ce-3506-4488-80cc-e11626185da4",
        "cursor": {
          "ref": "c0650a6c-9ffb-4dc0-b4fa-498571ad1f04",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fff40242-7734-49e9-9416-0198c166da18"
        },
        "item": {
          "id": "476bd7ce-3506-4488-80cc-e11626185da4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "782bb292-27b0-4b65-a631-30d10a958ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5715fbc5-01bf-4980-b045-607da83e5ab0",
        "cursor": {
          "ref": "24e351e4-7b23-4a74-a613-a128906e6a9d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "18b79873-ca22-4838-b302-0b80909095ff"
        },
        "item": {
          "id": "5715fbc5-01bf-4980-b045-607da83e5ab0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1701b3a7-a995-412d-b355-b9a187042e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03b2793-d871-4c2f-b8a7-31330ff40ceb",
        "cursor": {
          "ref": "3aa1ce65-75b1-44df-a230-ebf07bd65279",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6b8eecf0-66d1-4b29-8206-8393eeaf110c"
        },
        "item": {
          "id": "f03b2793-d871-4c2f-b8a7-31330ff40ceb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "07ff32d6-4ed5-430c-b302-fcd54c8b47e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffff3043-1c9d-4423-b08f-2732bfae9fee",
        "cursor": {
          "ref": "41edfc2f-1129-4a19-8e5b-d26d22a9f74b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d6f4bd47-ac47-4ec2-87f8-286546d736bc"
        },
        "item": {
          "id": "ffff3043-1c9d-4423-b08f-2732bfae9fee",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b3d599fd-6eb3-42d5-821d-4f08687a46ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fb946d-f080-49aa-a5ce-2d55610a6037",
        "cursor": {
          "ref": "c2cf8d2a-bba4-4407-999e-dc48886b5f21",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dff34ec3-ffd9-4e31-b520-3da318f749a4"
        },
        "item": {
          "id": "d5fb946d-f080-49aa-a5ce-2d55610a6037",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6f4d8e67-bc9f-48da-b5f3-2283f329fff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa4dc05-9437-4833-9e16-564165a0e56e",
        "cursor": {
          "ref": "f2336990-7df2-4f99-907f-6a84a1676b25",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ffc978be-4360-4dd1-89eb-01ed39c35e5c"
        },
        "item": {
          "id": "ffa4dc05-9437-4833-9e16-564165a0e56e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "840c6c3e-8ac9-404c-a3fd-8673da16bbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3e524c-a91a-4e5e-b930-0275645ba3c4",
        "cursor": {
          "ref": "f6ab5dd6-54e1-418c-8075-84ddf52bf0ab",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "194cbbb0-097c-4de9-81b9-c402de43498c"
        },
        "item": {
          "id": "3b3e524c-a91a-4e5e-b930-0275645ba3c4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "14242a6f-d3ff-416c-a1ba-ecbd4e17660c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332dea6d-aff5-4f5f-833e-b3612a91c79e",
        "cursor": {
          "ref": "2530fa05-9cc9-4abb-9f50-8c805a4f8328",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "71ce202a-a496-4891-80eb-c4580a8eb387"
        },
        "item": {
          "id": "332dea6d-aff5-4f5f-833e-b3612a91c79e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "399e2319-e1bf-4dce-9a98-2e7aad77ac1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853aa7dc-7d18-4b3c-a8dc-6b6883934d89",
        "cursor": {
          "ref": "b7e3ef9d-bd3e-4127-9d04-1c7b37c1a3b8",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "44e4c84d-1bf3-469c-868f-c949ea5f8cd0"
        },
        "item": {
          "id": "853aa7dc-7d18-4b3c-a8dc-6b6883934d89",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "daac2f91-4a18-4671-8cee-d18700fad704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c65cbe-e618-4d4d-a8db-8c24402b9ab6",
        "cursor": {
          "ref": "a3d3101b-cd4a-4609-bccb-7a457eb2c152",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "78735bea-09e4-4d32-9548-fa54b3fe1862"
        },
        "item": {
          "id": "04c65cbe-e618-4d4d-a8db-8c24402b9ab6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "133ac413-bb9d-4474-801b-3a9df26659c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edab370-0be3-49b7-8b68-b038fc15ec72",
        "cursor": {
          "ref": "8e0eed79-926c-4cbd-a8c5-88a130b7984a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2d3a3b70-7fc6-4414-b343-02ae1966cf28"
        },
        "item": {
          "id": "3edab370-0be3-49b7-8b68-b038fc15ec72",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0966d9c1-6da0-4547-8bc7-49b85d5b5ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b80e0f6-0bd5-4392-9bed-cd1de23f4c38",
        "cursor": {
          "ref": "d50d3c30-11ba-414d-b0cd-a33ed741cf4b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2f7ab38d-6e92-444a-8364-7d4d7d87a948"
        },
        "item": {
          "id": "5b80e0f6-0bd5-4392-9bed-cd1de23f4c38",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "31f29a9b-6bdf-4247-9f5d-c81616418f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47c0d61-43d7-41f0-9412-5ed86954a184",
        "cursor": {
          "ref": "030dbd65-be80-406f-9718-b8835f5264ad",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0e9894c8-fdfa-43bd-b0af-9333c6ce3139"
        },
        "item": {
          "id": "c47c0d61-43d7-41f0-9412-5ed86954a184",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bdd2ca54-3806-45dd-b77a-26b44258b27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f784e8e4-4d22-44d4-98ce-1cbf8ad11bec",
        "cursor": {
          "ref": "83f732dd-9556-48f2-9c80-249f84597038",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "29e52ccf-97ad-41a2-9378-786ff46a9c92"
        },
        "item": {
          "id": "f784e8e4-4d22-44d4-98ce-1cbf8ad11bec",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dd41c0d2-a34c-4fbd-b876-d77bb9fe3621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacd5944-bbce-48b2-9a55-cdf064ac35cc",
        "cursor": {
          "ref": "c1d66c37-8b79-4169-b895-dbd2776d7a31",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ab2a7273-926e-4768-92f8-5f3e35f2753e"
        },
        "item": {
          "id": "eacd5944-bbce-48b2-9a55-cdf064ac35cc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "eab0e20a-6395-4f83-a457-cc4780686402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e82b0d-adf9-4823-82db-e86275144945",
        "cursor": {
          "ref": "5039cd03-bf17-4ee7-a815-a3c70ce81a34",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "90fce638-5645-46d7-8367-db9531986598"
        },
        "item": {
          "id": "58e82b0d-adf9-4823-82db-e86275144945",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b052bbc0-0923-45be-b785-fd99eb9e6469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2072f32b-fa53-4cc6-954d-cef5b36d1492",
        "cursor": {
          "ref": "4c04fddc-9fc3-41c9-bdf3-fecf0769e1d4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "48ab0920-08d9-4f2c-8750-e34053d71a4a"
        },
        "item": {
          "id": "2072f32b-fa53-4cc6-954d-cef5b36d1492",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "af92be09-0f64-4727-b580-d75c71964dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9023d53e-e4d2-4643-9a94-ecd213355b1d",
        "cursor": {
          "ref": "adb8015c-6da6-4753-b347-373a7db22541",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f9a36300-6c01-4b28-ab83-3409176f2c5f"
        },
        "item": {
          "id": "9023d53e-e4d2-4643-9a94-ecd213355b1d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c42b8b4d-e800-4fd4-992a-5b56159bd33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca476b3b-113f-4656-888a-e205a7e36dba",
        "cursor": {
          "ref": "7702d384-53a5-4fe5-8892-35b7a60a0db6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a33f019e-3009-47de-b9ac-fd00a62e4e9a"
        },
        "item": {
          "id": "ca476b3b-113f-4656-888a-e205a7e36dba",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7366040b-e819-456e-aec3-b1e7ae089f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289e1e72-0fc0-4fcf-9b04-98f2a9c4ccf5",
        "cursor": {
          "ref": "0aa3c403-fdd4-4b65-bce1-ade2c4eee703",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c3ad229e-51db-4047-a2d3-6bb6cc826dc6"
        },
        "item": {
          "id": "289e1e72-0fc0-4fcf-9b04-98f2a9c4ccf5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "caf977ca-075c-4737-8a1c-a5808084119d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01c8779-2d8b-4d49-afd2-142d402a8581",
        "cursor": {
          "ref": "ec89995d-46e4-4986-8ea5-3eca57f3c705",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d32001e1-855a-46fe-a33b-bbda3f525381"
        },
        "item": {
          "id": "a01c8779-2d8b-4d49-afd2-142d402a8581",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9f1b5ef4-8d17-467a-8fb1-c91f434490fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e63190c-0e32-44d4-a411-cba193982243",
        "cursor": {
          "ref": "3ee25572-68f3-4484-8849-2bf3a763ae19",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "77c921ed-65f2-41c2-8f6c-6e98a3d010d8"
        },
        "item": {
          "id": "1e63190c-0e32-44d4-a411-cba193982243",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4ca22f49-0834-48e5-bea4-9bb0aa8d9a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2d3526-4b4a-4849-aca4-4d50905cc730",
        "cursor": {
          "ref": "ad870e3a-5eca-43fd-b9dd-7564e2f14ebb",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "131654fa-11c4-43a9-a500-ca9736b2892a"
        },
        "item": {
          "id": "7f2d3526-4b4a-4849-aca4-4d50905cc730",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "77b43b77-1585-470e-b84c-03c2b383d973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdb116f-4cc4-4a7c-9d84-2cd48cf3c1de",
        "cursor": {
          "ref": "b77ca405-a25e-4231-a5c2-7310b82b5753",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b7dd7365-c353-4242-8164-b858a2a21ca5"
        },
        "item": {
          "id": "1bdb116f-4cc4-4a7c-9d84-2cd48cf3c1de",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c0848e34-f895-4d59-96d6-4aa541a6185f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 27,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee55a875-6f78-4714-8d3c-85a8fbed8ab5",
        "cursor": {
          "ref": "48970d39-c6a4-471e-a38d-d327a37b8e2a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b5a88807-5e21-47d2-898f-36d021301a39"
        },
        "item": {
          "id": "ee55a875-6f78-4714-8d3c-85a8fbed8ab5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "29bd7892-c1af-4fed-b0f6-a5cc5b5e6081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caad50f-b3c6-423d-bf5b-df73a7a7e753",
        "cursor": {
          "ref": "3fb741ea-2d93-4108-80d0-5f8827f1c7c8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0f4347e8-4b52-4be0-a71b-567891a76eb5"
        },
        "item": {
          "id": "1caad50f-b3c6-423d-bf5b-df73a7a7e753",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c2a2196c-8e76-4bb4-b4a0-15d1a0d8f099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdfcfdb-3f29-4a49-8117-1ee2ac840332",
        "cursor": {
          "ref": "a6d8e318-0c45-46e3-894a-c9ee1729d75e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fa6d204a-822e-423a-b76a-306eefc28bf3"
        },
        "item": {
          "id": "dcdfcfdb-3f29-4a49-8117-1ee2ac840332",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e6ca4d8e-c10f-4445-b4c1-d1cba703d242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c39e11-64fb-44ab-af1a-4f4e79d578ad",
        "cursor": {
          "ref": "2a6335a6-da2f-4196-b750-6f5284c26251",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6ed62ef7-26e6-4bad-80fd-d7ab4b384633"
        },
        "item": {
          "id": "e4c39e11-64fb-44ab-af1a-4f4e79d578ad",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c0e0406c-b910-4ed4-9f13-f144154571de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5990469b-d0b2-4613-9c86-d74803e3e9ca",
        "cursor": {
          "ref": "bf32fba3-541f-4563-b119-7a5286a0f146",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5143b2b5-6eb5-4b78-b219-f46de6735cda"
        },
        "item": {
          "id": "5990469b-d0b2-4613-9c86-d74803e3e9ca",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "66052b98-c11e-4705-9bd4-ab58fba4927d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c517a0-756f-4587-b4d3-a3bbd99cffa8",
        "cursor": {
          "ref": "d9f7f98f-6b10-4f8d-8614-d73de953c8da",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7b886e0a-a7f7-456b-ab04-13c9f45c74fb"
        },
        "item": {
          "id": "60c517a0-756f-4587-b4d3-a3bbd99cffa8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3d32eee2-e9e6-4338-b055-f85cfc5a3be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9792ba6-8138-48d7-903e-029d2ffa5339",
        "cursor": {
          "ref": "6aedf40f-a52a-42da-9bbb-2509143612dd",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e6e22015-9305-4a9d-a2f5-4aca0d17a5ff"
        },
        "item": {
          "id": "b9792ba6-8138-48d7-903e-029d2ffa5339",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6d3d519c-d113-4db4-aeb8-efa4e12c2958",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 16,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c4f737-42f6-4fee-ab30-e74092d324da",
        "cursor": {
          "ref": "7b5e53a2-fd6a-46df-827a-ba1c9becfa9f",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e9fd8941-6110-467e-b300-7eed01b89c3e"
        },
        "item": {
          "id": "a8c4f737-42f6-4fee-ab30-e74092d324da",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1ed4029c-526d-4013-8da5-276f335d50d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5392ff0-e094-4a10-9e01-72332e3928ac",
        "cursor": {
          "ref": "ec827a4b-75e4-429a-b9db-b3c7c15ba9dd",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "891f7545-ff0d-4c4a-bd3d-1f0c3b670876"
        },
        "item": {
          "id": "f5392ff0-e094-4a10-9e01-72332e3928ac",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "83479fb1-14f6-45e0-b739-2667d87b843b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2a1c41-de47-424c-b6b4-f8d142501443",
        "cursor": {
          "ref": "78430e60-4e5c-47e9-81ef-c95007ec7c54",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3b70bdaa-718b-40fc-9f5f-cb536cf49c6d"
        },
        "item": {
          "id": "2f2a1c41-de47-424c-b6b4-f8d142501443",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "78ec1f2a-88a6-4f34-a058-23b02e069861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2339bdd-2c2e-49fc-ba70-728236dbd7d8",
        "cursor": {
          "ref": "95d99b99-cfca-48b7-9a21-0cec30ff4156",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5a5d43ba-332a-4085-8591-1dd980691d20"
        },
        "item": {
          "id": "d2339bdd-2c2e-49fc-ba70-728236dbd7d8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c4cf0631-8dce-4854-aee1-04dc49f3684a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce9ea76-a5af-4c50-85ca-03f6403b022a",
        "cursor": {
          "ref": "2155e661-92bd-4fea-b79a-7a372f8197d0",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1525c029-55e0-4f24-81e0-84cc3e3601d4"
        },
        "item": {
          "id": "3ce9ea76-a5af-4c50-85ca-03f6403b022a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "72827e31-6e14-4114-969a-c496bda9eb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c686416b-8bab-460d-aea8-f26fdbec8ac2",
        "cursor": {
          "ref": "15675881-cc2d-4aca-9bdf-497ce03900c5",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ebc42fe9-95ea-400b-b778-41e5b0ae9010"
        },
        "item": {
          "id": "c686416b-8bab-460d-aea8-f26fdbec8ac2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c434ec2a-bbe9-408f-a970-57ea8d0803a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b7b8da-705f-4d56-81c2-2af9f564e541",
        "cursor": {
          "ref": "532191ad-a6b6-4df1-bb7c-8fa1e3df5b7c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3fe2f2aa-d9a2-4636-974e-4fd96c4dc652"
        },
        "item": {
          "id": "12b7b8da-705f-4d56-81c2-2af9f564e541",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "62bacf17-110f-4e17-9096-be3d5254549f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6fd8a2-90d4-4399-98b8-8b508da3b3fe",
        "cursor": {
          "ref": "c44a6e75-0462-4a76-b37b-1fd43d82c5a3",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8f161c0f-5603-4c2b-a76c-95c4431576e7"
        },
        "item": {
          "id": "7c6fd8a2-90d4-4399-98b8-8b508da3b3fe",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "503192f2-8ee6-4d5b-8bfa-84f523267d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c91f5f5-7b5e-4946-8266-edac851acab4",
        "cursor": {
          "ref": "58e19f6a-81b0-4060-a770-f0f14d064914",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "30b289d0-e0eb-4e2d-b348-3da7ccfaf44b"
        },
        "item": {
          "id": "0c91f5f5-7b5e-4946-8266-edac851acab4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "451a8ca6-9741-4440-a2ff-3eaa45ead1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b31ce8-d0de-42b3-9c74-faff3c6ee80f",
        "cursor": {
          "ref": "7eebe569-2f1e-4ab6-9bae-d663e1ef3267",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c588657d-0170-4038-bc5b-8efc193a3fbc"
        },
        "item": {
          "id": "69b31ce8-d0de-42b3-9c74-faff3c6ee80f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6f76e85b-0a1e-4830-882a-a7215c71d71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7120cc-dbf7-4ab3-9aa5-7b0f82e323da",
        "cursor": {
          "ref": "bc198e72-7cfa-410a-ac9a-1757171cad5d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b70f80c6-3457-4ad6-8fc5-125418da1116"
        },
        "item": {
          "id": "1e7120cc-dbf7-4ab3-9aa5-7b0f82e323da",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e059c86a-e416-4c4b-a037-501496ed490f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8437a077-e1cf-471f-b0aa-8816039dd9f8",
        "cursor": {
          "ref": "6475b3e6-6eb7-4e29-8fcc-c0f36cee9206",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d37f4c37-d0e5-47a1-96dd-9ceb7e0927e3"
        },
        "item": {
          "id": "8437a077-e1cf-471f-b0aa-8816039dd9f8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3f1017ba-cac0-40ee-9760-fadf9b357e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e87215-eb86-4886-b01d-704ead63a93d",
        "cursor": {
          "ref": "5d780482-2710-44b0-b6e2-4215aaa24c0d",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0f00f8b6-fca6-44f4-bc1d-cfab891ff6f3"
        },
        "item": {
          "id": "d4e87215-eb86-4886-b01d-704ead63a93d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8298bb58-5188-4d2c-884e-e203c930462f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17168228-bed2-4528-8387-39181dd3ed09",
        "cursor": {
          "ref": "1d021fde-d26b-4e63-b6b0-301efa111c6b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "442330f0-75d7-46a5-9d9b-291e829158b8"
        },
        "item": {
          "id": "17168228-bed2-4528-8387-39181dd3ed09",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c476901a-6f96-4653-8d97-c7d5e21646be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fb8013-4493-4d8d-850c-72eed0aed3f2",
        "cursor": {
          "ref": "7196c554-0d69-45eb-9249-59094b6ccfa9",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e3298f6a-5a4f-4a85-8f6f-4a9a6729f0b0"
        },
        "item": {
          "id": "46fb8013-4493-4d8d-850c-72eed0aed3f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6d2e3c55-d2d7-4406-b2c8-1dc05db95be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76c6df4-a6ec-41ad-989e-54cdb732ffde",
        "cursor": {
          "ref": "b740d8f7-3c4c-4001-a091-815175e4b0c3",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1aa9a0ca-c773-488c-8b65-8260ebe60608"
        },
        "item": {
          "id": "c76c6df4-a6ec-41ad-989e-54cdb732ffde",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0b0ac618-dd1a-4a6a-bb73-833c96e05fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e46587e-de31-4e22-9085-1e8acc0d7df3",
        "cursor": {
          "ref": "3521ea21-0027-44b3-8eb3-96f0daded1fb",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "79b64520-8ae0-4b05-bb62-cdd978914823"
        },
        "item": {
          "id": "7e46587e-de31-4e22-9085-1e8acc0d7df3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4529468f-4512-402b-91db-7d59febea4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd2ae52-28c2-4bd6-ae76-513160ca0ad5",
        "cursor": {
          "ref": "d8df864d-5282-4302-9abe-266c685729da",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a86e95ed-e1da-479b-83de-93979147a70e"
        },
        "item": {
          "id": "efd2ae52-28c2-4bd6-ae76-513160ca0ad5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5bb89eb3-ce25-4ca2-9a90-358a1bbf2676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adf38ad-6d58-40e3-a701-2a1e6233273b",
        "cursor": {
          "ref": "03539d96-9249-4e15-bb67-ff13836afb00",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "48dc4691-3617-43ac-a94b-0c0b33358aeb"
        },
        "item": {
          "id": "8adf38ad-6d58-40e3-a701-2a1e6233273b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a039fbd1-55dc-455a-872b-0b581ade5ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd627a1c-ce16-49a6-985a-e893cc7d7e22",
        "cursor": {
          "ref": "1be2b4e7-3ead-44ff-b119-a9f07a207fb6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8a3674d6-5b09-46e1-a560-6be438a68ddc"
        },
        "item": {
          "id": "cd627a1c-ce16-49a6-985a-e893cc7d7e22",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6af9a5b0-1844-4b72-ba4f-09dcccea0ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea154e3-92f7-421b-bf22-317a7bfaac6e",
        "cursor": {
          "ref": "9dc1cadf-6363-43ac-bb9c-d9e5c5cfe226",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ebd8c959-52d6-436f-ac9a-472b99791cf8"
        },
        "item": {
          "id": "1ea154e3-92f7-421b-bf22-317a7bfaac6e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "48b06b21-8631-4015-a76e-af51e12ff351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8003974d-2701-4a15-a2ee-bd04f9a29da1",
        "cursor": {
          "ref": "3005c747-80b3-4ee9-8979-e7158ae3bac6",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "72d4e01a-43a6-4003-97e7-e1fbdb54280f"
        },
        "item": {
          "id": "8003974d-2701-4a15-a2ee-bd04f9a29da1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cf788c5a-2356-4220-9f00-3d4060e872cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a91cde-3c24-4aa1-b549-6c2eb5ef2484",
        "cursor": {
          "ref": "30b89741-04d4-4a7f-b9ff-2f50b175c80e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "36b382b0-dbb9-4ae7-b14f-e4d0c4a910ea"
        },
        "item": {
          "id": "e2a91cde-3c24-4aa1-b549-6c2eb5ef2484",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "39844a3f-92f7-4a87-99bb-079e9154e3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a04406f-a6ef-4c29-9ee7-a6d60113c350",
        "cursor": {
          "ref": "7eb8eebe-d046-4d25-834b-fc581d490cc5",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "34073689-bd69-42ad-8e0b-782e78faddaa"
        },
        "item": {
          "id": "1a04406f-a6ef-4c29-9ee7-a6d60113c350",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1ede4e6d-ba1d-4021-a40c-d122ea94f7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0571240c-8112-438e-bc2b-51c81992c8ce",
        "cursor": {
          "ref": "771cacbe-4ef1-4da8-823d-d6b4366d6ac6",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "837062ad-77b5-4453-a7bf-17f1049a8cf1"
        },
        "item": {
          "id": "0571240c-8112-438e-bc2b-51c81992c8ce",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8fe6d40a-1a21-4b62-b0cb-01a21dad02b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a91129-69fc-4564-a181-ba42d42d8a24",
        "cursor": {
          "ref": "cfa49c21-e735-49c2-8048-364a4acfc34a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4d17c993-a6ef-4737-890d-1508f60e0abf"
        },
        "item": {
          "id": "e4a91129-69fc-4564-a181-ba42d42d8a24",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "910395dc-8341-4e3b-ab94-2e4e8d37b066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37321d0a-1599-4bb8-8ad4-fd70c5551d9e",
        "cursor": {
          "ref": "dab0e21c-8320-4716-9a17-ba56f3d454eb",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "34129b2b-2ae4-4900-8ee3-05ba1ff3d678"
        },
        "item": {
          "id": "37321d0a-1599-4bb8-8ad4-fd70c5551d9e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ec4564a7-77eb-4298-a73f-8973257c64e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba520178-14cf-49fe-99e6-e928c5fc9ad1",
        "cursor": {
          "ref": "14185631-5516-4985-8a11-7773c12d8f54",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1c0a13f9-689b-4775-bf0e-c3097d664fb3"
        },
        "item": {
          "id": "ba520178-14cf-49fe-99e6-e928c5fc9ad1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2f031eee-8168-467a-8e4b-cc7ce83e9ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3607ef6c-34af-47c4-a41b-788570d0c6a2",
        "cursor": {
          "ref": "65ce63e5-2c3e-48df-aa38-953d142226e8",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4c048527-e90a-4fe3-9a49-3588cfeb677f"
        },
        "item": {
          "id": "3607ef6c-34af-47c4-a41b-788570d0c6a2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "717b7b3f-062f-45f2-9912-8c239dc0a67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf953972-a05f-4dea-8317-94e4456c6bb7",
        "cursor": {
          "ref": "5d8d948f-b935-4488-86a8-5acdd000f614",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3440a2c4-a297-4238-af00-8d885146c501"
        },
        "item": {
          "id": "cf953972-a05f-4dea-8317-94e4456c6bb7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dd2bcd84-9033-49e2-9b2e-19fe54925de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdbed5c-e805-44dd-9499-0037da486b74",
        "cursor": {
          "ref": "750a2cfa-7259-4c02-bc9e-c6b230acaec4",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f9001e45-dbcc-428b-ab69-2973411de355"
        },
        "item": {
          "id": "efdbed5c-e805-44dd-9499-0037da486b74",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e9ec43be-fe15-4c8f-a8ca-02c18c7852e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a3fd03-21ee-48cb-a63f-46533029df88",
        "cursor": {
          "ref": "a7fc413c-d90a-48e1-aa0b-76ad3cfb9527",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ac86d9bc-9022-4079-8a7a-098a5e3024ae"
        },
        "item": {
          "id": "56a3fd03-21ee-48cb-a63f-46533029df88",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "24aaf4ad-7608-4754-b063-893944815d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac2f87a-134f-47d4-9c94-498832650fc3",
        "cursor": {
          "ref": "307e5427-0077-4134-af53-ff3615d4edd5",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "17046585-4252-4b48-9c82-74c58459d37e"
        },
        "item": {
          "id": "3ac2f87a-134f-47d4-9c94-498832650fc3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4b594a33-e795-47ca-b5de-6d016226c6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f254923-40f0-438c-91ee-094b90442a0b",
        "cursor": {
          "ref": "fa46ac93-56ec-425c-997a-a8de1a2743eb",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d42bea35-8d64-41f3-9148-fd9d406c7516"
        },
        "item": {
          "id": "0f254923-40f0-438c-91ee-094b90442a0b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ab25cb25-bb7b-4fdc-a71a-fb50bcf5e2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd74f50-7933-4054-8691-92d610222720",
        "cursor": {
          "ref": "e0523863-3e46-41df-9893-22a9f6e10ab0",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3ca541d7-1236-4fab-8ddd-1e1691c0aadb"
        },
        "item": {
          "id": "fbd74f50-7933-4054-8691-92d610222720",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e77c438c-0236-4fb4-9cd8-6c406e65f0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94148e6c-d799-4d5a-91ee-fa66c97c6a62",
        "cursor": {
          "ref": "af6979c9-22cd-4c42-a439-3c29473f24b7",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "da2e4d62-ad78-4aa3-8c4e-fce5969c1292"
        },
        "item": {
          "id": "94148e6c-d799-4d5a-91ee-fa66c97c6a62",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f0062297-820d-4d48-babe-e08bc5a42ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97585e1-ff0f-4cfb-ba3e-0d56907691ee",
        "cursor": {
          "ref": "f60e6753-875e-4472-b449-f4612465349c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "88bad296-4b90-46b6-9b84-d926d4dc1cdd"
        },
        "item": {
          "id": "e97585e1-ff0f-4cfb-ba3e-0d56907691ee",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ec5f463b-b32d-408e-8ce5-63715c2d9cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d9507c-a054-43c4-9243-c01a3a8a91fe",
        "cursor": {
          "ref": "3ec9fcc7-ed14-4b37-a998-43b1fd2aca38",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e1df6076-7472-4714-adbd-003cd0b6ca1a"
        },
        "item": {
          "id": "43d9507c-a054-43c4-9243-c01a3a8a91fe",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2e1b4217-5402-46b1-a866-a5069ebad375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c64dcad-ae3b-4a03-bba4-98e61b7647f9",
        "cursor": {
          "ref": "7b09dfef-ebde-40da-a4ba-d90e375173f3",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "239f88ab-e5ee-46c0-9905-f54edf75710b"
        },
        "item": {
          "id": "3c64dcad-ae3b-4a03-bba4-98e61b7647f9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "13a79dde-a37a-4ec5-82a7-0c2e04bb6c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e502aa-76c8-4e4e-936e-e988056b54aa",
        "cursor": {
          "ref": "f1b5778a-e0cf-4d59-8df7-394429f0aa64",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e553a9d4-032c-44e3-abc9-93c61caaabab"
        },
        "item": {
          "id": "98e502aa-76c8-4e4e-936e-e988056b54aa",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3e785205-8f74-4297-841d-3cf724debb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52398ae7-8b41-41b6-8e4c-d0b2c68f6109",
        "cursor": {
          "ref": "cb60658b-a278-47a9-8e62-d47ff6c4007d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7be5dac6-8ec2-41c4-a991-4bf4f1383bfa"
        },
        "item": {
          "id": "52398ae7-8b41-41b6-8e4c-d0b2c68f6109",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5ffb53b4-e831-467b-a778-11f62bf60f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d58dd9-9eed-45ea-aae9-d025a315ee62",
        "cursor": {
          "ref": "1ce3d66c-dfeb-487d-ba35-0ee02d22ffe4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "227fc7ed-02b8-4777-83c2-1ee81314331b"
        },
        "item": {
          "id": "70d58dd9-9eed-45ea-aae9-d025a315ee62",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "65cd42e9-78ea-4efe-9e39-323e8c249703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca0df39-24fd-47b1-bf6d-7810333c1b6a",
        "cursor": {
          "ref": "9ec920b8-ab3a-4f3a-96ea-6b486f3d4411",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7ab8ddfc-3d08-46cb-9536-847febb1cce5"
        },
        "item": {
          "id": "aca0df39-24fd-47b1-bf6d-7810333c1b6a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6429545c-d4f5-4189-bae4-788c659652f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df39306-f15a-4bc0-90ad-1f23137e17d5",
        "cursor": {
          "ref": "0e825159-87ab-4943-bbd8-edb8e076ed98",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2d9ca8bf-d982-49a2-9fec-ad3392876c9f"
        },
        "item": {
          "id": "5df39306-f15a-4bc0-90ad-1f23137e17d5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a543aa69-f371-4d57-88bc-abbd03dcc47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c425cdd-386d-4dde-b4ba-1ad929e7333e",
        "cursor": {
          "ref": "a4a966fc-e84d-4c29-b773-eaebc770b0e1",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ceed25e3-cd03-4918-8dce-f24a63098f67"
        },
        "item": {
          "id": "5c425cdd-386d-4dde-b4ba-1ad929e7333e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a554b816-a7f1-4e41-a31e-bee646200efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc32a58d-ccef-4efc-865c-e983b1fb002b",
        "cursor": {
          "ref": "a140f646-dd8f-4403-b92c-e652edb21e73",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "47e732b3-5d3c-4140-8862-4d28ca7f4605"
        },
        "item": {
          "id": "cc32a58d-ccef-4efc-865c-e983b1fb002b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b8110197-14d7-4be8-b394-5090c920edc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1243764c-d409-41a0-8a42-39239f8f4acc",
        "cursor": {
          "ref": "06f37d81-5867-41fe-ba65-bf3ea50f096c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ec9ce538-3023-4e4d-bb04-ae991b76c10f"
        },
        "item": {
          "id": "1243764c-d409-41a0-8a42-39239f8f4acc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "90daa2a9-cc43-4841-bbaa-3750d98fcc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025f834e-821e-4a7c-a91d-571477ddaaaa",
        "cursor": {
          "ref": "98f5b16a-fee7-45fa-931d-355975e62b3e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fda33d35-4a65-48a2-8c05-6ddaf1dc6174"
        },
        "item": {
          "id": "025f834e-821e-4a7c-a91d-571477ddaaaa",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "41ef938c-8133-4a6d-8e63-7f7da109781f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b69d0d-9630-44fc-a569-46fa3c4f7ef8",
        "cursor": {
          "ref": "b5f1b911-c405-4516-9f2f-c52a76ccde2f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b3a0a657-9357-4cd1-aec5-42c75ba48b29"
        },
        "item": {
          "id": "e9b69d0d-9630-44fc-a569-46fa3c4f7ef8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2b283f84-1d31-48f6-9c02-140ba9206f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0d1989-f377-4e7d-9f99-7ad26ebeeaca",
        "cursor": {
          "ref": "9cd497d0-09a8-46c4-aa3d-70794a84b9d7",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "01e5e700-631c-4d96-89b8-f5232b3ab73a"
        },
        "item": {
          "id": "8b0d1989-f377-4e7d-9f99-7ad26ebeeaca",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b6e61dcb-c761-4690-9f93-e164fa776759",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8c4c9f-b626-4d8f-946e-6e546f23c42a",
        "cursor": {
          "ref": "d37d9301-1245-4a89-b4ba-c575902ce0cd",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f78b5c16-afff-4aaf-a7f5-b03f4e6d0843"
        },
        "item": {
          "id": "ea8c4c9f-b626-4d8f-946e-6e546f23c42a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1532d70f-8687-4299-8fa5-8280efbf1733",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d5e1b0-ddc4-43a7-aecf-063ac2000994",
        "cursor": {
          "ref": "2d86e1e3-7eec-4978-8ae8-46ebcdde1c06",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "748b27fa-ab8e-4084-be54-f5ba89b13311"
        },
        "item": {
          "id": "01d5e1b0-ddc4-43a7-aecf-063ac2000994",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a82fcb8a-d559-4b9e-946c-455018d50f97",
          "status": "Created",
          "code": 201,
          "responseTime": 160,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab92283-f371-4453-bb2a-b2f915812f09",
        "cursor": {
          "ref": "c4bb98f5-c2d2-4f82-aa44-4282ff5c4208",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "90305077-2d1b-4a2a-abec-725fdd08cc7a"
        },
        "item": {
          "id": "bab92283-f371-4453-bb2a-b2f915812f09",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cf7b2783-d5a5-4687-8901-52d16f07a4ca",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec2870f-6efc-40ea-8352-1d4163deaf7e",
        "cursor": {
          "ref": "7786a428-a6b4-428e-a03d-ab9066bb845a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5379d61b-22cb-46c9-bccb-0d95e2bfccaa"
        },
        "item": {
          "id": "aec2870f-6efc-40ea-8352-1d4163deaf7e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ab425b55-1ae4-4b2a-909b-316f4087131c",
          "status": "Created",
          "code": 201,
          "responseTime": 43,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "210d5acc-aec2-4f5f-80e6-2c4cd8366765",
        "cursor": {
          "ref": "a2389193-82c0-4839-9744-4189ebd5e6a3",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8f94665f-55f3-448c-9e06-571ecf686284"
        },
        "item": {
          "id": "210d5acc-aec2-4f5f-80e6-2c4cd8366765",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9bd9216c-44ef-4791-97d7-6148c8a6eee8",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e66fdc-6353-4724-9780-7dc0e0cdef8a",
        "cursor": {
          "ref": "96f4e2ee-69ba-4e81-bedf-d64f57500fc5",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8df82bc4-f009-4460-9f27-c8cc665df8d2"
        },
        "item": {
          "id": "d4e66fdc-6353-4724-9780-7dc0e0cdef8a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "140d7cba-6f4c-475c-acb2-eec736856381",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3264b1-6f80-4730-a23a-2237b590277c",
        "cursor": {
          "ref": "aca9af03-55f5-46c1-8c33-ef9ba7d1e1c1",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "acc69cee-9f1b-4f70-b08d-12a10f41c564"
        },
        "item": {
          "id": "fc3264b1-6f80-4730-a23a-2237b590277c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "80068ee9-946c-45ce-9d4e-fb0ec29915fe",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c72aee-9f99-43ef-a244-2a5d521abb96",
        "cursor": {
          "ref": "d213876f-d758-4ad6-b885-56c72a052fa7",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ac9c6850-7712-4b78-a43d-8aecb118f24c"
        },
        "item": {
          "id": "71c72aee-9f99-43ef-a244-2a5d521abb96",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "baea84f0-12c8-47f2-84b0-8cbec36e7a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be74f352-653b-41ae-b829-5d9a1f0c99bf",
        "cursor": {
          "ref": "88a142c8-572d-4621-80de-f995c3ce547a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d6668512-4ca1-41e8-868f-05135d299e40"
        },
        "item": {
          "id": "be74f352-653b-41ae-b829-5d9a1f0c99bf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2af48dab-2d02-40cb-a65f-2a28ef2ac3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b3b4fd-6985-46a1-aeaf-2889f5e28a6b",
        "cursor": {
          "ref": "3119d560-6b26-47db-a566-2c81133bac4c",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c27dee53-c676-41e2-9820-8b4cecc044e5"
        },
        "item": {
          "id": "48b3b4fd-6985-46a1-aeaf-2889f5e28a6b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f3bbd4d2-a6d8-4eef-b96e-d1f57370a378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9954fafa-0afc-4dac-8f6b-72cac3173a65",
        "cursor": {
          "ref": "8bb80670-7def-4edf-b081-3124f6da6618",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "37ffea1f-ea9a-4804-b179-98cb79e98728"
        },
        "item": {
          "id": "9954fafa-0afc-4dac-8f6b-72cac3173a65",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "54ef7917-7784-461b-a276-0eff082ef5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffa1208-d7de-4ce3-b2c3-9b7fffe09de0",
        "cursor": {
          "ref": "0653d89e-2b4a-4d98-889b-c7d578510ebf",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2f3a6880-544c-4df5-99c2-11518bd2f79d"
        },
        "item": {
          "id": "bffa1208-d7de-4ce3-b2c3-9b7fffe09de0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bc0fd793-97b4-431d-89e2-48364814deb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a957e15-cf61-460b-b0b8-d935fd168be7",
        "cursor": {
          "ref": "9f793794-4116-4c42-b6b2-30731094cf35",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9c26989f-8a26-436e-a78b-fdbae682b011"
        },
        "item": {
          "id": "8a957e15-cf61-460b-b0b8-d935fd168be7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4040ffb5-7bcf-4535-b2c0-60e583ae9659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7108c7-524d-4a87-916d-0dd37cc3b3c7",
        "cursor": {
          "ref": "bdc79361-a8ad-484e-aba2-da0359f1e055",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f1a09f77-908a-4318-89ef-37e62eb64d8b"
        },
        "item": {
          "id": "8b7108c7-524d-4a87-916d-0dd37cc3b3c7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "099abab2-8a2f-41c9-9120-6089dedcc51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb07d2f4-605e-401c-81a6-b576b71f74e3",
        "cursor": {
          "ref": "83550fa3-6607-4a12-b848-92fc0b244913",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e369940d-dda1-4934-836c-45a5af8d6d54"
        },
        "item": {
          "id": "cb07d2f4-605e-401c-81a6-b576b71f74e3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7e7d101b-bf76-4743-b2a7-30c04e260fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876a40f7-d4cc-412e-b133-b5ee3a03df34",
        "cursor": {
          "ref": "d95ee91e-932d-42b8-9a37-d9a9581ea757",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "15636281-0e30-4a77-b822-59cb1ceef22b"
        },
        "item": {
          "id": "876a40f7-d4cc-412e-b133-b5ee3a03df34",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7df88184-d935-4209-b6b4-b9658cd01436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7777a14c-247a-4d65-9295-ea00d415a2cf",
        "cursor": {
          "ref": "2c51a00f-f016-4cb6-862f-075f131938e6",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "04635d20-215d-4d3b-bbac-2f26c0bd5beb"
        },
        "item": {
          "id": "7777a14c-247a-4d65-9295-ea00d415a2cf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ee62cb24-7eb7-43ba-88d2-1fe54386a14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35ac136-5ee4-413f-9e93-f0c1e0a0f175",
        "cursor": {
          "ref": "bfa6b281-a612-4da9-8771-f99f8b9587ab",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "75646204-d84b-4db6-a41b-f3a18252628b"
        },
        "item": {
          "id": "f35ac136-5ee4-413f-9e93-f0c1e0a0f175",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ddf40702-03bd-4daf-94e9-16079d4278d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb14a5a-9f0f-47a3-a563-d17378784241",
        "cursor": {
          "ref": "7c8c4848-dd17-4255-a29a-8e94a1990228",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "73ea976e-041e-40da-a2e1-8a539dfdc832"
        },
        "item": {
          "id": "6eb14a5a-9f0f-47a3-a563-d17378784241",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ae3016a1-9f92-4b1a-bdec-0c53e2b38543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cff0ce5-ce74-4f79-9714-752b8d8d2539",
        "cursor": {
          "ref": "7b09dc81-e250-43e5-a33f-7662c6c8d036",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a6bcd3d9-c8c7-41d5-84ce-1898085762d9"
        },
        "item": {
          "id": "8cff0ce5-ce74-4f79-9714-752b8d8d2539",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "494db0f9-4ac8-4748-854c-b98c43ef4ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa55e9b6-8761-4805-a12a-08b4b7a522cb",
        "cursor": {
          "ref": "6bdee539-e490-4bc1-9b72-d9d72234dd36",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "65409da6-4aad-4deb-9811-11dc50edc2c8"
        },
        "item": {
          "id": "fa55e9b6-8761-4805-a12a-08b4b7a522cb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ff976523-003d-45e4-994a-b3309367f7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f279a09-d4ab-4dd6-91cd-6a4835741080",
        "cursor": {
          "ref": "448b252c-2ded-486b-9c58-089113cdb117",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1b36fb90-c97e-46ce-ad88-9ae76b86aed3"
        },
        "item": {
          "id": "5f279a09-d4ab-4dd6-91cd-6a4835741080",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "891c80a8-9370-4cd8-b3b4-6994b738f4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d812f23-3bb0-44be-bc73-90706f83952c",
        "cursor": {
          "ref": "62177ef8-5538-4d17-8a0b-9c98d86e40b8",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "68774519-22c4-4497-8c04-0be36286eff1"
        },
        "item": {
          "id": "2d812f23-3bb0-44be-bc73-90706f83952c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "237c26f3-5229-4a6e-bac3-f42989294e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec71a418-9ccd-4418-924e-b6dfa6990c9f",
        "cursor": {
          "ref": "317d4990-f718-49f2-a665-1d52430524f0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c43440a3-392a-4f02-8867-269d627bf96e"
        },
        "item": {
          "id": "ec71a418-9ccd-4418-924e-b6dfa6990c9f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3c9d5fbb-ef24-4e35-b666-b1c0c4ce4032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05ef7b7-a978-46bc-b7e6-81f9edf79d3f",
        "cursor": {
          "ref": "4e32b636-6f30-4e07-adad-42f68167fc8d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7ad7045b-d511-4766-b512-289c113df24b"
        },
        "item": {
          "id": "c05ef7b7-a978-46bc-b7e6-81f9edf79d3f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cd531d44-5345-49cc-a12d-5b8879fc14cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df81d05-74e5-4fc2-b2e2-b536f03508d4",
        "cursor": {
          "ref": "c43f521d-46d2-408a-b708-f68b51096dbc",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fc4fc3fc-8a59-41bb-a620-13fb71319dc5"
        },
        "item": {
          "id": "0df81d05-74e5-4fc2-b2e2-b536f03508d4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "29e27a83-fdee-48e9-b76d-b9a8c75f2b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26d3347-c739-464e-b195-9246d7c26fbb",
        "cursor": {
          "ref": "b2667aee-3901-4118-b1c8-9fce85a3b48b",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fdf55ee8-4739-4231-a653-8957403b030d"
        },
        "item": {
          "id": "c26d3347-c739-464e-b195-9246d7c26fbb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "51ad1610-be3e-41aa-ba17-bf947b1d5952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e843ca-8e4c-46e0-b5b0-fd794bb69229",
        "cursor": {
          "ref": "8a363a61-547a-45bf-8a97-5eec7cc1a2fe",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e2ecffda-f0b4-436a-b54c-ea2b5c699eba"
        },
        "item": {
          "id": "95e843ca-8e4c-46e0-b5b0-fd794bb69229",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3fc631a5-96a1-4158-ada9-fa723853ae82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb57dbbd-6f29-416a-97a8-29b62e736f8f",
        "cursor": {
          "ref": "ee5c69eb-780e-4465-94b5-232a8b00a62e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dea0aea0-7467-4ba3-8cbc-8806f2ce0a59"
        },
        "item": {
          "id": "cb57dbbd-6f29-416a-97a8-29b62e736f8f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ee2abb22-90d8-4e9b-a3a6-566435c18236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825c5604-9e42-4a3c-bac1-b9da85f47217",
        "cursor": {
          "ref": "88c18d78-13eb-46f6-af3c-68b89870ef2c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "68d0ff8d-65a4-44bd-8ba6-7dc81920fb5a"
        },
        "item": {
          "id": "825c5604-9e42-4a3c-bac1-b9da85f47217",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fb940e9a-4550-4440-ac8c-811045951c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fc41f6-d696-4012-b238-ec5951137bab",
        "cursor": {
          "ref": "34fab5cf-20ca-46a0-9e23-f23e7cfe8d3d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cc738161-1bd1-4aee-8f4d-9e6608127223"
        },
        "item": {
          "id": "52fc41f6-d696-4012-b238-ec5951137bab",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5e365f76-324c-4e02-8cd6-7f048176d3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2623ab2e-0047-4600-bb87-888900b8aa36",
        "cursor": {
          "ref": "1d3d063f-de9b-4cff-ad5b-54e65dce4dee",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "eefbd1fa-0c29-45cd-ba58-9d03b6961c1a"
        },
        "item": {
          "id": "2623ab2e-0047-4600-bb87-888900b8aa36",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f6c1e689-c977-418a-bd0e-0833875bf74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ada7484-34ad-46c3-8daa-7f96906710f1",
        "cursor": {
          "ref": "c1a1ef50-3437-4a24-a85c-d5713d3155fb",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bf17a371-c039-49f4-821d-527cc882424d"
        },
        "item": {
          "id": "0ada7484-34ad-46c3-8daa-7f96906710f1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "12f894ff-49db-497b-bd07-a3b66c13f89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab85d698-877b-4878-ae5f-8e8ce774a1ba",
        "cursor": {
          "ref": "47f474f0-6e19-4bd7-bc2a-e537ccf768d3",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2571d87a-1574-4a3e-9643-1ccd313462b7"
        },
        "item": {
          "id": "ab85d698-877b-4878-ae5f-8e8ce774a1ba",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d1eebf67-8e97-4628-a7f4-2922783a9806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed345af-ac2b-4f59-9aff-f8003d63f517",
        "cursor": {
          "ref": "527c2e14-cf90-44e4-80d5-a082e8ae3fc8",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7e7c25d5-28ac-4165-ae4d-86097cdeee67"
        },
        "item": {
          "id": "5ed345af-ac2b-4f59-9aff-f8003d63f517",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c839492b-e2f7-4d4b-a737-6c6f21ed45d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2111a67-3a6f-42b7-a901-989eb4e58626",
        "cursor": {
          "ref": "5cfccde2-b3a3-4a49-a7f7-87b48b2a247c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3f73ec17-ddcd-479e-a5b0-f264c919977d"
        },
        "item": {
          "id": "a2111a67-3a6f-42b7-a901-989eb4e58626",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a0ad8532-b323-4d4f-b755-1f60481503ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034de922-4fa4-496e-9163-48887c8ea59b",
        "cursor": {
          "ref": "482ce15d-7f33-4ad4-9f0b-7dce96d09ef5",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e5b4980d-bd5f-4dc5-a008-be96b13dabcf"
        },
        "item": {
          "id": "034de922-4fa4-496e-9163-48887c8ea59b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cfd85a90-b297-4fd6-b7a9-a3923d385c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a641b2fd-6123-40b8-a4f6-81fe2ae00eed",
        "cursor": {
          "ref": "d9564514-e70d-4001-a3e7-a4a3b8453122",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e5aaa0d4-ef85-4a61-a7cb-4fd1e230d058"
        },
        "item": {
          "id": "a641b2fd-6123-40b8-a4f6-81fe2ae00eed",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e7b3461b-a723-4c19-a80e-e0b82ced7af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cd4bd7-ff75-4716-b907-6758a1af2f6d",
        "cursor": {
          "ref": "8704f344-c72a-4171-87be-a425307633fa",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9d8bdadd-e7a4-46e7-b777-37a69e905d44"
        },
        "item": {
          "id": "81cd4bd7-ff75-4716-b907-6758a1af2f6d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d03bf833-5ecc-48a1-a6ae-02fd21e97d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa314663-3b37-43d0-b47f-489cde73fee2",
        "cursor": {
          "ref": "74851181-37ae-4fab-a592-2fc649a0fe8a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f8552342-51cb-401a-8540-98ff3a451c43"
        },
        "item": {
          "id": "aa314663-3b37-43d0-b47f-489cde73fee2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "59cf596f-3f48-43c3-9cbb-e7a57c718f50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9321830-b835-4cff-a092-a71ab5bc6a5e",
        "cursor": {
          "ref": "28c37342-a85c-4e55-b4e0-e5246aabd4c3",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4279f777-840d-49c6-b260-3c72adbcef89"
        },
        "item": {
          "id": "e9321830-b835-4cff-a092-a71ab5bc6a5e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d6552ab7-e21e-4d3e-af01-231661f3959b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b9b7ad-5c04-40db-88cd-5596cab6706a",
        "cursor": {
          "ref": "5cc0ba75-8f88-417f-917c-5fc1df574426",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "51fb13a3-361b-4af6-90b7-f4575520b5ce"
        },
        "item": {
          "id": "30b9b7ad-5c04-40db-88cd-5596cab6706a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e29904a5-2464-4695-b7dc-ec1ac2a02eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f561a126-8643-4f17-a7f4-3a0de3ac94b8",
        "cursor": {
          "ref": "9177cff9-49a4-41d5-b284-6af08a2a3bbb",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a727b2d2-45d3-48dc-8acd-3e66df564e25"
        },
        "item": {
          "id": "f561a126-8643-4f17-a7f4-3a0de3ac94b8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "66731ffd-7536-4b80-91bf-58bfa2f054be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b23142-2b26-4916-9a8b-a22982950b34",
        "cursor": {
          "ref": "2fd2dac0-fb53-4b64-be95-417746919b3c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5dabf8b4-0902-4d9b-aba0-572cc2177bf7"
        },
        "item": {
          "id": "68b23142-2b26-4916-9a8b-a22982950b34",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "da3e8563-e424-4912-8045-3806800f00e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b75a38-b680-4e0f-a193-ea642037dad6",
        "cursor": {
          "ref": "672babee-1333-433a-97a5-97671c728089",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e4365c9a-e27b-4951-88ef-89413bd0bed1"
        },
        "item": {
          "id": "64b75a38-b680-4e0f-a193-ea642037dad6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "87c1d720-3a27-4701-b3fb-73ec27272c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8173591c-7aa4-4755-9eea-ed950a4438a0",
        "cursor": {
          "ref": "94083204-9615-4c88-badb-b2402370cfe9",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3373dc7d-b7cd-4bcf-adbc-5b5ffb73b686"
        },
        "item": {
          "id": "8173591c-7aa4-4755-9eea-ed950a4438a0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "595bf38d-d33a-4edd-9378-b0fcc275d5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f41df2f-94c8-4012-b687-2c70bd8f380b",
        "cursor": {
          "ref": "b1de64cb-afb3-4876-95d3-a7b106eac2af",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c70c8c0e-1c63-4310-a2d0-46311d66059e"
        },
        "item": {
          "id": "5f41df2f-94c8-4012-b687-2c70bd8f380b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7878d707-3147-4fe3-b5c3-58d8088a8d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d5e5f3-9cd0-4f44-bcfd-012683dfd7ad",
        "cursor": {
          "ref": "4e9f68f0-f570-4402-bbbe-7ca3d9fbb987",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b0a8e391-91f1-4bba-b8d2-43977bda2483"
        },
        "item": {
          "id": "00d5e5f3-9cd0-4f44-bcfd-012683dfd7ad",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "75b898f9-8e38-4103-8c04-7bc917fcb7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4121acb-4c32-47aa-bb29-b9675cc92a13",
        "cursor": {
          "ref": "2ffc1c63-a185-4bad-bb0d-94df970d8be8",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6c6a4995-7746-4800-82e9-fbb86a635f6c"
        },
        "item": {
          "id": "c4121acb-4c32-47aa-bb29-b9675cc92a13",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "23b5df89-c84a-4791-81ae-e5a616e10f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5590e4-14d2-4ec2-accb-21406ecc5cb3",
        "cursor": {
          "ref": "c1e84c21-737a-4b15-9ee7-d5b5b4663a7e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "854fe753-8d4b-4cc2-9091-2e5573ba575d"
        },
        "item": {
          "id": "0c5590e4-14d2-4ec2-accb-21406ecc5cb3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cdba448e-1871-421d-a0e9-78dd211e4d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9051e54-0f4b-4d0f-ae43-d8c64174c73d",
        "cursor": {
          "ref": "22eb04c5-3c8e-4b17-ad9c-394d01289332",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f8ff7670-3ee3-4939-aeeb-c3344c40abf7"
        },
        "item": {
          "id": "d9051e54-0f4b-4d0f-ae43-d8c64174c73d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7b63889d-81eb-4012-b55d-0906f370bc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbd26c2-91dd-4cb0-9558-790c5ea66c21",
        "cursor": {
          "ref": "4270bc35-df3c-40d6-a2fa-a461cfedec6f",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "931ad6ef-7aa3-4b3d-9a83-53459bb02453"
        },
        "item": {
          "id": "4dbd26c2-91dd-4cb0-9558-790c5ea66c21",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0eafda32-4109-4fec-a7cd-d3b6e8639fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccfa68b-8030-4a01-92b2-d2a42341b5a1",
        "cursor": {
          "ref": "48f85935-9acb-44c5-a41a-155758486a73",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "89bda31d-17e8-4a3c-ae2c-5aee729ec196"
        },
        "item": {
          "id": "bccfa68b-8030-4a01-92b2-d2a42341b5a1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0cc08b3a-cc37-452a-96e4-6bca70bd8578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cabd12-3947-4a80-bf65-467ef85cf572",
        "cursor": {
          "ref": "12f1adc4-4670-45cc-952a-922d7da13a86",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e530acc3-6781-4f08-9c28-1055c17526be"
        },
        "item": {
          "id": "87cabd12-3947-4a80-bf65-467ef85cf572",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f15ce30d-fc65-4b0b-9edf-0e61d3de9fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd049e73-007d-43cb-8bda-4a72b27291cf",
        "cursor": {
          "ref": "a4170d4b-0a10-4e7a-9980-0890581553d9",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "08a5cf2c-1c17-43e7-8375-3496d0fe24d3"
        },
        "item": {
          "id": "dd049e73-007d-43cb-8bda-4a72b27291cf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7a6cfd33-dded-4a6a-bb18-8395ab637179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1ed7c7-9ff4-4168-a476-dd0ee465e6cf",
        "cursor": {
          "ref": "524717e7-2612-4a01-91d6-84656d5dd1de",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a0633fb5-f7ea-4c3f-ad01-05f10a5e10c5"
        },
        "item": {
          "id": "0e1ed7c7-9ff4-4168-a476-dd0ee465e6cf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "de6ee18e-5207-4456-b8b4-8e51aaec2bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f1028d-ce07-41ed-9ff2-6d454f73a807",
        "cursor": {
          "ref": "564e17aa-4b0b-4c57-bb02-d0d583e31f58",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "36cd9931-1ca0-476b-9afd-0279b9152ac4"
        },
        "item": {
          "id": "a4f1028d-ce07-41ed-9ff2-6d454f73a807",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ab122c73-5588-4a80-b1bf-c7da2cccac65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f86b02a-53fe-49c8-8d6c-0eb876621b9f",
        "cursor": {
          "ref": "92203c6b-046b-4fe8-837e-8ddb4cfe626c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e697f660-d270-4ba5-beb4-c48e0f719950"
        },
        "item": {
          "id": "9f86b02a-53fe-49c8-8d6c-0eb876621b9f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d68629d4-96bd-40df-a860-774f96a972c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4e130d-21c0-42a6-b473-493b0b8b6edc",
        "cursor": {
          "ref": "846b0500-47aa-427d-a6bb-3a68b8af0657",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "617bddb7-43a0-4241-9828-196d4e45a639"
        },
        "item": {
          "id": "be4e130d-21c0-42a6-b473-493b0b8b6edc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c211b923-881b-414f-9afc-4a7165990ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2f683f-021e-4e71-b797-d65310146acd",
        "cursor": {
          "ref": "28fe38cc-1c99-4ed6-89f7-4f2ff09e2f83",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "187e23db-7acf-49c2-a714-f6f5687f3e66"
        },
        "item": {
          "id": "6d2f683f-021e-4e71-b797-d65310146acd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "17d6706d-30b2-466b-8bdd-e6be05f354f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10062c6-3b25-4134-a7a1-0662b4a541c6",
        "cursor": {
          "ref": "d9d2221c-9ca3-40ae-b200-f110070c251a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "84beebbf-be40-4fc8-a047-841ef88f4c96"
        },
        "item": {
          "id": "e10062c6-3b25-4134-a7a1-0662b4a541c6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c4f8cec4-3c9a-4a43-8430-404d590d0932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551c8c5f-3ce5-49cc-81f1-fa9fbcb2f9fb",
        "cursor": {
          "ref": "e3c94e66-2cfb-4b32-b925-6abc4d2844bc",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fc5cf752-10ee-4c40-a906-4e6f479e771f"
        },
        "item": {
          "id": "551c8c5f-3ce5-49cc-81f1-fa9fbcb2f9fb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6e63b5e6-20f0-424f-9ddc-2633b21af8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8783cb-c403-44f5-8fe8-240e19684c4f",
        "cursor": {
          "ref": "eec81591-1a0e-4082-9a81-32cb02893f83",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "345269df-1035-4b4d-b966-6ffbea5f569d"
        },
        "item": {
          "id": "3f8783cb-c403-44f5-8fe8-240e19684c4f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dd43dc8b-ace1-41eb-81af-0887a757279f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5fa29a-4598-40ac-bd2e-ddd9ee13f2d8",
        "cursor": {
          "ref": "69945ad3-7457-4b79-867b-4894e4db4b49",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0e9ae8d4-ad4f-45db-92d5-ee0ae5065ddd"
        },
        "item": {
          "id": "3c5fa29a-4598-40ac-bd2e-ddd9ee13f2d8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "738745cc-e1c0-4fad-91fe-167a8a96846e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82b60d7-3d15-448d-a230-237f7314459c",
        "cursor": {
          "ref": "99afa4fc-e28c-4b2b-99c2-a8aed33469a6",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "18a3e17f-4b5f-4f9f-91ce-c141688951fe"
        },
        "item": {
          "id": "f82b60d7-3d15-448d-a230-237f7314459c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c6ea35e4-1ad0-4866-817c-fae8f5c4ad2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4f4736-819b-411a-b8b3-d3874cfabd41",
        "cursor": {
          "ref": "f04d2b18-9f81-485e-9ee7-c4560f771dfd",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "30c8bcfd-c3ee-4349-b574-d37f953403e7"
        },
        "item": {
          "id": "db4f4736-819b-411a-b8b3-d3874cfabd41",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "961154fa-ed9e-45e6-a3d0-af879d3d6b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e9b281-15ae-4d8e-b699-8ec403568d27",
        "cursor": {
          "ref": "29ff2e9c-b6c4-4517-9708-7915920b010a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ad9cd7ee-6659-435b-a605-a72c59976853"
        },
        "item": {
          "id": "11e9b281-15ae-4d8e-b699-8ec403568d27",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ecd891fc-26fc-4c4d-a0f2-b315b1616c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b173a94-8121-4f5c-baf1-77dff0b926f2",
        "cursor": {
          "ref": "29fbda5a-5710-446b-8990-d5506d3268ad",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4e6d8b3a-e570-4961-98f4-e8b1fb7d3743"
        },
        "item": {
          "id": "4b173a94-8121-4f5c-baf1-77dff0b926f2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f88793e8-fd66-4387-9fb0-663cac8ebca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912686b9-e441-4fc3-8063-a1d3c0c495a5",
        "cursor": {
          "ref": "9560386a-b5e8-475e-a063-2bd1dfbc9be1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1ef31be7-ebd1-428e-bd8c-dd9d89bc0a83"
        },
        "item": {
          "id": "912686b9-e441-4fc3-8063-a1d3c0c495a5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "273e1f1b-89d3-4e15-813a-b3ff0425e6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ff5374-9f93-4fd7-b285-4338cd782882",
        "cursor": {
          "ref": "f08e6210-4274-4947-9ce3-8d9b57585502",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "607554ba-02cb-4eb7-9e0d-2d928e1889d8"
        },
        "item": {
          "id": "a1ff5374-9f93-4fd7-b285-4338cd782882",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d7fcbd69-6a7e-48c8-8815-bfe40fef6e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183bde83-d8d6-47f7-b589-5cb51ef5f806",
        "cursor": {
          "ref": "9c451a2f-56a0-4fc7-9c01-4cdd47e17855",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a0dbe41f-b66d-440a-8922-472b91297843"
        },
        "item": {
          "id": "183bde83-d8d6-47f7-b589-5cb51ef5f806",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "32547505-826c-4626-bf98-f1fb85c3ca5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180c2239-03e1-4158-8090-85c177d9ba79",
        "cursor": {
          "ref": "0ba01b49-7da3-4e67-b299-df204b5f591a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a7be2fad-353a-4ba2-8fee-129c9f88a22e"
        },
        "item": {
          "id": "180c2239-03e1-4158-8090-85c177d9ba79",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "febf51d8-b648-4660-8a65-fb6e4d874986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97ede33-10e8-4df0-8299-e92ecd324d8e",
        "cursor": {
          "ref": "d087fbd1-745c-43d4-b7db-56c3a19bde22",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "59395718-105a-419a-a1de-25357e8b0fb0"
        },
        "item": {
          "id": "a97ede33-10e8-4df0-8299-e92ecd324d8e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3c399e52-70fa-4f71-aa87-1c38ed6a6acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a598b53-ae12-48bc-b35f-e8766ecdb4ca",
        "cursor": {
          "ref": "b9398c41-d02e-4912-8b3c-b148a35cf3f7",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dfe836a4-e534-49fc-86fe-1e44cf5cd42d"
        },
        "item": {
          "id": "8a598b53-ae12-48bc-b35f-e8766ecdb4ca",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2afd2142-8711-4ef8-a904-6f9a440f2c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861a7420-1830-4b46-b639-da1c1c95670f",
        "cursor": {
          "ref": "13114de3-1be1-4dd8-a56f-d2046f69906d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "60471861-c51b-40b6-ba1d-ef912d038529"
        },
        "item": {
          "id": "861a7420-1830-4b46-b639-da1c1c95670f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "74c13b0f-c777-40e3-9706-da502224a16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a245cb-9fe4-49ba-b20a-884d1b9a0a99",
        "cursor": {
          "ref": "bc8ce2c0-6877-483b-9ed4-893de7fecffb",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0032b7f6-c917-4e66-9d1c-91ca6f90373d"
        },
        "item": {
          "id": "35a245cb-9fe4-49ba-b20a-884d1b9a0a99",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "24589ebc-9fb6-41ab-b059-1e28789beefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d7b551-4a7a-486e-af94-14656febdecc",
        "cursor": {
          "ref": "1e113570-e0df-4c00-9413-67cc178b514b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2d8fc36a-2445-4b69-a6ba-2faf83df686d"
        },
        "item": {
          "id": "85d7b551-4a7a-486e-af94-14656febdecc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9a27ddf4-f3de-4800-a855-f33143a79d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0772327d-be50-4fb8-8cff-9ddbe57dbe8a",
        "cursor": {
          "ref": "989f0c5a-d000-4d37-8678-e6471052a871",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8c7ff3ce-74c1-4f8c-911b-3692cabe4222"
        },
        "item": {
          "id": "0772327d-be50-4fb8-8cff-9ddbe57dbe8a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cef848fd-81a4-4f4e-8043-cd7fedf6d5da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fca44e6-4416-4b63-a1ec-cd1ecf326148",
        "cursor": {
          "ref": "ed3a161e-c29b-4aed-bd47-dc660f1257af",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "14853ddf-0bac-4ecf-97d1-ab506243e702"
        },
        "item": {
          "id": "2fca44e6-4416-4b63-a1ec-cd1ecf326148",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e16187fe-ecd0-4340-b07e-2c5319d3d2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ea7134-32f2-436f-a978-486d0147ae6b",
        "cursor": {
          "ref": "f2ce4b9a-f35d-4b4a-820c-843b2a46a767",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "139c0feb-362e-4ba1-bc78-7025ff108172"
        },
        "item": {
          "id": "43ea7134-32f2-436f-a978-486d0147ae6b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cd279f3d-4ce6-4442-a699-b1738be9156f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80d9265-0b8a-438f-8ef2-5d2a4dbd7442",
        "cursor": {
          "ref": "4892797a-66e0-4c5f-a7c5-6a13403c4881",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f6b4890e-16a6-46c3-9ef1-16ee927548b1"
        },
        "item": {
          "id": "d80d9265-0b8a-438f-8ef2-5d2a4dbd7442",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "244a68c1-823c-488e-9fdc-5a941310b6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbd7b93-3857-4503-a619-e8c038ee1d8d",
        "cursor": {
          "ref": "0ef9f14e-8cbd-420e-8089-30fa77d7b948",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4b75e926-82d0-4077-9c3a-8b7830cbb055"
        },
        "item": {
          "id": "9cbd7b93-3857-4503-a619-e8c038ee1d8d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "793af1e6-400f-4d4a-819d-1e2e6172f01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcf25f2-c6f2-4e35-ac17-d8913f59d320",
        "cursor": {
          "ref": "6b3b92b0-6b59-4eab-a2b0-ee90cfec0531",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e686cfe0-9420-4a42-921d-64492660658e"
        },
        "item": {
          "id": "8fcf25f2-c6f2-4e35-ac17-d8913f59d320",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2b3fb4e9-012c-47c0-9a84-29cb5417a441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832dae35-ecd9-49ec-9782-cc97b3b4ed31",
        "cursor": {
          "ref": "224cfa31-cca3-489b-ac4f-7b655a2b8717",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "434774a9-01be-48e9-9d72-0aed07f948bd"
        },
        "item": {
          "id": "832dae35-ecd9-49ec-9782-cc97b3b4ed31",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a94c09a6-18b7-4514-8a1a-290b94600b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cff28d-b98d-4fbb-b6a5-1a99cfa00c22",
        "cursor": {
          "ref": "38a739fe-0e00-462c-b889-b9de0805498c",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8095dc4b-7ca7-4a82-842c-2b2c24deb2a1"
        },
        "item": {
          "id": "39cff28d-b98d-4fbb-b6a5-1a99cfa00c22",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "090cd9f7-92a3-4deb-ae3d-8f739afe5b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36759e9-60b7-4cbc-8fe1-29dce0f9f6da",
        "cursor": {
          "ref": "6418691b-1963-4444-a099-e789772b5d92",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "001f2bae-6fd8-4f72-88da-8f6f95c991a3"
        },
        "item": {
          "id": "d36759e9-60b7-4cbc-8fe1-29dce0f9f6da",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "037b14fe-182d-4bc9-b869-35681a77dd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d5bc87-a048-402d-9d9d-62b7af2a9169",
        "cursor": {
          "ref": "2f8ed42d-0072-4f54-9150-2d76c1e6c483",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8c16e4f0-5dd1-499f-aed5-3de632cc9a43"
        },
        "item": {
          "id": "f6d5bc87-a048-402d-9d9d-62b7af2a9169",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b35723e8-e46a-43b5-93c5-b932513c1d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d4adf1-d00a-4cad-88ad-684a9a1dd956",
        "cursor": {
          "ref": "7eaabdbc-302e-4fb6-95f6-1762e0129399",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a16d1027-5f37-4bbb-8015-1d0f31f174bf"
        },
        "item": {
          "id": "a1d4adf1-d00a-4cad-88ad-684a9a1dd956",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "14feeca9-6256-48a0-bf8b-dcc71768107b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b8e924-03da-48d1-912a-3656cfff82a1",
        "cursor": {
          "ref": "4fd1e16a-1fe5-4495-92cd-767798568894",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "40053fd8-db58-4237-9cce-2ae8a96580b1"
        },
        "item": {
          "id": "28b8e924-03da-48d1-912a-3656cfff82a1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "70418b6d-c3c6-4447-b118-954461e32d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef6aedb-46e3-4383-9e27-1e3453db3a77",
        "cursor": {
          "ref": "c483b692-028f-49ec-978f-2097cfa09e04",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5bebb2c0-c48d-4bbf-8deb-6e414a372157"
        },
        "item": {
          "id": "9ef6aedb-46e3-4383-9e27-1e3453db3a77",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ed10a739-ce92-4ee0-bc22-90ef00230e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98de36a1-cb85-4499-b7eb-93bb5d7271ce",
        "cursor": {
          "ref": "0676e40d-bf9b-4799-b1ec-2c66869e1541",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b42e78a0-b22e-4d45-8505-64c2a81f7f9d"
        },
        "item": {
          "id": "98de36a1-cb85-4499-b7eb-93bb5d7271ce",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c98222e5-f402-41e6-86d6-64b0fea31716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66055132-1210-4fa3-a74f-257a8e6a3c47",
        "cursor": {
          "ref": "705f7e1d-8ce5-4635-bea3-eb930a6291c2",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1567a9cb-2d1e-439d-ac41-68792c771b99"
        },
        "item": {
          "id": "66055132-1210-4fa3-a74f-257a8e6a3c47",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5fc28ef7-c4e2-4fd8-bd2d-ab257d3adbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974e3d0d-dc64-4e09-a8e2-e4fc04921a2a",
        "cursor": {
          "ref": "831d87f4-3d24-4c8a-91a7-09b300c2059d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b3bd8c02-e2cf-4d66-beb6-480c194ef009"
        },
        "item": {
          "id": "974e3d0d-dc64-4e09-a8e2-e4fc04921a2a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "42a13c78-ae38-4880-983b-382b386db841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b74a88-2175-4b1d-a2e1-c8c8b9a24320",
        "cursor": {
          "ref": "8c000099-cef0-4bcc-a332-e3ec5d71eb24",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8a9326d8-5ab6-4b11-876f-ea9da2f94935"
        },
        "item": {
          "id": "e0b74a88-2175-4b1d-a2e1-c8c8b9a24320",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d12a5214-04f8-4282-8d69-94381d36a590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30318604-6b44-4517-aa39-96b177c2ed5d",
        "cursor": {
          "ref": "590a5ec6-54aa-4b04-8e13-3802bce41a4b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ecdbdbdc-1265-412d-b082-8a80d8082bdb"
        },
        "item": {
          "id": "30318604-6b44-4517-aa39-96b177c2ed5d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1c37d2fe-d907-43c1-98d4-b3599ac72ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf997f5-61dd-4564-8da7-9f7497dd4f7e",
        "cursor": {
          "ref": "19898e18-c49c-4937-97b5-75b6383e148a",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6d5d604d-7cfc-415b-b43a-338d48a0f1b0"
        },
        "item": {
          "id": "0bf997f5-61dd-4564-8da7-9f7497dd4f7e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c3842432-9993-486d-a3a5-0793b45c4a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e56ffa-e18b-4287-91e0-338343f4285b",
        "cursor": {
          "ref": "bf4ec68a-aa5d-483a-be13-07b618368e09",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9c190318-0480-4f40-b4f8-80f0cf05bd92"
        },
        "item": {
          "id": "30e56ffa-e18b-4287-91e0-338343f4285b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "33da0953-0b07-4300-b3d4-00d2415a6c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8764b2a8-3d67-41da-b80a-18caf8780c72",
        "cursor": {
          "ref": "f83cf17b-46b1-4fbd-ba14-217bd0e6f624",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e59721e5-1549-4ae1-82fa-b8bff95ffb21"
        },
        "item": {
          "id": "8764b2a8-3d67-41da-b80a-18caf8780c72",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0a6ad8b5-1b30-4506-83c1-c2224b2b8168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f602f38-f834-44a2-b598-408981331995",
        "cursor": {
          "ref": "69b6492d-c724-417c-a40f-9010c6108a65",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "400a1354-b706-4b48-ae7a-948f1315b7d8"
        },
        "item": {
          "id": "5f602f38-f834-44a2-b598-408981331995",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2d9f45d7-7b4c-4787-bd98-2c695d763b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4ba6d0-5f5a-471a-84ec-1b109a29bef1",
        "cursor": {
          "ref": "67b8df40-aad6-4e5f-8901-1827fe6a7dc1",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b4fa4812-4a2e-4a15-9c85-92dcc2b847d8"
        },
        "item": {
          "id": "0b4ba6d0-5f5a-471a-84ec-1b109a29bef1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c874ef82-56e4-4521-94e8-2aa70b8020e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90172cdb-770c-48a8-959f-a48d35c5207b",
        "cursor": {
          "ref": "9b078f4c-de3e-49fb-bcd1-0c0314a6e03e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1bc49980-ff3e-40b6-a1af-4b87452843aa"
        },
        "item": {
          "id": "90172cdb-770c-48a8-959f-a48d35c5207b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6cf11fe0-c98e-433a-987d-d46a98054add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430afafa-3390-4468-9f55-7d77f44d209a",
        "cursor": {
          "ref": "0bf5f6cd-b61e-4409-af1e-fb8bcf607bdd",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "60077a3c-26d2-4566-992f-f6bb70ee9530"
        },
        "item": {
          "id": "430afafa-3390-4468-9f55-7d77f44d209a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b0368630-a379-4d5e-b291-242ea15b2e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a23666-bf37-41d6-ba89-0ef83c1df214",
        "cursor": {
          "ref": "dc47b571-81ce-44b8-bb76-512e922156a1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4112c649-a754-46c4-b1cb-12bed020f9b6"
        },
        "item": {
          "id": "89a23666-bf37-41d6-ba89-0ef83c1df214",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c84e4a54-1c37-46af-afd2-ecf37489ccf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001916d6-ba33-41ba-b451-15feddff553a",
        "cursor": {
          "ref": "b109d3df-4cbb-485d-bd2f-23b2ba96f83a",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "94ef9ff1-1cb9-4986-95e0-f9d20114f95a"
        },
        "item": {
          "id": "001916d6-ba33-41ba-b451-15feddff553a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "831f8c14-be7d-4c5c-8769-6c4b7301178d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fa4902-8f7f-4c9e-8ae8-274f69b8709d",
        "cursor": {
          "ref": "56f109aa-9fc7-4d16-bffa-de0c11b6aeca",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ac97a4d7-d5b6-41ec-8205-d541a2fdc99a"
        },
        "item": {
          "id": "71fa4902-8f7f-4c9e-8ae8-274f69b8709d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "94fb196e-0336-4c7c-8c3c-c4b963b01630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d3bd5b-4d03-4911-bd1a-3b20a859ba6b",
        "cursor": {
          "ref": "7715b790-21de-4088-982c-46ced62c646a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "facae6f5-b88c-4c8f-94b2-ccb2ba2b6893"
        },
        "item": {
          "id": "e8d3bd5b-4d03-4911-bd1a-3b20a859ba6b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0d301352-030e-4d00-8f42-e7397beb7c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44230862-9208-47b8-923a-3ef3c7194fe6",
        "cursor": {
          "ref": "9f1441be-d482-4843-adb3-673718e2a119",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "264182df-c8a9-40ef-b1e7-ab5123169595"
        },
        "item": {
          "id": "44230862-9208-47b8-923a-3ef3c7194fe6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6c8cfff0-cd61-4fb0-9dc6-f129b2d7c8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fde57f-7158-4d7b-942b-8e1377c2aaee",
        "cursor": {
          "ref": "1a5e213b-7836-4054-9bfd-a8f6ae9c8a31",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3a5acb57-ae52-4eae-b6eb-2a4dbe8b0a09"
        },
        "item": {
          "id": "67fde57f-7158-4d7b-942b-8e1377c2aaee",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c646886a-8a14-4973-a7a0-de1b704bb6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27513cf-8a18-4a39-95d8-edaa3edad138",
        "cursor": {
          "ref": "7ccc2daf-5242-42f7-b478-48b2d6ee5b2f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d0076a03-300b-404f-9934-c6a61ffd622e"
        },
        "item": {
          "id": "c27513cf-8a18-4a39-95d8-edaa3edad138",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f84fda98-e687-4baf-b942-046f5faa3283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f768127b-79d5-46a3-97a6-97a93f296484",
        "cursor": {
          "ref": "915caf39-83f5-4b04-875a-0c50e7e2e1b2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4230bb5e-70af-4629-86a3-83403a26c6c6"
        },
        "item": {
          "id": "f768127b-79d5-46a3-97a6-97a93f296484",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9d6a6abf-0389-4b63-bc2a-750e31484792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d28252-d5c5-426c-ab66-f00134fd58bd",
        "cursor": {
          "ref": "25ed21a0-e16b-454c-a4e7-48feec2cac60",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d7d6600c-43cc-49b4-ab8d-0fa4d615b0d1"
        },
        "item": {
          "id": "49d28252-d5c5-426c-ab66-f00134fd58bd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f8897d90-5b3e-4830-86b8-94d676e6e87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43726cde-e357-4c85-9226-bad863b48eed",
        "cursor": {
          "ref": "c1c899ad-de28-4faf-b5ca-4e2e92c30ab1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f6d5eaf4-f8e6-4034-a492-fdfc74161990"
        },
        "item": {
          "id": "43726cde-e357-4c85-9226-bad863b48eed",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dbb61751-ab1f-4fd2-aa2a-252caa649d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bcbbe1-e8b6-4080-8b62-9f3980fea6f2",
        "cursor": {
          "ref": "24c5d9c5-9f77-4fc3-8553-a49c22a59be8",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9fe33444-61ee-46ed-850b-34e800fb5b8f"
        },
        "item": {
          "id": "60bcbbe1-e8b6-4080-8b62-9f3980fea6f2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "84268c46-680c-4df0-bacc-e3313c25d84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4779ba6f-05bc-4aab-a4a5-4c977aae1441",
        "cursor": {
          "ref": "7778551e-0e14-404b-8448-16ac6e313c8f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7cc70fc6-23c0-477c-9330-c528cec2b34b"
        },
        "item": {
          "id": "4779ba6f-05bc-4aab-a4a5-4c977aae1441",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0703c4ad-004d-4cf0-9371-89d32de6d78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7900978b-d496-4c99-8643-4f71f016eb42",
        "cursor": {
          "ref": "e1105bf3-c0e6-4555-92c2-0287cd3a1dea",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "aa21b3bf-b921-4e69-a347-c0196c94fea2"
        },
        "item": {
          "id": "7900978b-d496-4c99-8643-4f71f016eb42",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "27f77115-25ea-4d33-91f2-1a23f95e4842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3339c681-9a74-491d-9ee9-a0790c589d3b",
        "cursor": {
          "ref": "2acc96fd-70aa-4d15-bb85-e7d9bc4e81c9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ee8ff774-14ac-4757-9401-97b2c13ea38a"
        },
        "item": {
          "id": "3339c681-9a74-491d-9ee9-a0790c589d3b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cf437b39-acc4-467a-9b1c-0911eb63d618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b204f7d4-3649-43c8-969c-d1b3d69cb1e9",
        "cursor": {
          "ref": "a06b19be-64d2-4214-869d-71adcfb2b336",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fc19641f-64c3-4a76-b816-16d573e026c0"
        },
        "item": {
          "id": "b204f7d4-3649-43c8-969c-d1b3d69cb1e9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6089ec4e-57af-4af4-a1cc-f85f2c666f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38b8582-850b-479f-8a61-1b1b235bbe67",
        "cursor": {
          "ref": "f4d37764-8910-4b7a-80d3-83291a8d4ac7",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "358330be-548c-4718-b295-4506f036bae7"
        },
        "item": {
          "id": "e38b8582-850b-479f-8a61-1b1b235bbe67",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ff888ccd-01ed-42a8-8e88-8fca90438506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3fdfa4-08eb-4308-ac0d-ae3babe8f7b0",
        "cursor": {
          "ref": "3f68ac82-4a6a-4a05-bc13-166be9ec6375",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2a0bff50-c8ce-41a9-9182-765e18c7c70d"
        },
        "item": {
          "id": "6d3fdfa4-08eb-4308-ac0d-ae3babe8f7b0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "13375b00-7bd5-49ab-a83b-d32118f89bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76a039a-6242-4987-83b7-56d5b3628f35",
        "cursor": {
          "ref": "4fd6ce3b-409a-48d8-a2b2-9664a9ab62cf",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "621532c3-2369-4ee5-9d2f-731bbe8da149"
        },
        "item": {
          "id": "b76a039a-6242-4987-83b7-56d5b3628f35",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "96497290-6dca-484e-ab8c-0b929887830d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c230d0ef-9b33-4e8e-b03d-f77c6c676578",
        "cursor": {
          "ref": "f1f19811-83cf-4c85-bbd6-1712c38806af",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "581817d8-1806-451b-b8fe-8003b95ca1e7"
        },
        "item": {
          "id": "c230d0ef-9b33-4e8e-b03d-f77c6c676578",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c6cd8c6d-33cf-440d-86e9-cc442ab59547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c01556-9cb6-4855-ab1b-1a44f6119c93",
        "cursor": {
          "ref": "d743cadf-e4ef-4d16-92ca-2af157ff8c7f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1cc7bfec-50a2-4e75-9d91-6f6b2374fd7c"
        },
        "item": {
          "id": "e7c01556-9cb6-4855-ab1b-1a44f6119c93",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b373927a-a80d-436e-98b7-2aa80ea12b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c3621a-00b9-46a4-a7e1-cb8767c412ab",
        "cursor": {
          "ref": "6f3f39ac-001f-41c0-80fd-1edc9ef688df",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bb162cbf-a32b-4d38-8d38-b56b8bf00cf8"
        },
        "item": {
          "id": "15c3621a-00b9-46a4-a7e1-cb8767c412ab",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "45f7953e-8d33-4e53-b2e6-cec26989fc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6bbecd-3064-4f42-889d-569af78b5f9f",
        "cursor": {
          "ref": "fb214b77-35ed-4791-a5de-cb0bc2e6449b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fcb27443-9d6f-4a9f-99b4-559329e956c4"
        },
        "item": {
          "id": "1a6bbecd-3064-4f42-889d-569af78b5f9f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4e9e0b17-f602-4ed4-bb2b-e46787b4f34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecdbe7d-90c2-4063-865b-dea29a7f3a2f",
        "cursor": {
          "ref": "a50945b0-a44c-4870-9bbc-5f15d134bc66",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c9f9c545-251f-426b-84d7-cbca0b73950d"
        },
        "item": {
          "id": "fecdbe7d-90c2-4063-865b-dea29a7f3a2f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7171b0c3-9aee-461d-ae97-1d77f6168992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79c99cf-3752-4a05-b056-714ff341fc98",
        "cursor": {
          "ref": "a92e5f07-5475-4e55-b7cc-118080dde359",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d9b97629-538d-4fc3-b64d-dbef1c7ddad1"
        },
        "item": {
          "id": "c79c99cf-3752-4a05-b056-714ff341fc98",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e1968097-43ea-40c6-aff9-f5808ea2d23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fea1ec-3d8f-43c7-9d15-cc825c23e634",
        "cursor": {
          "ref": "3d324901-0307-49db-b30c-cef9516b2361",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "eb19936e-1f36-40bc-b9fa-c54d099db662"
        },
        "item": {
          "id": "36fea1ec-3d8f-43c7-9d15-cc825c23e634",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "91ddbfff-6577-46ff-aa96-6e27556c1d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6327900-c12f-468d-bcb3-e47b694bc6de",
        "cursor": {
          "ref": "b079f742-ad87-4bbf-9eae-bec4a88e3bbb",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2e036b6d-bc4e-4666-8526-0c5dc4fe4bc3"
        },
        "item": {
          "id": "b6327900-c12f-468d-bcb3-e47b694bc6de",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e5ce7740-38f3-4052-810f-454a3a1681ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb0ede5-cde0-4f02-84d8-8973fa992580",
        "cursor": {
          "ref": "7f15b341-80bc-42f3-a731-24d4e53061f6",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0723f236-c220-43d0-a691-44222eeae338"
        },
        "item": {
          "id": "0fb0ede5-cde0-4f02-84d8-8973fa992580",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "17df8967-2c85-4db6-957c-28602270e491",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "ad2860bc-d2e0-4e09-98ff-4630b05ada7f",
        "cursor": {
          "ref": "73dae9cb-6fbe-4670-af42-98e263e29402",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "50969a51-f453-49ce-a92f-86eac2f7eaf6"
        },
        "item": {
          "id": "ad2860bc-d2e0-4e09-98ff-4630b05ada7f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e3d6e68d-6d68-4a2d-a840-a382fef7655f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959d0801-d1b8-42e4-8bb8-9aeed7429796",
        "cursor": {
          "ref": "bcea2138-826c-45a3-9b9e-d9e6143a09fc",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e45bd004-3e7b-49d2-96cd-174a6bde4840"
        },
        "item": {
          "id": "959d0801-d1b8-42e4-8bb8-9aeed7429796",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8868acfa-8342-4734-b30f-9f9330f367b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7de150-ee96-4a54-be7a-8677fb2e4cf5",
        "cursor": {
          "ref": "097a2979-a8be-416d-894d-b038a71e6406",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6f8c6021-9f23-43c3-a203-59fe7c4c4703"
        },
        "item": {
          "id": "4b7de150-ee96-4a54-be7a-8677fb2e4cf5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "28d3fdf3-b3e5-4fbb-844f-4ec397a95eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebbca87-a903-4869-84f8-0e005902fc06",
        "cursor": {
          "ref": "27f93e2e-d2bb-41f6-a274-dee337a87fa9",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "acd80056-4b22-40c1-ba90-ed4a0f2d8100"
        },
        "item": {
          "id": "3ebbca87-a903-4869-84f8-0e005902fc06",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9fc03ad6-b9fe-4c53-a598-479ef2b77bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d12884a-4a9a-4cdd-8432-623b9ffdedfc",
        "cursor": {
          "ref": "5a8dc2b6-8418-4be0-9d5f-e765ce0e9e5f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5b5ed074-5fe1-42f4-9be5-ee30e3fb0ab2"
        },
        "item": {
          "id": "9d12884a-4a9a-4cdd-8432-623b9ffdedfc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a254bf14-29e9-4231-ac25-baab5ff4594c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4dfd6a-017a-4384-8006-9949cc42afaa",
        "cursor": {
          "ref": "84b70a28-634d-4572-adf4-1dc9fa206c65",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bc139ebd-91a4-4d3a-bcfd-3ea4509dc7b2"
        },
        "item": {
          "id": "ae4dfd6a-017a-4384-8006-9949cc42afaa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a633965d-347d-41a8-b076-b36aff40c5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0814a52a-af4d-4d78-803b-acc0b8bc3269",
        "cursor": {
          "ref": "7bd9ee44-94b9-4831-961e-bc4cf11669c9",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bca071ba-f333-4277-aa32-559b0fc0a78a"
        },
        "item": {
          "id": "0814a52a-af4d-4d78-803b-acc0b8bc3269",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a24f832b-74fe-4449-83ab-f06332c9ab35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0ef267-6b1b-404c-b7d6-82a5efdd1a42",
        "cursor": {
          "ref": "6f7586c8-730d-4456-ad45-44474c093031",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2b0b0aae-2b2a-447e-8c65-305d477a67a7"
        },
        "item": {
          "id": "de0ef267-6b1b-404c-b7d6-82a5efdd1a42",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "95b09acf-3e6e-4c0d-8014-99fb5128ba4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f0f6a6-200a-42c4-aa49-7cc2804cb573",
        "cursor": {
          "ref": "3f722eb0-122f-4590-90a1-90d468bccd4b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "42442eac-4c20-4806-b5c9-7d346c6aa4b8"
        },
        "item": {
          "id": "87f0f6a6-200a-42c4-aa49-7cc2804cb573",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "eb61b63a-b462-4307-a873-7bb480cc9542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922b3633-4428-4ba2-892f-796b360dc9a5",
        "cursor": {
          "ref": "1b94b85c-d9a2-4ff6-adcf-a9da50d4a6a4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d2309671-84a5-400f-a65d-ae45c83488bc"
        },
        "item": {
          "id": "922b3633-4428-4ba2-892f-796b360dc9a5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6fd87a9d-b60a-4a63-8129-d7f653f88064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b32ba1-e410-41fc-86fb-f53913a49419",
        "cursor": {
          "ref": "87ae0d1b-4e42-438a-a95a-a54f71eb9b3a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "42221ee6-323b-4cb8-9844-11d83a45de86"
        },
        "item": {
          "id": "59b32ba1-e410-41fc-86fb-f53913a49419",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a8297b34-039a-490a-812d-930fef7a2a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67428c23-ac38-43b3-ab7b-feafa2a5d859",
        "cursor": {
          "ref": "47987bee-add0-4168-91eb-22879c1e2b53",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "aed45d84-a46b-4b92-9a0e-601322e61eae"
        },
        "item": {
          "id": "67428c23-ac38-43b3-ab7b-feafa2a5d859",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "04a11fdc-b2a3-413f-9ea1-10529e0af608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19032f04-11ed-43d0-8fc7-85637708435c",
        "cursor": {
          "ref": "96ddc7b0-5f2d-4d42-9d6e-59d67b55815d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "14f0c3fa-b039-422d-a53b-b026db055d9e"
        },
        "item": {
          "id": "19032f04-11ed-43d0-8fc7-85637708435c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a3b5739a-9ffe-4ed1-8c91-40c55a12984b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a94f12-635e-40ac-bcf6-1ad47828ea6e",
        "cursor": {
          "ref": "7421f6fc-ed55-4f80-b6bd-e8dbe51e0204",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "88f2ad4b-9646-449e-8f76-cbba6f1fffc7"
        },
        "item": {
          "id": "69a94f12-635e-40ac-bcf6-1ad47828ea6e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "909d9fdc-1856-4798-bebf-cc938b22a397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d0b5ad-b46f-4334-9246-581d09e72f41",
        "cursor": {
          "ref": "61361678-a249-4533-8c58-9218e560fd79",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "65d839be-afd0-4ff9-bf8b-45ff7960c51b"
        },
        "item": {
          "id": "c1d0b5ad-b46f-4334-9246-581d09e72f41",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d9752215-5bde-44fc-aa82-1d1ae0ddf583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c46620d-ef1a-418b-9eb1-505a67cbb18d",
        "cursor": {
          "ref": "3a9aac91-219e-4e6e-b62e-5337d24c0f85",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b871508e-2871-4c4c-87af-75feca2310e3"
        },
        "item": {
          "id": "7c46620d-ef1a-418b-9eb1-505a67cbb18d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "931f5be9-1454-484a-81ab-a0191c354822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65be6c3-54f1-4633-be02-fd8ebdc1d599",
        "cursor": {
          "ref": "8dd2f633-c739-4e0e-9c88-9090c16ceab9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "96b119f2-f92e-4a87-8b36-5f0ca2420c21"
        },
        "item": {
          "id": "d65be6c3-54f1-4633-be02-fd8ebdc1d599",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "efb8165a-6d1e-44a5-a0e9-ea52066fad6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2e6eb0-a8ee-4ea8-b210-b66c656b5913",
        "cursor": {
          "ref": "ab3c4014-9d7c-471f-ba5d-fcec3026febc",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e2d6ed1f-0ddb-46a5-9672-8caf272eed6c"
        },
        "item": {
          "id": "0a2e6eb0-a8ee-4ea8-b210-b66c656b5913",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c867070a-c8bc-43f9-ae06-e261d4f2e335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4369e5a0-ab35-4e3f-b4e9-0244e6cd9482",
        "cursor": {
          "ref": "00840e4b-90af-42ba-8fe7-407c381f2164",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e61e37b6-b7b6-45bd-aaa9-97501a234d01"
        },
        "item": {
          "id": "4369e5a0-ab35-4e3f-b4e9-0244e6cd9482",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "16875ce2-6161-4f55-92f4-d45bd2af01a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614834d5-a1af-482b-b089-37a3cf49a503",
        "cursor": {
          "ref": "484485b4-1e21-47c1-b4b5-a9c5536634c7",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "63f96cf0-d34d-4b65-9cc4-28ef34c9d9b7"
        },
        "item": {
          "id": "614834d5-a1af-482b-b089-37a3cf49a503",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8712d7fa-0899-42d8-b419-f6086b139a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5828ce68-e013-4a68-888f-1deef97e0c9f",
        "cursor": {
          "ref": "f1f1f0e9-0287-40cd-9162-513f637f822e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "331025c9-d3ec-4a40-83a0-6cace71ab966"
        },
        "item": {
          "id": "5828ce68-e013-4a68-888f-1deef97e0c9f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "71f73a88-767c-42c8-abc5-c506cbd00c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e50bb39-7fdc-4c2f-a77b-01433417f9fe",
        "cursor": {
          "ref": "5743d7a0-cb1f-47fe-8f5f-9924e659c3b5",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ec1c5e12-7dd7-43d3-870c-ca1db4897674"
        },
        "item": {
          "id": "8e50bb39-7fdc-4c2f-a77b-01433417f9fe",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0dc951b4-4720-4058-82dc-3ce4f4598e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3d2c45-965a-4176-99c4-65279168c0f2",
        "cursor": {
          "ref": "4b65d4a4-afca-464c-899b-006b77a957d8",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "55ea5b5d-aa8c-41c4-87bf-c306b020e680"
        },
        "item": {
          "id": "5d3d2c45-965a-4176-99c4-65279168c0f2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c4219721-9a4c-41cc-b46a-0e2860f1b60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82febc0-6e8e-4325-b8c9-4ae2f288989a",
        "cursor": {
          "ref": "78decfdd-41ff-494d-b837-3f98843c156f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "38fde61a-5116-4758-9364-7eb6bf73795a"
        },
        "item": {
          "id": "c82febc0-6e8e-4325-b8c9-4ae2f288989a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2aca2312-6a63-4535-a644-874ce39edb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9761775-7d65-461d-bb83-6ec7b8412ea9",
        "cursor": {
          "ref": "497c6691-4f12-41d1-8a59-f6940354cfda",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1f8bcba5-7ae9-4847-8dd4-f33f5e2b9306"
        },
        "item": {
          "id": "a9761775-7d65-461d-bb83-6ec7b8412ea9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f17ab53f-4116-4876-9100-8e3c9ec7bf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c724c809-f849-46d4-bc4f-a932fc4dddb1",
        "cursor": {
          "ref": "7e23c1a3-7518-48f4-b7e3-56c294d5b7af",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "859d96f2-4c0c-44c1-9edd-3c8a645a5115"
        },
        "item": {
          "id": "c724c809-f849-46d4-bc4f-a932fc4dddb1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fb316663-82b1-4b5e-9351-1ade8b9f55f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01b1961-c655-4685-891d-cf52ed14bd74",
        "cursor": {
          "ref": "c5fc436f-29a5-492d-9c20-d3ded501653c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9ee86db0-1556-4877-acf6-f4948edd2a93"
        },
        "item": {
          "id": "c01b1961-c655-4685-891d-cf52ed14bd74",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7d2d38ed-6b13-4195-afc1-b5e52b06fe50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028eacfd-3a13-4d85-b977-aeb20ae24b9e",
        "cursor": {
          "ref": "fb5d12c0-4637-4807-8408-42bdce2d5454",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e0dbd932-f3a7-4fd8-9cb3-0cffb79f75ed"
        },
        "item": {
          "id": "028eacfd-3a13-4d85-b977-aeb20ae24b9e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "febd3b85-5820-43b9-9574-116b236c75ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edd8c09-8d79-4a8d-bfe7-985b0651bfb5",
        "cursor": {
          "ref": "be36687c-b435-4af1-81b6-69ed930b5184",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "856cbfb8-116f-4288-985a-38ae238cfda8"
        },
        "item": {
          "id": "6edd8c09-8d79-4a8d-bfe7-985b0651bfb5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "de21e7af-55e3-4911-b9da-0edb44413076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1782001a-fad9-4db6-bace-4414fd37e7a9",
        "cursor": {
          "ref": "eed15da2-2352-429d-9ac5-75db1ead493d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "dfa8fa5b-3daf-468c-b10f-30ff000512dc"
        },
        "item": {
          "id": "1782001a-fad9-4db6-bace-4414fd37e7a9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "943dd5a2-0810-4b96-9340-891d9e9d42d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2119f7d6-d005-4724-a41d-5b805baded02",
        "cursor": {
          "ref": "77895e1a-3614-429a-8ff4-fe6b205aff48",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "acbf7f83-52d4-4601-9f8f-8146b391bfb5"
        },
        "item": {
          "id": "2119f7d6-d005-4724-a41d-5b805baded02",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c6317f90-3e2a-4e5a-b9cd-e9320b5d9b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12f9477-c089-495d-ba10-0b5b5829d07d",
        "cursor": {
          "ref": "79a017fd-94b0-494b-8a92-811f914cffbe",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7f1efd77-1d00-491a-8287-2f2d8c8f44ac"
        },
        "item": {
          "id": "f12f9477-c089-495d-ba10-0b5b5829d07d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2cb67683-ebdf-448f-980a-fe70977478a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86416ef-424b-455e-b79c-87ad53e9113b",
        "cursor": {
          "ref": "b59208d0-f81e-4df1-a1c9-5133b1cda08f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9d842c31-84bc-4856-a220-0907fe7d3bfa"
        },
        "item": {
          "id": "e86416ef-424b-455e-b79c-87ad53e9113b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "41bd4409-dd9a-4980-a87f-7f8e82192bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4a5c33-0baa-4481-9a90-f04323411750",
        "cursor": {
          "ref": "58993d5c-9f46-44d5-8497-fd0ea0237ef0",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1f2ea0ee-7ba9-4fc0-bd6e-aa1d8bbec9b7"
        },
        "item": {
          "id": "cf4a5c33-0baa-4481-9a90-f04323411750",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "02a83aa8-4281-4195-b8e4-55af234e5155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f21a1c4-b43a-4fd7-811f-8439aea3cffd",
        "cursor": {
          "ref": "6c66ba0d-90fb-4201-af7b-696ba248f3a2",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "26b34719-484b-4c6d-b1df-80d123bde25b"
        },
        "item": {
          "id": "2f21a1c4-b43a-4fd7-811f-8439aea3cffd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "72a84d1b-4067-405c-a9be-dc14db31920a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33098e22-97a9-47c2-b5c4-34a13a865969",
        "cursor": {
          "ref": "b696f00e-d80a-4d16-81cc-55d34530c64b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "68ae2777-04f0-41bb-a2ff-f7fc57b598f9"
        },
        "item": {
          "id": "33098e22-97a9-47c2-b5c4-34a13a865969",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e75061e9-2b17-4d38-9017-98a6f17940fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ba5e6f-097b-4e81-84d3-48b3f74db980",
        "cursor": {
          "ref": "4a6f8b88-2792-4060-ab89-46a82a9d658e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2b088b42-f8a0-4d83-b1a7-c5a30694f2a4"
        },
        "item": {
          "id": "86ba5e6f-097b-4e81-84d3-48b3f74db980",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a58fd3a6-515d-4399-b26f-1cb86da274f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8234a3a-b8a0-47bf-af1e-6992a07474a0",
        "cursor": {
          "ref": "729cac33-2c14-4e4e-bab7-d6052612afdd",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "02f2deee-40d5-46cc-a522-39163be61da1"
        },
        "item": {
          "id": "c8234a3a-b8a0-47bf-af1e-6992a07474a0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7a87acec-a25c-4f70-96a5-606cf04b6ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3e3c37-d584-4578-8bd4-f62e8565ec56",
        "cursor": {
          "ref": "a6664c9b-5ab0-4457-aa11-84a65fca7261",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f4624314-e9d4-48cf-a565-1ccf5486f4e8"
        },
        "item": {
          "id": "cf3e3c37-d584-4578-8bd4-f62e8565ec56",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "33fa7079-b898-4909-8b72-1c69be5d4b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bee95c-22fa-4cd3-9986-feb034bae703",
        "cursor": {
          "ref": "d015e5d7-5914-4fe0-ae32-75cd2fae10ea",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1c887f47-d164-4b67-a5a0-73aa448bef06"
        },
        "item": {
          "id": "17bee95c-22fa-4cd3-9986-feb034bae703",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2c14d4dd-976b-4cf6-923d-c61941051e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc7d7e3-ce35-4d28-a469-1bb42f88e94c",
        "cursor": {
          "ref": "78d906c3-8466-49e3-83ca-b7dde4d66fe5",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "82c951bc-4d61-4ca7-8a4e-aa161ab94e30"
        },
        "item": {
          "id": "7fc7d7e3-ce35-4d28-a469-1bb42f88e94c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8a53756f-42bf-4024-acdf-71239d2ddac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26aa1f2e-ab0a-4e93-8fb6-851504a24c9e",
        "cursor": {
          "ref": "13b2da80-dfc6-405e-9b4f-890098b511a4",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "08405810-fcc8-4d59-a994-0ab1d8f24136"
        },
        "item": {
          "id": "26aa1f2e-ab0a-4e93-8fb6-851504a24c9e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "aac3142d-8acb-45cc-a5b0-6f6433248ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c795e0-e5e9-4ccf-918a-56892c0154de",
        "cursor": {
          "ref": "362557d5-d274-4fc5-92ad-de4f08838eb2",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c6ae8d14-e536-4b42-b7bc-8ff7c42676d8"
        },
        "item": {
          "id": "66c795e0-e5e9-4ccf-918a-56892c0154de",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "115d4f9b-0a47-4c49-93b9-d5c34e614069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4dd106-9375-40da-8790-f06827c40b26",
        "cursor": {
          "ref": "d787a6eb-4268-4686-b550-15fa4db934c4",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c49c1a90-82b2-488b-a857-298bb854a59c"
        },
        "item": {
          "id": "cb4dd106-9375-40da-8790-f06827c40b26",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3501c4dc-3d0c-45ba-8830-13f6d8619eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd9774e-1454-4fe4-bd56-1fd57780eb6e",
        "cursor": {
          "ref": "30b02bbf-ad97-43d7-bdcb-0ce4538c29be",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6207c78e-71ff-4b59-9d4e-bd5ec453b39d"
        },
        "item": {
          "id": "ffd9774e-1454-4fe4-bd56-1fd57780eb6e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "28441dfc-6de8-485e-9eaa-9e9440106c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86c8117-8c3b-4905-9cbb-145c46910abe",
        "cursor": {
          "ref": "ca7106f3-800d-4225-942d-eeca79df7e27",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7a7a7fa1-577d-460f-9f52-21b80086117a"
        },
        "item": {
          "id": "e86c8117-8c3b-4905-9cbb-145c46910abe",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8ac6caf4-27f8-4669-916c-7e33dfd2ef49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141f78c3-d41d-4813-8cbf-2893d9a57fd0",
        "cursor": {
          "ref": "56e7a6e7-a16d-4082-a7a1-992b797ebc70",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d3bb700f-b95a-4a2c-8a5e-c97cc293626e"
        },
        "item": {
          "id": "141f78c3-d41d-4813-8cbf-2893d9a57fd0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5f10b0d8-608a-451b-ae42-2e09f5a829e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbd4e87-ca32-4eb7-8057-184f3464a892",
        "cursor": {
          "ref": "d4ba09ba-ad1c-43b4-a248-f131fc8a9dd0",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "504533c4-e404-488a-9f5c-e717701911eb"
        },
        "item": {
          "id": "3dbd4e87-ca32-4eb7-8057-184f3464a892",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ce9e31ea-27a1-48d0-9e98-a961d4249851",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf2b037-6f83-443b-ba06-45138de71cfe",
        "cursor": {
          "ref": "1388ef04-22e7-4550-afcb-28bdd2b0b35c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "db952caf-ebd3-45c7-8b31-6931c3194ece"
        },
        "item": {
          "id": "6bf2b037-6f83-443b-ba06-45138de71cfe",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d25176eb-8788-4c30-b558-bc9f53a529d4",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a12131-1b08-4bcc-a7ca-ac5f75205ed6",
        "cursor": {
          "ref": "9b2adb4f-0075-4551-89ff-6cd8d82acc83",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "bfb3ef1b-bde8-4498-9468-76cee3a9e04f"
        },
        "item": {
          "id": "66a12131-1b08-4bcc-a7ca-ac5f75205ed6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a78e53e7-57ae-4bed-b9f3-f08de4a2eee1",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a9af30-0e15-45b3-bca9-a9bc1dce559b",
        "cursor": {
          "ref": "adb5beed-01c7-492e-9f7a-0692ddce5329",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4416197a-7af9-489b-b46a-efd7d956e95e"
        },
        "item": {
          "id": "43a9af30-0e15-45b3-bca9-a9bc1dce559b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ce39a465-d2a4-44b7-ae70-5b470862163f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a9af30-0e15-45b3-bca9-a9bc1dce559b",
        "cursor": {
          "ref": "adb5beed-01c7-492e-9f7a-0692ddce5329",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4416197a-7af9-489b-b46a-efd7d956e95e"
        },
        "item": {
          "id": "43a9af30-0e15-45b3-bca9-a9bc1dce559b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ce39a465-d2a4-44b7-ae70-5b470862163f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb094b5-e355-490c-88f3-75eff0ddc395",
        "cursor": {
          "ref": "142f4222-3bdc-4a42-a30b-c61881a17b83",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "df495b17-26c3-4860-b668-adc8ae0e93ec"
        },
        "item": {
          "id": "0cb094b5-e355-490c-88f3-75eff0ddc395",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "22a2d08b-58b5-4f67-95e6-a116ebae5c8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce32f27-1149-4ff8-8277-8a5da7204fda",
        "cursor": {
          "ref": "cb2e563d-8473-4c54-9310-15f66a5d1112",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "6671c3be-4c85-4cd1-b265-f5f375e2a002"
        },
        "item": {
          "id": "dce32f27-1149-4ff8-8277-8a5da7204fda",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b766a992-7046-4e30-ae04-b3ccb03eb287",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}