{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9fdd5e19-430d-41cc-8da5-8bcb6b264c1e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0454ba9e-d765-4abb-abe9-4ac456e53451",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8440c60-b0d1-46ad-8cd3-386e20cd117f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a5b43058-6185-4bce-b5f0-90b7e24bbff6"
                }
              }
            ]
          },
          {
            "id": "873e80fe-0d03-4322-95ce-7b9a97438b7e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b81e3214-42c3-499e-ab3b-e8410d0a698b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8946f064-325f-4a05-bedd-83e1c469d02e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1fbca088-9773-479b-b614-4c9de9a14191",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5a3b6ef3-8a4d-465b-b94f-681a45bd9463",
            "name": "Positive Testing",
            "item": [
              {
                "id": "85cd4b16-06b1-4833-ba6d-272afef271be",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "001a569e-123e-49fa-94d1-b0494b4822bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01ad5e46-2a2f-4393-893a-c99c84d03655"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f38346fa-0c20-4ac1-9119-af0178f31540",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4872c4a-e794-43e2-95c2-4d146061d157"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "567623ad-2bd2-4499-a992-4973370a20c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1877192-a50c-4a5f-830e-a41ec3f9639f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2726a6f-33c8-46d5-97d9-85493f85e877",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "aad9e5fe-a8be-4eb7-9300-7d1acb8a1214"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5f7f458-e7c4-4b7c-835b-5615d1c1ff75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a82285b9-3a86-4def-9ff0-ae113b8bfef0"
            }
          }
        ]
      },
      {
        "id": "b9bcd062-f40e-4292-a753-f739eb7d3a13",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "024db984-55a6-45af-a93e-197ce0c44ef7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37dcd00f-8fd0-4bd8-8278-a41431f51d54",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f539a52c-08f8-4d5b-8650-89a8a2d24f76",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcf37d2-8fa4-486b-b112-cada3d455db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cd9a6c3-ed24-44bc-b5ff-35a0836fceb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef2a9cc-f9a7-49c7-87d6-c2e6d384faa1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde4c8ec-204b-4eca-88cc-af99beaf5a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5fab198-0e85-4b0e-9fc8-1aefc4a95355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db42817-f81e-4c71-9f6d-b7d42b791ce4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3e91b0-a22f-461f-9b30-c31cb203cd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "296cdc4f-39c5-4502-ba6a-ae2dc9a3fc65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9126d156-60a0-41aa-b5d3-e00976862ac8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fa3dc17-a333-4424-9c4f-0f9f37587489",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b845a8ac-38ba-4bb9-b1e5-83177ab61fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae144395-5404-45fb-a7e1-b62cfa502919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b96dfb-13de-455a-aebb-c6d2b7b90955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9b9b2e-c072-408f-995f-aac83834e89e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aeaa860c-a94c-4ded-8aef-f5bd5edbe636",
            "name": "Positive Testing",
            "item": [
              {
                "id": "778d4ea7-6b51-4cd0-9159-b93c6ab7df29",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f3f16c3-1a7c-4f8a-91b9-93e182c3ab06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "76baa22a-3680-4756-8a58-7d96c34bcfef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "287c1e37-7721-43ef-b8ff-21a478ef0129",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b409fff1-7dbe-4fed-8740-ee564c05d165"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14d895f8-3850-44a0-ba0a-40edb31f7516",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3395748-2482-46de-ad92-6ec30415b5b7"
            }
          }
        ]
      },
      {
        "id": "08089052-c414-4f0c-9263-47562a596202",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f11a73cd-42bc-4b52-bce3-e4a402cac917",
            "name": "Negative Testing",
            "item": [
              {
                "id": "630fff26-10d1-4f6c-8694-c6000a0d0644",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "23cb2f22-2e08-4ce5-a197-0398926cca60",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d25692-705f-4c5a-804e-4ad8f2bad068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f7fe99-bc01-46e9-b01c-8cda773bc83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087526e9-edce-4d9e-989d-ec87b3a708d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00fe5f98-d374-4571-abec-eb20847517e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9042489f-ac89-41d0-a10b-78900c8d14fc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a0609b-0f22-466e-93a7-26aa7b7815c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e73e82b-36ed-42f7-86e2-b7ecaa77cfc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0924ad-59db-410c-afbd-124564057dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9880466e-fcac-4efe-b263-6aa96342e5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73198f98-95e1-41d1-a670-6ec4e77c5d8b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8049f55-1c6f-4f9a-a502-944281a31874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef91c91-4d68-49fd-a964-806409b12482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e798fb-78a4-4d8a-9723-bb02167dd38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0c68d27-16f1-4a8d-bbe7-122cdd968666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a2da9f-9496-4c58-adcf-0e55e445f73f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e730b4d-612e-4003-86bc-b71f8746cd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490e40cc-3631-46d4-bba6-6156716bcc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d403a1f6-3667-4cab-9861-c3d9b0de4e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2fdbb48-5002-4600-b0c5-aafd2b4aeac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90b0a5c-23f1-48a8-9053-66c6c6262dde",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6c2d67-0927-4fce-8509-9dc04d5b70c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40835a7e-5e10-4ddd-955c-68567f631604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35f808a-5652-4c5e-8662-3edfe609d111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f5bb561-8fe9-4f29-b370-3c8d264056b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444df3c7-6e1d-43b0-8f63-d52a78e091bc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55da27db-5cae-4202-9f2d-92367a667d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab8d409-5ff7-41b1-a3b2-94b44d5fd8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f088d60-d261-4501-973a-0b65d57aa3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbcd9483-26dd-4c72-af38-319dd231e553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71d85e8-6f55-4eed-91da-782c04413ad5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3414c8-9aa8-4e17-9353-e4858db2ec25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074abf73-ab03-4b3d-8871-19cf2ccdb1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6274c31b-3491-4f56-9b3a-801880958314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67d74c80-703f-4f34-8057-e5f754724c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babe7a59-ae77-4763-87af-5a816aafa54a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bb8de3-dbfd-4bf5-b1ac-8fe9b3376f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52bbd7d-4ed5-40b9-8482-5320fb6458ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc7aa34-768d-45d2-b163-c25c35c1d376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28ed4eee-933b-4a32-877c-13cf7e3784d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bc2b8b-94b2-49e3-b7b3-0635044c6022",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08fbdb3-d69a-4392-a50e-0808fd1f4e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a92396a-472b-4e88-8136-73adc56b013c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4645ec0-5fdf-4a9c-9cec-2765806aeff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c21849b0-7e23-495c-b607-f09c9d86497a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41673366-88b9-4ad2-b29f-962fa4123edf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5709e947-d110-4d8a-b6a3-a4f452b0e464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7190ac-9bb0-4713-a3cc-dd37a3caec01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9faeca-9eaa-4e62-a0c5-d11f863cb82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75a2ce4d-64f5-47e8-9a14-33c774b44c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c081d79-a96c-420e-a313-ef82cc821f6d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c3be7d-a25a-4c2b-b0bc-88a8f1703a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed485213-0e37-40f6-b330-21b6efed05a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578c162a-584f-45a8-8b58-17d797cfd7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a253f26-1960-4590-8001-7ec545a513a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8079dd64-b0cb-4e9a-819b-04263fe13c66",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1974cb6-684d-402c-b3cf-99e47e2a3035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba0eb12-e368-453b-9081-633a7420f675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce137f2-0cc3-452e-9ef1-33dd8a3b6c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b653beaa-e473-4210-9d78-ee5c14a13b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaef16dc-407d-449d-9b50-baa281285b00",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a17965-459b-46ab-9a77-51883972004f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b9cbda-4b11-4c2e-9877-7a46049a17ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a545a976-b25c-4edc-912b-3b81caa9e54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcd58cb7-0994-48e9-be24-be08b084de15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc16ea0c-b8a2-4b40-ac45-f733f794223d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6645271-738f-4df8-8ca2-182a719a2a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4ac8f5-a422-4f9e-a929-0e7670b0596e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279b7e15-f1a9-4284-bc04-0ffd9b032bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13d46230-dad5-44f3-b620-cc2319ed053c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d95061-9d55-4504-892d-57b62fd15285",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a2a431-ff05-4208-b429-c850294b97a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c110f6ca-96b0-4079-9e76-18cedbe49ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4228b66-b8c5-4196-ac5a-f1ee0504445b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5280b8d3-c9f5-4e58-a040-05fbc51db86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89edd893-dcf1-4767-9ec6-8e1f0045b722",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e1d0bf-7489-49dc-ad85-82cd0debd94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d63509-bb4e-4f4a-808d-d3e0b8dba0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852c4643-3a48-436b-828c-1661867d65ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac2f199c-5291-4757-843b-f24ebef56521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875d2619-8e2f-4ddb-9e69-369b326c7784",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7a272e-0fb7-427c-82fc-b2f1e8efd825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6829931d-1fb3-4219-b8cd-a6d286bf50e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e4fe2c-c2e5-4d6f-b5ed-44f389b17b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a7d014a-87b8-46c3-aef9-e820010caa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d55595-1f60-48f4-be87-fa7df19834b5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab14059b-f225-43e6-a097-7d02412ede2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb2203f-fd99-4421-a1cf-4098c2ab1aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea8def6-6267-476f-aa3a-1141c3fac93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3598a048-3737-4d97-bf94-53272e0e11e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee76846-99e6-4000-bc96-0cdb013a3906",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49090a6-b928-42cf-89bc-eb46d62db5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe309d20-d612-4cce-94ca-f0a2d2461131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee03ff00-2b23-46d8-b7eb-c52fa54b7f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7179f672-5540-422d-8d2c-4af324eeec4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befd081f-a8fc-421e-8efa-ccdb2fb91de8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778caeee-760d-4b8c-a004-284f148f5d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a36a276-2b06-4048-9afb-c8d807ac5a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc28bf9f-95c2-4665-b0ea-8cca26f1a828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "491bfd9e-cdae-4e2d-9fe3-92ee8187cd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238316d8-3e97-4975-9d46-5378a116205f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c63f8d4-a78e-4f01-b65c-61f0501845d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed76b89f-3f1c-4b5c-bb43-252769463db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8289d6-844f-4cba-b240-e5e6905f2b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfccdeb3-46f3-4dc3-8b28-6594478fd82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931fe68f-c3c2-4755-9f1d-fbde6d42695c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa70a04-319b-4455-a31b-662cea0c8b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d42758-f41d-4208-b039-b1b2d3520b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd3ec1a-5179-4821-97db-1d823f912ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d72f47ea-2917-4f05-ad99-662f32f5523c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b536238-0cce-41f9-9ab8-793bec2f1506",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bb3303-c803-4348-a8a5-c2df857b715e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9301595c-0793-4a71-81b2-7c3915bc3a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2903bb33-e501-46eb-bd44-3637963c0790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de0559e1-6cd1-4745-b2b8-8a05b0031e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c2aa4f-9494-4aab-b39a-a95ee74951b6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc5a03f-deb9-4d05-a41d-f2d139adb892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6ab862-76bf-4e17-aaff-f441f540dac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547dc8bd-af86-4007-88f8-b1e4fd514698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed03608-eb3d-4e8d-acb6-3c0a3aa99781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00f7e9c-b837-44dc-9d8e-8c2bff7f35fa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc2bd4c-42f6-496b-92cb-26cbc25a5b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b65770-b569-4382-a177-97b3688a7d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ce38ef-c690-4d3c-af90-cb080c05d145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c03055-4482-4a3e-aa11-8e33267d0baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa196cce-0954-4dfc-aae9-9788c6d12b9f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaeb24b-4042-4593-9b71-dd69bd0b17db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c9d347-4960-488f-a538-7dd5e1f88722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d476209-b8e4-4aeb-9dcc-3dffb72942d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7846d14-b8fb-41ff-9de1-74236bf187d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6f3318-908b-4233-a7e6-25a8b703c603",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3732d55-f6ba-4f93-97b6-3ee5aa3bb79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9293205-c79b-4f8d-8a08-fc87e2ec0d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf2f9d7-d0d5-4460-89af-7358bc1d3fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc92930-47f4-4b35-ab92-ed29548f5748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2171dc-a01c-4547-bda7-8c3a631b83cc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f6fe71-ed44-4f8f-b77c-a802086ec859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0850a746-9146-44c2-88d0-13d78e3bf8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2391aa7e-2c8a-4f7f-bc87-e06db689b242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e94424a-eb5c-44c7-aede-507ad88d3228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e91bd3-0186-4f57-98ea-39b71e53f6a9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85becbe5-30d2-418b-b2fe-ece527d92800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe4a2ef-b51a-4ab7-8e3b-d1b9075e6c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7c4916-3d7a-42ca-90b8-20db48035e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "528aeaec-0197-4059-8f18-78172eb4eeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3944c54-4f78-46f8-a2a9-d771f9b0266a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e027059c-911c-4684-8813-f8b15df03795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f709971d-5682-4f1f-ab93-c538aee320a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bab0086-6889-49c2-ad89-9dc6d3d87681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "30442ee0-9629-4de2-918e-5599a015899c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9531cd-7611-4b8d-b21b-2c32b6be36df",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48f3078-4a58-4fa6-9c2a-a047a05d2066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202a312f-8452-44ec-b911-b496ff530ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b18438-4603-45db-89ae-b900f055c12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebbf6d1-6250-4368-b11d-226a03d4e41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507b5d13-0cfd-48f1-b15f-c757821259ea",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f008da3-ab2c-44a6-aa14-bec941d30661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85caa80-46c0-4607-90f7-3ccb633d14b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714a269a-4218-4768-b444-5b9041bfa588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5f1dd7-cc18-4858-b0e4-0f4e90add158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fd99db-19a8-4c1e-be3b-4c677b39ec16",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b77798c-59b3-4e21-a6ee-168126ad2b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbf25bc-236f-4907-a022-13aa2030cef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bd24d8-636a-4f15-95cc-ee4adfd38069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "613607a8-9f87-4a1a-a1fb-fff77b9d86ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeba3f14-1f69-44ed-bdca-9c49e372b622",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ca5cc8-eb35-4eb8-bcdf-d91f578d722c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee2c5af-48d7-4ddb-996f-b00cd7a2a84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2118730-f546-4612-9b33-fb2c61a89985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dae975-7cde-4e56-8917-94ebc2eb8f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c31d4d-cf8d-4cee-8893-5fbbbcc31740",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c98e363-efc6-4223-9d8e-988163f27a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a394ba-5cc9-4cc3-a4fa-d9d5d3f01f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc362c4c-e365-4e51-807b-806f3517c53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7f139742-227a-49e1-bf9b-ff10de4ce022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27a6f58-5dcd-466e-b3ab-cbd4c390a4ca",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42059991-d77b-4c21-9a6d-ec7b175100e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0da20134-56b6-4ad1-8165-9c4238c38748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c00238-f8f9-4c54-927d-abf9d8e78302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05718dc5-0f8a-434e-913c-f3d0e019c97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c883ce-07d7-4c24-8869-6bf16b36ceb2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2107606-1d94-4d06-80fc-9e8627e794d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395b41ee-0e0e-4fa0-8055-a8fab940e371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074190fb-cb32-4464-9046-8a3ba127fd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "027596fb-4e91-49f7-a2d4-6fbcd1a823a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496f518b-d86b-44c0-9656-bf0d3816a255",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033c1260-86d3-4e7a-a3da-a63fbddafa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86920f5-50a0-4782-b4c6-3d8b7538f745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145546e2-3725-4119-b70d-ea4ca9f5f8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c52f26a0-bb5d-428e-9751-2ab0bb66fa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6aa700-39aa-4946-94c2-f3e6ff4ff0ce",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6965f9d0-22ee-49ff-b94d-8fbea3efe0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0c76b1-f1c3-4679-8826-1c2cdb5207e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a819a96-e0cc-4304-866d-367b9fee6313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a52aa5-898e-448d-b70d-b80d0be3aeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07c11be-684c-498a-b1ec-c047d9ca5f12",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c97d55-96d2-4081-9ff0-e3931906c9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba5236a-07d9-4147-af6f-db6eaec93d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3ecc80-436b-4778-b903-433733e2d768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c05e1a-aecd-4aa0-8801-86b44136eb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef51666-8afe-4c3f-9a74-0c3c12706c09",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ebffdb-4180-44c0-a26b-369d07570186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d19c8e-6d0b-47c2-8b07-bcddb1fab4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81416051-2a61-4ae6-9d37-2f8b50dae897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b62d2937-af62-40bb-b17a-4c4f255fcdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682cb55f-4eee-4f61-abd2-9ece2557243a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd08680-c105-4470-8a96-93a4b7735ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1852ae12-5c2d-4687-ab4d-7b277898819c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e842b6-ad1a-4ecb-8139-d6666bbb7e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e60bcf-af00-496a-ab20-d2952b4cd254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793bf3f8-61b2-4f97-be94-4b6fbe6ea203",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1956d22b-3fa6-4380-9c2d-6fcf2d3db676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab62756-95ff-4b1b-abb8-e7918268d15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad74298-3c4a-4bdb-950d-43dc1dd04f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "81c2b07e-8cc4-4d56-aa46-79c91508d94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1211a071-ed45-41df-acb5-c41bba042c10",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14405a0c-82bc-4085-b65d-77bbd3ab94e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abf1a85-8191-4304-9a72-fb6088aa8cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a7db24-a008-41b6-b895-e3772d7050f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0144f2e8-b232-4701-88d5-5c3d13ca404a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7580f580-ed15-48e9-b131-5759c9fec79e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ec37e5-c068-4fa5-b4cb-ad5cbda6ed76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0c1ce6-8a99-4af6-91e6-87a9846cecee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcbe82e-6caa-4f0c-a31f-9c946f54c07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "812578e2-44e5-49b4-b67a-f3fe01f721cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2feb6c-ecaf-484f-b3c0-0e4c01cd00be",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e269a2d-2701-4210-b218-1a8b91018ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee78f498-aa8a-4b6f-814d-d25ea00c113d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c69059f-3833-4359-8cbe-c9816fb6cbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b58a21a5-90d1-47f9-aa49-adba7c05a0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c14cb2-ea74-43c8-b4db-f840e77978f1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368babce-bf29-4fd7-82af-79c5e17118ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dff0d73-9a1c-41da-866d-c9cc7150b93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d636f7-a7ae-4cc5-b783-d8bc4d6574f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3388c51d-c60f-4368-986e-469de806a04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42926c79-ebfd-4791-9b3d-694e180f6ee8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc22a1e-bf21-413f-b9f4-adee54a3fcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a685d7-d58b-42b0-9651-698d426d6a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afff09a4-72de-4b95-803c-7812c47bde37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e819c32-4eb1-4f57-a132-f4253ac75d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bfb316-685c-4534-91d3-ed7557c83322",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56d03fb-a6fd-4352-833d-b64e42fed70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a93cb7-9a97-4b6b-aabd-1d304133a8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47daa1df-c73b-4a05-bd95-b4d4ad9d3d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a69d974-d1eb-4984-ba92-321c746601c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be530ee-38d3-4c1a-bcc5-e266159e73f7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cf7eda-9a8e-4f43-937a-fef9ee35db91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ebe34e-4da8-4dd9-bc59-a5a04a9f1c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f957db9-3405-4617-b184-ecc4bac599c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37a3b1c9-204b-47cc-b179-5a39b7aae154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b3de63-038d-4032-8b2f-a68ab5b33ac0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0cd483-b615-44b0-a531-2832379a06d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e0199b-bea8-4ed8-8678-706dc5e81bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaa6da5-ff64-4c24-824e-e21e00c9896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "623163c0-4161-4f5d-8be4-bbe5e5335b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15496f7-dcd5-471b-9f6e-59fd6ad1ca08",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba05f6e-bfc3-4505-9930-724bb6ba8280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fac172-522a-4927-a376-aecac6c2fe9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c94fcf-9a93-44e1-a8c7-2ea1c6bb87d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad971a33-471d-4762-bb89-ab8ba5169b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d309511c-ad8a-4a48-b128-cae2f221b25a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada6e10c-9b53-4eee-8c13-101328e6b060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeddc2ad-f33f-4158-a69a-d5e436c1da53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce02b515-aded-43c3-8f8f-791c5f1c968f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5426d4ed-3ab6-4094-a5be-c3d195df6507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce001fb-200f-4c47-bfcb-9e98bb47d937",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f593f03f-9a68-496b-895b-3fb5b8f71f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37d8adf-69b2-4169-8043-229f4b6c6e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317f694c-f899-48cb-ade4-47df0035a167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa992a6-40b3-4eca-ac09-3f6b15233469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f73b2f5-c2fc-4357-9668-a7837bb87674",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4957bb5c-cdab-49c1-b2a4-1793c489526d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fcf3eb8-02e5-43df-8ea3-869fe20e6e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7395d711-7d76-492a-b9c6-9d2a9f01d291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "938f06f0-f55f-4c5c-8b30-fc142cb8a4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34da58ac-87e1-442c-a539-0424c01ffa9e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11343b2e-9193-4a63-aab7-58e3126e7f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d4df55-8111-43ed-89a3-92fc7c2673b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3911f633-abc9-4b12-a2b4-b6558819d9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "12b0cb78-43dc-4b72-bb12-f7da982963ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c32c98-47d9-4656-b2f0-2c5e1a8ed399",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2051b8f0-be7c-45a6-a028-8f879545082a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68940874-4e82-4f64-ab3c-c88767dce98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506201cb-6e9b-4520-bf67-9684757b5d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "69fa150b-0cec-4df6-b8c0-c957f07ac8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb62e44-9f61-4e44-a339-7b33e544a15e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa0b832-cf4f-48ac-bd54-504e193b7f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0192758d-cf95-4b62-898d-9848f251d2e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce20ef3-e063-4732-95ee-23dace22fb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a95e184-c538-4367-b078-e63d35ad11e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a40d83f-c1fd-4938-8a58-7b2cc0002f97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7717f896-6c67-4da8-b001-5fa53da64df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8ca07e-489b-4701-b56c-b372be93f174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dc78e8-e9a3-4f3a-a869-c90aeb655a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "834175d7-010f-44d6-b4ef-3647242c4912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476c812d-f463-4d50-8c76-1782e9de874a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e333cb00-f8b7-4278-806c-5f2d57cfbcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c996fa78-a8dc-47b9-b334-62201712b3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ce78a4-3806-4636-8439-ff3336024425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "26bda2f3-96fe-4829-b724-baa41edc73f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80914fae-7a98-49ae-aa92-d9dc37971bc4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3416e8-b156-4d3d-9665-ed2f13a938b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253ef3da-07aa-4113-9ecd-8aa4b330b76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52350758-0a85-436a-868b-06cb22975d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c210390c-f625-4c01-b6ad-c5f32f8cbebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227b15b1-3c59-4f4a-b8af-c781ca894eb0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12689514-7a52-4c32-a3e7-d9a623299f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4f151d-5aa1-449c-afa5-b8ed847cfe03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac06cc3-e6b9-4fee-a545-c25ab6275b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b9376e-f440-4544-8942-0b428e311e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc92468-d24f-463e-811f-22aaa7232087",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e940f07-cb6b-450e-b299-338bf2f404c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02647815-ad66-4bbe-8212-1e3917869221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f885cd13-685d-455e-9a37-89dcb05ce233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5300ca-42e7-407f-b769-cb6c6806bf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d56e501-72f9-4f27-a41d-55ead5a5b197",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8888a4-8b55-45c4-8498-4c04fcea7830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb77e113-49a5-4a30-ade9-ef322fc8c88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06099181-ef8a-406e-b79b-53f5e8a3b98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbcd82e0-eed5-443a-9cd8-d5765be74892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c865a89-eb39-4148-a247-803775ae7086",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15096d47-e66c-410b-b3ee-5c5c5f7d84a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83055c59-efa8-49f7-b398-3987eaca58b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056dbd63-4289-41d6-9f61-80df4059705a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f59128-97d2-4d61-a0b5-4009d1fd0018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2d4756-9142-4aba-b958-5c878212bc81",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9afa57-5e7e-48d0-afb2-26995ffba0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b03f3e1-8ab2-4c99-8828-2e23015335f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cb1230-99a3-4464-a2d8-b67f16c733d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc463f0-5415-4a4c-b9c5-986f901f65b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e94141c-d33c-4cd4-9d34-f2875ccfb1b7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7016ee12-03b6-4078-8764-c4df1642ec23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eea1e00-a4ae-4e4a-97b6-ae11cb1a6b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238d55c5-e2ea-4eb9-b596-4b107ff6f2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0826aea8-2654-44d2-b02d-f01ac9af5433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fe39da-fd9e-455a-966f-d2f5ec1ab15f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d569648-d4c1-4bf3-a4e0-7ff11550d4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461fca6f-8ce9-48ce-a830-d40f6f0ad652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d550210d-eea2-42e7-9764-29f31b0b14f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3dcd7b1-0e36-43ee-a4cd-c50f98f3c47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab15b2d-a38a-4680-8b60-664bd123aa07",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0c3114-d61b-480d-84ba-88acc3e9b21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e18b83-98ab-45a0-b0e1-85fd0c8cf3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cd212f-cb87-4166-9055-d6c658163298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c30ed62-d646-48fa-80de-28dbdc76226e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7b491a-7b09-43da-b2a8-dcdc0ea0bd52",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de14cbca-80d1-4a45-a91d-6c0d4a8ae735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e69075-2eec-49b8-8a04-190eff7ebc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdfde31-f00a-410c-9d60-f041c042e7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a40ddd4b-a3e8-4620-8fe0-57df2629bc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e069f55-ff8c-487b-8862-4e9c73053003",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b648a7-07e4-4a3e-b9e6-615f57c40212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85129061-5c03-49d6-ba75-8f8ceb47816b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4052c65-106d-4ce8-8290-825240523fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9f49d6-7d62-42bd-bbbb-d9b6ce97f84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be933c89-2a33-418b-9296-1dcb169d9665",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e679f572-a6f3-4ccd-8d1a-e84e99e763a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf3a093-b966-4e47-8d5a-9d3f4a95f4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4327ce43-25ea-4b65-bcac-788ffa6be151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e26e4b2-d88a-4b16-a428-c325604ac422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab288580-3a15-4619-bb34-5e6cfe1efa77",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feee570f-af10-4a01-8d5a-99490af62e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d678b3-6ef3-4878-be06-b7f79c507f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cc05dd-0936-430c-86f4-cbc2aa737567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b84e7d-a41b-4f52-b528-040ff5d873a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aebb76-83d5-4d4c-a884-06775edde7aa",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d6cbbd-c0a0-470d-b333-40a44f072f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf36e59-3f11-468e-9462-d6df7fa0c15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5034dd-0e80-4b56-98f5-c2955a50033a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d0bdba-bdd5-4d0c-8f05-14befcaf2aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13010ed-b526-403a-94ca-3f804bd32b64",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a2016d-f7cf-40bb-b30e-6bd7438c75e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7a22d6-a07f-4a6c-b152-d03abdbec28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0242eb1-539f-479e-b927-6836a5c39be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58efabd3-7f08-4f0c-870f-236bd21dfe17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bbd3ea-b051-4953-b097-a72e9c358b23",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0876233c-0e30-411a-a5cc-da5bc8ab342c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d54077b-f72d-43ee-8744-0862ef4bba4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7833a6-f5b1-4e0f-ae15-644dec7f6eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc46e209-4bae-4b0f-98ad-5c4873aab45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b45bcc-2cf0-4470-8f0a-98b25c22b97a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e8ae19-b149-4978-8f73-500ef0b2773a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a43f3ca-f653-4e45-8eda-153865d155d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7d1176-1fed-4a70-9d44-7996bdb76a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca428981-240c-4bda-ab03-8faa55514503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40689efe-70c2-4af0-88ba-162188a1bd55",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82eaef7-6cc9-4bbf-9046-5498189edbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598deb6d-429a-4e95-8402-dee19051747e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43f7c38-58bd-4174-b5ad-97492bd51f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a37c0255-e337-4978-9ff4-f19cd2cdc935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8182f3d-8d98-42d8-a728-c3d1df7fd9db",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d8ea43-e27f-451d-a231-d5ff476f61b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142f87e3-5f97-4e9d-b5c3-dc29ee0f5db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c85629e-4991-456e-b086-2f56c1f2b08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f6e666-2055-4e67-a391-6a43b5319b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcebb02-3c8e-4b4d-a86e-84424234b7d5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b85eb59-81f6-4267-bfb6-f3d4ec1181fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71af676b-8963-4570-bf04-cdcc63939dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c059ff-0462-41ef-b66d-77d7c5898fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85c26bf8-2237-4d38-b01a-f94f08200e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62999b2e-ae9f-4742-b469-e844bb54d060",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce0ffce-762b-40e1-81ca-c6c31c2f32d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14692c7c-31c6-46c1-8eec-920300a3aa13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39fecd3-c7a5-4665-94c8-2e10aaa781e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aee8a9d-2d72-47e2-9bd7-11565d84ba17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9741dd4-4c63-4628-ab21-bfa0eaf1fab2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9d0ba2-cdfe-4b07-b85e-aca12c48dbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b141356-4133-4be7-a49b-5b4c3332331e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b54fd2-c40b-4c42-ae3c-321a1633508b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad57570-f3d3-4b6e-94ee-39e6a132c8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e3ef2c-6408-4f02-bf8d-d56285d4f252",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65500b1-214d-4908-aa9a-3a38f5629826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ab115b-16af-43b1-847f-5452498a9485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961f7a21-665e-44a1-a2f6-e593e6174fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa137ec-c0de-4fbf-b2eb-8345b8838730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af472dda-c0c1-42b0-8c58-8b4b91907e5c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afc4ff4-6af7-4f4f-b561-9c1aa0f15967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be497ce8-ee4d-405f-af99-e118ea5d063c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b6a91d-0199-4aa1-a993-1bcb8e9437b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de63d07f-5b3d-4c5e-9e32-82a28970bfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001022e9-1f59-4262-acc1-28543fd9a1ed",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650d3446-2380-417c-8bb3-b8c35a3d0840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd1a86d-e9c3-4c01-b6c6-ef5f17f91a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6c2d64-3cc7-412f-b3df-7327593c3dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74e0be7b-093c-4490-bed9-3ec0f5339832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b03c59-6146-4c5b-84ba-461fd33d683d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e19a5d-9202-49a2-8401-09e0526ac581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3698fe7e-885c-49a4-a5d4-e7e713bae95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d65573-5350-4bb1-b62d-6f25c4f525d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "889a0ec1-4e56-45fc-91ab-f5e7d17fe260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7305aef-f892-415b-9d48-a99e9eb438fa",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23eb84cc-222a-4a5d-961f-6c5eb4130862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec32a7b-52e6-4b72-ae34-5cd5b7a5250e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8443a4ea-2279-401b-8d70-03ba795b3a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fef246-9361-4915-a5f2-b7fae5fe57b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035c2bcb-c639-4982-afc8-7977ec15f27c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97dbef2b-987e-41fe-a125-479557fadb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f8e0ff-c72a-4a1d-9cf0-3d7bd5c7c8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c949e2-903c-4f91-9750-1ab4591a0d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc415e05-d305-4e8e-8e75-940e3ca92fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72edff63-ba91-477d-a21d-f7cc68c129e3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7abada6-309c-40f7-8a64-d70f830bbc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06ee720-01c6-41f5-a4d8-c85f3ce61f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96286684-eb8a-4e48-8340-dba4331de9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "975bc246-e047-42a7-9e45-4134979be000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829fd0aa-5760-4ea3-a8b7-92529952d2ad",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843a683b-4fd6-49d4-a0a8-c33d7cea744f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9821bff9-006d-4fbf-8b79-f77c2aea917e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76557dc-6288-42c2-bdb2-d9ad34236199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5935fd-c2da-4662-b9b0-c93be0e8d3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad66c11c-a515-4c33-8527-47836f80a963",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dd98f5-e820-4816-b4cc-2718d0efc002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed64c07-8e76-4864-b31d-5552992a12f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc30b17-7b45-4cfd-b0bc-2bec722e881d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "86e7218f-2454-4273-9433-dcdd9f52aaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64d307b-164d-4bc0-b3f6-0f247ede61ed",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d102c50a-db60-4bae-9ba2-4fee425fc552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7faed980-edc5-4a62-8338-74257ffa7045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0f0390-42bb-4a2a-b063-942d32f419cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9930214a-162d-4ba6-8357-7c304aa4816a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b1bdf5a6-1416-4543-a357-07ded31f69f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1f0ca3d-b9f3-47e4-b460-c5d483e5717f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39394a1-aaba-455e-87e8-e3972375166d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fab7115b-5d64-4519-a0c7-68bfec44740f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef36e20-3cdc-4533-a4f2-1a55446629ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6377c38-e42e-4532-ba28-4a3d45e55a55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "062ad4aa-136d-4057-b5db-a20e43ca607d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ff3db02-6b36-4ae3-bbb1-8580a38630f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce3fa8cb-0d46-44c7-b55d-c44cae0ba32e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b05fc5c-32c5-4f64-a448-ab10c6dbcb2b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4ef06b2-a7f0-48af-a990-8a08d01beeb5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31202637-af2b-43a7-9ea8-839562f13d3a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "212426a7-e3a4-4cbd-8450-c9dd880e983f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "188e804a-913a-43a2-8983-8804ee6f229e"
                }
              }
            ]
          },
          {
            "id": "f5a1aa7a-9663-4cb0-8a0c-ac89cfb586ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "323dd35a-0be5-476b-9193-dc6d6bfc24d6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "eccbf25a-a6bd-41bc-a5aa-37c0a4057fae",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ad0380-b3bd-4e3c-bbd8-66ac38c11501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "362d0a34-7266-426c-8886-7fde9349924c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c69eef-f9c4-4598-9271-902a4b72ab94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b208f83-0fc0-44c3-8f49-9ec502de4d9e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "81e5887f-9e65-460f-ae51-63915e2f57c8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ceed5db2-a11e-464e-9191-f9e725c4b201",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35901e5d-77e1-4066-9b69-c625bd49892f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0be0ed21-2da8-4264-8f73-fb7a20ac0c12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0459d7ab-64e6-47ab-84df-e902afdd9fef"
                    }
                  }
                ]
              },
              {
                "id": "634dcb3a-2a91-43d9-8e22-c8e50bb1156c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6649de65-2e19-46dc-991a-9443d7ee0d75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ec53dda-6aad-4463-9d2f-744f4e5ca905"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0aad567d-507a-454c-b7db-e7541c22b4c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "88c82f33-4d8e-4068-8a79-3277b3759519"
                    }
                  }
                ]
              },
              {
                "id": "9041b0c9-7db5-4399-a2f5-ecac999f3ae1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "951b573f-0908-45e2-a1e6-3f09e3391ce2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3aa8bc2f-539e-41c8-893d-a947ec9265ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34329741-2186-48f9-809f-4e68d1503dcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b768a964-f855-4b43-9d57-0930ca9a7a30"
                    }
                  }
                ]
              },
              {
                "id": "212d5f69-485a-45a8-871b-63fbba37f966",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b151ba15-8068-42e1-8265-59c2fa7646dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6f86c76-ed3a-42e8-ae7e-e603456bb422"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fc432e8-3167-4653-81d2-b4d58701a6f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e20414f7-3afc-4955-940c-7804a05f75eb"
                    }
                  }
                ]
              },
              {
                "id": "ce88e67d-45a9-4538-821f-dbf2df14072a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3974cbcb-5ac9-42b4-a96f-21f8e5a797a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d84397d-ca2f-4864-ab19-8ad4ce9934d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de212547-04d0-477d-9f74-41ce0b9de132",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6a6b41c4-aff0-40f6-94dc-e796b2b86b56"
                    }
                  }
                ]
              },
              {
                "id": "75cb990a-c946-4971-9df2-de2d34426adc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71bab3f2-e5e6-43a6-b7db-36b98c070cca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a78005a5-2815-4cce-acff-f1548ab90ab5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67d29c23-0ba5-45f1-9da2-70c57f7fa0c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6237c85e-e558-4519-8bb2-c4ae1fb9afef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d473a70-7913-4638-a234-4d23f97c816e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eca0d5ad-8346-412c-ae75-915dbaad83c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aec7e83b-c5d2-46c8-8b2c-3f5dfdb0998c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a08a9d4-756d-4210-b08c-b0b5d81935f1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af517f5d-2bfb-4b2c-8ce0-154070910c0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cc0db3c6-fdf9-4475-9b51-4896e556562d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e72c91a2-284d-4f5a-b79e-1f9ea877bc2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7938a15d-eac3-4ade-88bf-a0683e1993d6"
            }
          }
        ]
      },
      {
        "id": "53bca42b-3ff6-4fe4-844b-ff248afdcbb6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fb398e7b-38c4-4c1c-9d19-51e089a05d06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28a74a70-5cae-4104-a4dd-c6b21cc37d76",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1e0d8819-1a5f-4772-9ca3-cb9c51af2754",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd15edca-681d-4a64-a3d9-83b5cc5e62ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0863fae1-f0e4-41d8-9ccd-c86e381788bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d790927-ba38-4fc3-a5ae-a8eccd986678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3f848a-5594-475f-b081-2d02cb872e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ee4424-7fd9-4a00-ba92-f3c79fd3fcf5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25ade62-674d-472e-a0b7-11b630e0ea8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4565a7d5-276a-49b3-a1f2-eaf93aadeaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dcee32-c903-4a3b-9302-982816fdaed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef0ad8c-23c4-4061-a4bb-efe129002b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7826b4a5-298f-457a-847e-0f15eb1d210d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c1884b-f0d0-44f3-956b-a3c827c79ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e7adb4-0c24-4c6c-9ecd-f74502f6ead0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534762eb-db99-471c-903d-6708a41a2723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15732501-e8eb-426c-848c-4e000f35f157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8cc83b-1109-4b51-a2ca-46fff9aef3c7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4db40c2-bb7a-4f33-ba00-f238798a89b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55ccc76-7f80-485e-9a53-267315f60468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b772ed3e-cfcb-4ce1-90a1-96a04bb085f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6820fc-8c0f-49a4-8ee9-e5f40b865c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4ade1c-dbb1-4d13-b1bb-7c59dfa0b1cd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d6aa58-d092-41cf-9f7a-3d3c046ea69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272169e7-88ff-4ba5-bf8c-9f62cd1a6dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75afdba-acd1-4d60-857c-f2397d1b800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9538df0a-87eb-4b03-8680-b14fd99de522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b535688-e0b2-46e0-b4d4-4dc35df82d9f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7844494-90d1-42ad-8a26-362cdbbb59fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d11473d-ed5e-4c83-8533-12be2b81dfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731f6117-3810-43a4-bc68-21ce8c43752e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f12411c5-884e-499f-8b4e-724f44506bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603b370c-0661-4b15-ad76-2cc3ebe044ec",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c404f0-5162-4468-a5c5-167b808c1a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8490fbb6-eb90-48bf-b73f-6fe55c6a3079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4f5a0d-6bcb-459d-b5fd-c3ec1618f85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5135eb1f-d928-43f5-ac29-58ded183ea1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500ea2fb-de17-4d4a-bf88-fadeab77866b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4eacb1e-af23-43c2-ac60-0c37271c7a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ddd01b-9b91-4263-8018-754bdde5bb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1b02e0-62a2-440c-a9ff-a57bfe8c4d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2ca9b3-e443-42d6-a4eb-7c5e54d6b36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beaaae14-5b08-4c6f-9d64-018173ee0f58",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1b78b2-c7a0-498f-b9ed-0e05ad649bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265b85ca-3e74-4ec0-a4e0-cf07b0ebbeb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d417c3-2284-4db1-b227-eb930f4fef30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "785d6731-a25e-4391-aee4-43c85c039d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf191f37-0260-48d7-9937-e3599c010626",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4c2692-0e06-4e3f-b661-5a15c3f18c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644f5f4a-0899-4e63-9e31-721f45edce21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7913585e-c018-4bdf-93b3-dd1a13bc647a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4e830a-b9d1-4986-a421-d09cab4040fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b1fc6a-745a-48da-af3f-29fd13649830",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b879556-a0e1-47e7-acb1-6365b721019b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e288a003-010d-4af0-b804-31aecae96b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ec0370-e167-4306-9dcc-61c0b899e3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b6aecc91-94b2-46ff-ba3b-d20ca0fb883e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699b12b3-5280-42b3-9585-d403a80da626",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73515783-6394-4ae1-8b0a-7e128b716266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442b0103-6c5a-4360-8df1-c6d24ea63c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165a5185-e2c8-40b4-ab65-8a15d6ffe511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff89d020-9653-40aa-bf31-1b792ed44208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5a72e0-8cbf-47af-b65e-5e96159244e7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb0bf6b-14c1-4f0c-b5ba-5b76d898af9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a23f13d-358f-4a9c-98ae-5db035ec5880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15cd0bf-5a3b-40be-ac25-5db740faec7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b0cb91-bc32-4eb8-a841-c879b69797ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f216e56b-0d25-4c13-9926-b7aab21bb40f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfe68bb-0475-4ced-8828-7d1a11a03b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4f287f-e24a-436f-ae1a-95a3545d4413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9860426-ff02-4bf9-b3a5-e3e4b5732f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba29807-96e3-4a63-8c2a-d17c4d65faea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e250f76c-bbda-4fae-ba99-5b06feab76fa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664f7727-f4d9-4c2c-b9ba-82093882e9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9320c5c-c8c2-4790-855f-dddbf327f030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7919019-7ad9-4db9-af90-18b75d3b4950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87f2894-ca04-4ba1-96fb-4ed2d83a1417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e479dd-8031-4cba-aada-b2f3b2af1834",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056764e2-38dd-473a-a70a-234cb4c2a4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d91f930-f8ec-4da3-b12b-192c42abaa09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cec8f9-86c2-42d7-b149-4a417a89e16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8cdeea8-8f7f-476c-a8b9-840e94eb725b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cc49a3-5b27-46ce-8517-9d563d7fa5ff",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a697257-9f6d-42bb-9697-76e184ea429e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6993f0c9-3db6-4b91-b756-f38cc8778e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac78a6e7-bfd6-472d-9c85-f33a0b6316ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb51910-e6f7-419a-96db-1a070046a7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1dc306-bd3c-4e9d-ac93-a8a637238c7f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7979289-3750-4432-a034-302886efcdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3859eb59-9603-4b17-96a3-1f8d530e60ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00644db-26c5-4f6a-b8f5-aa790476ece4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "204328c4-8161-4676-93c6-95274da76d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0bcf02-5b34-4c79-86b0-9b27a4a1c72e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f76937-44af-4c6b-a925-46e952295b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b21e3a7-411a-42d8-b7bf-571c9c4f9d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6323d422-896e-44ec-975c-4c7f88884853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3a4223-a70a-41dd-a283-fe34c31af920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b9ec7c-0eeb-4c61-b7c3-51da2600b0cc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53cd880-e31b-4a61-b244-3f778c67ba71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa7c70a-ecc0-484a-8ddf-ebce206c9f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b6a768-c493-4a04-b74a-24573c8e590f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac36ebd-7f01-4883-a8ca-af52f8d6c818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5fb308-2d44-4cf0-8254-c3a2d1d21de5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504cc8e6-4f0b-4f53-954d-1b33861585bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a615a0c-d3fe-4c87-92fe-ce089b8f4706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eca7b22-2be0-48d9-8bc0-7cc490d7eafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "108ac811-4e7c-4ecf-8851-3b17aa5b2fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c26e09-1f65-4460-a9fb-fc267e09be0a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5d1701-f173-4f7d-8792-9199c092b09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2acaef1-5b3e-409f-a6f4-b6e80415fd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb22e67-23c5-4309-a930-23c79cdb4fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73430d43-3531-41ec-ba2b-0d7ef0967554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d1bbb4-cd86-483c-acd3-bbbc285006a8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779fc961-226c-449b-bfdd-e9a1877b862f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acddb08b-5279-4eba-b33f-50d531910637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dc9837-be57-47b0-851e-c60fb40a3c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aadcc63-ad1e-458c-b8c1-7eac253bfdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ab086a-cf4f-4d4c-b0ba-4160b74b5ebc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e104c2-5700-4c2d-86bc-135794653095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c093ab-6b0e-4791-ad1f-07433e13e387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c406bdcd-eebe-417d-b6ec-d9c0772c775b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c68d8a4-6746-4161-855c-e5540fc537e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f31a4ec-8c2c-44ca-8ca3-7ca23280a26d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799eaada-3bc1-4581-9b28-d60110604b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38156aac-1a58-434d-be41-b66b9db6f43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1abfee4-bb58-4826-b509-cc97127397b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d44f0d-660b-4e69-ad04-9db3c4913354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d750882-e985-4139-82e3-e82008f4a71d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fae3b6-15c3-48ed-9955-7660502888f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42752221-cc55-4392-b332-18be70da51f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23b71f2-2425-4319-995a-3a3f85beb29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d0b2af-85d8-4dbd-a460-c98295d829ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1be243f-a64e-43bc-bb06-b90cf05e0c81",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807dd5f9-3bc2-449c-9e30-113cd25912df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58012965-4cb2-4f07-bf6b-7689f6037b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e90fc9-e078-4c47-8033-880028fbea0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abea35d3-7f3c-4af1-b8ae-a75fffe6c122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f18cbc3-3311-406b-941c-929c6c2bd9d7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80389990-a00f-4a43-86a0-56a8fe5e80e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da982f18-8724-431d-bc62-c0e0f6155af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ca7953-2420-4486-9f76-999d4bdac457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a76874c1-92cd-41b3-8ca9-78a257aa65bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d371bbc1-8553-4da0-99c8-ff4b2966517d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c0ed52-854f-4bca-8752-b5914ef3ac3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ea23de-726b-4af4-b328-bb358eaf13ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d3834e-4841-4f44-a419-da2ba12d79f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dea5c29-e8c3-4274-a087-7c74fcbde0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a2aee3-5933-4884-8708-60b482bd5983",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eddb60-20b7-495d-a4cd-1f2756191c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa4750a-41d5-4d3d-935b-3a8dec62bfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54a39f3-fe81-4d44-99a7-458d27cdaff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74a3ab1f-8cf8-4117-80a0-fc8c0a9adb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cad1048-b63f-4954-b95d-7d4e3db002b9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63c0c0b-5c77-4fb0-b48b-f615a020de18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f217f0c-1c69-4db1-b8c9-9b08ee50dd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89375b6c-af78-4345-aaba-91f54a97da40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf53851-3829-4f6c-9949-476a37f16bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccc2b27-b9ac-4d99-a4e6-6f6c257444f3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aac2016-c205-4a16-8bb2-fa8ef60df6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592d15ab-8057-45e4-b2f9-50d41b023d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9077e48-dff8-4a4f-af39-8b7b7b9d32de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88b7fee9-b8b8-4ccd-b3ae-5799295ce023"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d8726ca-8ff8-4f2b-ab45-fd8ff73c0082",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f58ffdf-a6aa-4905-a521-e97f00837ec5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746d70c3-7953-45c0-a556-21eab4b9bfd8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "026dbfa5-e902-4166-b84b-0161c7fe6278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35593163-ebeb-4550-bd83-eac991244448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42427d1a-4da4-4dd4-99eb-9a273b6f40a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bf04c0b-3725-4cc2-a0d7-8bee9e7e9fe5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c354dc0-da75-4078-9d74-566b2238e301"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9a26a0a-95f5-4606-87e2-e978fc11af34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faa85c1b-274c-45dd-866c-e9ee4e19683d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aff38fcd-c421-4192-95a3-a9ee38be0e87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7ce5ad3d-bf52-4008-a354-d70f5312eb43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18cdd820-f014-4125-932e-2ce2e1584e2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52fae9a4-daf9-42bc-9d5e-196b5670301d"
            }
          }
        ]
      },
      {
        "id": "79d2f22c-cba6-462e-9e35-f8b1b6df8925",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "52964840-30ea-46e5-976f-0b532891a75d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19fb25f0-814e-42be-a1e2-52f352b3e464",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f18c3b9e-c30e-42a3-9942-3fbab781c354",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b22c15d-ba2d-4556-99a5-3d163a4fb329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94184793-c092-4f72-a022-fff8c0ef266f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a6e321-4c53-4545-afa0-c663b51ee765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec050612-ef64-4292-b614-2f3789910c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb92c1c9-cb30-4286-917a-7e3553cb091b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a58d9c-02ff-4ddc-b273-1a6097e23cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7204e15e-381f-4624-8cc1-9be6b4d088a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8324619e-1e5e-4644-87f2-f9e792d797ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff476de-9761-4115-bb03-21ec22a52e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2783a06e-9e2d-4a26-8d47-10c8b2f8e7f0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e104ce-977e-4eca-8af3-065b6c0bcdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a823db1a-c8a1-4851-b84d-15b76dcf74c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ae49b1-4c29-417a-9b78-9e159a93db39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "100e1646-f7ae-4355-83e3-95a61e47e326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e7bfc6-76df-425a-bf50-61e1e6d4c8c6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2b7b29-528d-4307-89f0-5a405141d423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d274a479-7c28-44bb-ae15-3d2c0cca60d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c26f8c-38e8-4c02-9350-a7dfe26193b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a07b260-1377-4a80-97e0-28bef1586df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ee56f0-0025-4df9-800d-2fd8f23d2100",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5666ed-3ce0-41a5-84a3-7276b6039b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f580fe4-be90-433b-9ccd-d13c96af8015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cb5c07-a23a-4456-a138-34926c761d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa73e5c-a883-48e7-8439-9d3ed9706653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac37148-9364-4b35-99dc-23101fcff8ca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb80bf02-d733-41ba-ab48-bc4f48a5241e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a67cf6-d857-4648-942f-18ff2931b665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4742c8b-f74d-4056-8c68-57378592c4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36719187-d6c6-4ee1-9dbd-8284f2e8a6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2475fa3d-1c5d-4d2e-a4de-7cd19b913aa6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec551c9-440d-4fa2-a205-41a728eaca75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5ad74b-cc14-4000-8980-e9190b9fa89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9b0f47-c50c-42e5-9f20-bfbef9660bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a02c598e-a6a5-4e4c-8c24-9bf2eb00d276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bcfdc5-769d-4fdd-8ea4-25d6ab89cef8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f16ca1-0e66-4ca2-86d3-47616a09f82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb52e1fd-50bc-499d-b7e9-131e5e1b290c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3b329b-049b-43b2-a904-8b01f74fa9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f81df5bc-e01a-4c30-a464-bac79392b4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191bad03-6dbf-4919-9b08-5e050f899716",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08842019-79d6-4c56-8909-0ae5f3992d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a93218-85a6-4b0a-94c8-69e15bf5a412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5e0e75-1863-4247-acf7-90c93e56b654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93991c94-1bc6-427c-a6ac-9c2daa683645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3332e742-3b0b-4433-b724-31f827de5693",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e1ef12-cb78-43a6-9c34-d2d463401a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010e7cbd-d4fc-49fe-bb33-05ccc766e021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e11f7a3-0019-4316-bdcc-fdaff182b50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3df46f8a-4d9d-4147-8016-9738911f4b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d071cd1-9f4c-416d-92aa-c031c681d0fb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397bca8b-7280-4418-ada0-6d64b8648278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5528fa13-a91a-4daa-ae6e-ec0662b2e913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf36b89c-e85f-4d5e-a0ca-d3ba7a222edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c53f44-5b04-40e0-a55a-504a62c2be8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfae17dd-b494-4790-8305-ce8783a21dc8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a96710-6a8a-4dba-b52f-09b1882e587c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07a2c65-55b8-44ea-a09a-dc29a2dec8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bb831a-27e4-4da4-a9d8-ed8317e74597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b302fe7-d28a-4753-ae19-d7c48f24b33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b253d7e8-7025-4201-803d-a8bc78600c46",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bae6dc4-9958-4d22-8775-668210c21069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67646602-3965-42da-b882-1e3e7940112c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7307458b-3803-4684-813e-d2a70a171f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7aa3e12-f094-4390-9353-015ccb122f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89190556-993d-4a6c-b025-35f3bb0e9ee2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04508ea-93fe-4b7a-9b2c-f45398062d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e0ff91-e79a-4dc7-9222-93667b4d00fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13c1201-56b6-4076-b345-03a415a51acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f129ca62-a486-4eaa-842e-8a904905bb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea65952-5a2d-4714-b0f4-57308a17e889",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f957375-21c8-4022-9887-e36d4fd6a231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c852fde7-4a98-4b20-aafd-8d5e23595d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e85196-0fa4-4abb-84fb-bee88cc497ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "827ba564-8a8f-45bd-b2f9-da2ee89fb892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def9cc66-c591-4f12-8645-ba1beb44bdd2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9890fd03-45e6-474f-8b0a-d5ec2b11f73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d74cbc8-0bd9-47e0-ac94-d0003176379d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db372430-7519-4caa-ade7-04eaa3db8950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7baacc38-37ba-463e-a55c-2f19a68f2a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60139ff9-83af-43db-9834-74c18964c8eb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbe311d-ef21-4b1d-ac42-0da1f4069de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ed2562-06e8-4d6f-8790-a2590a58e6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dcf317-9e64-47e6-9513-bca7c5be94fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1cb141-5537-41e0-b6c9-338f78897b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e165759-f2d7-4fb9-b4f0-2f20c8a49bc5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94be170-7473-44b4-98cd-8939373d6e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915ec361-e1b5-46e9-ba6f-3b563913ae25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ff81c9-2277-4ba6-8cd4-39457fb4b44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac102785-d284-4875-bbbe-4a9ca02a4aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b0ffba-a30a-40d5-bffa-c30a24823046",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6102351e-277f-402d-8213-338c01598154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564e4524-fee4-4061-9cca-b222a5dd6f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7645354-a9dd-4a89-9fa7-cc0df42fc9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f031efb-a477-43e5-a3c9-bfc6e7077661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1781ed40-6860-4557-8373-65419f9fdc8c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00657ba6-d0fe-4f70-9dad-26580f5d936b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145c4b64-fa68-42ec-a8cf-5d1e6d04af65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84039357-c04a-48be-a7eb-6870d833fffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28f23271-50eb-477f-a393-4e01bff0c198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64754350-4723-4fb6-a8a3-8456b6ade2f1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e607e3e1-b06d-4edc-b95a-059fb3ee1072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99ceb2e-44da-4068-b86e-6d5f2f965143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b81b8f3-ad0b-40d8-b916-dc72316c8474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b015f7f-d516-41e5-8cd1-857e09da41c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4791c935-6685-4cb8-ab64-d4f6da492ac4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a4f062-84f5-4310-93d1-3ed2bdf01eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b471b75-f96b-4ca7-98b4-eaf6b91d7436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e673f82-8fae-4134-a1de-06db091a329b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ab5778-3091-49ac-a6b4-5b6057312dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cefb4e-bf50-4182-976e-4bdffcf06ad1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b0aacc-1eb6-47d6-b905-b8bad2201536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7616b6-a9b8-44d4-a4c8-8a1aafe7404c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840c8639-e6f7-42f1-8e1a-82b2732c3752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b65bb90-c4d9-4196-9a9f-81aeb5ec7226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6edb624-2b39-464a-b2f6-6c7dc8d8dae0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805f40ae-e2f5-4fc7-a3f9-1b179b6e3ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0285ff-3fb4-4415-9968-4d3b70897c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25558de-fccb-4180-832e-8334e74caa1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eba63334-3c5b-42ca-adea-34b0b2541b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2019ba-53d9-48a2-b404-8f5ed4afac22",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048d25b3-c23f-4bfd-9eb0-359101fe0a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190e325f-60ee-4f71-b2a3-5b9b5b177b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa20a19d-1ca3-47de-b846-fd580e1ea282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "801e4a4b-b06d-47f9-a135-599b75105b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0320609-a1bc-4079-a045-7bd8e4df8564",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7deb94-c1ea-4813-8297-af876f9d9162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15337bc7-ad96-4628-bb6d-6ddd3165b5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a881670-6dbe-4bbc-b771-f201c6b4c6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9f7942-ac80-4f2a-a593-c2231a3cb026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396a53f7-8ddf-4464-ae72-409d08a8cb75",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ade88f-531c-4f0f-815d-e383c923c2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9484c35f-cb25-4b37-be35-af595f6251df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d80061e-0716-4987-9267-40172b5a6df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53ade867-6998-4f2a-a22c-373ec975db14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f345bf4a-08c5-4e00-b93d-cb183d49f172",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9132131-f810-464a-9129-913f92c50797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be65317-8662-4582-ac7d-e74ed5991a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5df6f8-36c8-481e-a58b-3ff09b6e4f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8d2a0f-724c-4238-af73-e64f5f56dce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973ac0eb-5f3d-421a-9bf5-f387b2af7425",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03918501-cfb9-4d5f-a027-d86e24a7b34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4f78a6-257b-4c04-b804-78082e7e9430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4194b448-e270-4a9f-8fb6-b7d43e2f842a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63798bd-e2c2-4a25-8311-5781098101aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433bfcb4-be2f-4644-b933-d796e6623a1d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc90feaf-d0b9-48ea-b422-bc00035f7e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c611130-5ecb-4097-823b-84fc0cee8888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f856778-9414-4a69-9eb9-07528a078450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cf092b-b25e-4bb9-8b9a-e561baa33731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f291b406-372d-487e-8561-b46198e444f4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6c941d-146d-4325-9732-d3b1e70f27ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f480a906-9d16-47d2-be06-6b65cfe3551f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0163d4-7bea-47ba-9482-c0dda6dcd31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd705f63-b110-4302-82b6-3a9954c3a2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6956acfa-670d-42b4-bd9a-6e6c8aab69a6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8de48d5-f5e9-4953-8d94-aa2ba975b557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3ad032-42b7-4d3e-a640-8aa7e3a55ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91f0614-cac9-4f68-b369-96f7ffd76e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f515ceb2-2a21-4439-84dd-6c1a5ff9676f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4a7d96-5585-419a-8639-7146b8038a95",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c974cf01-a39f-478b-a5c8-3857c1fb6fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38137ed7-ebbf-4352-aac8-03ccaf4194a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f84dd66-bbba-401f-bd43-2b9d6bcc041b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abf52f07-040f-4c03-b7a4-c897a42014d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32c786a-ca83-439d-9910-1c95e02847fe",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3f0a78-b04e-417b-aa26-95a72a99fad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5f4f40-88b5-4b3c-bdd0-c0519a68a3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ec4931-a395-4e3b-8c7f-9c659fdf17ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28916a10-7e87-40d7-8e52-bd4a1ba2a920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e9ab11-317a-420d-b71f-d3ba52a95ed5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004748a6-7f61-4bfd-a2e9-f061671335cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839e7cbb-5a99-4155-b986-1bba9c3606e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd21954-4cfa-4007-85ad-0d4b3473ae5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "087856e2-b3db-4ede-b14b-22ca68d39d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ba55c3-0ccb-4589-8475-48d391aedfb6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18c9e18-a5c6-4ee4-9e77-c34142d9b760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8300c23-a6c9-47d3-8334-626ba6ca3498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54502b5-5e44-4be2-9c63-167f8a244cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc25eb3-7859-44c5-8efe-1eb3588d41b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7ee5c6-35a2-46f8-bf5b-375ef2aac3be",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306dad69-48e1-48ed-83a3-876cb8b180a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7309ac1f-0c39-4d5b-badf-e38745a2f6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ffb68d-5899-4833-8101-db3153e9f5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16619374-27db-4018-806d-27b25095ed74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "696eecd2-c0c8-4eb0-92ef-92f3d7b9ca08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f32d16e0-4659-4cd5-a6b1-084b780a52be",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6043504-8ec6-4af9-bf1e-a7a265f9c38b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "81fc5c08-3b7a-4266-bfc1-cd371f2783ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84db7e15-9b7b-4256-b185-743bfbeb26fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caf64db2-2bf8-4d16-8a03-ba666780c696"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39c93866-7a45-47a2-9478-b247b0bbb89b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac3e4898-ee7a-4c5c-92ff-14187fe589b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "755540a6-4c7a-4a96-ac88-9c30f10ff13d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dd80d68-3b0f-4393-aca3-4f8723cb8b9c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9f9309b-ccd9-48dc-81a1-59eac0b8a7e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8dc10cd3-79e9-4233-be7f-bb1fdfd5af21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce33b305-1eaa-40c1-9808-32beaee2cee3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77299227-0e1e-4311-b410-aac3348a4d14"
            }
          }
        ]
      },
      {
        "id": "847279c3-daff-474b-988b-feb20d2def42",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9d99a0ab-e566-449a-a4ae-530fabb2d6dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1aff6057-e81a-45f0-9060-f90a63649eb0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e2451be-2c34-4bc4-912a-ccdc18984740",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba865926-73d6-46ac-a9b8-2e69608b6589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b61408f-5117-4f50-bd89-2478e6e78e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ad2c1b-c463-42b5-aa10-1956ca63bf9e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faf1b8d-17fd-4a1b-8068-6f5883b10e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24c119a-8598-42fd-af16-b8a693545a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f5b2a9-5fec-4ad0-8c01-946155222e9c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d1addf-6e75-4ed1-a0ba-84d47065010a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7978e8-3549-4508-96e9-332d4588dd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a0e0e1-218d-419e-b333-65914d07d3bf",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4575b7f-bdad-4611-b12d-02e9d31e7331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486449c6-2d15-4ec5-9934-3bb76924d3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c130cbf-1c63-4779-82ee-3c6e15056679",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e136b5ab-c26b-4294-b422-c18f45ce6849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749cf0c3-6170-4d6b-b3cd-dfb713cdfafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43045ae-139a-492c-8db9-4d7c289891b5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cbb70d-610b-47ef-9ae2-a1fbec6b9fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284df628-f526-49e3-8579-3e6f56281085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afab1eef-a896-4977-807b-1cc526999772",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fda14ca-d4cb-4c95-a563-43945ddd1c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356f275a-45cd-4d4d-9f53-42acefe58ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bf84bb-09f0-4075-98dd-a970d2120ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b68dbd-a0c1-4a7e-830a-58dcd8eb0c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9565d65-82ab-4410-9d4d-59ec618cb336",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f820ed92-c36f-493e-8f1d-cf2d540eba4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7c4a424-5526-43f0-9b43-f8447c00ed36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f173a7-22d6-422e-9e67-2c52afef232b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11aac3f-0e07-4342-b2b7-f62ed1656b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777648f3-1a55-4d07-8dcc-b8e405831dce",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f1272e-05c0-4e38-acaa-25dce76e2757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63fbc734-4cd0-43c0-9702-c5d654afd985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0d34d3-3910-4f6e-9e5c-3563543eb7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b165d1eb-d11b-48f7-8419-b7cc35f9b1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8a5c8f-e520-4065-bd1e-2cdb433a6611",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf8dc54-3c8a-465a-adfa-334368361a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c48d9d9-8a85-44e4-9738-98ecd8d3d6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81f9677-6ae0-4d8c-b44e-c3167fccf199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0402745-0e82-4f88-9966-e04b390760d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f1ff81-a922-4f5b-bf16-67ab0ac2af2d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5694671-9028-4583-8fbd-84fa288d1615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49df212a-25a5-4cfe-ad46-cc17ca56deac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a29ece1-3279-4d60-a399-99e199760afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33839354-9352-460e-aa15-b62c16be3876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c19277a-5253-4012-b3f6-9179c56f9fb9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa415282-8710-40f4-bbb6-391ef35b7c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d68d3c-ed3f-4ce0-aa6d-06749990e725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b67ba2-cd37-4df7-8800-ce76e3179111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af5e583-7102-4dae-abac-530ec07d4181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3621c3-1003-470a-8e50-43cf5054598c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41508db-48bc-4d67-aa08-0b5c2308f040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90cddd76-976b-41b7-911f-003f811eefda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b1f163-a7b7-4444-b610-55ddf37b1f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef17d73-1a34-4776-bbfd-d9b7c3d7da25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c070aa6c-1be1-45ea-905b-1d512c0ec796",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a0871d-7e11-4407-a3a3-5a2c7f72949b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef18306c-5883-493a-ba13-24e9740e3ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc625590-2cda-44bc-8578-a928040623ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422d9a30-61df-4b17-878a-0899b9ca7f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7170d3-5369-48b4-8f83-3a9fceffacfa",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1d34a4-4cd1-4647-8bb4-f609af65a3b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ffb237e-5e6c-421e-b55e-5c4c0ac1d3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dba8eaa-9475-4841-be2a-6c92f5cb46c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89908e48-d8fb-41cd-80dd-42eed6a54afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4e111c-c58d-4d76-a404-74449c545879",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef3d4ee-63ee-45ab-ac4c-f9e9846474c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "776fc8d6-b950-4df0-8b39-681d62938294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1556a789-543f-49d1-b0a7-e43a502236f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb551133-74f8-4111-bf30-dd9c7f87a040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d68adf-3175-409e-a8d7-c323b0ded93c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96f9481-7af2-4381-b94d-94fc747f2a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bf2483-7e0f-4516-a9a6-175d628bbbc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6bf007-0708-462d-88aa-d5eddd482017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7162ba24-d41f-4ef4-a9fd-1abf7bc35bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fbe605-d58f-479b-9f47-3e6210b342a7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13700760-055c-4dce-a637-20853683d0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690d6802-ed01-4fee-ac30-a52919417909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138e8090-9272-4e98-b954-09e4599815ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f98e064-826f-4276-b060-383f6478170a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8df7c7-3494-4839-98f1-d423651263e2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b747068d-b426-4bb8-885a-02e77cf57939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd0f57e-1eb9-489d-adcd-649e20399a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450b6e49-ae54-448a-8b23-3fd9ab49986b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b242b6c-50bb-450d-a622-3650a626bdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa64f6b1-f55f-4429-9b32-97cfd3bcf7fc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b498bd65-bd1a-4976-98a6-06346ed6fe2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5768d4b2-ae0f-4016-8610-6022eb5fb57b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f04596-a61e-41e3-9a53-f43d30d49e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f0b8e2-f857-409e-ad1d-7ddb33c895ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee2ff32-37a8-499d-9ff3-8b65a797f30b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f127680-8f22-49fa-8881-2e47eae5054e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3dd105-8db6-43a6-bce1-cc643ff94931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a295b1d-e1cc-4f4f-a250-cb9acd4f0377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7a213c-92e3-4d53-9c62-73f5126ccc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd934d4-b27c-4946-bd9a-0222c61615b6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d8808b-40e2-4b0c-a9da-c77409df5a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687ceb59-72d1-4b16-a454-69ddb915a7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51e8400-828e-450e-acef-7fe50db28201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03828e5-24ff-4c66-950a-cc6b0b505e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6a113b-cf8a-405e-9b13-943746d3be78",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13315b67-68a6-4da6-9d79-3bef35df48b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3807819a-6690-4ae4-8c90-89b309ec6251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12812cc5-5237-4b95-824d-2152492152f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27318b00-66cc-460e-88df-5213822e5bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd06dff-54f3-4cb0-94b1-52b3093b918e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8389810a-e0f5-4456-b674-a55b124ab81e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f4971c-5939-4c8f-a3aa-17d3adeec2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7e0c1c-ca19-48a7-a567-12387ef1425d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14563fdf-aec4-4660-9807-1514c3d96a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585da9e2-9244-4ddd-9e72-f9f5856442b4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac0e513-7a92-4878-bdb4-fe020dde3320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377e30e1-1705-4efd-86bb-088e5e8739bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00081313-5b81-4ebf-bafe-ba2d04131e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f69716-686e-4442-9111-2756c1491a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed3dcbb-6aca-4969-851b-c681394d270a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0314f290-454b-49a6-8e98-b79217034f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30b3a117-56ba-4de8-aa05-d568f298fb32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be4825c-cf16-4a8b-8944-17b21679700c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299c8060-95bc-4b55-8373-b2afc6552b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfbbbb1-8f98-4584-a2a7-c165e3a8825e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00462724-30f5-40c0-9cde-66a65d4c5395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e229a759-0421-46ef-87ec-8670dd5bf915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9135377c-a7ee-4484-ae70-063201c2c942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137a9a01-0520-4307-af00-40972c6bd890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1329082-75b6-4bbf-b03b-65c999a564ff",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4b2573-d831-4f96-933d-c1f52192e5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fadf7de-2d9f-418c-aa79-fc7e24de10a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52876749-dbcf-4450-9c00-55b16b3dd6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f8e30f-c6b8-4a18-a964-be30c3524072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2de45e-575b-4833-a7fd-95e76d273dd9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de34af4-9ca4-40ad-a1f4-001777d1c2e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00195936-f278-42d7-9a24-dd00277fab74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a4e78f-b6bb-4240-b557-d7b156599551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa6711d-8c39-4872-839a-8c1d7379d304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9594db-4925-4308-837b-3b3e5dac4b12",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12db3212-d75a-4570-bdf6-674390c6d3c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ef3a43d-46fb-40dc-9049-26b50e12d026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef32dd5-8e2e-46e8-850e-99091d74ba51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20e99fb-5fb8-44ca-b77a-a35a87e02327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da1f6b4-afd4-4779-a95f-404056e77af4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4098687-5ac1-4fac-9e0c-2e78788142c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7d09237-a852-46bf-979a-dd1a6e03b071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91f45f6-b863-417c-9136-2b72adeeb7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f4ff1e-8477-4de9-8ba1-2aae388da1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd51b34-5e7c-47fc-b259-0b969c4efe29",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3189a33-288f-49ee-bce6-0624746d17da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a196f013-bde3-4849-ae7c-608ec6fea445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b319c7-2f36-4be7-b805-d975b4a9346f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99520f0-6c0a-4790-bdd8-41daa4f6bf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0a8e76-1533-4cbe-94ee-a198686b2853",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dd6b29-73d7-4691-9e3b-a299ec3e9f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93aedbdf-c298-433b-9d35-3a7deddf0b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f51601-2d4b-4240-a95c-2d223982e9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568c61ae-1f93-45bf-a6b8-822e6e2d9fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb14a97e-4ba1-41c6-b084-c7d6c4c5118b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379ad118-dec2-45c5-88bb-6914cff5cc17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2832e43c-c877-43b5-a839-6265ceda7fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4505002a-f061-48be-a9be-bada968b8176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d2c90c-d1fe-422f-8f4a-b33b05def736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6e0b71-a8dd-42c1-8ad8-002f7631e3c8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56eea6d8-6d19-435f-930e-316a83b0eb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d80077-654c-49e2-b72f-5b91dd95fd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25190628-30f8-4ccb-bb1d-dedfc16ab67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424c8a30-b7f1-476b-9fa8-d57c0b33f5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57b34af-b216-4135-a052-dfb84658178a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c1aee2-4f3e-439f-8840-c3cc2fe29139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04638eb1-760a-4fbc-8916-419bc73cf0ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92489261-4aa9-4532-99f4-e11b4499ea18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2866565b-8f2e-40ef-948a-83f6d7510b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92f1593-ec8d-4b91-8427-08418133540c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4c759d-1f41-4c0b-91dd-d22a693d155f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ebf2b6-764a-4dc9-b3a8-cfb4ee9f6ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1340bc69-646d-4bea-a2e5-537df626fbc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa134ce-c039-4eda-88bf-b11257df7116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d71cc0e-2ae6-427d-b606-8bab6bbf6b1e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2f9d77-8a89-4a90-baed-97cba719807a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19d5f79-55bc-444f-9b84-fb2f82c1d223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "538de27f-e939-4191-955d-19086e4c44cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99269ccd-772f-4b74-a339-79dfcbebec17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5172786d-cab4-4047-b68e-abc0f3ee4dcf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cb603a-4dd8-4bac-9992-65c2ff8c1a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2047147-0363-4db6-aceb-b0e0df546a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f97ccf-26c8-4c43-bf97-fcb085aa546b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba224af-6fdb-4345-9700-1ca5e2e56cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b60dbd7-989d-410d-beaf-ca4123a03947",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357e446f-4fc1-4127-a9c8-869ddc522d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3699162-d6fc-44b8-ba42-0d15e07bb8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bd33a5-e6d6-475e-8205-cdd209a280bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d18449-2f0a-446d-9a89-f8d2948d8cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ec9a12-d574-4068-a639-7642d2e4d360",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e866285-e285-4eb7-b6d7-26307d5c9529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe255b6-8ce1-42d1-be7c-b20020fd1a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "748db1cb-8d23-4f6d-90c4-7b29b5ab0515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3b1158-81f8-489b-a1d6-855a414e08b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ed2566-aba1-452f-a633-b450f76d705a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50057b3f-2f36-47ac-8348-4a031c04d333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd256f5f-d0b1-45c1-9b97-cb91e15451cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463afa66-fab7-4a07-8835-8834223396d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce5ce6b-ee15-4495-a8ab-d62e8bed2372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dfed45-471e-453d-9c76-7e79bc5ce6ed",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98758324-9509-4f21-a63a-23a5ffea849b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48495c64-8db4-49c5-a5b8-69de987dcf5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71fbf7f-7d33-4c63-bf49-6f77c37beb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adab979d-c019-49dc-9a1b-b3ef076fdd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680c231c-8390-40ac-b20f-61822e2d5559",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cf7899-3a10-4cf0-bc58-ab0deb8ad54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ab6ae6-5035-4a2c-aa8d-f0d68fee6eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051fa8f7-52eb-484f-9060-b95153bb9ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4edee00-b274-4b1d-9dd6-afd9dc2a9110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd9fc94-165d-4054-bf96-09a7996e1bb8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff43919a-e9d5-4664-a57f-4446f2a50090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72df46b-bbf6-45ea-877c-6f6bfaec32ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4763ea57-d64e-4e2f-b86c-9641d51ccb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56bcd570-5e13-43de-9000-1070db4729b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b34ae55-2b64-411d-8f57-7e6a01b611e3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402fb190-c793-47bd-aec1-88198e56bd25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c81397-4a95-489b-9707-2f8df4fc564f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4d70aa-75cc-4b85-9654-3de859803c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0939b7-2bea-4214-b8e1-5841eb97e7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1aa542-7636-4060-bf14-f47e8dec9526",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8c9791-0c88-4050-bd7f-d2edd2850b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf009ae-dff8-4bc8-9109-7c62938530ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6349861e-f3e6-4001-a9c6-50f61f0a36f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cfd993-d54f-4e5f-9ab2-56c311dda90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5263db-4b8f-43aa-b34b-df602b369160",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf7119e-9cbf-445d-b1d3-0f34f647ce67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad6c55f-8e09-4a72-827f-6194e0b4f3d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230c4ce9-0182-4178-8571-9d7f8ec28964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed73cd81-8ffc-4a8e-a58c-1ceea293ab9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46c740d-8a0a-4305-886b-ed4ffc19a013",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee734acc-4c49-46ae-9c65-ec6ba3f5af4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdabea1d-7cac-484a-9c02-a701e2591e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9586cf-4909-481a-bc70-ca420ad41094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2aaa29d-8ae8-4796-824e-1d7834bfe30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05544e4f-1801-4aba-bbde-a5c091c29e19",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8276804-7904-412f-b2a1-f01a2fd33d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ad06d5-2e80-4241-83f1-ef4b34f9be34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1a30f6-86fb-4f04-936a-32d6d3a0cc48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e58ccf-e3f8-4568-9c26-5ecebf9de67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49718ccc-55e3-415e-9fd5-f914bbd19094",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d997eb-f750-4cfb-b593-0b7caac27b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768ec04c-482d-4abf-9279-953a5bd1b6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc91cf3-60ae-4bdb-b45e-a0c2fc1ecc1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3600b2d8-154f-44a3-9f4b-2ead1e32fe24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0e85d3-2cb9-4f5a-b9dc-c688a79cee51",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da5de31-4778-46b3-a0a3-40c52da9cdbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f8d40a-6e4f-4307-b2d9-555558c85494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5774a6a-b6a0-4d51-8bad-c9e20312d5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2bfdd0-a416-4920-916e-1e500c11dd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025a7aa8-9c06-4443-acbd-b8c9eecb4eeb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b133ff0-2dd9-4e29-b3f7-649ac6c49c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19766828-fcf0-4a99-a5ca-c201078753ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d803ef-7fd8-41f4-a3db-489083932c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fbe7f9-3a9c-4e2e-a9b2-dae9a9bc0fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e60ffb-3711-43da-bc2d-439fdb076e3e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8c083c-a8e9-43bb-ba8c-cf2617c293b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587255fd-3463-4413-a653-2cc7b8bc86cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c12f3fd-62b6-4100-9bc2-35581755ef0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da89748d-18a1-4db3-9b63-75a19c303687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf56a08-87ec-4527-b004-765632958042",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c9d0ca-0550-4748-aa21-f7883260d0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4649bb-9796-4945-a7fb-a9752e6adccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c789be-2f3b-439b-b155-e29f2ae76330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6256718-64a5-43ba-8dd8-e1eac9bba3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68b975c-f4c9-4024-9989-4c8dea5a1ec6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6759278b-b470-42dc-949d-516502c707af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571cd870-e3db-4f86-b3ee-57cb16c3439f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791361e3-a162-4202-b03c-9405520969e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3b0068-0f59-47da-9958-853ba50f725b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8e0951-58d3-4f85-9f17-d06b18677c84",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c7826f-3294-4191-9c0e-2a7aaf629af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36be6f13-63a5-48d0-a414-6cf95bd38dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d870165d-a682-45d2-8c4f-20bfae64ce38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6262f97-332d-492b-82bf-b86402d46701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7fbbc5-c054-4466-bb77-ff48bd171793",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39199b07-cd9b-4f87-a4e9-1f3a69515039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed7302f-4bfc-48b3-87ec-fb62ce2185a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80ff70d-5d88-4126-abdf-bbd588f2b2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07c175c-2e69-469b-87ce-32cad0b0fce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9556e3b8-9a04-4913-a1a5-d5d05f831bd7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb8ff0a-e195-450a-85fa-ffb6dcc178ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf92029-2562-4790-91b6-a28d4a563ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa74cee-ce2c-4301-8019-bb49ef164baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a913c67-c503-4002-9e6b-56772c9a27e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85773e60-867b-4cc2-89f1-fe62780e746b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4804c9d-f194-43c0-a531-2bf84d62820a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa4cce7-35c2-44f6-87e8-8ca897a61252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c633492-0c2a-4a3c-8685-c44e0ebe778f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdda39c3-3ed9-43b6-be29-82567665abd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46b32ad-916c-407f-858e-fe72a37811cd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae89e29-6a43-4517-9296-712e30dcdcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec992e0a-7ea8-4691-a7ba-abd3cef375fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504d6d57-b41b-4665-abca-cd1e80017982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcf372a-27ab-4ebe-899f-f45003d4395b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291accb0-56c7-448b-8c3f-8295160af893",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4936e20-25de-41f7-950f-d4e0ed4d5627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e591136-e4c0-4f97-ac53-21cd9caff2ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb3e78e-299e-4090-9afc-e4b7230d34cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a27a14b-d038-4f4d-91a9-8e7f3f3b7166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4efb5d5-58d6-492d-93bd-73a68cb13ad3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91404c9e-3de3-4b85-8309-b53c7dd65034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f234a7-d8e0-4c67-b2be-a733ebe8b7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6f3b7a-944a-47b9-a50d-02dd661c0312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edfa97b-83a3-4e28-b1b6-cc89ea5408e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1f7728-c7de-407b-9ba5-892ee395529f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae937c71-d259-4cad-ac46-a60a28a07c96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b9cb87-09a0-4fc2-b01f-61c156bb245e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26625f5c-44c3-41ea-b0e3-1146e5e6350a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3ff3a3-1fff-44c1-84ed-5e8020ad5a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dd558e-1d42-48a0-98c7-f786183c022b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50953691-19ac-4dad-b9b4-5df586edee6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "903ff928-03db-4ea5-88cc-18a820169b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2cc728-5d03-4787-b177-6ba75bc4d3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c92317e-ccfb-4bf4-aafd-aa9c854418f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5513d13f-0614-43a4-b926-09cac6d4907e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c87da6-48ac-4e70-b069-ed3253191854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7707e10b-3f63-4466-9416-dc90765c7f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208a8927-4421-40db-8b60-87c714b8a2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6da89ca-1cb6-4a0f-b443-5d7f3d433db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354b4956-af9b-47ee-86fb-452f67726c7c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a03d57-ebb6-4965-a25c-a38ccef75771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96601e3-65bd-4243-9e0b-05c977a6201c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f055f1-5caf-4b76-8044-21c45714c3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4777cc7e-c953-4114-81c9-3a17d29c1e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bda12f-af67-4ebb-b949-9c38e5fa5e3f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55eb2f2c-aeca-4d31-a7ec-f4bd34ad09ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f8f672f-2463-4e50-bdd5-59a007a239b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c6ee0e-06eb-493a-ba42-0ce12774dac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4e9dc8-e7c4-4622-ba68-72c984c5535e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47deee6-0eab-4702-9811-83e7ea298371",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284d0465-39b3-4184-b1e4-e47c8d795740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e3e3753-7c29-41a6-9419-2ddc7dcd3e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf736dd8-e9f7-4103-b995-ff89784ea0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f752dcca-2ba0-46fa-94fe-aaf54e728667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba62c8a-ba74-4294-a2b9-5cdfa7909e1a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18240ba7-ed46-49a7-bf8f-6da0256a8470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8cac5f-8aa4-4d77-be36-6d1163d559c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "017603d3-b847-4062-9098-e621a7e8b815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cb0f9e-d83a-4984-a026-5d9e6377a5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3953cebd-8a9f-4af5-80ff-f75577036588",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2d24b4-1e10-4db0-8b6d-160b15a05917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da883db-30f7-483d-a705-633430ab28ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1d5347-9382-44f6-b888-90ee477cebad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced3a3ba-da07-4a73-bb44-035c73996774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35bedc7-7f9e-4a6e-b5bc-1551cf57d19c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624ea9a2-41ec-4651-b7a4-b45068ccad3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee3052ff-55c4-4cf6-aefc-5e69d9e1548b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a397550-a41b-4034-acfa-afe83bc55c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524631fc-9dcc-434e-8bf7-8a0aa388e202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6899c73b-6f1b-47e5-84fb-46a74cee4a4d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40241df6-b6fe-4651-85b3-472473f9f015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cea4efa-95d1-484f-80c3-ca6a17e1cf77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "283c3671-7fea-45e0-833b-773f499a589b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a21132e-ba2a-4750-a4ba-3c6f9131c24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fb5f71-3803-4de8-8c1d-5eb8b5e385b2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1773ab-202a-438a-a53b-1a0868c753d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c22027-513f-4374-9838-0c23a4afc36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53799f02-bb1c-4a30-b8dd-5cae78498c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544690bb-9e22-4e37-ae08-6f56653533ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82043b0-f7a4-4a26-b5e8-6ee467cf72a8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8e8e81-46a4-4840-b228-e8848eb3cf6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74b4c925-385a-4b8f-ae8b-e940ec8ed7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8872409c-2b58-4afb-9613-a8b7049af50a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9e0c07-033a-44d6-9170-47761702e258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56514cf-e92d-428a-ac9a-c0ed9b1c5df6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b2a320-b059-4d63-888e-9f0e9aa23376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d7220a-8f84-45a7-b769-dac143dfa9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e192760-f1e9-4c8d-8201-8686434029a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575f97ab-3ed9-4d57-8868-38e1265d14ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153e8388-cbaf-4230-88c8-70ea7c40ac21",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c06b27-8941-4570-8990-2044a7ad2ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84a3ce3-5b5b-4ef1-b903-b50a3ef4dc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f4a391-6839-40a5-95dc-9aa4ab1927df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b40dc6c-e8e1-41bd-a628-70cd98f9ca88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f73a5aa-850a-4438-9e65-046575cfb1ab",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ad3a8a-f71d-4172-a679-3016fb3cb686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad42080-08f5-4b9a-95f8-493727955fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7e357d-8d2f-44ec-a9d3-2bb08012701b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c440eee-bdae-4fcd-a868-a4120acf3104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3ab66c-2dc1-4498-9481-92f2f355ea6f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba56ef21-2a6e-4c78-af3a-7007120a6d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f5b110-0159-47b8-82ca-b654851a6456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9d5160-604e-48fd-b648-9591f1416d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c16682-4269-433b-aa17-03cdfd9fe9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25c882b-daf1-47aa-9a79-92195b2304df",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842cf790-31ef-4aa5-ab20-3eca444a8e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f641f4e-ebc3-4f64-a6a3-e49f6ea3a9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0247c172-0701-46bb-bfa9-6a4b85f018e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf3532c-80b9-452c-be50-2f87d08c05ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8e5834-0b81-403a-bcad-e9178f9f16b4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15e754d-0693-4b85-8898-72281fd85fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ebacbe0-db21-402f-bad4-293ba5c7f265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3bc395-c1c9-4120-ab59-03625467af0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f421c9-800e-4e67-844a-e61b7f844304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bc876a-a596-48dc-829d-5ea970aaff8f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b490122-430c-4e7a-88f2-c04f10ceb10b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "081e3aca-6835-40a5-b0f1-e1589309d6e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6219764-5950-463e-8ab1-4c3aca1a9413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908a913f-17a9-474a-8c59-dc0e97ccf580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b60e37-ea80-4aca-bc96-ec6b3af35a27",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dadcc3-3c2e-440e-913b-8bbd9e00f470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "966e7e3c-88f0-4107-94be-d1e941813151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc72bf1b-3098-4c04-9b3d-fbb809f64fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268ed89e-c7dd-4229-842f-43fe192ce943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8144c627-d384-4c9e-83a7-6f3c2887c9dc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9bd021-52a6-4f9d-9ead-6bd6cff16e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b7d76c8-1a97-4be0-9685-dc60bbc8801c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e61aae-bbe8-4898-9954-3dab67cddc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbeab935-04e9-4166-a737-f5b08a775ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60babe86-0b70-4dd6-a3c4-27313b6f3561",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fe246b-399a-4f2d-8de0-5262d927d050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6d8fc65-ea03-412b-9d9b-5fe5eebe2ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62f10eb-43f9-4a0f-afad-6417d77dc3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2da1b59-5696-4f0e-8b3f-ba9ba9028225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fecf808-18e6-4220-8a47-f472ebcf410b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7f779b-4b02-4341-8577-9e789657f3d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c2ca95-d42b-4d08-92d3-3b1df926d3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc71c4ec-1834-4292-ac99-2f771cdd08c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ce377a-c3c6-4c5a-aaec-bb2620913535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfe869e-b146-47d6-8f49-0efe9f137bc9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fc05aa-85e4-4da4-aeb0-6bb5718c39ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542e12ef-dafc-44b5-8773-9561e67f9a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3443e9f6-9b7d-46c3-9d9d-8c324b91504a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68149d84-c27d-4a85-8c30-3700edbd3ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7bab78-c8a6-4173-a329-85dd9aea2024",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639ccb9a-d238-4c72-866a-835d869b34d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a41ac401-c962-491a-bd0a-bdcba74c9a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba6491f-b5b1-4d81-8f15-4ae8eaec8b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a62994-8faa-46c5-90c5-1dfc4ac61471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e25166-7832-46cf-8b0d-3f6ed8865f83",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d381eb2a-70e8-4ec1-ad73-23b3ac36cab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f11ae50-4226-4ad3-b222-9b08e8d1b974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e52cea-8901-455a-8c37-7ec877280a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f77b8c-8925-416d-af19-85a7f9e12a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f4fd29-5ff0-4303-9c14-921bf9b97f1f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4190fce0-87ea-40f2-bd83-d49077d9bc42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2162bed4-fae5-4429-b01b-b58c01adf8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7db5066-7760-4950-b096-3ce887acc850",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf5f462-8d23-45e8-a681-5e8dd6606df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511e0c10-ec8e-41cd-973f-5422556719d5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5124d4e3-f8d4-425a-b399-b9a18a57c4e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c03de302-b600-4bf3-ae4c-a2c84c608215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b25807d-283c-46b8-b8a9-f4e7f535fd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1b1db6-32cb-481b-a390-71d050bd0617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b43e67d-9e4b-4162-9d13-0af122ae66aa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375b1e87-09b5-4ce4-aa07-c5522763f18a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba04e6d3-eda5-4d5f-b2a3-d31cdcce3b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ac9a56-595f-49b7-8df8-ae19e10f29cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f485b9fe-6ddc-40ad-9849-a34035e75d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54139a6b-cc82-4c5f-9c7e-41a02f155db4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bbd235-90dd-4f2e-913e-1d0b93675634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "531c6ef9-49a0-427c-ac47-35497f1d21e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1134a4ab-8419-42a8-984f-7d5149e412b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6200adcd-dce6-4bf1-8b4e-7fe153dff463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7dcc89-6b8a-4671-a8db-5bcf10a58b77",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516a60bb-495f-4a85-b8f4-776c61309d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "887c6d7a-9bf0-4d7d-9ec2-9bafd211813e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfa3c4d-f0a6-48a6-997f-be8521eee32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a904e4-4b21-43d1-804e-34e38b323556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd36d53a-25d1-4c6c-b5d3-397c8fb6240d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ad68ca-5821-4bdd-a020-edf47dfe571b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bba0389-a8fd-4889-bfb9-6f52b4a9ef78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae1d932-0de1-4a3c-b31b-cd3d41925e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2dae99-7bd5-4c33-a070-e4602bd5fcab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a79a6c-e7f7-4d1f-907c-2bbe7a8e64b2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774308dd-72f7-4fad-a7f2-470e6779609e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e787e09-451c-4a61-8c8d-a8147f631091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31410a7-5f4a-499a-a230-a2128df8f8e0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67eb2894-be65-4d38-8c89-40bdc3f8ea5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b056047c-987a-4991-aaac-88a9b554d724",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fb937f-922f-4648-85d8-f76935b8f472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fb46ed2-0271-463b-80fc-08f544ba9043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abc9227-2354-4027-a5de-7e3dfcf7f6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bcb6410-42c3-4ef1-9c45-5b870146312a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "918dad92-559e-4b6a-aa57-f274dcdec64c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cf34bf0-ccb0-4226-aa51-9aa200805aca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc285ffa-4c53-48a8-a4e5-ca1b0d07b0f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e24597e-b0f8-48fe-baf6-ce1e394b0082"
                    }
                  }
                ]
              },
              {
                "id": "adc40e97-72fd-4ea1-8068-9ea904a9d8da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc2fde9d-bc8b-403e-aac6-ff0a0f6d27d7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6747d99-07d5-4b7c-b0c3-5b90881fba93",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0ef38d15-4244-48db-bc56-2157884b5a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8416bdf6-7993-4519-8679-e630817b7464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e231086c-c894-4a65-a621-55ca834d401e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e548da1-6d67-4a62-9761-e6a805cd03e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49f1184b-50c9-4add-bdfa-35f520cdafe5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27225961-6c63-47a8-941c-fcbaf6b5f116",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "731cd837-2d0e-46cb-bbb3-d9cc62a4c238"
                    }
                  }
                ]
              },
              {
                "id": "aba2550e-172f-4af7-9136-d1c98fa31c4b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "313a448f-da4e-45f4-9510-f22cbcf5f68c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3d0fdc-6023-43b2-8860-a2e321b4350d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5dca455b-9b98-4aec-87c2-88a22a11839c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad698927-e3b6-4de4-94d3-194a113bb93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d65060-739f-4769-a89c-9f37224e342f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9866a969-0a2e-4005-a825-e87d7d9e9793",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29b9eedd-28e1-440f-b550-c7fe59ae22a8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f5a6460-ea16-450e-b3fb-46c2afb30dac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ee4eb74c-78c4-43b0-ad60-bd775f46fe1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6f34a0c-0ebe-40b0-8322-51a20754ef1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38555cf8-9eed-46c5-a568-904575db1af1"
                    }
                  }
                ]
              },
              {
                "id": "c88626ab-cd38-4232-816b-3c95bf8aad93",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be8be62a-c6f5-47c4-b17b-5aa164a21070",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "13324d70-3e76-4896-9602-89b218314bae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95b8ee0e-907e-467c-b97d-4b1594010ae5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd5b8a6c-c2a4-4cde-ba55-b82330014632"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3009a1f-e2da-4e58-a7c4-3a0279958ae3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3220ba73-c306-4b1c-9dfd-7218babc7480"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e0228e1-5e45-4d0d-8d73-55084af3f703",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5333fcda-86df-435a-9a8f-a3dfdcafe5c7"
            }
          }
        ]
      },
      {
        "id": "e1811b29-4adb-41f8-87b4-b3af3a85df87",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "38c6fe38-1413-46b7-9e20-c0b68ff45228",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0be0503e-fa7b-47f1-b2c6-24f3058068de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce61dfe8-dc56-4cfa-bffc-b14f201c83c8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8813d78d-1576-4a60-bcd5-9eece89c8b4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9e9cab34-3ff4-4ad6-bf5d-b4a1b17b4206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd64d8ba-e9a1-40a6-b884-70a6ba8c0e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b911c4e5-8d68-4bd9-8ac3-7c47120b74e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4874ba5b-b70b-4c1d-9971-f1a1bd5e0f21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0aabce7-ee06-497e-a8e8-5a10cc47f2d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b66a0290-fe8f-4901-bb1d-1a93a80fe3df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "babf8720-5d27-44b3-a9d9-b7741d62398e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2458d7da-21c6-4cdb-877c-84221f713f9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "414f8038-c78a-414e-8599-3afd4a494526"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df20ff20-2a8a-466c-8b6a-4c3b4c9fa852",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5b3ebf0-32c0-4af9-af25-b958579ea65c"
            }
          }
        ]
      },
      {
        "id": "19db4882-9af5-47cd-b762-3915f6ede349",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3f243548-265c-43f6-8dd5-6227ab4f2e5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41c92b4b-55b1-4dbf-acf5-d8ce325b0881",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c8e82dd-ccde-49c9-b4da-ee9b86319a6a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b79f50f-ee05-4664-ae3e-e83987fc6f7f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a86c85b5-f631-4212-8daa-62654e142337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06551c0-2d91-4f07-beb1-37a0a5665337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f417e845-edb1-4b49-a9a9-29fd7cf6f175"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04bf6f65-6f95-480f-901e-cecd980577bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "734d77df-71dc-44f3-a748-fbfa825e8813"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82963f12-27f7-4b5d-8461-158fd1b682b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2231355-3c74-4bd5-8ea9-4b25cbf6598e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9acdffd2-d5f0-4f57-945d-002a3c950343",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c898a191-1b78-4c65-8896-e05113dd10b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "310677eb-4457-4404-8b82-b98810bc66a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bff8f389-e4c8-402e-8d71-5ca93bafb341"
            }
          }
        ]
      },
      {
        "id": "b6f196e6-e263-4bfa-bd7c-4c77ba0581c4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "36765608-029b-4d27-91ac-52e35ad3aa25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "822d2424-88dd-48a0-b983-c3260c4b55c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4eb6fe05-2247-4c08-89ff-a0f8f67ff90f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b173ff-46d5-4ad1-87e8-1fc7b1567c61",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d65712c8-60c2-4cdf-bd4c-e45c2c7e0df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47d4d13-c73f-4c94-b895-23795842ebfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13e1a1e9-7bd1-4c5c-bd22-b995c93bf235"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a867eeca-8aeb-4c04-8485-5b72f2d98497",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f429729-319e-4b03-8dfa-5a3969c8d4fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb7b20a1-28fc-4cf2-b104-5160107d8230",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3778cfbe-fe72-4c86-aa0e-59d09138c564"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8e1cdd5-4a28-4ffe-87cc-6ff6ce25acd1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2921d740-85e4-4120-8b0a-3e9816d419d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14ee7bd2-28a1-4123-b619-f34e1c65ae05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed16041a-f0b8-4d8b-ae85-fbbf5ca1cc09"
            }
          }
        ]
      },
      {
        "id": "4b19c1a4-c7a5-4426-8bd8-08c356993b9e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25966f03-2ad0-44eb-b936-e5c4f73ace18",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34f7a64f-0f77-4ba4-9e3e-50e32b7bf242",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6f9bb3d2-c27c-41f5-8cd2-c155a7cc673b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2bd0d84-32e3-47c4-9293-e6219255773b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93e4d594-19da-4e01-a7fd-14660ae31340",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 99.11578947368425,
      "responseMin": 5,
      "responseMax": 3127,
      "responseSd": 346.7841695882446,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705797596102,
      "completed": 1705797633530
    },
    "executions": [
      {
        "id": "0454ba9e-d765-4abb-abe9-4ac456e53451",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1b7f7cc7-5359-4eba-bb41-5ff4b6e9ce12",
          "httpRequestId": "05d7a780-f6f5-42ad-9366-18dd61dc1fe0"
        },
        "item": {
          "id": "0454ba9e-d765-4abb-abe9-4ac456e53451",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "37e2f085-9de8-4106-8c10-70cbcdba2a13",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "873e80fe-0d03-4322-95ce-7b9a97438b7e",
        "cursor": {
          "ref": "bac890a6-1c12-47df-a3df-945d9bf7b0ce",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3d80e97c-bc2d-4630-aac2-d4b977139f9c"
        },
        "item": {
          "id": "873e80fe-0d03-4322-95ce-7b9a97438b7e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "96a91ec8-2a9c-41ea-99ae-9327b9606e2a",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "85cd4b16-06b1-4833-ba6d-272afef271be",
        "cursor": {
          "ref": "9b590177-4571-430a-a5bb-f0d3d2b89a3c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "112d5fa5-93ad-40d6-8db1-11cefb5b372f"
        },
        "item": {
          "id": "85cd4b16-06b1-4833-ba6d-272afef271be",
          "name": "did_json"
        },
        "response": {
          "id": "8a41bd4b-d81c-4471-8a84-0688267f8514",
          "status": "OK",
          "code": 200,
          "responseTime": 697,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f539a52c-08f8-4d5b-8650-89a8a2d24f76",
        "cursor": {
          "ref": "f03335da-144f-4e38-95b4-01057919b76d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4d6e380b-4e22-4c52-80ad-07b2dc42f968"
        },
        "item": {
          "id": "f539a52c-08f8-4d5b-8650-89a8a2d24f76",
          "name": "did:invalid"
        },
        "response": {
          "id": "432a5190-8830-422e-aefd-5d3314980f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f539a52c-08f8-4d5b-8650-89a8a2d24f76",
        "cursor": {
          "ref": "f03335da-144f-4e38-95b4-01057919b76d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4d6e380b-4e22-4c52-80ad-07b2dc42f968"
        },
        "item": {
          "id": "f539a52c-08f8-4d5b-8650-89a8a2d24f76",
          "name": "did:invalid"
        },
        "response": {
          "id": "432a5190-8830-422e-aefd-5d3314980f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef2a9cc-f9a7-49c7-87d6-c2e6d384faa1",
        "cursor": {
          "ref": "9b7db825-33f0-41fb-afd5-3095b077b639",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d0b24a80-254f-4bf5-a719-465ecaba529c"
        },
        "item": {
          "id": "4ef2a9cc-f9a7-49c7-87d6-c2e6d384faa1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "56f98c12-737d-4aba-8900-45259ad18455",
          "status": "Not Found",
          "code": 404,
          "responseTime": 105,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db42817-f81e-4c71-9f6d-b7d42b791ce4",
        "cursor": {
          "ref": "85a127f4-ee90-4da0-9345-f7653bfd3f78",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9dfb847c-84d1-445b-a525-6750c2578874"
        },
        "item": {
          "id": "1db42817-f81e-4c71-9f6d-b7d42b791ce4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f04bf4da-34f1-45a9-845e-68b0851db0b6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa3dc17-a333-4424-9c4f-0f9f37587489",
        "cursor": {
          "ref": "26e15216-c31d-4d2c-b7cc-c744868fea6d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e2a82ed9-58e0-48da-8347-989940dfad53"
        },
        "item": {
          "id": "5fa3dc17-a333-4424-9c4f-0f9f37587489",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5fec8bba-32bd-4df1-9e3d-32de7cf2bd3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778d4ea7-6b51-4cd0-9159-b93c6ab7df29",
        "cursor": {
          "ref": "f9a31296-6019-40e2-9d74-42906221140d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "153e828b-0192-4fd1-8521-c9015dfa0399"
        },
        "item": {
          "id": "778d4ea7-6b51-4cd0-9159-b93c6ab7df29",
          "name": "identifiers"
        },
        "response": {
          "id": "3373fd40-6452-49c3-a719-e49c81b33772",
          "status": "OK",
          "code": 200,
          "responseTime": 284,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cb2f22-2e08-4ce5-a197-0398926cca60",
        "cursor": {
          "ref": "a82a64c1-8642-4901-aae9-7edcec4fa197",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "af2b9b25-9987-4767-bbe7-a5f31b83b498"
        },
        "item": {
          "id": "23cb2f22-2e08-4ce5-a197-0398926cca60",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d2b9b568-acbd-4482-9211-c4a35dca4705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9042489f-ac89-41d0-a10b-78900c8d14fc",
        "cursor": {
          "ref": "116fc459-70a9-45d8-a3db-ec7339b8bb5f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9f6ba15c-bd66-468a-9eff-5e483f95385e"
        },
        "item": {
          "id": "9042489f-ac89-41d0-a10b-78900c8d14fc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5488c50b-df77-4855-9e3c-c37803311404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73198f98-95e1-41d1-a670-6ec4e77c5d8b",
        "cursor": {
          "ref": "11359e61-d3f4-405f-9244-38f0dc920e63",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "032409d3-2a70-4809-92e9-29297adb7692"
        },
        "item": {
          "id": "73198f98-95e1-41d1-a670-6ec4e77c5d8b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6003cd0b-9748-464a-aa2e-c7b6253ba25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a2da9f-9496-4c58-adcf-0e55e445f73f",
        "cursor": {
          "ref": "e289c7e5-ec53-4772-a41c-301442e44ddc",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "60abc51f-4b6f-4106-a670-bd11e467c853"
        },
        "item": {
          "id": "98a2da9f-9496-4c58-adcf-0e55e445f73f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "49f4e686-066a-491b-b93c-c313e741ea74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90b0a5c-23f1-48a8-9053-66c6c6262dde",
        "cursor": {
          "ref": "ff76bac6-3caa-48dc-b711-06b9aa426136",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "56ce11ac-7a2f-44d8-a219-516249daf47e"
        },
        "item": {
          "id": "d90b0a5c-23f1-48a8-9053-66c6c6262dde",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0035b732-d8c7-4a08-bb1f-db4508a5ad82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444df3c7-6e1d-43b0-8f63-d52a78e091bc",
        "cursor": {
          "ref": "d11eef95-f402-43f6-87ef-d13743ddcf49",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f2fbc549-56d8-47ec-b7ba-1f2513cf3aac"
        },
        "item": {
          "id": "444df3c7-6e1d-43b0-8f63-d52a78e091bc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0fa2fb93-d93c-4db2-b678-bab54eb155f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71d85e8-6f55-4eed-91da-782c04413ad5",
        "cursor": {
          "ref": "e1942480-9566-463e-a1c6-8c56d85e864f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5a628522-5c7b-41ec-b6f4-2814c3af3586"
        },
        "item": {
          "id": "b71d85e8-6f55-4eed-91da-782c04413ad5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3743dc30-7bca-454d-ba2d-9216a7294d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babe7a59-ae77-4763-87af-5a816aafa54a",
        "cursor": {
          "ref": "945708c2-52ac-4448-8230-c343ae9388a6",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "11fdc9bb-d186-4886-a712-792709a658bc"
        },
        "item": {
          "id": "babe7a59-ae77-4763-87af-5a816aafa54a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9292238d-48df-4d98-9a4b-86f22b0b464e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bc2b8b-94b2-49e3-b7b3-0635044c6022",
        "cursor": {
          "ref": "70336f80-5bf6-4b65-bae8-172c18b3bc2a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6c3727ca-9b90-45ad-abcb-aea9871c2fce"
        },
        "item": {
          "id": "a9bc2b8b-94b2-49e3-b7b3-0635044c6022",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "608a51e5-b83f-4b38-90fd-f162b3eb2ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41673366-88b9-4ad2-b29f-962fa4123edf",
        "cursor": {
          "ref": "7b2e8a73-dace-468e-9888-797788660bc3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d6bf3f0a-8ed3-4e14-a5b5-cf69963c39d0"
        },
        "item": {
          "id": "41673366-88b9-4ad2-b29f-962fa4123edf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7eab14d1-168d-42e2-9211-ca1ac174208e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c081d79-a96c-420e-a313-ef82cc821f6d",
        "cursor": {
          "ref": "ad295eb2-9671-4c6c-8d61-f170946bd273",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fbf187d9-ea1d-4982-ad59-54e43e1caec4"
        },
        "item": {
          "id": "5c081d79-a96c-420e-a313-ef82cc821f6d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f1c6823a-532a-43e9-81bd-9f95d77e05e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8079dd64-b0cb-4e9a-819b-04263fe13c66",
        "cursor": {
          "ref": "08bec00c-9ebd-4a11-90a9-17e5924a93e0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bfed6ad9-e3cb-43fb-bfce-c281f4eba9f8"
        },
        "item": {
          "id": "8079dd64-b0cb-4e9a-819b-04263fe13c66",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fd1e6822-f6c0-4c6a-9e53-346aac8e6e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaef16dc-407d-449d-9b50-baa281285b00",
        "cursor": {
          "ref": "3d80e12f-d8dc-44f6-bcfc-ec3d8d7ae58c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1b7b361b-70f2-4e93-bc06-47dfd2ef4470"
        },
        "item": {
          "id": "eaef16dc-407d-449d-9b50-baa281285b00",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a4ecdd11-881c-4bb0-841d-e8cedc96b200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc16ea0c-b8a2-4b40-ac45-f733f794223d",
        "cursor": {
          "ref": "868563a7-24a1-420f-b771-88daa06a0f97",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2ecd1e6a-155d-4815-88d0-be506cabc480"
        },
        "item": {
          "id": "fc16ea0c-b8a2-4b40-ac45-f733f794223d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "aa62273e-f0bb-4ed3-8e98-bf0faf23106d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d95061-9d55-4504-892d-57b62fd15285",
        "cursor": {
          "ref": "6ad693e9-ebe4-407c-bee2-458255d994e3",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "718c20f1-b458-436c-af60-3a50fb40effc"
        },
        "item": {
          "id": "68d95061-9d55-4504-892d-57b62fd15285",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "842f71bb-6c2f-4983-b71f-7a8cb0e3a502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89edd893-dcf1-4767-9ec6-8e1f0045b722",
        "cursor": {
          "ref": "44222357-3254-4239-a993-acd194d68e85",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "015e04b0-15d0-4808-9d72-fc7d81449da0"
        },
        "item": {
          "id": "89edd893-dcf1-4767-9ec6-8e1f0045b722",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "526e6171-6e0e-42c8-b639-ce08c50657e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875d2619-8e2f-4ddb-9e69-369b326c7784",
        "cursor": {
          "ref": "747a3660-d990-4eda-beb2-a23f1045df8c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "09a77f83-1e27-4d37-821d-348a2f832595"
        },
        "item": {
          "id": "875d2619-8e2f-4ddb-9e69-369b326c7784",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dfd53015-3b41-41a0-8dd8-9b1b0e5995e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d55595-1f60-48f4-be87-fa7df19834b5",
        "cursor": {
          "ref": "9c29694d-8f5b-4c3c-b2b1-61e17464598b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b3b4731a-2849-4512-94d7-4195986797d7"
        },
        "item": {
          "id": "b3d55595-1f60-48f4-be87-fa7df19834b5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1ad326ea-8ad7-47db-a09e-d95f32bac50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee76846-99e6-4000-bc96-0cdb013a3906",
        "cursor": {
          "ref": "3ab92813-00a7-421e-8b78-123ce5626dc3",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6903c465-0e29-4001-816a-5c6d4c15b6e8"
        },
        "item": {
          "id": "6ee76846-99e6-4000-bc96-0cdb013a3906",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "384d9ced-52cc-421d-98c5-9fd5d02f2a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befd081f-a8fc-421e-8efa-ccdb2fb91de8",
        "cursor": {
          "ref": "bd72c124-c15e-4d49-8b63-13da6df6101e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "006f8427-ae83-4a94-b106-c9c83d61b3f3"
        },
        "item": {
          "id": "befd081f-a8fc-421e-8efa-ccdb2fb91de8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e4506a64-9ddc-48d4-9cb9-71670290cd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238316d8-3e97-4975-9d46-5378a116205f",
        "cursor": {
          "ref": "9eb8095f-2f73-4714-8794-ef1c4d5c9330",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5244afdf-9e3b-407b-866e-b73cf82bec5e"
        },
        "item": {
          "id": "238316d8-3e97-4975-9d46-5378a116205f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "672e0174-7d49-43c2-b22e-0f4294ebdf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931fe68f-c3c2-4755-9f1d-fbde6d42695c",
        "cursor": {
          "ref": "02211e49-3253-4375-9dd4-929dc4ad4c98",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f23a005a-8fe5-4535-b795-0cc3cef38daa"
        },
        "item": {
          "id": "931fe68f-c3c2-4755-9f1d-fbde6d42695c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b2fb804c-e1ca-4203-9699-85fc0e93dda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b536238-0cce-41f9-9ab8-793bec2f1506",
        "cursor": {
          "ref": "d7cdd75e-1aea-4390-ba9c-239877f0bcb2",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2e9c9bc4-d210-422b-a434-686cac5fb021"
        },
        "item": {
          "id": "2b536238-0cce-41f9-9ab8-793bec2f1506",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "41b12591-8b02-4735-80a3-6cbb7f1f4daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c2aa4f-9494-4aab-b39a-a95ee74951b6",
        "cursor": {
          "ref": "5b104db3-f3e2-4efa-9c9d-923620fa0be8",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a9e7237b-44b9-4b95-b018-c6eb333a45bf"
        },
        "item": {
          "id": "75c2aa4f-9494-4aab-b39a-a95ee74951b6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d6bb981c-8653-49b5-ac0f-c5b389e0d5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00f7e9c-b837-44dc-9d8e-8c2bff7f35fa",
        "cursor": {
          "ref": "f989d595-6d07-4997-910d-0fe242ca0fe5",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a73bc8de-57e8-4389-a633-7bac61bcfeaf"
        },
        "item": {
          "id": "c00f7e9c-b837-44dc-9d8e-8c2bff7f35fa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b93c4f71-e386-4330-bc46-91105c587358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa196cce-0954-4dfc-aae9-9788c6d12b9f",
        "cursor": {
          "ref": "64046112-4cbc-42fc-a72f-91e41b40e36e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "873ca584-130a-4778-b760-b1e565766ac9"
        },
        "item": {
          "id": "fa196cce-0954-4dfc-aae9-9788c6d12b9f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "484c3589-a4fc-47de-a029-18e06b4fd04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6f3318-908b-4233-a7e6-25a8b703c603",
        "cursor": {
          "ref": "49c3bcd6-9640-4ec7-b660-26a021b911d5",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "09624226-db08-45d0-924f-f769a2638c4b"
        },
        "item": {
          "id": "1d6f3318-908b-4233-a7e6-25a8b703c603",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6dc7dc3b-a4b8-4efc-9a61-a2077bc0d8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2171dc-a01c-4547-bda7-8c3a631b83cc",
        "cursor": {
          "ref": "55426778-a0f5-4e46-b66e-79727aefddf8",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "efd94b49-bc89-427d-be42-b0335fcefeb6"
        },
        "item": {
          "id": "ca2171dc-a01c-4547-bda7-8c3a631b83cc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "05258262-7820-4873-a61a-c86fe8e33f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e91bd3-0186-4f57-98ea-39b71e53f6a9",
        "cursor": {
          "ref": "f5adbdd9-ecc2-4169-97a9-a9b9ea65b6d3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2fa12d8f-46d2-42ab-8ffc-7ca224b6e13b"
        },
        "item": {
          "id": "b6e91bd3-0186-4f57-98ea-39b71e53f6a9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "34df44d3-457f-4a28-8a0d-b8d662eb993a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3944c54-4f78-46f8-a2a9-d771f9b0266a",
        "cursor": {
          "ref": "887dcfeb-b9e4-4431-bf04-38d8dbb759cf",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "71ab33a0-7034-42ef-8fe9-c137b5988deb"
        },
        "item": {
          "id": "d3944c54-4f78-46f8-a2a9-d771f9b0266a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0cf05fb0-a4fb-49b2-83f7-614ec594296a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9531cd-7611-4b8d-b21b-2c32b6be36df",
        "cursor": {
          "ref": "c54dc964-98c0-46a5-b33f-58fe2d0370e0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f269500e-9a0f-4902-8b0c-c73d38150dae"
        },
        "item": {
          "id": "4a9531cd-7611-4b8d-b21b-2c32b6be36df",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "764f54c5-dc59-4292-aad8-e7e9eb8d93e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507b5d13-0cfd-48f1-b15f-c757821259ea",
        "cursor": {
          "ref": "5f7c79c9-5ee1-4164-af09-69dce04ed567",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8e16ec6a-abe0-437f-bdf5-402c7cf063f2"
        },
        "item": {
          "id": "507b5d13-0cfd-48f1-b15f-c757821259ea",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2a6ff7f5-e1ac-46ce-b7c5-827de652fe0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fd99db-19a8-4c1e-be3b-4c677b39ec16",
        "cursor": {
          "ref": "92dc9722-5542-4205-955d-aed0cfad8f40",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c98c2a58-9b81-4838-aa5f-a980a145df8f"
        },
        "item": {
          "id": "c5fd99db-19a8-4c1e-be3b-4c677b39ec16",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ec4c6f0c-60d8-4a2e-98c8-f6ff7c078a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeba3f14-1f69-44ed-bdca-9c49e372b622",
        "cursor": {
          "ref": "f523a7e0-5059-4387-b31a-77f2f7dce945",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "954a0be1-f5a2-41a7-b7d1-b3c3626c1a54"
        },
        "item": {
          "id": "eeba3f14-1f69-44ed-bdca-9c49e372b622",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a0e7f353-3798-47a4-94bf-46f55759ac13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c31d4d-cf8d-4cee-8893-5fbbbcc31740",
        "cursor": {
          "ref": "28e70c3a-c4c5-457a-8996-40af8bae5c3c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "845a2d77-fe13-43de-be55-b6c69dee111a"
        },
        "item": {
          "id": "34c31d4d-cf8d-4cee-8893-5fbbbcc31740",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3ebc8566-00db-4242-817c-faccd5199907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27a6f58-5dcd-466e-b3ab-cbd4c390a4ca",
        "cursor": {
          "ref": "4c4dad5a-2574-4ecf-9076-53c8f24f7283",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "048fa1ad-f9aa-4433-85e8-971b18e58d90"
        },
        "item": {
          "id": "b27a6f58-5dcd-466e-b3ab-cbd4c390a4ca",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a28aa64a-db0d-4f23-94f2-3ad95f6211e6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 312,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c883ce-07d7-4c24-8869-6bf16b36ceb2",
        "cursor": {
          "ref": "0a7ba18f-cdfe-40d3-bd91-c8584e2d0450",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f678fe4e-3cf5-478b-be8e-06162512f249"
        },
        "item": {
          "id": "21c883ce-07d7-4c24-8869-6bf16b36ceb2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c8960324-5a7b-4c22-ba13-123b2c944891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496f518b-d86b-44c0-9656-bf0d3816a255",
        "cursor": {
          "ref": "808aac95-6930-442d-a194-f86cccecd8ed",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "da362d3c-3656-4c83-acf9-345d2bef87ee"
        },
        "item": {
          "id": "496f518b-d86b-44c0-9656-bf0d3816a255",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "88a99715-335a-4c32-87de-8b703a31dcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6aa700-39aa-4946-94c2-f3e6ff4ff0ce",
        "cursor": {
          "ref": "ae46be72-231f-47c7-adce-b1947a474a8b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9303a248-ceba-4093-aab8-bf51a7886df1"
        },
        "item": {
          "id": "1f6aa700-39aa-4946-94c2-f3e6ff4ff0ce",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "38c51312-323f-41b8-bee4-1e5eb6a0169a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07c11be-684c-498a-b1ec-c047d9ca5f12",
        "cursor": {
          "ref": "56cd2cd8-e529-4775-bf82-60d1937eb851",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "470f65a7-79d6-4ab4-9398-1ffaaa06b16d"
        },
        "item": {
          "id": "f07c11be-684c-498a-b1ec-c047d9ca5f12",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ef05004e-dab9-41bd-bbfe-938c43fca3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef51666-8afe-4c3f-9a74-0c3c12706c09",
        "cursor": {
          "ref": "05aa0cb7-1d33-4724-9f8d-5896d338953b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fa498135-ecbb-4542-a423-eb449c39ec4d"
        },
        "item": {
          "id": "2ef51666-8afe-4c3f-9a74-0c3c12706c09",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "15ffa121-2b99-4f12-a432-a045404e484d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682cb55f-4eee-4f61-abd2-9ece2557243a",
        "cursor": {
          "ref": "ad31b0f3-a56c-4065-9d36-bb3f2688b34f",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c43f50be-b66d-4c36-a4d5-0fbdfed60848"
        },
        "item": {
          "id": "682cb55f-4eee-4f61-abd2-9ece2557243a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "81d45d5a-6fe9-4600-ad4f-312db1953702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793bf3f8-61b2-4f97-be94-4b6fbe6ea203",
        "cursor": {
          "ref": "5a8485c1-2884-4826-9577-b6d653f8f755",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c44fd2fe-a240-4438-bec5-3f4fbf78c032"
        },
        "item": {
          "id": "793bf3f8-61b2-4f97-be94-4b6fbe6ea203",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "62fb3983-ac4f-4667-833b-311f1c6eaab8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 311,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1211a071-ed45-41df-acb5-c41bba042c10",
        "cursor": {
          "ref": "cec2c5e4-9849-4239-9925-109d13696508",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "015c8d8b-c6b4-45b1-ae06-fab1d6ea4e03"
        },
        "item": {
          "id": "1211a071-ed45-41df-acb5-c41bba042c10",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6a96b291-3cfc-4cf2-870d-3fe37876b421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7580f580-ed15-48e9-b131-5759c9fec79e",
        "cursor": {
          "ref": "a0fcf1a1-2c46-4480-86ea-f9d76374c3fb",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d1c22761-0343-4167-b8c0-8cdbe0e182a1"
        },
        "item": {
          "id": "7580f580-ed15-48e9-b131-5759c9fec79e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0c76e73f-6d5d-484e-bb5d-27c081129c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2feb6c-ecaf-484f-b3c0-0e4c01cd00be",
        "cursor": {
          "ref": "de89a8dd-21e9-466c-bc1d-a73959e7dbd4",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "638209ab-b152-4eec-9aa2-0a798c5e872c"
        },
        "item": {
          "id": "4e2feb6c-ecaf-484f-b3c0-0e4c01cd00be",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7a128f77-3a6b-4003-b59f-e196522ae607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c14cb2-ea74-43c8-b4db-f840e77978f1",
        "cursor": {
          "ref": "1dc2e34f-4332-426e-8b47-03a2a6ce39bd",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d6fc94d1-0115-42b8-aa9a-91d8cf78b43a"
        },
        "item": {
          "id": "c6c14cb2-ea74-43c8-b4db-f840e77978f1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "39e2000c-3be9-465f-8810-bbb155d590e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42926c79-ebfd-4791-9b3d-694e180f6ee8",
        "cursor": {
          "ref": "57146289-3fda-4eed-bf34-b6008eedacba",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b5145a3e-da31-4cea-a602-907ad8c9fe53"
        },
        "item": {
          "id": "42926c79-ebfd-4791-9b3d-694e180f6ee8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d24c36d3-6e6d-4766-9172-c6d8ec67f03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bfb316-685c-4534-91d3-ed7557c83322",
        "cursor": {
          "ref": "b727ecd3-c833-499d-97d3-889d41b5939b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "11709c97-2d70-4bb5-bb06-be11503fc451"
        },
        "item": {
          "id": "e2bfb316-685c-4534-91d3-ed7557c83322",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8dbfa067-bfcb-4a51-91eb-7bd021717c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be530ee-38d3-4c1a-bcc5-e266159e73f7",
        "cursor": {
          "ref": "b5580a06-f6ea-4604-9a91-1591eb4630c4",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d20a8dae-bfec-40fc-9ae0-c893fda9e84c"
        },
        "item": {
          "id": "0be530ee-38d3-4c1a-bcc5-e266159e73f7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "af92ea74-8b15-4ab6-9320-6bf2f78a7576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b3de63-038d-4032-8b2f-a68ab5b33ac0",
        "cursor": {
          "ref": "22d26827-6637-40ce-a1cd-f0ef76b67d13",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d10cbb1d-6971-4fa1-bb80-2f2ac4e9350e"
        },
        "item": {
          "id": "89b3de63-038d-4032-8b2f-a68ab5b33ac0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ac98e526-caab-4357-a276-a4fd466a3a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15496f7-dcd5-471b-9f6e-59fd6ad1ca08",
        "cursor": {
          "ref": "a3dd47c1-2eed-49c9-af7e-286d13baef7b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "75dfc2b2-a80c-442e-9cd1-9e7e4f7c3630"
        },
        "item": {
          "id": "c15496f7-dcd5-471b-9f6e-59fd6ad1ca08",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "542e4629-1070-468c-a5d3-c58670fb090e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d309511c-ad8a-4a48-b128-cae2f221b25a",
        "cursor": {
          "ref": "dbf10f46-1580-448f-aa27-5b9b6a070b68",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "22c7e88f-50b0-48d8-8249-4241d167ac09"
        },
        "item": {
          "id": "d309511c-ad8a-4a48-b128-cae2f221b25a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "22d5a429-87f6-41d5-846d-bd7384df902a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce001fb-200f-4c47-bfcb-9e98bb47d937",
        "cursor": {
          "ref": "e8a444a0-0547-4867-863e-039a1b15af82",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3cf4e47b-23a5-40cc-b8a1-6315b171c897"
        },
        "item": {
          "id": "2ce001fb-200f-4c47-bfcb-9e98bb47d937",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7c8087ee-817f-423e-8194-a4ed4f59a2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f73b2f5-c2fc-4357-9668-a7837bb87674",
        "cursor": {
          "ref": "3d24f261-9dbf-47e2-a810-591faa591e36",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "87e9a49b-3ab4-4c3a-9b43-0d1976a46a4f"
        },
        "item": {
          "id": "8f73b2f5-c2fc-4357-9668-a7837bb87674",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ae16e0d4-dadb-45e0-953c-46d95c6b871b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34da58ac-87e1-442c-a539-0424c01ffa9e",
        "cursor": {
          "ref": "d08a6971-fc4e-448a-8c72-ab9af663c0c0",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ef3b9f3a-1d46-4d5f-bbea-2c293daa6165"
        },
        "item": {
          "id": "34da58ac-87e1-442c-a539-0424c01ffa9e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0a47c575-cee4-4288-90f3-a3b2bbf2eaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c32c98-47d9-4656-b2f0-2c5e1a8ed399",
        "cursor": {
          "ref": "ff3a780e-141f-40dc-9a18-191fbc549ae9",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b3fdd063-34cb-470a-9bda-b574df68e590"
        },
        "item": {
          "id": "d5c32c98-47d9-4656-b2f0-2c5e1a8ed399",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "945500d9-d2d0-4aad-9d5b-0ecbf4d99dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb62e44-9f61-4e44-a339-7b33e544a15e",
        "cursor": {
          "ref": "e54b2bd3-ef7a-48a6-a003-9ca8fb6cbe15",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "713d4670-49e8-4dad-aa33-048cfdd0ec30"
        },
        "item": {
          "id": "2bb62e44-9f61-4e44-a339-7b33e544a15e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ca219cfb-7857-4689-a748-1e15c0ad6531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a40d83f-c1fd-4938-8a58-7b2cc0002f97",
        "cursor": {
          "ref": "bbc967c3-fba4-49a1-b6ee-0defb5c94396",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "11eb2f97-12f6-4ffc-a7cb-99f71aa6375d"
        },
        "item": {
          "id": "0a40d83f-c1fd-4938-8a58-7b2cc0002f97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7ae0593f-3bd6-4d87-b099-ddf0ba25d009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476c812d-f463-4d50-8c76-1782e9de874a",
        "cursor": {
          "ref": "36bd664e-f9d0-40a2-a4ca-381d8d403136",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "41cf6955-106a-49df-8469-a52630d63d10"
        },
        "item": {
          "id": "476c812d-f463-4d50-8c76-1782e9de874a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "083bce41-1d6c-465f-b024-63d5d333f471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80914fae-7a98-49ae-aa92-d9dc37971bc4",
        "cursor": {
          "ref": "2f06650b-7457-4173-9240-f7dcf7def8c8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6fae06e0-1bdd-434b-bfc1-e3883d348a0c"
        },
        "item": {
          "id": "80914fae-7a98-49ae-aa92-d9dc37971bc4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cf5d5902-0a28-4b12-a01b-b77767b148de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227b15b1-3c59-4f4a-b8af-c781ca894eb0",
        "cursor": {
          "ref": "08ae72c4-9b4c-4648-b836-0092602f5600",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "49fa1b1d-6522-44db-b9c2-20f90f14c7ab"
        },
        "item": {
          "id": "227b15b1-3c59-4f4a-b8af-c781ca894eb0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a4130f4a-0abe-404f-9f1f-f65be66e98c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc92468-d24f-463e-811f-22aaa7232087",
        "cursor": {
          "ref": "06b5b250-f615-4a61-b143-c0664991cccf",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5330fdad-c3bc-4dd1-9277-e51f0f5a4d90"
        },
        "item": {
          "id": "acc92468-d24f-463e-811f-22aaa7232087",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7fcbd689-6a6f-463d-9620-cac2fe8ac11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d56e501-72f9-4f27-a41d-55ead5a5b197",
        "cursor": {
          "ref": "114dffb3-dfc7-4e6b-81ae-0e512b6fc618",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ed9e61e6-5da3-4a92-b916-690b4022ef68"
        },
        "item": {
          "id": "7d56e501-72f9-4f27-a41d-55ead5a5b197",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "19c28857-6d8f-4164-ae3b-84b3302c5f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c865a89-eb39-4148-a247-803775ae7086",
        "cursor": {
          "ref": "61162c1c-71b4-4303-86d2-edff58a19f70",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7edc1996-c6ca-4f46-8c1a-4f703edbb8db"
        },
        "item": {
          "id": "5c865a89-eb39-4148-a247-803775ae7086",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fe318b4c-867f-4727-82c8-e67c777c98f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2d4756-9142-4aba-b958-5c878212bc81",
        "cursor": {
          "ref": "91eeda0d-e5a3-4d58-88ef-ebfb2209b943",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "95a0c0e9-0a52-44e2-bf4b-77bbca235fbe"
        },
        "item": {
          "id": "7c2d4756-9142-4aba-b958-5c878212bc81",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "213b19a2-59d7-41a3-b0f6-b99cd2bf9c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e94141c-d33c-4cd4-9d34-f2875ccfb1b7",
        "cursor": {
          "ref": "f97fc6ce-29f0-4c11-99c1-5d766692ed8b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8413ac7a-0927-4035-8980-79f7f6e6ea67"
        },
        "item": {
          "id": "9e94141c-d33c-4cd4-9d34-f2875ccfb1b7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "035d723d-c8a1-4375-b1a4-9644e2d63640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fe39da-fd9e-455a-966f-d2f5ec1ab15f",
        "cursor": {
          "ref": "2e5795d0-7555-4850-bc95-11888c7dbe8f",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "116235cb-fb78-425f-82b5-8422971d3135"
        },
        "item": {
          "id": "42fe39da-fd9e-455a-966f-d2f5ec1ab15f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "124910be-6e73-4e31-afe6-2bbf05e9cb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab15b2d-a38a-4680-8b60-664bd123aa07",
        "cursor": {
          "ref": "084047a3-3132-440d-b75a-cca349a3ab02",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "68b51183-033e-4553-9df0-ac52bbc23e41"
        },
        "item": {
          "id": "dab15b2d-a38a-4680-8b60-664bd123aa07",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d346c5c4-b0b9-4532-9059-21abb6a6df56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7b491a-7b09-43da-b2a8-dcdc0ea0bd52",
        "cursor": {
          "ref": "d5a6ee8b-79bd-4f67-b084-6bbeee362477",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0a33a5f4-7789-48aa-9314-daf7ac1955c7"
        },
        "item": {
          "id": "4c7b491a-7b09-43da-b2a8-dcdc0ea0bd52",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9e9b736c-9132-403a-9555-c9ff0ce5d59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e069f55-ff8c-487b-8862-4e9c73053003",
        "cursor": {
          "ref": "0adf9da8-5ec5-4eaf-a3be-bf773ca798cd",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "270fa882-69bc-4070-9122-d579b9bf5d5e"
        },
        "item": {
          "id": "3e069f55-ff8c-487b-8862-4e9c73053003",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6c2c168b-abb8-410a-b4de-85ed138058cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be933c89-2a33-418b-9296-1dcb169d9665",
        "cursor": {
          "ref": "e4d5d312-1653-4e3f-8b3c-309f50db7c01",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ca49255e-9128-4c8d-980e-a4871633d6b6"
        },
        "item": {
          "id": "be933c89-2a33-418b-9296-1dcb169d9665",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "25753894-07ca-4a56-a278-d2d1d7020548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab288580-3a15-4619-bb34-5e6cfe1efa77",
        "cursor": {
          "ref": "6a5b5f25-d1c5-44d2-a2ab-ee19df405720",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a8f612e7-e21c-4f2a-b4f0-e483f65f6919"
        },
        "item": {
          "id": "ab288580-3a15-4619-bb34-5e6cfe1efa77",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5979f251-e28a-4b08-bc04-345454755cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aebb76-83d5-4d4c-a884-06775edde7aa",
        "cursor": {
          "ref": "abd8718d-1c3d-4563-86e5-794526486acf",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fe103e46-c0e5-48ac-ba54-f9cb37f34f85"
        },
        "item": {
          "id": "05aebb76-83d5-4d4c-a884-06775edde7aa",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9c05aead-1abc-4efa-aa23-eba0a3e70c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13010ed-b526-403a-94ca-3f804bd32b64",
        "cursor": {
          "ref": "12e4ae9b-d58d-4b84-84d6-82685a3cde37",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2040231b-e44d-480e-978d-f8ce76826093"
        },
        "item": {
          "id": "a13010ed-b526-403a-94ca-3f804bd32b64",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "126673a0-f157-42d9-9234-ab68f2868992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bbd3ea-b051-4953-b097-a72e9c358b23",
        "cursor": {
          "ref": "bb0f58d9-6245-435d-897e-01123f607210",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0f2970d8-e8b6-48ba-8951-dad4c46fda0a"
        },
        "item": {
          "id": "30bbd3ea-b051-4953-b097-a72e9c358b23",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "713db4b9-88c8-4f38-a159-797050d4de0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b45bcc-2cf0-4470-8f0a-98b25c22b97a",
        "cursor": {
          "ref": "4e78f9f5-6ec3-497a-b78c-5eba8dc0f0b4",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "41427582-d55e-48ca-b2b3-a8315186ac57"
        },
        "item": {
          "id": "20b45bcc-2cf0-4470-8f0a-98b25c22b97a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2c78b82a-fae6-4b22-80d0-6ef895a5d5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40689efe-70c2-4af0-88ba-162188a1bd55",
        "cursor": {
          "ref": "dbf3a4c8-cc08-44d4-96a5-6f264cd237bd",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4a49e7c9-87ca-48c0-9c6e-1b06beb52b19"
        },
        "item": {
          "id": "40689efe-70c2-4af0-88ba-162188a1bd55",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a7853f77-06dc-4e74-8608-1009d8fa8a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8182f3d-8d98-42d8-a728-c3d1df7fd9db",
        "cursor": {
          "ref": "a2bd8e7d-b127-41c9-8cf6-d36753557379",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6fbb3dad-9297-493d-9209-b1c55ca4aced"
        },
        "item": {
          "id": "a8182f3d-8d98-42d8-a728-c3d1df7fd9db",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "38d60288-34a3-469b-a1e4-3759d31b17a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcebb02-3c8e-4b4d-a86e-84424234b7d5",
        "cursor": {
          "ref": "c1c6594e-5183-4535-82c0-63fef408ad4d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ae88518d-60ad-43e6-b0e4-74878fa3a254"
        },
        "item": {
          "id": "dbcebb02-3c8e-4b4d-a86e-84424234b7d5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6074753a-5bfd-49cc-8cbc-f24995d871c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62999b2e-ae9f-4742-b469-e844bb54d060",
        "cursor": {
          "ref": "3a9f8f66-4ead-4579-9727-8dda6f943c55",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ceab1f59-3063-4405-8885-28dcc576e0b5"
        },
        "item": {
          "id": "62999b2e-ae9f-4742-b469-e844bb54d060",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5b8c6b7a-f9bb-4d23-a2ac-f9ec222926e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9741dd4-4c63-4628-ab21-bfa0eaf1fab2",
        "cursor": {
          "ref": "50242e50-132c-4de1-8cdd-ff6a3b9d7727",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0ed45211-d0f9-4f2d-8a7d-03bf2fb0cbd3"
        },
        "item": {
          "id": "f9741dd4-4c63-4628-ab21-bfa0eaf1fab2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1126023b-20a9-4c7e-b22e-55df9c037d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e3ef2c-6408-4f02-bf8d-d56285d4f252",
        "cursor": {
          "ref": "35f7ed18-d78a-4bef-be37-3a6209d5118f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4b593e80-9159-4074-abfd-8abd55fb1918"
        },
        "item": {
          "id": "71e3ef2c-6408-4f02-bf8d-d56285d4f252",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "83c42869-169f-4a8d-9322-66843adcf8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af472dda-c0c1-42b0-8c58-8b4b91907e5c",
        "cursor": {
          "ref": "a625ba55-5f75-41fe-ae13-798e16986a6b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a361a7fc-954f-4241-866d-2e87851cb46c"
        },
        "item": {
          "id": "af472dda-c0c1-42b0-8c58-8b4b91907e5c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "47535c13-2a76-4516-b9ca-31b41618f2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001022e9-1f59-4262-acc1-28543fd9a1ed",
        "cursor": {
          "ref": "8462c2b2-2094-42cc-9ce4-807a1164357e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4442b2e8-a751-4866-a16a-5a5cf0923ff4"
        },
        "item": {
          "id": "001022e9-1f59-4262-acc1-28543fd9a1ed",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9493d422-662f-4e5d-a5b1-e2490189665e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b03c59-6146-4c5b-84ba-461fd33d683d",
        "cursor": {
          "ref": "bd546c55-e992-4445-ada4-88f096244ac2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "90277d3c-0cc3-4b09-a7aa-2bdef8ea3865"
        },
        "item": {
          "id": "b3b03c59-6146-4c5b-84ba-461fd33d683d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fb762004-1ee0-4c19-a137-399b4da47bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7305aef-f892-415b-9d48-a99e9eb438fa",
        "cursor": {
          "ref": "c01bc9f8-57e5-4cb0-a92d-f30fd49ec621",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "51e3198e-01f3-43e7-8c11-99a35d46480b"
        },
        "item": {
          "id": "e7305aef-f892-415b-9d48-a99e9eb438fa",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f1ad1a5b-bbf8-469c-af6f-2f4da386ca1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035c2bcb-c639-4982-afc8-7977ec15f27c",
        "cursor": {
          "ref": "894c015b-bb28-4db0-95d4-9a020362faf3",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "252e1937-2d7b-4cf7-83c7-693d46767412"
        },
        "item": {
          "id": "035c2bcb-c639-4982-afc8-7977ec15f27c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "239d38a0-9b9e-4874-ada3-71046a54d71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72edff63-ba91-477d-a21d-f7cc68c129e3",
        "cursor": {
          "ref": "e1799d74-21e2-49f2-a87a-b69a328a880f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "58b996a5-85bd-47e5-a8aa-68a496a1a997"
        },
        "item": {
          "id": "72edff63-ba91-477d-a21d-f7cc68c129e3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "de0366da-a8df-42fc-afb9-86abd05b0b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829fd0aa-5760-4ea3-a8b7-92529952d2ad",
        "cursor": {
          "ref": "87caab81-58e9-4035-a523-59a5cd5a3d64",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2c1404d9-4aec-4eac-957e-c575a523f7c2"
        },
        "item": {
          "id": "829fd0aa-5760-4ea3-a8b7-92529952d2ad",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c518cd7d-593c-4849-be8e-41fa3a84ca28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad66c11c-a515-4c33-8527-47836f80a963",
        "cursor": {
          "ref": "d5170cc4-abde-4744-949f-418cc52d0e75",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "470cb3a8-75e2-4739-9da2-36ed353b9f14"
        },
        "item": {
          "id": "ad66c11c-a515-4c33-8527-47836f80a963",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cae6768e-4e0d-4af1-b054-a2f430946ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64d307b-164d-4bc0-b3f6-0f247ede61ed",
        "cursor": {
          "ref": "6a1f30af-dd3a-4913-a52c-ad2e71747c01",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8d44253c-2cc3-461f-b581-4c794ac5758b"
        },
        "item": {
          "id": "e64d307b-164d-4bc0-b3f6-0f247ede61ed",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1fee820a-673f-4859-bc46-7ef8cfe0e28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f0ca3d-b9f3-47e4-b460-c5d483e5717f",
        "cursor": {
          "ref": "194fad29-fe9f-42b5-ad56-9f0e5e2b0909",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d493d22b-4bdd-4ef3-b11b-d99986fd5a09"
        },
        "item": {
          "id": "a1f0ca3d-b9f3-47e4-b460-c5d483e5717f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "61518a32-d79a-484b-9e11-612e8f06f037",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccbf25a-a6bd-41bc-a5aa-37c0a4057fae",
        "cursor": {
          "ref": "582a6c70-07c6-4a0a-9980-be29f63ea1a8",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d0446c9b-18ef-4aa3-abbf-302360b4b1c3"
        },
        "item": {
          "id": "eccbf25a-a6bd-41bc-a5aa-37c0a4057fae",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "14d7f4f1-1179-43b9-bd32-bfa6765f2657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "81e5887f-9e65-460f-ae51-63915e2f57c8",
        "cursor": {
          "ref": "53543570-3159-418a-a0b3-7004abd5d0cf",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9eb19005-5b5a-4995-82ce-538eeec70463"
        },
        "item": {
          "id": "81e5887f-9e65-460f-ae51-63915e2f57c8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b473e2b0-0d91-47c6-891f-40362e0c10ad",
          "status": "Created",
          "code": 201,
          "responseTime": 3127,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "634dcb3a-2a91-43d9-8e22-c8e50bb1156c",
        "cursor": {
          "ref": "acb38dda-9a22-4d47-b831-61a6add0f361",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1d90d9f5-f08b-43ba-a7a2-5ade5158595a"
        },
        "item": {
          "id": "634dcb3a-2a91-43d9-8e22-c8e50bb1156c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4ee84975-1e93-464a-b05b-44735518361e",
          "status": "Created",
          "code": 201,
          "responseTime": 2667,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9041b0c9-7db5-4399-a2f5-ecac999f3ae1",
        "cursor": {
          "ref": "2d974f43-af1f-4ad7-84c1-5f0a584da4d3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6d4d6a64-a8dd-4b7b-8178-2cb9ef82741e"
        },
        "item": {
          "id": "9041b0c9-7db5-4399-a2f5-ecac999f3ae1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6cf31dce-7cb0-4054-b901-69b20f1fa3fc",
          "status": "Created",
          "code": 201,
          "responseTime": 2099,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "212d5f69-485a-45a8-871b-63fbba37f966",
        "cursor": {
          "ref": "75eb9fe0-b1bf-4908-ae93-6a0a9f97e1a0",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b11d46a8-c60b-4b4a-9ff4-fadd8d275b14"
        },
        "item": {
          "id": "212d5f69-485a-45a8-871b-63fbba37f966",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ed3b60ce-6170-4317-bb97-735f58ffce32",
          "status": "Created",
          "code": 201,
          "responseTime": 2072,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce88e67d-45a9-4538-821f-dbf2df14072a",
        "cursor": {
          "ref": "54739bd2-fcbb-441d-8c7a-7d2237f69ba7",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d6ade766-2ba5-4da1-9b95-7970efeebb2a"
        },
        "item": {
          "id": "ce88e67d-45a9-4538-821f-dbf2df14072a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "95542fb2-2c1b-45e7-86b3-32818e779e63",
          "status": "Created",
          "code": 201,
          "responseTime": 2351,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cb990a-c946-4971-9df2-de2d34426adc",
        "cursor": {
          "ref": "aee3308f-5084-4b8f-8439-77fc13b9127c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b388266a-ac28-4fec-88d0-4335b4a8d743"
        },
        "item": {
          "id": "75cb990a-c946-4971-9df2-de2d34426adc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d81c7b6f-2e11-43f1-8278-132f3599e6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1e0d8819-1a5f-4772-9ca3-cb9c51af2754",
        "cursor": {
          "ref": "2fca52dd-fdb6-485b-a6f8-e914a8565ebc",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5dbecf5c-53dc-4bfd-9820-b94ea99d7bbc"
        },
        "item": {
          "id": "1e0d8819-1a5f-4772-9ca3-cb9c51af2754",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "580bc813-68a3-44b1-88a4-8bbb98ee18bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ee4424-7fd9-4a00-ba92-f3c79fd3fcf5",
        "cursor": {
          "ref": "9bfb3099-7863-4d68-8f93-f7dc6feb1b1d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e6c2d3b3-7b63-475c-b8b2-b8926ed69dcd"
        },
        "item": {
          "id": "f1ee4424-7fd9-4a00-ba92-f3c79fd3fcf5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e89ab003-4f54-4f45-8879-ba741a581fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7826b4a5-298f-457a-847e-0f15eb1d210d",
        "cursor": {
          "ref": "6dcea40b-0777-454b-8fab-7968bc1e5981",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a153793f-426e-4f83-99b6-389c737ed09c"
        },
        "item": {
          "id": "7826b4a5-298f-457a-847e-0f15eb1d210d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5c4e5236-0917-4b26-a2e8-f57a7868d64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8cc83b-1109-4b51-a2ca-46fff9aef3c7",
        "cursor": {
          "ref": "bc960a34-92f8-4585-ac42-2358177520b0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b256f966-03a5-4e87-ab8f-7d20c384335f"
        },
        "item": {
          "id": "dc8cc83b-1109-4b51-a2ca-46fff9aef3c7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f8b13640-68ae-4863-83a1-587b101798ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4ade1c-dbb1-4d13-b1bb-7c59dfa0b1cd",
        "cursor": {
          "ref": "77036a70-0161-4224-ab0b-0199ed76147f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d8227502-4c2a-46e2-b06d-60942140ef27"
        },
        "item": {
          "id": "7f4ade1c-dbb1-4d13-b1bb-7c59dfa0b1cd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a662d697-4756-4a32-959e-d94eaf939783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b535688-e0b2-46e0-b4d4-4dc35df82d9f",
        "cursor": {
          "ref": "b322553f-4fb6-4bbf-ad8a-9abb92a3a2b0",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "801c8d32-be06-4bcf-ac19-4f6acfdf3472"
        },
        "item": {
          "id": "5b535688-e0b2-46e0-b4d4-4dc35df82d9f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4fa17081-2ad1-45b4-9b8a-8625fcd627b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603b370c-0661-4b15-ad76-2cc3ebe044ec",
        "cursor": {
          "ref": "ec8c6859-6911-46e4-bfc5-164b4dd16a85",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "81c89c1f-65f5-4358-9446-bbfc6d427763"
        },
        "item": {
          "id": "603b370c-0661-4b15-ad76-2cc3ebe044ec",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7d65a44f-8b10-47d6-942e-e9999c69dab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500ea2fb-de17-4d4a-bf88-fadeab77866b",
        "cursor": {
          "ref": "aea3b790-4fd3-446c-a834-4b07cc82ca66",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7dbd2431-d9b9-448b-8f74-ad0a6d3c8f93"
        },
        "item": {
          "id": "500ea2fb-de17-4d4a-bf88-fadeab77866b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "263937b9-f681-45c1-a81e-00c0933ed8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaaae14-5b08-4c6f-9d64-018173ee0f58",
        "cursor": {
          "ref": "23d14526-a766-443b-b917-9a443e854312",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5e5740a1-25cc-4790-bc2e-1de2b758b65e"
        },
        "item": {
          "id": "beaaae14-5b08-4c6f-9d64-018173ee0f58",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "647eb744-aa61-4587-8948-2c13f19a0429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf191f37-0260-48d7-9937-e3599c010626",
        "cursor": {
          "ref": "074514b0-3231-4102-93d5-55c05685b233",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f197062e-0254-4228-9fb4-2f914529d27b"
        },
        "item": {
          "id": "bf191f37-0260-48d7-9937-e3599c010626",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "90d136b5-8be0-4043-84ed-1a3b23a977d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b1fc6a-745a-48da-af3f-29fd13649830",
        "cursor": {
          "ref": "38e42949-e7e2-4d69-af69-1e8735879c7d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "26b49b26-1090-4e27-9e2e-5c519f645562"
        },
        "item": {
          "id": "13b1fc6a-745a-48da-af3f-29fd13649830",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "227f8243-4f42-4f2a-901c-7204e9ad4d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699b12b3-5280-42b3-9585-d403a80da626",
        "cursor": {
          "ref": "a6bf688a-90d8-4027-9069-2ee3baccf912",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "62a96711-59ba-4bd1-8ccc-64b42d86b013"
        },
        "item": {
          "id": "699b12b3-5280-42b3-9585-d403a80da626",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "93a98462-5a34-4f12-9318-3043b1437e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5a72e0-8cbf-47af-b65e-5e96159244e7",
        "cursor": {
          "ref": "d002e2ff-b807-4c42-a1f8-9adce28d290d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f715587e-bcd0-419e-9619-8c4066dfd7e1"
        },
        "item": {
          "id": "bf5a72e0-8cbf-47af-b65e-5e96159244e7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "69f28291-bdf2-4a9c-823d-2f709076a2b5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 96,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f216e56b-0d25-4c13-9926-b7aab21bb40f",
        "cursor": {
          "ref": "324edca2-293a-4f14-a479-981533e1beba",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5eff2092-d612-40fd-941d-4f28a58e8c9a"
        },
        "item": {
          "id": "f216e56b-0d25-4c13-9926-b7aab21bb40f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bfb67448-1196-45bc-becf-984bbb846fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e250f76c-bbda-4fae-ba99-5b06feab76fa",
        "cursor": {
          "ref": "51b99966-26b1-4050-8564-ad7fc8f65cc4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "847ca6a4-342b-4d02-8b91-6e4977b9e810"
        },
        "item": {
          "id": "e250f76c-bbda-4fae-ba99-5b06feab76fa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0d0e5a89-df92-44a5-b544-51e4fadc0da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e479dd-8031-4cba-aada-b2f3b2af1834",
        "cursor": {
          "ref": "560d9eae-c3ce-442e-ae60-2f4af0c6c253",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "94f6de78-85de-472a-8659-30d589aea478"
        },
        "item": {
          "id": "c3e479dd-8031-4cba-aada-b2f3b2af1834",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9b7bc206-2e78-4850-ad68-9366889c0075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cc49a3-5b27-46ce-8517-9d563d7fa5ff",
        "cursor": {
          "ref": "baf655f1-a3bf-412c-844e-ee7e7253dcfa",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "901192e7-fdb2-4784-a828-e397a4348b1d"
        },
        "item": {
          "id": "f0cc49a3-5b27-46ce-8517-9d563d7fa5ff",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3621165b-5326-44ac-9271-d2a22d9334f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1dc306-bd3c-4e9d-ac93-a8a637238c7f",
        "cursor": {
          "ref": "84c21f6e-727e-4cae-b586-6bae02555da4",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6ed24d1b-5adf-4d43-a41d-4b31d8136b8d"
        },
        "item": {
          "id": "7d1dc306-bd3c-4e9d-ac93-a8a637238c7f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b8359c2c-42c0-4579-b0c6-44e9505589c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0bcf02-5b34-4c79-86b0-9b27a4a1c72e",
        "cursor": {
          "ref": "d73db4c1-bb69-4488-bc7f-b68f441e6847",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e6bb964c-a7b2-4eaa-ae43-9affaf324d0c"
        },
        "item": {
          "id": "ad0bcf02-5b34-4c79-86b0-9b27a4a1c72e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2b2ee3b3-b4da-4d42-b059-87eab28cadc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b9ec7c-0eeb-4c61-b7c3-51da2600b0cc",
        "cursor": {
          "ref": "11de4c97-8ec5-4c06-bcc2-917df5d24f42",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f6dc2983-2f0a-4ffb-b78f-729f91593904"
        },
        "item": {
          "id": "85b9ec7c-0eeb-4c61-b7c3-51da2600b0cc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8ba7607e-b9f6-473c-9102-1fe14e2e5743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5fb308-2d44-4cf0-8254-c3a2d1d21de5",
        "cursor": {
          "ref": "928b20fc-1f7d-4d32-afe2-19b819266524",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7bf638d9-1c7a-4199-8332-8b9f918005bb"
        },
        "item": {
          "id": "cc5fb308-2d44-4cf0-8254-c3a2d1d21de5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ca554ebd-eac7-433d-98c9-46ab6d1d1996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c26e09-1f65-4460-a9fb-fc267e09be0a",
        "cursor": {
          "ref": "9f34cb2e-a286-4a10-9092-33061eb6eadd",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5cccdbe0-0887-491c-b617-b375c2d9b32d"
        },
        "item": {
          "id": "57c26e09-1f65-4460-a9fb-fc267e09be0a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c692784b-c4e3-4191-8cb6-f0c0fba40f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d1bbb4-cd86-483c-acd3-bbbc285006a8",
        "cursor": {
          "ref": "bdb2670f-ed62-4af3-aa94-888bc76ecfd2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "df5455bf-5e2c-466d-ba8d-711aeb41ef27"
        },
        "item": {
          "id": "85d1bbb4-cd86-483c-acd3-bbbc285006a8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "66f7ecf0-d686-4081-b52f-419e4399f472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ab086a-cf4f-4d4c-b0ba-4160b74b5ebc",
        "cursor": {
          "ref": "039d1f1b-64ca-4a6a-bcce-e1ec43879bf9",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c922d96a-bd09-4090-9e01-4aa95842303b"
        },
        "item": {
          "id": "28ab086a-cf4f-4d4c-b0ba-4160b74b5ebc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3323f28a-cb2b-4e69-963c-b430a7833d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f31a4ec-8c2c-44ca-8ca3-7ca23280a26d",
        "cursor": {
          "ref": "2f988ca9-3958-48f1-a2a9-a2d4da6afd40",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c2afc9e1-3da5-4ae0-9c1b-c211528b2403"
        },
        "item": {
          "id": "6f31a4ec-8c2c-44ca-8ca3-7ca23280a26d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ba0ef558-9076-4f3e-b9c4-19834057888d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d750882-e985-4139-82e3-e82008f4a71d",
        "cursor": {
          "ref": "fbd5b356-3f51-47f8-843f-19cf5ecaf95d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "eb0f995c-1bb1-4de0-a813-e58d98dfd1be"
        },
        "item": {
          "id": "2d750882-e985-4139-82e3-e82008f4a71d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5ca727a9-83cc-468a-adb7-c14c50fbf945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1be243f-a64e-43bc-bb06-b90cf05e0c81",
        "cursor": {
          "ref": "26d0c658-fc0b-4182-aba9-f8f37daef5b9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "468b6113-0ffb-40a5-9c52-f869a20c47ff"
        },
        "item": {
          "id": "b1be243f-a64e-43bc-bb06-b90cf05e0c81",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d2a6b315-7eb2-4a3d-9a1d-79fd4ea862a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f18cbc3-3311-406b-941c-929c6c2bd9d7",
        "cursor": {
          "ref": "d07887a5-ff4e-49c6-9243-acceb51b9929",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b207f2d7-eb29-452f-9354-ad250488fa35"
        },
        "item": {
          "id": "3f18cbc3-3311-406b-941c-929c6c2bd9d7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "efa81454-6e68-447a-8b32-5d0067a6ad78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d371bbc1-8553-4da0-99c8-ff4b2966517d",
        "cursor": {
          "ref": "7f643b8a-6f90-46e0-aa30-7615b9e4a4e0",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2fc5bda3-0688-4b01-a0cb-c7e7344e8400"
        },
        "item": {
          "id": "d371bbc1-8553-4da0-99c8-ff4b2966517d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "64345df2-a814-4269-a396-358dde8bf2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a2aee3-5933-4884-8708-60b482bd5983",
        "cursor": {
          "ref": "49652cd9-bcf1-443d-8c61-5e85edbb58b6",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "730554b6-8895-4750-9f1b-6b2142ee049e"
        },
        "item": {
          "id": "41a2aee3-5933-4884-8708-60b482bd5983",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a8f8f0f4-3dbc-474f-9b75-4eeb6a7ba931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cad1048-b63f-4954-b95d-7d4e3db002b9",
        "cursor": {
          "ref": "279dcf3a-e327-4397-8493-dbaf1f025aff",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "26cdc333-5106-4399-8a15-73dd79e6ecbd"
        },
        "item": {
          "id": "9cad1048-b63f-4954-b95d-7d4e3db002b9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b3d36aa1-c421-4ee2-9546-67759eb2e4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccc2b27-b9ac-4d99-a4e6-6f6c257444f3",
        "cursor": {
          "ref": "dc16d49b-4833-4fb8-8d5c-f5681a19fe59",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f49062be-33f0-41ae-8430-3f957eabd707"
        },
        "item": {
          "id": "9ccc2b27-b9ac-4d99-a4e6-6f6c257444f3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2288f243-e6d3-45f8-88e2-8ae8e81348dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f58ffdf-a6aa-4905-a521-e97f00837ec5",
        "cursor": {
          "ref": "7fe179bf-83d4-4be4-b00e-22d846b25738",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d1b4c7fc-90bb-4e4d-aaff-bb823cb006b0"
        },
        "item": {
          "id": "4f58ffdf-a6aa-4905-a521-e97f00837ec5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "df1de2aa-80ae-4c12-bd2a-8e85151c7ec6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18c3b9e-c30e-42a3-9942-3fbab781c354",
        "cursor": {
          "ref": "b1c36e69-a70e-4243-b555-3b4ff2c06554",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8a5e72a9-752c-41ca-a8b2-db44e1131969"
        },
        "item": {
          "id": "f18c3b9e-c30e-42a3-9942-3fbab781c354",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c812873d-8d2d-4828-9862-3284341afa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb92c1c9-cb30-4286-917a-7e3553cb091b",
        "cursor": {
          "ref": "46765a42-fa8b-4b12-9426-5d55322cd0fe",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "98f49657-929b-44e1-b125-0765b92ec0b8"
        },
        "item": {
          "id": "bb92c1c9-cb30-4286-917a-7e3553cb091b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a52041da-1c9c-4bf1-ba04-ce7f40ec1755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2783a06e-9e2d-4a26-8d47-10c8b2f8e7f0",
        "cursor": {
          "ref": "2add5b80-9ba9-485f-acac-a4f1ee01c518",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ebf44fc5-0e2a-4e68-a690-e2de1fde1558"
        },
        "item": {
          "id": "2783a06e-9e2d-4a26-8d47-10c8b2f8e7f0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1baa9548-58cb-4503-8ab1-17d609d3224f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e7bfc6-76df-425a-bf50-61e1e6d4c8c6",
        "cursor": {
          "ref": "3098183b-f3ad-453a-be71-6ab26669566c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7e416b31-5505-4199-80c2-6c46b091f737"
        },
        "item": {
          "id": "48e7bfc6-76df-425a-bf50-61e1e6d4c8c6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a30bbd29-cecc-4b36-9d4d-1d28a8e44d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ee56f0-0025-4df9-800d-2fd8f23d2100",
        "cursor": {
          "ref": "85749f1d-ccdd-4f92-93ea-f83e652108e9",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "67f96313-1437-4800-b59a-8885733d4492"
        },
        "item": {
          "id": "84ee56f0-0025-4df9-800d-2fd8f23d2100",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0f4e8c96-e2dd-413d-9e1f-35ba0004a3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac37148-9364-4b35-99dc-23101fcff8ca",
        "cursor": {
          "ref": "e216a2e9-fb55-4df4-959c-e9dad92c3dc1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "db8715dc-daee-47e4-957a-784581035bd3"
        },
        "item": {
          "id": "aac37148-9364-4b35-99dc-23101fcff8ca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1bbcf7b5-54f6-4573-bde0-6a55eea3d84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2475fa3d-1c5d-4d2e-a4de-7cd19b913aa6",
        "cursor": {
          "ref": "0daaaad1-aa71-483f-a4a1-68d4f76c1876",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f37d5870-292d-4645-9936-361ef12352e0"
        },
        "item": {
          "id": "2475fa3d-1c5d-4d2e-a4de-7cd19b913aa6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ad6eae51-977a-4777-931a-f79e2c15bb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bcfdc5-769d-4fdd-8ea4-25d6ab89cef8",
        "cursor": {
          "ref": "766ad20f-3821-42bc-8bd5-c362ea36d4c7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "810f90d8-e903-4d0d-afa6-826b8cca9cc4"
        },
        "item": {
          "id": "78bcfdc5-769d-4fdd-8ea4-25d6ab89cef8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b05adba8-746e-4784-83e9-e7c63a843817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191bad03-6dbf-4919-9b08-5e050f899716",
        "cursor": {
          "ref": "69c1e4a4-5808-45d4-888f-1ff8a32be767",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0156bfd4-5d9c-4c4e-9b4f-74df73082f6b"
        },
        "item": {
          "id": "191bad03-6dbf-4919-9b08-5e050f899716",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "43e770d3-c19e-43bb-8f42-7691ac305e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3332e742-3b0b-4433-b724-31f827de5693",
        "cursor": {
          "ref": "4a78e654-3b01-485d-b692-db603de71eb1",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fed57f35-e00d-44cd-82d1-bae8c272e6fb"
        },
        "item": {
          "id": "3332e742-3b0b-4433-b724-31f827de5693",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b12ced5d-70b4-4187-a4a1-3adfef536c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d071cd1-9f4c-416d-92aa-c031c681d0fb",
        "cursor": {
          "ref": "b68856f1-eb87-43ea-be1c-d214c28131d0",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6596c7f4-26f7-4844-a47c-2ea40ee6dea2"
        },
        "item": {
          "id": "1d071cd1-9f4c-416d-92aa-c031c681d0fb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "91d354d7-dad0-40da-b0e8-8ecbca9d519b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfae17dd-b494-4790-8305-ce8783a21dc8",
        "cursor": {
          "ref": "04c5ad26-09cd-4fe8-976b-0a681af314b1",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3835ac56-e5e5-4b22-97e8-78e743f5f289"
        },
        "item": {
          "id": "cfae17dd-b494-4790-8305-ce8783a21dc8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cddb31ca-42bd-425f-a193-385526d50def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b253d7e8-7025-4201-803d-a8bc78600c46",
        "cursor": {
          "ref": "8c763017-3d82-419e-9832-262ac968ad24",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ea83493c-ce8c-4b54-9f1b-c1e5077d1d25"
        },
        "item": {
          "id": "b253d7e8-7025-4201-803d-a8bc78600c46",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "755b4d4a-2c92-49c3-9dec-e8c06b8d257c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89190556-993d-4a6c-b025-35f3bb0e9ee2",
        "cursor": {
          "ref": "ca728660-c218-49d6-9992-582a17ba6e3a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "22378686-a90f-4b12-957d-8662858f171c"
        },
        "item": {
          "id": "89190556-993d-4a6c-b025-35f3bb0e9ee2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dd0300a4-c3bc-4c30-9e48-0c7170fa24f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea65952-5a2d-4714-b0f4-57308a17e889",
        "cursor": {
          "ref": "3d5997a5-4774-4231-8934-84aa2c32b818",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2766794b-769c-4283-b18f-df7ff1686e51"
        },
        "item": {
          "id": "dea65952-5a2d-4714-b0f4-57308a17e889",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c5d90a08-47df-4e4b-ac16-87fcd4937ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def9cc66-c591-4f12-8645-ba1beb44bdd2",
        "cursor": {
          "ref": "10b67d4f-a05d-4409-bfdf-fb0bc838fbd7",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "eefacba7-4bb4-467e-804f-9259a4c22f0b"
        },
        "item": {
          "id": "def9cc66-c591-4f12-8645-ba1beb44bdd2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "17391a79-2d9b-49e7-a3ef-a5aabe4e8854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60139ff9-83af-43db-9834-74c18964c8eb",
        "cursor": {
          "ref": "31dbcea3-c79e-4da0-b026-4f40435cf611",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "102ededb-246d-47df-87cb-01767ffdc6ec"
        },
        "item": {
          "id": "60139ff9-83af-43db-9834-74c18964c8eb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "981a4f41-528d-481a-8d8b-0ba40fd11c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e165759-f2d7-4fb9-b4f0-2f20c8a49bc5",
        "cursor": {
          "ref": "5b356e13-b9fa-47d0-bb3f-90af99fd63ae",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7c5a920c-bb2a-49a7-9d76-da8375e4a7b8"
        },
        "item": {
          "id": "5e165759-f2d7-4fb9-b4f0-2f20c8a49bc5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1ebacdf6-9003-4036-ae02-a22415418c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b0ffba-a30a-40d5-bffa-c30a24823046",
        "cursor": {
          "ref": "a4bfe47b-4aad-4361-bd77-9d9b0b8155a2",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d7a8f061-f3d1-405b-9985-3ea0020e0343"
        },
        "item": {
          "id": "d5b0ffba-a30a-40d5-bffa-c30a24823046",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6d859dff-cf77-4297-bf06-27993547597c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1781ed40-6860-4557-8373-65419f9fdc8c",
        "cursor": {
          "ref": "1d25fbac-e591-45c1-a2c3-af2827435e4f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7f7c8242-b468-4019-9b7e-65d5b4afa5cc"
        },
        "item": {
          "id": "1781ed40-6860-4557-8373-65419f9fdc8c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3d51b1f7-795a-41bf-a631-c8b8ebefc688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64754350-4723-4fb6-a8a3-8456b6ade2f1",
        "cursor": {
          "ref": "8eba1ae9-6908-40f7-a90b-0ba26bff6139",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7dd1a033-3616-4255-8480-6f7ea0a9c128"
        },
        "item": {
          "id": "64754350-4723-4fb6-a8a3-8456b6ade2f1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "db2afd35-0eaf-433f-9b74-351b7a026462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4791c935-6685-4cb8-ab64-d4f6da492ac4",
        "cursor": {
          "ref": "d28df174-2a58-42c8-bffc-3feb54b15ea0",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "efa25764-904a-4a55-af86-b9c0375a5287"
        },
        "item": {
          "id": "4791c935-6685-4cb8-ab64-d4f6da492ac4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7a9e780e-75d3-46e5-a64b-9b9081be4844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cefb4e-bf50-4182-976e-4bdffcf06ad1",
        "cursor": {
          "ref": "1c698997-e64e-4a37-a53f-3904bbb2ee82",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0679b009-aecb-47f4-9164-017254584766"
        },
        "item": {
          "id": "23cefb4e-bf50-4182-976e-4bdffcf06ad1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6c6f0b49-ae31-4f69-ab22-0c8f056ae4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6edb624-2b39-464a-b2f6-6c7dc8d8dae0",
        "cursor": {
          "ref": "75ad15aa-b09f-4a6e-a8bb-31966f5b1db6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "73c54e43-bf07-4641-952b-c5eb4682a9da"
        },
        "item": {
          "id": "f6edb624-2b39-464a-b2f6-6c7dc8d8dae0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b2311b71-1720-4c31-890d-4d4c56d85a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2019ba-53d9-48a2-b404-8f5ed4afac22",
        "cursor": {
          "ref": "fb784760-c2f7-4ed9-9df1-3a3d592b77c3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3ee5a380-b1e7-4d7d-86dc-205fb36c7e51"
        },
        "item": {
          "id": "8e2019ba-53d9-48a2-b404-8f5ed4afac22",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "adfa6bb7-c6bf-4892-8f5a-a5b349233a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0320609-a1bc-4079-a045-7bd8e4df8564",
        "cursor": {
          "ref": "a3ef9945-f422-4c15-a93b-3df2182e9707",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fa190f53-4434-4fe4-b85f-f08b7d47646e"
        },
        "item": {
          "id": "a0320609-a1bc-4079-a045-7bd8e4df8564",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "536c610d-5e50-4914-870b-fdfb3d356370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396a53f7-8ddf-4464-ae72-409d08a8cb75",
        "cursor": {
          "ref": "44573a6f-de15-4ca5-95a6-fe41f992cedc",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "43ba8f71-db6b-4e86-9200-d05ffd3480fe"
        },
        "item": {
          "id": "396a53f7-8ddf-4464-ae72-409d08a8cb75",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d700259b-4b0f-4677-a4aa-c37a3bb4193b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f345bf4a-08c5-4e00-b93d-cb183d49f172",
        "cursor": {
          "ref": "4e692a84-6ad2-4565-af8f-7b6fae5c856f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "246f40e6-4052-422d-8999-fddb7dbf3966"
        },
        "item": {
          "id": "f345bf4a-08c5-4e00-b93d-cb183d49f172",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "50bb46bf-bbeb-4260-b2b1-2a6b1abe16a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973ac0eb-5f3d-421a-9bf5-f387b2af7425",
        "cursor": {
          "ref": "838ec041-9394-4e08-8f73-e6dcaed792c6",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "471a2053-8518-4bd0-90ab-d42d881461e7"
        },
        "item": {
          "id": "973ac0eb-5f3d-421a-9bf5-f387b2af7425",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8926a98d-8941-42b7-9192-85392b05a926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433bfcb4-be2f-4644-b933-d796e6623a1d",
        "cursor": {
          "ref": "7f62c78a-e5f8-40ed-a9d6-d92208ea3c0a",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a25658a1-a958-4e58-859a-91562bf7e8fb"
        },
        "item": {
          "id": "433bfcb4-be2f-4644-b933-d796e6623a1d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8252dc1f-9e9e-42e4-9a0b-541700007fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f291b406-372d-487e-8561-b46198e444f4",
        "cursor": {
          "ref": "30af678b-6e77-4261-a90a-e169ed1a4672",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fbad8268-c3b5-41d5-ae34-ad40bb3d9dce"
        },
        "item": {
          "id": "f291b406-372d-487e-8561-b46198e444f4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1d174c52-5622-4907-93c1-623349cfa005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6956acfa-670d-42b4-bd9a-6e6c8aab69a6",
        "cursor": {
          "ref": "015ab21c-d5f4-48cc-bb12-20a934ac54af",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "97de7603-d199-4d8a-8df3-2e6cc203a9e3"
        },
        "item": {
          "id": "6956acfa-670d-42b4-bd9a-6e6c8aab69a6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "39cead73-cb36-4776-b32e-5ec889f25b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4a7d96-5585-419a-8639-7146b8038a95",
        "cursor": {
          "ref": "7c9101c5-d02b-4942-87de-c2451c850477",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a5e0c369-f08d-4199-9947-44a2bfaa8457"
        },
        "item": {
          "id": "4d4a7d96-5585-419a-8639-7146b8038a95",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7d133b85-fcd4-4738-8103-6b13c6118ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32c786a-ca83-439d-9910-1c95e02847fe",
        "cursor": {
          "ref": "b5d43880-5584-41c6-a436-62e143348de8",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3b32453d-1030-4ebb-92a9-97d58dc44b73"
        },
        "item": {
          "id": "d32c786a-ca83-439d-9910-1c95e02847fe",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d5c74db5-9bab-4bc0-a430-4902229a9aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e9ab11-317a-420d-b71f-d3ba52a95ed5",
        "cursor": {
          "ref": "c20f9f98-ada1-4cae-a985-e5287c8bff84",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "08c4b818-1770-4783-aa66-2c0a6fb3ec64"
        },
        "item": {
          "id": "d5e9ab11-317a-420d-b71f-d3ba52a95ed5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bb1f9db4-e408-40dc-b2c3-381abc70bc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ba55c3-0ccb-4589-8475-48d391aedfb6",
        "cursor": {
          "ref": "6573f24f-c83a-4b98-90a2-7602f1d25fce",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "31e6cc80-3025-4433-969c-dc7a4cedc7d8"
        },
        "item": {
          "id": "79ba55c3-0ccb-4589-8475-48d391aedfb6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "aec57acd-7939-43a4-b915-aff8e319a6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7ee5c6-35a2-46f8-bf5b-375ef2aac3be",
        "cursor": {
          "ref": "3ca120c3-88a5-4dc9-9a22-869f535db17a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b6a84c8f-f526-43a6-87a0-8b1afdc326cc"
        },
        "item": {
          "id": "aa7ee5c6-35a2-46f8-bf5b-375ef2aac3be",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "57d4f6fb-9fea-472f-8c73-d400763984b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32d16e0-4659-4cd5-a6b1-084b780a52be",
        "cursor": {
          "ref": "151c2a3f-ad80-4fe6-9ccb-c2f230d49cdd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "88c0f2d1-ccd6-4667-b920-8e29bfc2f94f"
        },
        "item": {
          "id": "f32d16e0-4659-4cd5-a6b1-084b780a52be",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1fd23558-1783-410b-94b2-aaffa1da3b01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2451be-2c34-4bc4-912a-ccdc18984740",
        "cursor": {
          "ref": "b1a71654-ba1c-4715-9aed-10513a10bf91",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "13df9311-2468-4e32-8124-d6ff1b11b8db"
        },
        "item": {
          "id": "6e2451be-2c34-4bc4-912a-ccdc18984740",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "94235d86-e885-4031-8e86-6eb4ef8630b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ad2c1b-c463-42b5-aa10-1956ca63bf9e",
        "cursor": {
          "ref": "63a09df2-9260-478b-a39a-a66b5ed974f5",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b9f1628d-f4da-43f0-b1fb-0dbabecb77e7"
        },
        "item": {
          "id": "67ad2c1b-c463-42b5-aa10-1956ca63bf9e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "32299476-57da-4f3b-8bac-291ea8f7e2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f5b2a9-5fec-4ad0-8c01-946155222e9c",
        "cursor": {
          "ref": "235bc813-0481-452c-9ebc-ca05dd8bd2c3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a3743171-34e5-4006-8fc1-a5aa7a7ecc2b"
        },
        "item": {
          "id": "76f5b2a9-5fec-4ad0-8c01-946155222e9c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "942eb05a-2076-49b7-a0b9-dffd6e021548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a0e0e1-218d-419e-b333-65914d07d3bf",
        "cursor": {
          "ref": "b94b6bb7-8493-478b-9086-4a3dcc55b29a",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7fe17b40-d276-4fb3-8c8c-5428886ccf49"
        },
        "item": {
          "id": "58a0e0e1-218d-419e-b333-65914d07d3bf",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c752a473-b907-4297-99d9-08744c007c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c130cbf-1c63-4779-82ee-3c6e15056679",
        "cursor": {
          "ref": "fb3b05b5-0cb9-4599-ae94-29d15c339593",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b74c447e-d7c2-4c2a-923c-a4987d2fe2f0"
        },
        "item": {
          "id": "9c130cbf-1c63-4779-82ee-3c6e15056679",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6d4ca613-8f1b-463b-80fd-93ab9c60c35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43045ae-139a-492c-8db9-4d7c289891b5",
        "cursor": {
          "ref": "5bb84925-7030-4362-80b4-df861a026f53",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fc6864cd-4ae9-48eb-830e-d4bd6abf1396"
        },
        "item": {
          "id": "b43045ae-139a-492c-8db9-4d7c289891b5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fc42db43-2f60-4f95-8204-6f3b92c5ea6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afab1eef-a896-4977-807b-1cc526999772",
        "cursor": {
          "ref": "004a3244-9053-46b9-9adf-e39b149c1900",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "01291254-c4a0-4610-ad66-ae8c41392032"
        },
        "item": {
          "id": "afab1eef-a896-4977-807b-1cc526999772",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "74b4de04-f949-451a-b6ad-78051d31f25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9565d65-82ab-4410-9d4d-59ec618cb336",
        "cursor": {
          "ref": "6e605d63-8924-462d-8287-b38b31ce7b55",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "220ae636-15d9-4076-80bf-bef948fc8bf8"
        },
        "item": {
          "id": "e9565d65-82ab-4410-9d4d-59ec618cb336",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "22e17825-c277-4dda-b8fd-b9aaee5da83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777648f3-1a55-4d07-8dcc-b8e405831dce",
        "cursor": {
          "ref": "1453d33f-7499-44c8-8a89-5b7ae563abee",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2e8a7714-15f0-4501-a11b-6d986617ab00"
        },
        "item": {
          "id": "777648f3-1a55-4d07-8dcc-b8e405831dce",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dc29128c-ca9a-4fc8-a000-718160b55d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8a5c8f-e520-4065-bd1e-2cdb433a6611",
        "cursor": {
          "ref": "9d735f39-e8bb-41f0-bda5-69caaa8dbeb4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2aa2aeca-c371-485c-891d-7a998d290555"
        },
        "item": {
          "id": "9b8a5c8f-e520-4065-bd1e-2cdb433a6611",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ae476862-c680-4680-8751-f01492f0e414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f1ff81-a922-4f5b-bf16-67ab0ac2af2d",
        "cursor": {
          "ref": "4bed432e-b0df-4f64-82d8-68c8e1285a48",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fcfbd6bf-ef1f-4ffe-90ae-c51067f118c7"
        },
        "item": {
          "id": "77f1ff81-a922-4f5b-bf16-67ab0ac2af2d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fb332257-4011-4cd2-97b5-56ce91a4cd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c19277a-5253-4012-b3f6-9179c56f9fb9",
        "cursor": {
          "ref": "babbf527-cfe7-4245-bfa9-a9b9eff30290",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "def7145a-3975-41c4-b4cb-a6fbebe8855e"
        },
        "item": {
          "id": "9c19277a-5253-4012-b3f6-9179c56f9fb9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "621666c7-89d8-4023-865b-124b367ea83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3621c3-1003-470a-8e50-43cf5054598c",
        "cursor": {
          "ref": "6524337c-2f92-4613-a030-5ad9b8f16497",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d670283a-0281-44c5-9ce5-e055fe11c19a"
        },
        "item": {
          "id": "ae3621c3-1003-470a-8e50-43cf5054598c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2820e13e-5f99-4d57-b537-c8d03ab54531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c070aa6c-1be1-45ea-905b-1d512c0ec796",
        "cursor": {
          "ref": "9b116a67-f947-43c7-9891-58daaa4b038b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dce18cc0-c385-438b-be24-e45ab15f4c99"
        },
        "item": {
          "id": "c070aa6c-1be1-45ea-905b-1d512c0ec796",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7753fe72-0d6b-4fbc-94c0-de4d4e29756e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7170d3-5369-48b4-8f83-3a9fceffacfa",
        "cursor": {
          "ref": "fafb11b3-e80d-4db9-af6c-ecfd1c295202",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0f788969-7db9-4c1e-b384-97a490f9358f"
        },
        "item": {
          "id": "8e7170d3-5369-48b4-8f83-3a9fceffacfa",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "177ca23a-45e9-459e-bc66-9cf9fd6467cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4e111c-c58d-4d76-a404-74449c545879",
        "cursor": {
          "ref": "819c9dac-54b4-4185-a475-b1a591590579",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d6776884-4c49-43f9-88d5-171971411634"
        },
        "item": {
          "id": "5c4e111c-c58d-4d76-a404-74449c545879",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6e7ee6e4-2aa2-4fae-9c18-f79ce846e28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d68adf-3175-409e-a8d7-c323b0ded93c",
        "cursor": {
          "ref": "89999533-e29d-4e57-8cca-af7cde9d201e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "930604dc-418d-4685-b41e-d8573f3183ca"
        },
        "item": {
          "id": "67d68adf-3175-409e-a8d7-c323b0ded93c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5837038a-5fdd-4262-b7b6-ccaf9691eee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fbe605-d58f-479b-9f47-3e6210b342a7",
        "cursor": {
          "ref": "1c18b232-44b4-4a12-ba1d-9517d73c43be",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f2d9b437-5a75-4e81-a4f6-57e08d2aa63f"
        },
        "item": {
          "id": "d3fbe605-d58f-479b-9f47-3e6210b342a7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bf984fdc-f23f-446f-8677-2304e4ac3fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8df7c7-3494-4839-98f1-d423651263e2",
        "cursor": {
          "ref": "4552e599-e147-4c53-a45a-33bcefe87c7b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "516af7f4-7470-4fd2-825a-6e01eac0777b"
        },
        "item": {
          "id": "2b8df7c7-3494-4839-98f1-d423651263e2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c32306f2-b3df-4ae5-9fce-107f5ce8a9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa64f6b1-f55f-4429-9b32-97cfd3bcf7fc",
        "cursor": {
          "ref": "93fbebe1-452d-48db-ac4a-47e0eb752bac",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "52e99a98-51c0-4d6a-88ad-877fc2e3506e"
        },
        "item": {
          "id": "aa64f6b1-f55f-4429-9b32-97cfd3bcf7fc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cbeeaa35-7742-4d30-91af-6f41b0b681b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee2ff32-37a8-499d-9ff3-8b65a797f30b",
        "cursor": {
          "ref": "573a467c-d99f-4957-9d45-affac97d7d27",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "128ab746-4feb-4bac-b4ae-8dd3ab007e5f"
        },
        "item": {
          "id": "dee2ff32-37a8-499d-9ff3-8b65a797f30b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "dfb14501-03f3-4db4-b6de-04007a136cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd934d4-b27c-4946-bd9a-0222c61615b6",
        "cursor": {
          "ref": "4cde314a-b242-4aaf-8008-ab7880d1efd8",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "591273fd-eab5-4bd3-9f0c-3f6142f9826a"
        },
        "item": {
          "id": "3cd934d4-b27c-4946-bd9a-0222c61615b6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d66c50f5-ab1c-4b2b-a28c-1a70b2aee6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6a113b-cf8a-405e-9b13-943746d3be78",
        "cursor": {
          "ref": "1cf3e8cb-3929-4319-a8b7-a5f67b972556",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "83d14cf9-45dc-4424-94d3-24dc5a7e1a58"
        },
        "item": {
          "id": "dc6a113b-cf8a-405e-9b13-943746d3be78",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "600a05ed-5160-4704-9b2a-8978699ca945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd06dff-54f3-4cb0-94b1-52b3093b918e",
        "cursor": {
          "ref": "352fa4cd-b3b0-42c1-ba7f-f60ba1b92fd8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "da941272-4eef-429e-8bd6-4373c2f32295"
        },
        "item": {
          "id": "1fd06dff-54f3-4cb0-94b1-52b3093b918e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e1e829da-90c4-45eb-bbdb-33c0cedb838e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585da9e2-9244-4ddd-9e72-f9f5856442b4",
        "cursor": {
          "ref": "cff9437b-6deb-44fd-b5b8-6eca244b3e97",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "941aefb1-978e-419d-9c1c-02f29da58320"
        },
        "item": {
          "id": "585da9e2-9244-4ddd-9e72-f9f5856442b4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "135f7b10-0c9e-408d-ba69-1cdcbcf3a7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed3dcbb-6aca-4969-851b-c681394d270a",
        "cursor": {
          "ref": "af913398-85bf-4c5f-9a55-d05f9bf7cdd3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9ec29fe9-ebf9-493c-9acf-ffc23d94601b"
        },
        "item": {
          "id": "7ed3dcbb-6aca-4969-851b-c681394d270a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b4e80739-a5cc-4a04-b71a-32d2f66b84d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfbbbb1-8f98-4584-a2a7-c165e3a8825e",
        "cursor": {
          "ref": "f6d61ae1-569c-45b0-a4d7-ed6a778b5baa",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dc3e4b53-57b3-4c6c-9801-bf8daa223ac6"
        },
        "item": {
          "id": "0cfbbbb1-8f98-4584-a2a7-c165e3a8825e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e8449588-3d6f-4afa-9490-6455481a69e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1329082-75b6-4bbf-b03b-65c999a564ff",
        "cursor": {
          "ref": "3eec2ece-a0a6-4c95-aefe-6b66e56c193e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "de87f02c-2852-45a9-b2c4-e9b90c37fd49"
        },
        "item": {
          "id": "d1329082-75b6-4bbf-b03b-65c999a564ff",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "547f696c-a742-44dd-a3de-78923a131a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2de45e-575b-4833-a7fd-95e76d273dd9",
        "cursor": {
          "ref": "fa6e8f8d-5660-4b6f-8f64-5590a0f0a7f1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6661a63d-84d6-4186-b3a5-ca2f1ad271ca"
        },
        "item": {
          "id": "8a2de45e-575b-4833-a7fd-95e76d273dd9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "30aae1d3-3f68-4020-bd0d-3ccca831fd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9594db-4925-4308-837b-3b3e5dac4b12",
        "cursor": {
          "ref": "704257dd-4b37-4613-af90-5d87732467fb",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e3a38602-fb6e-49e2-a6c9-dafbbb87b98a"
        },
        "item": {
          "id": "ba9594db-4925-4308-837b-3b3e5dac4b12",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9487451e-db3a-4d04-87e0-3c8d075a20c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da1f6b4-afd4-4779-a95f-404056e77af4",
        "cursor": {
          "ref": "4c40d49c-7559-415a-91f7-009e5282f1ef",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9f2b59b3-44c0-4e8e-8466-9406fbcdcbf1"
        },
        "item": {
          "id": "8da1f6b4-afd4-4779-a95f-404056e77af4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cb9c9451-1927-48f2-99d0-3256ded2bb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd51b34-5e7c-47fc-b259-0b969c4efe29",
        "cursor": {
          "ref": "26f649d4-c98d-454d-b139-9b0cef50ee8e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fbe98d95-2a88-49ce-b5cf-aa2106be78dd"
        },
        "item": {
          "id": "ddd51b34-5e7c-47fc-b259-0b969c4efe29",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "398f0c9f-0737-436c-9467-983ab065bce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0a8e76-1533-4cbe-94ee-a198686b2853",
        "cursor": {
          "ref": "33203a4e-3166-4313-b2e1-0bb5cb643502",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fb2951cd-6b26-4276-86fc-639d94cca945"
        },
        "item": {
          "id": "5c0a8e76-1533-4cbe-94ee-a198686b2853",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5f85a5a6-633d-4b8c-9589-0171862134d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb14a97e-4ba1-41c6-b084-c7d6c4c5118b",
        "cursor": {
          "ref": "2a69476e-332a-48ee-b2a1-25909709d420",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "34758392-2b24-4938-b4ec-93f6d2781f56"
        },
        "item": {
          "id": "cb14a97e-4ba1-41c6-b084-c7d6c4c5118b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "df6a86fd-133d-4a6e-97e2-c300d31dd925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6e0b71-a8dd-42c1-8ad8-002f7631e3c8",
        "cursor": {
          "ref": "d982570d-145b-4d73-bcee-3cee8350f7ad",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "51b88250-a8be-4a27-9f32-218879dae01d"
        },
        "item": {
          "id": "fa6e0b71-a8dd-42c1-8ad8-002f7631e3c8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "60df3501-b459-4cdf-bff2-a228899d8f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57b34af-b216-4135-a052-dfb84658178a",
        "cursor": {
          "ref": "e0ee038c-2360-4e77-9de7-9e16a199467f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1bd78cf0-9230-4db5-86de-d4b0ab4e8b38"
        },
        "item": {
          "id": "f57b34af-b216-4135-a052-dfb84658178a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4b4aa77c-4376-4a09-81db-89cc4fc1ec79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92f1593-ec8d-4b91-8427-08418133540c",
        "cursor": {
          "ref": "4abce3c5-5551-479f-a699-c02ec5f5614e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b7f16c5f-b92d-46b1-9a3b-18fcff0d49cd"
        },
        "item": {
          "id": "f92f1593-ec8d-4b91-8427-08418133540c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "caf2a002-953d-4932-8ee5-9d5cb16d562d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d71cc0e-2ae6-427d-b606-8bab6bbf6b1e",
        "cursor": {
          "ref": "fad7abc1-12b6-431b-96d2-84a2177e4cbc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ab895a7a-e63e-4bee-84ed-d8582f51a644"
        },
        "item": {
          "id": "4d71cc0e-2ae6-427d-b606-8bab6bbf6b1e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d49f0e84-2dcb-4d96-989b-444a6ace09b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5172786d-cab4-4047-b68e-abc0f3ee4dcf",
        "cursor": {
          "ref": "8f990177-3a0d-4e62-81c0-7632214254c6",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e9a8d645-3405-4b0a-9bfd-74c385b5a67b"
        },
        "item": {
          "id": "5172786d-cab4-4047-b68e-abc0f3ee4dcf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "942fdb7c-f465-4bd5-87c3-df72a010c3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b60dbd7-989d-410d-beaf-ca4123a03947",
        "cursor": {
          "ref": "8767240b-52f2-453c-9d83-ba1ce0da28af",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e59a04a6-89fd-445b-9d2c-066d721f5b39"
        },
        "item": {
          "id": "2b60dbd7-989d-410d-beaf-ca4123a03947",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4b5c0bb9-b5c1-455c-8972-548d108e2c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ec9a12-d574-4068-a639-7642d2e4d360",
        "cursor": {
          "ref": "3b923d32-80cc-4094-ab0b-f470e911f411",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4806db39-9f9d-43d2-b149-62f21bc84908"
        },
        "item": {
          "id": "e1ec9a12-d574-4068-a639-7642d2e4d360",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "29faf201-7cce-4a7b-8a21-5d590fbc2f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ed2566-aba1-452f-a633-b450f76d705a",
        "cursor": {
          "ref": "fdf04657-bb90-4063-8aa3-80c4241aec91",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "06a31ca6-a45d-4e83-8905-f3a20f8aef5d"
        },
        "item": {
          "id": "89ed2566-aba1-452f-a633-b450f76d705a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "61afec4a-87ff-4506-9667-445f6759f4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dfed45-471e-453d-9c76-7e79bc5ce6ed",
        "cursor": {
          "ref": "ffedba65-c865-4e4c-9f6a-86ae488e452c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "13221952-dc51-4929-9543-e8a641b3aeca"
        },
        "item": {
          "id": "35dfed45-471e-453d-9c76-7e79bc5ce6ed",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "34e16d7b-1edd-4182-8e4e-487ae5863c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680c231c-8390-40ac-b20f-61822e2d5559",
        "cursor": {
          "ref": "cb5e7d60-c605-4ef0-8557-9920dd70d6f7",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ebfee230-7480-4ccd-b984-f81cb501d70c"
        },
        "item": {
          "id": "680c231c-8390-40ac-b20f-61822e2d5559",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1531d335-4c3e-414b-8bd3-73d2f4127d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd9fc94-165d-4054-bf96-09a7996e1bb8",
        "cursor": {
          "ref": "30d05949-a76f-4089-b5c4-e950e19173dc",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b742c5f9-8a80-46fd-bed8-811ca5141655"
        },
        "item": {
          "id": "0cd9fc94-165d-4054-bf96-09a7996e1bb8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a054ed94-a2b8-478b-9cfc-4f8a01ad84e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b34ae55-2b64-411d-8f57-7e6a01b611e3",
        "cursor": {
          "ref": "02416880-0d49-4bcb-8ad5-8f3a4ddf7fd0",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6288bbba-f824-4b5a-8c3a-f5ee9baf2fc0"
        },
        "item": {
          "id": "3b34ae55-2b64-411d-8f57-7e6a01b611e3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "06fa12c3-aa31-456e-a868-c7afcdb47d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1aa542-7636-4060-bf14-f47e8dec9526",
        "cursor": {
          "ref": "0052e8aa-fb67-4651-b123-10f24933f729",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7a7c1e8b-72a6-4cfa-91c2-9ccc91dd6b81"
        },
        "item": {
          "id": "ba1aa542-7636-4060-bf14-f47e8dec9526",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d151eac5-b5c8-40e7-8352-3701a0c19ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5263db-4b8f-43aa-b34b-df602b369160",
        "cursor": {
          "ref": "fbde7ec5-bc09-4897-bd6f-dcb42f0d421d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "845b664e-690b-41c8-9027-6bcb5a82d0cb"
        },
        "item": {
          "id": "2f5263db-4b8f-43aa-b34b-df602b369160",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2d333779-ad9b-47be-ae07-63bf6361add6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46c740d-8a0a-4305-886b-ed4ffc19a013",
        "cursor": {
          "ref": "69994135-5625-492a-8940-8f730795bd67",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "30c191a5-db4d-4d6b-9aca-af11098733b3"
        },
        "item": {
          "id": "b46c740d-8a0a-4305-886b-ed4ffc19a013",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1a1da456-b8a2-4485-aa8b-8da55dcbe9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05544e4f-1801-4aba-bbde-a5c091c29e19",
        "cursor": {
          "ref": "50e770a4-9d56-45b8-a34e-e1e31d65a54d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d906d337-d7e3-4a5b-988a-869d89b7c708"
        },
        "item": {
          "id": "05544e4f-1801-4aba-bbde-a5c091c29e19",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c5e25e5e-a261-4ee0-b832-90afbe4ae463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49718ccc-55e3-415e-9fd5-f914bbd19094",
        "cursor": {
          "ref": "c0cbf0da-fcbf-4497-ac3a-573d481ac3c6",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "963a19b9-6d76-4083-93a2-fcca832a3e9c"
        },
        "item": {
          "id": "49718ccc-55e3-415e-9fd5-f914bbd19094",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a63760d5-def8-4232-8344-97713e093fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0e85d3-2cb9-4f5a-b9dc-c688a79cee51",
        "cursor": {
          "ref": "2030afde-7352-487d-ad54-a3c6edb04416",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "43ff161b-64d6-41fa-960f-d991bba16140"
        },
        "item": {
          "id": "5f0e85d3-2cb9-4f5a-b9dc-c688a79cee51",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4e533644-f42f-48cb-927c-1a700eb25ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025a7aa8-9c06-4443-acbd-b8c9eecb4eeb",
        "cursor": {
          "ref": "a8d32238-a646-46a1-9be9-72fdbb984aa2",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "66e436ce-ab4e-4e82-ac7a-2e04e2ae02a6"
        },
        "item": {
          "id": "025a7aa8-9c06-4443-acbd-b8c9eecb4eeb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "55be5a40-cbbc-4075-9fd1-267c4f45c1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e60ffb-3711-43da-bc2d-439fdb076e3e",
        "cursor": {
          "ref": "5337669f-adc5-4364-bc02-df69bb481d61",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "788c98ca-f4bd-4200-877d-b149a584b394"
        },
        "item": {
          "id": "38e60ffb-3711-43da-bc2d-439fdb076e3e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "12277a6d-c1ea-4c1d-893a-75b45190923d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf56a08-87ec-4527-b004-765632958042",
        "cursor": {
          "ref": "6005ff2f-e0d7-4a96-a647-f1910e533ec9",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7c3a45ed-fd7e-435b-a070-256ce4d9297a"
        },
        "item": {
          "id": "0bf56a08-87ec-4527-b004-765632958042",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "74dec680-5cc4-449d-9199-fc2aea36901b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68b975c-f4c9-4024-9989-4c8dea5a1ec6",
        "cursor": {
          "ref": "62c12984-b00d-4dd0-8fac-f8ab79459728",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6625bfe3-6fbf-4bf5-ae64-1dd36bf59d5f"
        },
        "item": {
          "id": "f68b975c-f4c9-4024-9989-4c8dea5a1ec6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6d2c2e60-0da2-45df-aed6-a097dc46df36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8e0951-58d3-4f85-9f17-d06b18677c84",
        "cursor": {
          "ref": "503d20f1-fe16-4109-9917-f3418b48dea1",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5ce0d9b5-c040-44de-9866-c1d944d1c894"
        },
        "item": {
          "id": "7f8e0951-58d3-4f85-9f17-d06b18677c84",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a09438b6-a90d-4717-a351-945b7e91f9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7fbbc5-c054-4466-bb77-ff48bd171793",
        "cursor": {
          "ref": "8073e95d-4f6e-4c5d-81b2-d960b9b9db46",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "12f4b243-5db6-45e6-8043-ee2fbd194ac1"
        },
        "item": {
          "id": "ef7fbbc5-c054-4466-bb77-ff48bd171793",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "69522756-b305-480b-b21e-819ac77753e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9556e3b8-9a04-4913-a1a5-d5d05f831bd7",
        "cursor": {
          "ref": "883afe4c-309f-47e3-913e-83fba990d1d8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "92e08917-7417-4cb7-834c-681c4632cd53"
        },
        "item": {
          "id": "9556e3b8-9a04-4913-a1a5-d5d05f831bd7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "951f5f22-f231-4e4f-a701-8c4e63af77a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85773e60-867b-4cc2-89f1-fe62780e746b",
        "cursor": {
          "ref": "27fdcf26-7acb-4786-83ba-11e4c8107b05",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c1c7400e-7551-4ca9-a813-c74ddb2a32c4"
        },
        "item": {
          "id": "85773e60-867b-4cc2-89f1-fe62780e746b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "dadabf0a-9746-437f-a7d8-9d4e2a802497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46b32ad-916c-407f-858e-fe72a37811cd",
        "cursor": {
          "ref": "ae37405d-66a6-45bf-8e0c-6c5a094a1ae9",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3194f29a-373e-4b32-9f1b-d35e76267b78"
        },
        "item": {
          "id": "e46b32ad-916c-407f-858e-fe72a37811cd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "84f89acd-4f3c-4886-b655-d9d59f385765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291accb0-56c7-448b-8c3f-8295160af893",
        "cursor": {
          "ref": "3945a96b-3f06-4e73-9f90-259b73f20e4d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3c9965cf-32dc-470d-8a87-379701243ed1"
        },
        "item": {
          "id": "291accb0-56c7-448b-8c3f-8295160af893",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b1103154-7b54-4864-a206-e927153410c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4efb5d5-58d6-492d-93bd-73a68cb13ad3",
        "cursor": {
          "ref": "56a34e51-e740-497b-9195-eabd174ee76d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cb7f7973-b9ec-45df-9b0d-4a79ae864add"
        },
        "item": {
          "id": "b4efb5d5-58d6-492d-93bd-73a68cb13ad3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bf8916bb-2a9c-4fc9-8b53-3f4e54803508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1f7728-c7de-407b-9ba5-892ee395529f",
        "cursor": {
          "ref": "c6865527-354c-4023-9dfe-6aa63ca9a3a7",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b43d0042-26d1-4baa-93cd-a81c94dd2a9d"
        },
        "item": {
          "id": "9e1f7728-c7de-407b-9ba5-892ee395529f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "62984b5f-c550-4f2f-8945-204a50b774d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dd558e-1d42-48a0-98c7-f786183c022b",
        "cursor": {
          "ref": "21b088e9-5199-40cb-a33c-b585019a4863",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8970e29b-fe27-404b-b9a1-b6d1a939ece2"
        },
        "item": {
          "id": "08dd558e-1d42-48a0-98c7-f786183c022b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9b37a4c3-d088-4b31-9714-c2e73edd3dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5513d13f-0614-43a4-b926-09cac6d4907e",
        "cursor": {
          "ref": "70102ffe-4105-4cad-89e1-708b3a98be31",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7da9ff15-5216-45b5-8b2f-8e6ecd293f7f"
        },
        "item": {
          "id": "5513d13f-0614-43a4-b926-09cac6d4907e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4db9b427-5574-4490-87fd-03729d7e6565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354b4956-af9b-47ee-86fb-452f67726c7c",
        "cursor": {
          "ref": "95446ab9-2aa5-46e2-9799-7a80135c70f7",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f4ffe107-a066-4176-b75b-749a6ef78ea3"
        },
        "item": {
          "id": "354b4956-af9b-47ee-86fb-452f67726c7c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d44a0720-5370-48df-b4a9-14ba4dc3906e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bda12f-af67-4ebb-b949-9c38e5fa5e3f",
        "cursor": {
          "ref": "d5d1a48f-2119-418f-bcef-7619b5e98c4c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9b3701e5-88d3-44fe-8018-e0e69927cb95"
        },
        "item": {
          "id": "66bda12f-af67-4ebb-b949-9c38e5fa5e3f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bd93752c-67f8-4676-8d60-91e9866455dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47deee6-0eab-4702-9811-83e7ea298371",
        "cursor": {
          "ref": "36217780-65e9-4651-837f-d90e6f4c80c8",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6f96d206-cc5a-4e8a-b122-da18803b6859"
        },
        "item": {
          "id": "d47deee6-0eab-4702-9811-83e7ea298371",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f5e90b2c-c647-4946-8060-59cbb5dbb765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba62c8a-ba74-4294-a2b9-5cdfa7909e1a",
        "cursor": {
          "ref": "fa0b3202-c21e-48a5-87bb-f3e81aa1d73d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "958afd11-d9c3-4f9e-8436-1f5b89d3a082"
        },
        "item": {
          "id": "3ba62c8a-ba74-4294-a2b9-5cdfa7909e1a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1aeb8a9c-ced0-4c15-8cea-69ae6f4af864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3953cebd-8a9f-4af5-80ff-f75577036588",
        "cursor": {
          "ref": "081b0945-1576-4baa-b7d5-f46902e74a8b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6ffe9b48-7391-455d-9a03-1acfb000a737"
        },
        "item": {
          "id": "3953cebd-8a9f-4af5-80ff-f75577036588",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f1b06a3a-5ff9-4ee3-ac02-06f6079d8193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35bedc7-7f9e-4a6e-b5bc-1551cf57d19c",
        "cursor": {
          "ref": "2389676c-3311-4687-8004-ba8649cc5794",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4d7d0562-1cda-4ce9-ac63-b05efe762c6b"
        },
        "item": {
          "id": "c35bedc7-7f9e-4a6e-b5bc-1551cf57d19c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "aeeb7305-236f-4692-8482-c59eb22eb070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6899c73b-6f1b-47e5-84fb-46a74cee4a4d",
        "cursor": {
          "ref": "221f141f-bdae-45b5-a2bb-7d585b7e8746",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "25cbf87e-52dd-4b96-8d8c-a78b01c3ecff"
        },
        "item": {
          "id": "6899c73b-6f1b-47e5-84fb-46a74cee4a4d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "51b1f19d-83cf-4470-84d8-7c83b7ce1cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fb5f71-3803-4de8-8c1d-5eb8b5e385b2",
        "cursor": {
          "ref": "1d0acefd-afdd-440d-9c5d-7f6495888433",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5f3bd315-0a38-4feb-add8-7203663e9d50"
        },
        "item": {
          "id": "10fb5f71-3803-4de8-8c1d-5eb8b5e385b2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ce970603-ac50-4dd0-92f5-7ba015b1ae83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82043b0-f7a4-4a26-b5e8-6ee467cf72a8",
        "cursor": {
          "ref": "d643cc06-8518-4212-8cc2-2ef376b20ec8",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "95b19969-ff23-4144-9f2c-00490a4ae25b"
        },
        "item": {
          "id": "f82043b0-f7a4-4a26-b5e8-6ee467cf72a8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e09a40cd-f8e8-4f79-a837-35eca894c570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56514cf-e92d-428a-ac9a-c0ed9b1c5df6",
        "cursor": {
          "ref": "7ea04a54-1670-4b7e-84fa-0f2f784a1c19",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f4d26146-598f-4bfc-a168-60b04168acb9"
        },
        "item": {
          "id": "f56514cf-e92d-428a-ac9a-c0ed9b1c5df6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ccd9fe2b-f46e-40c4-947c-3d89e89f3415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153e8388-cbaf-4230-88c8-70ea7c40ac21",
        "cursor": {
          "ref": "db098e84-4abd-426d-af5b-edbb3e3823c6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fe483646-73dd-48aa-94d8-fdedce6bb3b3"
        },
        "item": {
          "id": "153e8388-cbaf-4230-88c8-70ea7c40ac21",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4bd7a245-424a-4a1f-9323-b0948c00e43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f73a5aa-850a-4438-9e65-046575cfb1ab",
        "cursor": {
          "ref": "fd4dbb1c-dc0d-48ed-82dd-cdbb699d8d65",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2cc1a223-0b16-443e-8085-fb3874b33380"
        },
        "item": {
          "id": "1f73a5aa-850a-4438-9e65-046575cfb1ab",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "996ffe3d-3fe9-48c4-9557-19dde59b1c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3ab66c-2dc1-4498-9481-92f2f355ea6f",
        "cursor": {
          "ref": "965a4bb3-ce48-4c81-9767-53d20a230793",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "19d9618f-8572-4498-96e6-829592cbe950"
        },
        "item": {
          "id": "0d3ab66c-2dc1-4498-9481-92f2f355ea6f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "60615027-76f7-4b0b-9d4e-39e921c88689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25c882b-daf1-47aa-9a79-92195b2304df",
        "cursor": {
          "ref": "81050cd9-37e9-4e0d-83ff-a70946fd2415",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "05bf1caa-872f-43b6-a269-35090e71044d"
        },
        "item": {
          "id": "f25c882b-daf1-47aa-9a79-92195b2304df",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4ececfa8-1796-49e9-adb8-bfe92208db6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8e5834-0b81-403a-bcad-e9178f9f16b4",
        "cursor": {
          "ref": "fa3f1f94-5227-4698-b6b4-6c8ca107d996",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "bc982b89-0f68-4eaf-9cb1-4ad55b491a5a"
        },
        "item": {
          "id": "cb8e5834-0b81-403a-bcad-e9178f9f16b4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "570645b5-bd98-4038-9f3e-612f3df5f2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bc876a-a596-48dc-829d-5ea970aaff8f",
        "cursor": {
          "ref": "7eb2e3c5-d3c2-428e-8303-c19824e2bc33",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "aef26e73-4d05-43db-b46e-5ec08b6892ef"
        },
        "item": {
          "id": "38bc876a-a596-48dc-829d-5ea970aaff8f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bdcd43e2-8845-4e1b-95b1-2f06bc2cbdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b60e37-ea80-4aca-bc96-ec6b3af35a27",
        "cursor": {
          "ref": "ba2930be-d685-4f61-aa92-116cdcde75c5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4c1b7107-4581-4166-bfee-8154f910bc06"
        },
        "item": {
          "id": "11b60e37-ea80-4aca-bc96-ec6b3af35a27",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "74dc5327-5a02-4e5f-9e7d-fb77cdbc46b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8144c627-d384-4c9e-83a7-6f3c2887c9dc",
        "cursor": {
          "ref": "e8717d3d-73b8-4730-9bda-02184c2f1ab2",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4acf7b86-cd0c-40dc-a004-ab009ffc2d7b"
        },
        "item": {
          "id": "8144c627-d384-4c9e-83a7-6f3c2887c9dc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "29ec91bc-256e-41e1-b254-d1d06b731c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60babe86-0b70-4dd6-a3c4-27313b6f3561",
        "cursor": {
          "ref": "89e652a0-6c8d-4462-bd5b-6a677411034c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9d77a7ed-9d48-41e6-a42d-daa1eaaa3eaa"
        },
        "item": {
          "id": "60babe86-0b70-4dd6-a3c4-27313b6f3561",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cf881dc9-20de-4a13-8625-9ca6d1664409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fecf808-18e6-4220-8a47-f472ebcf410b",
        "cursor": {
          "ref": "eaffc29a-94e2-4c74-aabf-a9b7fd399354",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5e9a830e-b11e-4a22-9f4c-0b305a874001"
        },
        "item": {
          "id": "5fecf808-18e6-4220-8a47-f472ebcf410b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "12247096-a5c6-4a0f-af1a-5af3ce868af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfe869e-b146-47d6-8f49-0efe9f137bc9",
        "cursor": {
          "ref": "13887816-b124-4dea-80dc-a5e015003d02",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "cca67d13-900a-4821-97f3-b1ca3e5c9287"
        },
        "item": {
          "id": "ddfe869e-b146-47d6-8f49-0efe9f137bc9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "47c6a71a-95d7-4f08-b574-cd224f9d5a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7bab78-c8a6-4173-a329-85dd9aea2024",
        "cursor": {
          "ref": "5bbdd5b5-40ac-4b6f-8079-510484a51fb9",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "50c1d301-34f7-4cec-b57e-bfe987d171fe"
        },
        "item": {
          "id": "3d7bab78-c8a6-4173-a329-85dd9aea2024",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f7484cf5-8288-40fd-b596-c65ac1db9dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e25166-7832-46cf-8b0d-3f6ed8865f83",
        "cursor": {
          "ref": "c0d913c0-3445-47e9-ad8a-1a66c518ca96",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "608a1ad8-0734-4683-af0e-11aafa38649d"
        },
        "item": {
          "id": "73e25166-7832-46cf-8b0d-3f6ed8865f83",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e635e706-8f3c-4813-8599-aec161ff0e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f4fd29-5ff0-4303-9c14-921bf9b97f1f",
        "cursor": {
          "ref": "8eaa3cf3-179c-4a71-8a24-65a468f7c951",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bbecb5bf-6605-4221-8a8d-cf755a254e6d"
        },
        "item": {
          "id": "06f4fd29-5ff0-4303-9c14-921bf9b97f1f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6d17b923-d2f4-4fcb-a9d9-2cc999149f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511e0c10-ec8e-41cd-973f-5422556719d5",
        "cursor": {
          "ref": "e0d17dd4-5991-47cd-8a44-ac2f9a15cdd8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5a3e3ae5-0312-4481-bc84-f1b550e7c07e"
        },
        "item": {
          "id": "511e0c10-ec8e-41cd-973f-5422556719d5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a48fc217-e1af-4a1a-90c2-fd4d1128c40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b43e67d-9e4b-4162-9d13-0af122ae66aa",
        "cursor": {
          "ref": "264f6efa-c74b-4482-a5d8-bba0cebce568",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2b666bad-49a0-418f-8e25-72bcca2b9b8a"
        },
        "item": {
          "id": "6b43e67d-9e4b-4162-9d13-0af122ae66aa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ced8fc73-3df7-477e-aed9-af364cccb0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54139a6b-cc82-4c5f-9c7e-41a02f155db4",
        "cursor": {
          "ref": "3095e273-7467-4020-b5f3-d7cf4bad42dd",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0da6262e-af9a-414d-9f93-7a5fc4f68883"
        },
        "item": {
          "id": "54139a6b-cc82-4c5f-9c7e-41a02f155db4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ff7e8091-ffd0-46d1-9ff1-854695c7cd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7dcc89-6b8a-4671-a8db-5bcf10a58b77",
        "cursor": {
          "ref": "bea77903-858f-460f-b63f-b821d8412399",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f66bd0c3-abd8-4512-b503-d0e8db7f6c6e"
        },
        "item": {
          "id": "dd7dcc89-6b8a-4671-a8db-5bcf10a58b77",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4f3dd4b0-f55c-47c0-aefd-96cf9c7d140b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd36d53a-25d1-4c6c-b5d3-397c8fb6240d",
        "cursor": {
          "ref": "766af6ca-d528-4742-a19d-fe41d4aebcdc",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d74adaa6-68fe-4c47-8f98-0eda169636f8"
        },
        "item": {
          "id": "bd36d53a-25d1-4c6c-b5d3-397c8fb6240d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "619a11c5-db8a-4ebf-9de1-3f0580efe383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a79a6c-e7f7-4d1f-907c-2bbe7a8e64b2",
        "cursor": {
          "ref": "1cad42d6-fe09-4a35-a56a-27ff0050771f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "50584312-9183-4a5a-be08-1c3eeaccb0e7"
        },
        "item": {
          "id": "d8a79a6c-e7f7-4d1f-907c-2bbe7a8e64b2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3aba6a2d-9c0b-4364-908c-4d647dda6c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b056047c-987a-4991-aaac-88a9b554d724",
        "cursor": {
          "ref": "00a39674-43fe-4f0a-bf34-7d829e15cbd9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b896aa02-4dcd-46e6-b9c3-dcafc3315503"
        },
        "item": {
          "id": "b056047c-987a-4991-aaac-88a9b554d724",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b20e56da-2a98-4904-b400-7e8af81543a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2fde9d-bc8b-403e-aac6-ff0a0f6d27d7",
        "cursor": {
          "ref": "3b75732c-ad79-4b63-ad55-c8d95f4f71d6",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "10acbc4c-2757-4f31-95f2-9c8ad3b1d381"
        },
        "item": {
          "id": "dc2fde9d-bc8b-403e-aac6-ff0a0f6d27d7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ec5a41e7-52b3-4944-9e37-fdc9e8064eaa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313a448f-da4e-45f4-9510-f22cbcf5f68c",
        "cursor": {
          "ref": "76f93bac-20d1-49af-92da-88a1318df0ce",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a58a4b81-867b-4ac1-baca-a2426a47166d"
        },
        "item": {
          "id": "313a448f-da4e-45f4-9510-f22cbcf5f68c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2ed487dd-6f4a-4e2a-9672-0614206c5739",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b9eedd-28e1-440f-b550-c7fe59ae22a8",
        "cursor": {
          "ref": "2b34a6f9-9889-432a-95a3-4c3e9d3e01f0",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9ba92166-8a95-47c0-b918-846680e6eeb6"
        },
        "item": {
          "id": "29b9eedd-28e1-440f-b550-c7fe59ae22a8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e06e1807-3dd4-4ae7-8a18-a37929cb5d55",
          "status": "OK",
          "code": 200,
          "responseTime": 1710,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88626ab-cd38-4232-816b-3c95bf8aad93",
        "cursor": {
          "ref": "f9df57d0-1d41-4d49-80be-3184f72adc30",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0bbe7a1f-582d-4c7a-9330-52efb0a55d0a"
        },
        "item": {
          "id": "c88626ab-cd38-4232-816b-3c95bf8aad93",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f7877c13-7896-4d32-b022-2bffa14cccc8",
          "status": "OK",
          "code": 200,
          "responseTime": 1254,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce61dfe8-dc56-4cfa-bffc-b14f201c83c8",
        "cursor": {
          "ref": "7c7b3af4-c154-4d70-9ad5-652f6007418c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "87ec7a04-bf7c-4701-9ed5-0a4785b46493"
        },
        "item": {
          "id": "ce61dfe8-dc56-4cfa-bffc-b14f201c83c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a0a32800-a1b4-447c-a596-8a20631e39e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce61dfe8-dc56-4cfa-bffc-b14f201c83c8",
        "cursor": {
          "ref": "7c7b3af4-c154-4d70-9ad5-652f6007418c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "87ec7a04-bf7c-4701-9ed5-0a4785b46493"
        },
        "item": {
          "id": "ce61dfe8-dc56-4cfa-bffc-b14f201c83c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a0a32800-a1b4-447c-a596-8a20631e39e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8e82dd-ccde-49c9-b4da-ee9b86319a6a",
        "cursor": {
          "ref": "0cb922fa-e241-4f41-96ec-a2cc04e96497",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "eb6350ae-e469-4a42-bf4b-4dd674978c4f"
        },
        "item": {
          "id": "2c8e82dd-ccde-49c9-b4da-ee9b86319a6a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4ff058de-12d7-46c0-abe8-411e143bfbaa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb6fe05-2247-4c08-89ff-a0f8f67ff90f",
        "cursor": {
          "ref": "d6124603-1921-40ce-99dc-1a98c0c02a49",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a1bb5e59-cf53-4360-b28b-29a99d3a64af"
        },
        "item": {
          "id": "4eb6fe05-2247-4c08-89ff-a0f8f67ff90f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "18312166-dbfe-450f-a4e6-f6a303edd8d3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}